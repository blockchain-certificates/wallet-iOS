var Verifier=function(e){"use strict";var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function t(e){if(e.__esModule)return e;var n=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(t){var l=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,l.get?l:{enumerable:!0,get:function(){return e[t]}})})),n}function l(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var r={},i={},u={},o=void 0!==o?o:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},s=void 0!==o?o:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},a=[],c=[],h="undefined"!=typeof Uint8Array?Uint8Array:Array,f=!1;function d(){f=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n=0,t=e.length;n<t;++n)a[n]=e[n],c[e.charCodeAt(n)]=n;c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63}function p(e,n,t){for(var l,r,i=[],u=n;u<t;u+=3)l=(e[u]<<16)+(e[u+1]<<8)+e[u+2],i.push(a[(r=l)>>18&63]+a[r>>12&63]+a[r>>6&63]+a[63&r]);return i.join("")}function y(e){var n;f||d();for(var t=e.length,l=t%3,r="",i=[],u=16383,o=0,s=t-l;o<s;o+=u)i.push(p(e,o,o+u>s?s:o+u));return 1===l?(n=e[t-1],r+=a[n>>2],r+=a[n<<4&63],r+="=="):2===l&&(n=(e[t-2]<<8)+e[t-1],r+=a[n>>10],r+=a[n>>4&63],r+=a[n<<2&63],r+="="),i.push(r),i.join("")}function g(e,n,t,l,r){var i,u,o=8*r-l-1,s=(1<<o)-1,a=s>>1,c=-7,h=t?r-1:0,f=t?-1:1,d=e[n+h];for(h+=f,i=d&(1<<-c)-1,d>>=-c,c+=o;c>0;i=256*i+e[n+h],h+=f,c-=8);for(u=i&(1<<-c)-1,i>>=-c,c+=l;c>0;u=256*u+e[n+h],h+=f,c-=8);if(0===i)i=1-a;else{if(i===s)return u?NaN:1/0*(d?-1:1);u+=Math.pow(2,l),i-=a}return(d?-1:1)*u*Math.pow(2,i-l)}function m(e,n,t,l,r,i){var u,o,s,a=8*i-r-1,c=(1<<a)-1,h=c>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,d=l?0:i-1,p=l?1:-1,y=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(o=isNaN(n)?1:0,u=c):(u=Math.floor(Math.log(n)/Math.LN2),n*(s=Math.pow(2,-u))<1&&(u--,s*=2),(n+=u+h>=1?f/s:f*Math.pow(2,1-h))*s>=2&&(u++,s/=2),u+h>=c?(o=0,u=c):u+h>=1?(o=(n*s-1)*Math.pow(2,r),u+=h):(o=n*Math.pow(2,h-1)*Math.pow(2,r),u=0));r>=8;e[t+d]=255&o,d+=p,o/=256,r-=8);for(u=u<<r|o,a+=r;a>0;e[t+d]=255&u,d+=p,u/=256,a-=8);e[t+d-p]|=128*y}var v={}.toString,b=Array.isArray||function(e){return"[object Array]"==v.call(e)};S.TYPED_ARRAY_SUPPORT=void 0===s.TYPED_ARRAY_SUPPORT||s.TYPED_ARRAY_SUPPORT;var w=_();function _(){return S.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function E(e,n){if(_()<n)throw new RangeError("Invalid typed array length");return S.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(n)).__proto__=S.prototype:(null===e&&(e=new S(n)),e.length=n),e}function S(e,n,t){if(!(S.TYPED_ARRAY_SUPPORT||this instanceof S))return new S(e,n,t);if("number"==typeof e){if("string"==typeof n)throw new Error("If encoding is specified then the first argument must be a string");return I(this,e)}return x(this,e,n,t)}function x(e,n,t,l){if("number"==typeof n)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&n instanceof ArrayBuffer?function(e,n,t,l){if(n.byteLength,t<0||n.byteLength<t)throw new RangeError("'offset' is out of bounds");if(n.byteLength<t+(l||0))throw new RangeError("'length' is out of bounds");n=void 0===t&&void 0===l?new Uint8Array(n):void 0===l?new Uint8Array(n,t):new Uint8Array(n,t,l);S.TYPED_ARRAY_SUPPORT?(e=n).__proto__=S.prototype:e=P(e,n);return e}(e,n,t,l):"string"==typeof n?function(e,n,t){"string"==typeof t&&""!==t||(t="utf8");if(!S.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');var l=0|O(n,t),r=(e=E(e,l)).write(n,t);r!==l&&(e=e.slice(0,r));return e}(e,n,t):function(e,n){if(T(n)){var t=0|A(n.length);return 0===(e=E(e,t)).length||n.copy(e,0,0,t),e}if(n){if("undefined"!=typeof ArrayBuffer&&n.buffer instanceof ArrayBuffer||"length"in n)return"number"!=typeof n.length||(l=n.length)!=l?E(e,0):P(e,n);if("Buffer"===n.type&&b(n.data))return P(e,n.data)}var l;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,n)}function k(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function I(e,n){if(k(n),e=E(e,n<0?0:0|A(n)),!S.TYPED_ARRAY_SUPPORT)for(var t=0;t<n;++t)e[t]=0;return e}function P(e,n){var t=n.length<0?0:0|A(n.length);e=E(e,t);for(var l=0;l<t;l+=1)e[l]=255&n[l];return e}function A(e){if(e>=_())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+_().toString(16)+" bytes");return 0|e}function T(e){return!(null==e||!e._isBuffer)}function O(e,n){if(T(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var t=e.length;if(0===t)return 0;for(var l=!1;;)switch(n){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":case void 0:return le(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t;case"hex":return t>>>1;case"base64":return re(e).length;default:if(l)return le(e).length;n=(""+n).toLowerCase(),l=!0}}function M(e,n,t){var l=!1;if((void 0===n||n<0)&&(n=0),n>this.length)return"";if((void 0===t||t>this.length)&&(t=this.length),t<=0)return"";if((t>>>=0)<=(n>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return $(this,n,t);case"utf8":case"utf-8":return V(this,n,t);case"ascii":return q(this,n,t);case"latin1":case"binary":return z(this,n,t);case"base64":return F(this,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return G(this,n,t);default:if(l)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),l=!0}}function R(e,n,t){var l=e[n];e[n]=e[t],e[t]=l}function N(e,n,t,l,r){if(0===e.length)return-1;if("string"==typeof t?(l=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,isNaN(t)&&(t=r?0:e.length-1),t<0&&(t=e.length+t),t>=e.length){if(r)return-1;t=e.length-1}else if(t<0){if(!r)return-1;t=0}if("string"==typeof n&&(n=S.from(n,l)),T(n))return 0===n.length?-1:C(e,n,t,l,r);if("number"==typeof n)return n&=255,S.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,n,t):Uint8Array.prototype.lastIndexOf.call(e,n,t):C(e,[n],t,l,r);throw new TypeError("val must be string, number or Buffer")}function C(e,n,t,l,r){var i,u=1,o=e.length,s=n.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(e.length<2||n.length<2)return-1;u=2,o/=2,s/=2,t/=2}function a(e,n){return 1===u?e[n]:e.readUInt16BE(n*u)}if(r){var c=-1;for(i=t;i<o;i++)if(a(e,i)===a(n,-1===c?0:i-c)){if(-1===c&&(c=i),i-c+1===s)return c*u}else-1!==c&&(i-=i-c),c=-1}else for(t+s>o&&(t=o-s),i=t;i>=0;i--){for(var h=!0,f=0;f<s;f++)if(a(e,i+f)!==a(n,f)){h=!1;break}if(h)return i}return-1}function L(e,n,t,l){t=Number(t)||0;var r=e.length-t;l?(l=Number(l))>r&&(l=r):l=r;var i=n.length;if(i%2!=0)throw new TypeError("Invalid hex string");l>i/2&&(l=i/2);for(var u=0;u<l;++u){var o=parseInt(n.substr(2*u,2),16);if(isNaN(o))return u;e[t+u]=o}return u}function j(e,n,t,l){return ie(le(n,e.length-t),e,t,l)}function U(e,n,t,l){return ie(function(e){for(var n=[],t=0;t<e.length;++t)n.push(255&e.charCodeAt(t));return n}(n),e,t,l)}function D(e,n,t,l){return U(e,n,t,l)}function B(e,n,t,l){return ie(re(n),e,t,l)}function K(e,n,t,l){return ie(function(e,n){for(var t,l,r,i=[],u=0;u<e.length&&!((n-=2)<0);++u)l=(t=e.charCodeAt(u))>>8,r=t%256,i.push(r),i.push(l);return i}(n,e.length-t),e,t,l)}function F(e,n,t){return 0===n&&t===e.length?y(e):y(e.slice(n,t))}function V(e,n,t){t=Math.min(e.length,t);for(var l=[],r=n;r<t;){var i,u,o,s,a=e[r],c=null,h=a>239?4:a>223?3:a>191?2:1;if(r+h<=t)switch(h){case 1:a<128&&(c=a);break;case 2:128==(192&(i=e[r+1]))&&(s=(31&a)<<6|63&i)>127&&(c=s);break;case 3:i=e[r+1],u=e[r+2],128==(192&i)&&128==(192&u)&&(s=(15&a)<<12|(63&i)<<6|63&u)>2047&&(s<55296||s>57343)&&(c=s);break;case 4:i=e[r+1],u=e[r+2],o=e[r+3],128==(192&i)&&128==(192&u)&&128==(192&o)&&(s=(15&a)<<18|(63&i)<<12|(63&u)<<6|63&o)>65535&&s<1114112&&(c=s)}null===c?(c=65533,h=1):c>65535&&(c-=65536,l.push(c>>>10&1023|55296),c=56320|1023&c),l.push(c),r+=h}return function(e){var n=e.length;if(n<=H)return String.fromCharCode.apply(String,e);var t="",l=0;for(;l<n;)t+=String.fromCharCode.apply(String,e.slice(l,l+=H));return t}(l)}S.poolSize=8192,S._augment=function(e){return e.__proto__=S.prototype,e},S.from=function(e,n,t){return x(null,e,n,t)},S.TYPED_ARRAY_SUPPORT&&(S.prototype.__proto__=Uint8Array.prototype,S.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&S[Symbol.species]),S.alloc=function(e,n,t){return function(e,n,t,l){return k(n),n<=0?E(e,n):void 0!==t?"string"==typeof l?E(e,n).fill(t,l):E(e,n).fill(t):E(e,n)}(null,e,n,t)},S.allocUnsafe=function(e){return I(null,e)},S.allocUnsafeSlow=function(e){return I(null,e)},S.isBuffer=ue,S.compare=function(e,n){if(!T(e)||!T(n))throw new TypeError("Arguments must be Buffers");if(e===n)return 0;for(var t=e.length,l=n.length,r=0,i=Math.min(t,l);r<i;++r)if(e[r]!==n[r]){t=e[r],l=n[r];break}return t<l?-1:l<t?1:0},S.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},S.concat=function(e,n){if(!b(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return S.alloc(0);var t;if(void 0===n)for(n=0,t=0;t<e.length;++t)n+=e[t].length;var l=S.allocUnsafe(n),r=0;for(t=0;t<e.length;++t){var i=e[t];if(!T(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(l,r),r+=i.length}return l},S.byteLength=O,S.prototype._isBuffer=!0,S.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var n=0;n<e;n+=2)R(this,n,n+1);return this},S.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var n=0;n<e;n+=4)R(this,n,n+3),R(this,n+1,n+2);return this},S.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var n=0;n<e;n+=8)R(this,n,n+7),R(this,n+1,n+6),R(this,n+2,n+5),R(this,n+3,n+4);return this},S.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?V(this,0,e):M.apply(this,arguments)},S.prototype.equals=function(e){if(!T(e))throw new TypeError("Argument must be a Buffer");return this===e||0===S.compare(this,e)},S.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},S.prototype.compare=function(e,n,t,l,r){if(!T(e))throw new TypeError("Argument must be a Buffer");if(void 0===n&&(n=0),void 0===t&&(t=e?e.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),n<0||t>e.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&n>=t)return 0;if(l>=r)return-1;if(n>=t)return 1;if(this===e)return 0;for(var i=(r>>>=0)-(l>>>=0),u=(t>>>=0)-(n>>>=0),o=Math.min(i,u),s=this.slice(l,r),a=e.slice(n,t),c=0;c<o;++c)if(s[c]!==a[c]){i=s[c],u=a[c];break}return i<u?-1:u<i?1:0},S.prototype.includes=function(e,n,t){return-1!==this.indexOf(e,n,t)},S.prototype.indexOf=function(e,n,t){return N(this,e,n,t,!0)},S.prototype.lastIndexOf=function(e,n,t){return N(this,e,n,t,!1)},S.prototype.write=function(e,n,t,l){if(void 0===n)l="utf8",t=this.length,n=0;else if(void 0===t&&"string"==typeof n)l=n,t=this.length,n=0;else{if(!isFinite(n))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");n|=0,isFinite(t)?(t|=0,void 0===l&&(l="utf8")):(l=t,t=void 0)}var r=this.length-n;if((void 0===t||t>r)&&(t=r),e.length>0&&(t<0||n<0)||n>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");for(var i=!1;;)switch(l){case"hex":return L(this,e,n,t);case"utf8":case"utf-8":return j(this,e,n,t);case"ascii":return U(this,e,n,t);case"latin1":case"binary":return D(this,e,n,t);case"base64":return B(this,e,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return K(this,e,n,t);default:if(i)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),i=!0}},S.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var H=4096;function q(e,n,t){var l="";t=Math.min(e.length,t);for(var r=n;r<t;++r)l+=String.fromCharCode(127&e[r]);return l}function z(e,n,t){var l="";t=Math.min(e.length,t);for(var r=n;r<t;++r)l+=String.fromCharCode(e[r]);return l}function $(e,n,t){var l=e.length;(!n||n<0)&&(n=0),(!t||t<0||t>l)&&(t=l);for(var r="",i=n;i<t;++i)r+=te(e[i]);return r}function G(e,n,t){for(var l=e.slice(n,t),r="",i=0;i<l.length;i+=2)r+=String.fromCharCode(l[i]+256*l[i+1]);return r}function W(e,n,t){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+n>t)throw new RangeError("Trying to access beyond buffer length")}function J(e,n,t,l,r,i){if(!T(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>r||n<i)throw new RangeError('"value" argument is out of bounds');if(t+l>e.length)throw new RangeError("Index out of range")}function X(e,n,t,l){n<0&&(n=65535+n+1);for(var r=0,i=Math.min(e.length-t,2);r<i;++r)e[t+r]=(n&255<<8*(l?r:1-r))>>>8*(l?r:1-r)}function Y(e,n,t,l){n<0&&(n=4294967295+n+1);for(var r=0,i=Math.min(e.length-t,4);r<i;++r)e[t+r]=n>>>8*(l?r:3-r)&255}function Q(e,n,t,l,r,i){if(t+l>e.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function Z(e,n,t,l,r){return r||Q(e,0,t,4),m(e,n,t,l,23,4),t+4}function ee(e,n,t,l,r){return r||Q(e,0,t,8),m(e,n,t,l,52,8),t+8}S.prototype.slice=function(e,n){var t,l=this.length;if((e=~~e)<0?(e+=l)<0&&(e=0):e>l&&(e=l),(n=void 0===n?l:~~n)<0?(n+=l)<0&&(n=0):n>l&&(n=l),n<e&&(n=e),S.TYPED_ARRAY_SUPPORT)(t=this.subarray(e,n)).__proto__=S.prototype;else{var r=n-e;t=new S(r,void 0);for(var i=0;i<r;++i)t[i]=this[i+e]}return t},S.prototype.readUIntLE=function(e,n,t){e|=0,n|=0,t||W(e,n,this.length);for(var l=this[e],r=1,i=0;++i<n&&(r*=256);)l+=this[e+i]*r;return l},S.prototype.readUIntBE=function(e,n,t){e|=0,n|=0,t||W(e,n,this.length);for(var l=this[e+--n],r=1;n>0&&(r*=256);)l+=this[e+--n]*r;return l},S.prototype.readUInt8=function(e,n){return n||W(e,1,this.length),this[e]},S.prototype.readUInt16LE=function(e,n){return n||W(e,2,this.length),this[e]|this[e+1]<<8},S.prototype.readUInt16BE=function(e,n){return n||W(e,2,this.length),this[e]<<8|this[e+1]},S.prototype.readUInt32LE=function(e,n){return n||W(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},S.prototype.readUInt32BE=function(e,n){return n||W(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},S.prototype.readIntLE=function(e,n,t){e|=0,n|=0,t||W(e,n,this.length);for(var l=this[e],r=1,i=0;++i<n&&(r*=256);)l+=this[e+i]*r;return l>=(r*=128)&&(l-=Math.pow(2,8*n)),l},S.prototype.readIntBE=function(e,n,t){e|=0,n|=0,t||W(e,n,this.length);for(var l=n,r=1,i=this[e+--l];l>0&&(r*=256);)i+=this[e+--l]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*n)),i},S.prototype.readInt8=function(e,n){return n||W(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},S.prototype.readInt16LE=function(e,n){n||W(e,2,this.length);var t=this[e]|this[e+1]<<8;return 32768&t?4294901760|t:t},S.prototype.readInt16BE=function(e,n){n||W(e,2,this.length);var t=this[e+1]|this[e]<<8;return 32768&t?4294901760|t:t},S.prototype.readInt32LE=function(e,n){return n||W(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},S.prototype.readInt32BE=function(e,n){return n||W(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},S.prototype.readFloatLE=function(e,n){return n||W(e,4,this.length),g(this,e,!0,23,4)},S.prototype.readFloatBE=function(e,n){return n||W(e,4,this.length),g(this,e,!1,23,4)},S.prototype.readDoubleLE=function(e,n){return n||W(e,8,this.length),g(this,e,!0,52,8)},S.prototype.readDoubleBE=function(e,n){return n||W(e,8,this.length),g(this,e,!1,52,8)},S.prototype.writeUIntLE=function(e,n,t,l){(e=+e,n|=0,t|=0,l)||J(this,e,n,t,Math.pow(2,8*t)-1,0);var r=1,i=0;for(this[n]=255&e;++i<t&&(r*=256);)this[n+i]=e/r&255;return n+t},S.prototype.writeUIntBE=function(e,n,t,l){(e=+e,n|=0,t|=0,l)||J(this,e,n,t,Math.pow(2,8*t)-1,0);var r=t-1,i=1;for(this[n+r]=255&e;--r>=0&&(i*=256);)this[n+r]=e/i&255;return n+t},S.prototype.writeUInt8=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,1,255,0),S.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[n]=255&e,n+1},S.prototype.writeUInt16LE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,2,65535,0),S.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):X(this,e,n,!0),n+2},S.prototype.writeUInt16BE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,2,65535,0),S.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):X(this,e,n,!1),n+2},S.prototype.writeUInt32LE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,4,4294967295,0),S.TYPED_ARRAY_SUPPORT?(this[n+3]=e>>>24,this[n+2]=e>>>16,this[n+1]=e>>>8,this[n]=255&e):Y(this,e,n,!0),n+4},S.prototype.writeUInt32BE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,4,4294967295,0),S.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):Y(this,e,n,!1),n+4},S.prototype.writeIntLE=function(e,n,t,l){if(e=+e,n|=0,!l){var r=Math.pow(2,8*t-1);J(this,e,n,t,r-1,-r)}var i=0,u=1,o=0;for(this[n]=255&e;++i<t&&(u*=256);)e<0&&0===o&&0!==this[n+i-1]&&(o=1),this[n+i]=(e/u>>0)-o&255;return n+t},S.prototype.writeIntBE=function(e,n,t,l){if(e=+e,n|=0,!l){var r=Math.pow(2,8*t-1);J(this,e,n,t,r-1,-r)}var i=t-1,u=1,o=0;for(this[n+i]=255&e;--i>=0&&(u*=256);)e<0&&0===o&&0!==this[n+i+1]&&(o=1),this[n+i]=(e/u>>0)-o&255;return n+t},S.prototype.writeInt8=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,1,127,-128),S.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[n]=255&e,n+1},S.prototype.writeInt16LE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,2,32767,-32768),S.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):X(this,e,n,!0),n+2},S.prototype.writeInt16BE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,2,32767,-32768),S.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):X(this,e,n,!1),n+2},S.prototype.writeInt32LE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,4,2147483647,-2147483648),S.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8,this[n+2]=e>>>16,this[n+3]=e>>>24):Y(this,e,n,!0),n+4},S.prototype.writeInt32BE=function(e,n,t){return e=+e,n|=0,t||J(this,e,n,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),S.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):Y(this,e,n,!1),n+4},S.prototype.writeFloatLE=function(e,n,t){return Z(this,e,n,!0,t)},S.prototype.writeFloatBE=function(e,n,t){return Z(this,e,n,!1,t)},S.prototype.writeDoubleLE=function(e,n,t){return ee(this,e,n,!0,t)},S.prototype.writeDoubleBE=function(e,n,t){return ee(this,e,n,!1,t)},S.prototype.copy=function(e,n,t,l){if(t||(t=0),l||0===l||(l=this.length),n>=e.length&&(n=e.length),n||(n=0),l>0&&l<t&&(l=t),l===t)return 0;if(0===e.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("sourceStart out of bounds");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),e.length-n<l-t&&(l=e.length-n+t);var r,i=l-t;if(this===e&&t<n&&n<l)for(r=i-1;r>=0;--r)e[r+n]=this[r+t];else if(i<1e3||!S.TYPED_ARRAY_SUPPORT)for(r=0;r<i;++r)e[r+n]=this[r+t];else Uint8Array.prototype.set.call(e,this.subarray(t,t+i),n);return i},S.prototype.fill=function(e,n,t,l){if("string"==typeof e){if("string"==typeof n?(l=n,n=0,t=this.length):"string"==typeof t&&(l=t,t=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!S.isEncoding(l))throw new TypeError("Unknown encoding: "+l)}else"number"==typeof e&&(e&=255);if(n<0||this.length<n||this.length<t)throw new RangeError("Out of range index");if(t<=n)return this;var i;if(n>>>=0,t=void 0===t?this.length:t>>>0,e||(e=0),"number"==typeof e)for(i=n;i<t;++i)this[i]=e;else{var u=T(e)?e:le(new S(e,l).toString()),o=u.length;for(i=0;i<t-n;++i)this[i+n]=u[i%o]}return this};var ne=/[^+\/0-9A-Za-z-_]/g;function te(e){return e<16?"0"+e.toString(16):e.toString(16)}function le(e,n){var t;n=n||1/0;for(var l=e.length,r=null,i=[],u=0;u<l;++u){if((t=e.charCodeAt(u))>55295&&t<57344){if(!r){if(t>56319){(n-=3)>-1&&i.push(239,191,189);continue}if(u+1===l){(n-=3)>-1&&i.push(239,191,189);continue}r=t;continue}if(t<56320){(n-=3)>-1&&i.push(239,191,189),r=t;continue}t=65536+(r-55296<<10|t-56320)}else r&&(n-=3)>-1&&i.push(239,191,189);if(r=null,t<128){if((n-=1)<0)break;i.push(t)}else if(t<2048){if((n-=2)<0)break;i.push(t>>6|192,63&t|128)}else if(t<65536){if((n-=3)<0)break;i.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(t<1114112))throw new Error("Invalid code point");if((n-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return i}function re(e){return function(e){var n,t,l,r,i,u;f||d();var o=e.length;if(o%4>0)throw new Error("Invalid string. Length must be a multiple of 4");i="="===e[o-2]?2:"="===e[o-1]?1:0,u=new h(3*o/4-i),l=i>0?o-4:o;var s=0;for(n=0,t=0;n<l;n+=4,t+=3)r=c[e.charCodeAt(n)]<<18|c[e.charCodeAt(n+1)]<<12|c[e.charCodeAt(n+2)]<<6|c[e.charCodeAt(n+3)],u[s++]=r>>16&255,u[s++]=r>>8&255,u[s++]=255&r;return 2===i?(r=c[e.charCodeAt(n)]<<2|c[e.charCodeAt(n+1)]>>4,u[s++]=255&r):1===i&&(r=c[e.charCodeAt(n)]<<10|c[e.charCodeAt(n+1)]<<4|c[e.charCodeAt(n+2)]>>2,u[s++]=r>>8&255,u[s++]=255&r),u}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(ne,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function ie(e,n,t,l){for(var r=0;r<l&&!(r+t>=n.length||r>=e.length);++r)n[r+t]=e[r];return r}function ue(e){return null!=e&&(!!e._isBuffer||oe(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&oe(e.slice(0,0))}(e))}function oe(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var se=t(Object.freeze({__proto__:null,INSPECT_MAX_BYTES:50,kMaxLength:w,Buffer:S,SlowBuffer:function(e){return+e!=e&&(e=0),S.alloc(+e)},isBuffer:ue})),ae={
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
read:function(e,n,t,l,r){var i,u,o=8*r-l-1,s=(1<<o)-1,a=s>>1,c=-7,h=t?r-1:0,f=t?-1:1,d=e[n+h];for(h+=f,i=d&(1<<-c)-1,d>>=-c,c+=o;c>0;i=256*i+e[n+h],h+=f,c-=8);for(u=i&(1<<-c)-1,i>>=-c,c+=l;c>0;u=256*u+e[n+h],h+=f,c-=8);if(0===i)i=1-a;else{if(i===s)return u?NaN:1/0*(d?-1:1);u+=Math.pow(2,l),i-=a}return(d?-1:1)*u*Math.pow(2,i-l)},write:function(e,n,t,l,r,i){var u,o,s,a=8*i-r-1,c=(1<<a)-1,h=c>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,d=l?0:i-1,p=l?1:-1,y=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(o=isNaN(n)?1:0,u=c):(u=Math.floor(Math.log(n)/Math.LN2),n*(s=Math.pow(2,-u))<1&&(u--,s*=2),(n+=u+h>=1?f/s:f*Math.pow(2,1-h))*s>=2&&(u++,s/=2),u+h>=c?(o=0,u=c):u+h>=1?(o=(n*s-1)*Math.pow(2,r),u+=h):(o=n*Math.pow(2,h-1)*Math.pow(2,r),u=0));r>=8;e[t+d]=255&o,d+=p,o/=256,r-=8);for(u=u<<r|o,a+=r;a>0;e[t+d]=255&u,d+=p,u/=256,a-=8);e[t+d-p]|=128*y}},ce={exports:{}};!function(e){!function(n){var t,l=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,r=Math.ceil,i=Math.floor,u="[BigNumber Error] ",o=u+"Number primitive has more than 15 significant digits: ",s=1e14,a=14,c=9007199254740991,h=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],f=1e7,d=1e9;function p(e){var n=0|e;return e>0||e===n?n:n-1}function y(e){for(var n,t,l=1,r=e.length,i=e[0]+"";l<r;){for(n=e[l++]+"",t=a-n.length;t--;n="0"+n);i+=n}for(r=i.length;48===i.charCodeAt(--r););return i.slice(0,r+1||1)}function g(e,n){var t,l,r=e.c,i=n.c,u=e.s,o=n.s,s=e.e,a=n.e;if(!u||!o)return null;if(t=r&&!r[0],l=i&&!i[0],t||l)return t?l?0:-o:u;if(u!=o)return u;if(t=u<0,l=s==a,!r||!i)return l?0:!r^t?1:-1;if(!l)return s>a^t?1:-1;for(o=(s=r.length)<(a=i.length)?s:a,u=0;u<o;u++)if(r[u]!=i[u])return r[u]>i[u]^t?1:-1;return s==a?0:s>a^t?1:-1}function m(e,n,t,l){if(e<n||e>t||e!==i(e))throw Error(u+(l||"Argument")+("number"==typeof e?e<n||e>t?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function v(e){var n=e.c.length-1;return p(e.e/a)==n&&e.c[n]%2!=0}function b(e,n){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(n<0?"e":"e+")+n}function w(e,n,t){var l,r;if(n<0){for(r=t+".";++n;r+=t);e=r+e}else if(++n>(l=e.length)){for(r=t,n-=l;--n;r+=t);e+=r}else n<l&&(e=e.slice(0,n)+"."+e.slice(n));return e}t=function e(n){var t,_,E,S,x,k,I,P,A,T,O=q.prototype={constructor:q,toString:null,valueOf:null},M=new q(1),R=20,N=4,C=-7,L=21,j=-1e7,U=1e7,D=!1,B=1,K=0,F={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},V="0123456789abcdefghijklmnopqrstuvwxyz",H=!0;function q(e,n){var t,r,u,s,h,f,d,p,y=this;if(!(y instanceof q))return new q(e,n);if(null==n){if(e&&!0===e._isBigNumber)return y.s=e.s,void(!e.c||e.e>U?y.c=y.e=null:e.e<j?y.c=[y.e=0]:(y.e=e.e,y.c=e.c.slice()));if((f="number"==typeof e)&&0*e==0){if(y.s=1/e<0?(e=-e,-1):1,e===~~e){for(s=0,h=e;h>=10;h/=10,s++);return void(s>U?y.c=y.e=null:(y.e=s,y.c=[e]))}p=String(e)}else{if(!l.test(p=String(e)))return E(y,p,f);y.s=45==p.charCodeAt(0)?(p=p.slice(1),-1):1}(s=p.indexOf("."))>-1&&(p=p.replace(".","")),(h=p.search(/e/i))>0?(s<0&&(s=h),s+=+p.slice(h+1),p=p.substring(0,h)):s<0&&(s=p.length)}else{if(m(n,2,V.length,"Base"),10==n&&H)return W(y=new q(e),R+y.e+1,N);if(p=String(e),f="number"==typeof e){if(0*e!=0)return E(y,p,f,n);if(y.s=1/e<0?(p=p.slice(1),-1):1,q.DEBUG&&p.replace(/^0\.0*|\./,"").length>15)throw Error(o+e)}else y.s=45===p.charCodeAt(0)?(p=p.slice(1),-1):1;for(t=V.slice(0,n),s=h=0,d=p.length;h<d;h++)if(t.indexOf(r=p.charAt(h))<0){if("."==r){if(h>s){s=d;continue}}else if(!u&&(p==p.toUpperCase()&&(p=p.toLowerCase())||p==p.toLowerCase()&&(p=p.toUpperCase()))){u=!0,h=-1,s=0;continue}return E(y,String(e),f,n)}f=!1,(s=(p=_(p,n,10,y.s)).indexOf("."))>-1?p=p.replace(".",""):s=p.length}for(h=0;48===p.charCodeAt(h);h++);for(d=p.length;48===p.charCodeAt(--d););if(p=p.slice(h,++d)){if(d-=h,f&&q.DEBUG&&d>15&&(e>c||e!==i(e)))throw Error(o+y.s*e);if((s=s-h-1)>U)y.c=y.e=null;else if(s<j)y.c=[y.e=0];else{if(y.e=s,y.c=[],h=(s+1)%a,s<0&&(h+=a),h<d){for(h&&y.c.push(+p.slice(0,h)),d-=a;h<d;)y.c.push(+p.slice(h,h+=a));h=a-(p=p.slice(h)).length}else h-=d;for(;h--;p+="0");y.c.push(+p)}}else y.c=[y.e=0]}function z(e,n,t,l){var r,i,u,o,s;if(null==t?t=N:m(t,0,8),!e.c)return e.toString();if(r=e.c[0],u=e.e,null==n)s=y(e.c),s=1==l||2==l&&(u<=C||u>=L)?b(s,u):w(s,u,"0");else if(i=(e=W(new q(e),n,t)).e,o=(s=y(e.c)).length,1==l||2==l&&(n<=i||i<=C)){for(;o<n;s+="0",o++);s=b(s,i)}else if(n-=u,s=w(s,i,"0"),i+1>o){if(--n>0)for(s+=".";n--;s+="0");}else if((n+=i-o)>0)for(i+1==o&&(s+=".");n--;s+="0");return e.s<0&&r?"-"+s:s}function $(e,n){for(var t,l=1,r=new q(e[0]);l<e.length;l++){if(!(t=new q(e[l])).s){r=t;break}n.call(r,t)&&(r=t)}return r}function G(e,n,t){for(var l=1,r=n.length;!n[--r];n.pop());for(r=n[0];r>=10;r/=10,l++);return(t=l+t*a-1)>U?e.c=e.e=null:t<j?e.c=[e.e=0]:(e.e=t,e.c=n),e}function W(e,n,t,l){var u,o,c,f,d,p,y,g=e.c,m=h;if(g){e:{for(u=1,f=g[0];f>=10;f/=10,u++);if((o=n-u)<0)o+=a,c=n,y=(d=g[p=0])/m[u-c-1]%10|0;else if((p=r((o+1)/a))>=g.length){if(!l)break e;for(;g.length<=p;g.push(0));d=y=0,u=1,c=(o%=a)-a+1}else{for(d=f=g[p],u=1;f>=10;f/=10,u++);y=(c=(o%=a)-a+u)<0?0:d/m[u-c-1]%10|0}if(l=l||n<0||null!=g[p+1]||(c<0?d:d%m[u-c-1]),l=t<4?(y||l)&&(0==t||t==(e.s<0?3:2)):y>5||5==y&&(4==t||l||6==t&&(o>0?c>0?d/m[u-c]:0:g[p-1])%10&1||t==(e.s<0?8:7)),n<1||!g[0])return g.length=0,l?(n-=e.e+1,g[0]=m[(a-n%a)%a],e.e=-n||0):g[0]=e.e=0,e;if(0==o?(g.length=p,f=1,p--):(g.length=p+1,f=m[a-o],g[p]=c>0?i(d/m[u-c]%m[c])*f:0),l)for(;;){if(0==p){for(o=1,c=g[0];c>=10;c/=10,o++);for(c=g[0]+=f,f=1;c>=10;c/=10,f++);o!=f&&(e.e++,g[0]==s&&(g[0]=1));break}if(g[p]+=f,g[p]!=s)break;g[p--]=0,f=1}for(o=g.length;0===g[--o];g.pop());}e.e>U?e.c=e.e=null:e.e<j&&(e.c=[e.e=0])}return e}function J(e){var n,t=e.e;return null===t?e.toString():(n=y(e.c),n=t<=C||t>=L?b(n,t):w(n,t,"0"),e.s<0?"-"+n:n)}return q.clone=e,q.ROUND_UP=0,q.ROUND_DOWN=1,q.ROUND_CEIL=2,q.ROUND_FLOOR=3,q.ROUND_HALF_UP=4,q.ROUND_HALF_DOWN=5,q.ROUND_HALF_EVEN=6,q.ROUND_HALF_CEIL=7,q.ROUND_HALF_FLOOR=8,q.EUCLID=9,q.config=q.set=function(e){var n,t;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(n="DECIMAL_PLACES")&&(m(t=e[n],0,d,n),R=t),e.hasOwnProperty(n="ROUNDING_MODE")&&(m(t=e[n],0,8,n),N=t),e.hasOwnProperty(n="EXPONENTIAL_AT")&&((t=e[n])&&t.pop?(m(t[0],-d,0,n),m(t[1],0,d,n),C=t[0],L=t[1]):(m(t,-d,d,n),C=-(L=t<0?-t:t))),e.hasOwnProperty(n="RANGE"))if((t=e[n])&&t.pop)m(t[0],-d,-1,n),m(t[1],1,d,n),j=t[0],U=t[1];else{if(m(t,-d,d,n),!t)throw Error(u+n+" cannot be zero: "+t);j=-(U=t<0?-t:t)}if(e.hasOwnProperty(n="CRYPTO")){if((t=e[n])!==!!t)throw Error(u+n+" not true or false: "+t);if(t){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw D=!t,Error(u+"crypto unavailable");D=t}else D=t}if(e.hasOwnProperty(n="MODULO_MODE")&&(m(t=e[n],0,9,n),B=t),e.hasOwnProperty(n="POW_PRECISION")&&(m(t=e[n],0,d,n),K=t),e.hasOwnProperty(n="FORMAT")){if("object"!=typeof(t=e[n]))throw Error(u+n+" not an object: "+t);F=t}if(e.hasOwnProperty(n="ALPHABET")){if("string"!=typeof(t=e[n])||/^.?$|[+\-.\s]|(.).*\1/.test(t))throw Error(u+n+" invalid: "+t);H="0123456789"==t.slice(0,10),V=t}}return{DECIMAL_PLACES:R,ROUNDING_MODE:N,EXPONENTIAL_AT:[C,L],RANGE:[j,U],CRYPTO:D,MODULO_MODE:B,POW_PRECISION:K,FORMAT:F,ALPHABET:V}},q.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!q.DEBUG)return!0;var n,t,l=e.c,r=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(l)){if((1===o||-1===o)&&r>=-d&&r<=d&&r===i(r)){if(0===l[0]){if(0===r&&1===l.length)return!0;break e}if((n=(r+1)%a)<1&&(n+=a),String(l[0]).length==n){for(n=0;n<l.length;n++)if((t=l[n])<0||t>=s||t!==i(t))break e;if(0!==t)return!0}}}else if(null===l&&null===r&&(null===o||1===o||-1===o))return!0;throw Error(u+"Invalid BigNumber: "+e)},q.maximum=q.max=function(){return $(arguments,O.lt)},q.minimum=q.min=function(){return $(arguments,O.gt)},q.random=(S=9007199254740992,x=Math.random()*S&2097151?function(){return i(Math.random()*S)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var n,t,l,o,s,c=0,f=[],p=new q(M);if(null==e?e=R:m(e,0,d),o=r(e/a),D)if(crypto.getRandomValues){for(n=crypto.getRandomValues(new Uint32Array(o*=2));c<o;)(s=131072*n[c]+(n[c+1]>>>11))>=9e15?(t=crypto.getRandomValues(new Uint32Array(2)),n[c]=t[0],n[c+1]=t[1]):(f.push(s%1e14),c+=2);c=o/2}else{if(!crypto.randomBytes)throw D=!1,Error(u+"crypto unavailable");for(n=crypto.randomBytes(o*=7);c<o;)(s=281474976710656*(31&n[c])+1099511627776*n[c+1]+4294967296*n[c+2]+16777216*n[c+3]+(n[c+4]<<16)+(n[c+5]<<8)+n[c+6])>=9e15?crypto.randomBytes(7).copy(n,c):(f.push(s%1e14),c+=7);c=o/7}if(!D)for(;c<o;)(s=x())<9e15&&(f[c++]=s%1e14);for(o=f[--c],e%=a,o&&e&&(s=h[a-e],f[c]=i(o/s)*s);0===f[c];f.pop(),c--);if(c<0)f=[l=0];else{for(l=-1;0===f[0];f.splice(0,1),l-=a);for(c=1,s=f[0];s>=10;s/=10,c++);c<a&&(l-=a-c)}return p.e=l,p.c=f,p}),q.sum=function(){for(var e=1,n=arguments,t=new q(n[0]);e<n.length;)t=t.plus(n[e++]);return t},_=function(){var e="0123456789";function n(e,n,t,l){for(var r,i,u=[0],o=0,s=e.length;o<s;){for(i=u.length;i--;u[i]*=n);for(u[0]+=l.indexOf(e.charAt(o++)),r=0;r<u.length;r++)u[r]>t-1&&(null==u[r+1]&&(u[r+1]=0),u[r+1]+=u[r]/t|0,u[r]%=t)}return u.reverse()}return function(l,r,i,u,o){var s,a,c,h,f,d,p,g,m=l.indexOf("."),v=R,b=N;for(m>=0&&(h=K,K=0,l=l.replace(".",""),d=(g=new q(r)).pow(l.length-m),K=h,g.c=n(w(y(d.c),d.e,"0"),10,i,e),g.e=g.c.length),c=h=(p=n(l,r,i,o?(s=V,e):(s=e,V))).length;0==p[--h];p.pop());if(!p[0])return s.charAt(0);if(m<0?--c:(d.c=p,d.e=c,d.s=u,p=(d=t(d,g,v,b,i)).c,f=d.r,c=d.e),m=p[a=c+v+1],h=i/2,f=f||a<0||null!=p[a+1],f=b<4?(null!=m||f)&&(0==b||b==(d.s<0?3:2)):m>h||m==h&&(4==b||f||6==b&&1&p[a-1]||b==(d.s<0?8:7)),a<1||!p[0])l=f?w(s.charAt(1),-v,s.charAt(0)):s.charAt(0);else{if(p.length=a,f)for(--i;++p[--a]>i;)p[a]=0,a||(++c,p=[1].concat(p));for(h=p.length;!p[--h];);for(m=0,l="";m<=h;l+=s.charAt(p[m++]));l=w(l,c,s.charAt(0))}return l}}(),t=function(){function e(e,n,t){var l,r,i,u,o=0,s=e.length,a=n%f,c=n/f|0;for(e=e.slice();s--;)o=((r=a*(i=e[s]%f)+(l=c*i+(u=e[s]/f|0)*a)%f*f+o)/t|0)+(l/f|0)+c*u,e[s]=r%t;return o&&(e=[o].concat(e)),e}function n(e,n,t,l){var r,i;if(t!=l)i=t>l?1:-1;else for(r=i=0;r<t;r++)if(e[r]!=n[r]){i=e[r]>n[r]?1:-1;break}return i}function t(e,n,t,l){for(var r=0;t--;)e[t]-=r,r=e[t]<n[t]?1:0,e[t]=r*l+e[t]-n[t];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(l,r,u,o,c){var h,f,d,y,g,m,v,b,w,_,E,S,x,k,I,P,A,T=l.s==r.s?1:-1,O=l.c,M=r.c;if(!(O&&O[0]&&M&&M[0]))return new q(l.s&&r.s&&(O?!M||O[0]!=M[0]:M)?O&&0==O[0]||!M?0*T:T/0:NaN);for(w=(b=new q(T)).c=[],T=u+(f=l.e-r.e)+1,c||(c=s,f=p(l.e/a)-p(r.e/a),T=T/a|0),d=0;M[d]==(O[d]||0);d++);if(M[d]>(O[d]||0)&&f--,T<0)w.push(1),y=!0;else{for(k=O.length,P=M.length,d=0,T+=2,(g=i(c/(M[0]+1)))>1&&(M=e(M,g,c),O=e(O,g,c),P=M.length,k=O.length),x=P,E=(_=O.slice(0,P)).length;E<P;_[E++]=0);A=M.slice(),A=[0].concat(A),I=M[0],M[1]>=c/2&&I++;do{if(g=0,(h=n(M,_,P,E))<0){if(S=_[0],P!=E&&(S=S*c+(_[1]||0)),(g=i(S/I))>1)for(g>=c&&(g=c-1),v=(m=e(M,g,c)).length,E=_.length;1==n(m,_,v,E);)g--,t(m,P<v?A:M,v,c),v=m.length,h=1;else 0==g&&(h=g=1),v=(m=M.slice()).length;if(v<E&&(m=[0].concat(m)),t(_,m,E,c),E=_.length,-1==h)for(;n(M,_,P,E)<1;)g++,t(_,P<E?A:M,E,c),E=_.length}else 0===h&&(g++,_=[0]);w[d++]=g,_[0]?_[E++]=O[x]||0:(_=[O[x]],E=1)}while((x++<k||null!=_[0])&&T--);y=null!=_[0],w[0]||w.splice(0,1)}if(c==s){for(d=1,T=w[0];T>=10;T/=10,d++);W(b,u+(b.e=d+f*a-1)+1,o,y)}else b.e=f,b.r=+y;return b}}(),k=/^(-?)0([xbo])(?=\w[\w.]*$)/i,I=/^([^.]+)\.$/,P=/^\.([^.]+)$/,A=/^-?(Infinity|NaN)$/,T=/^\s*\+(?=[\w.])|^\s+|\s+$/g,E=function(e,n,t,l){var r,i=t?n:n.replace(T,"");if(A.test(i))e.s=isNaN(i)?null:i<0?-1:1;else{if(!t&&(i=i.replace(k,(function(e,n,t){return r="x"==(t=t.toLowerCase())?16:"b"==t?2:8,l&&l!=r?e:n})),l&&(r=l,i=i.replace(I,"$1").replace(P,"0.$1")),n!=i))return new q(i,r);if(q.DEBUG)throw Error(u+"Not a"+(l?" base "+l:"")+" number: "+n);e.s=null}e.c=e.e=null},O.absoluteValue=O.abs=function(){var e=new q(this);return e.s<0&&(e.s=1),e},O.comparedTo=function(e,n){return g(this,new q(e,n))},O.decimalPlaces=O.dp=function(e,n){var t,l,r,i=this;if(null!=e)return m(e,0,d),null==n?n=N:m(n,0,8),W(new q(i),e+i.e+1,n);if(!(t=i.c))return null;if(l=((r=t.length-1)-p(this.e/a))*a,r=t[r])for(;r%10==0;r/=10,l--);return l<0&&(l=0),l},O.dividedBy=O.div=function(e,n){return t(this,new q(e,n),R,N)},O.dividedToIntegerBy=O.idiv=function(e,n){return t(this,new q(e,n),0,1)},O.exponentiatedBy=O.pow=function(e,n){var t,l,o,s,c,h,f,d,p=this;if((e=new q(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+J(e));if(null!=n&&(n=new q(n)),c=e.e>14,!p.c||!p.c[0]||1==p.c[0]&&!p.e&&1==p.c.length||!e.c||!e.c[0])return d=new q(Math.pow(+J(p),c?2-v(e):+J(e))),n?d.mod(n):d;if(h=e.s<0,n){if(n.c?!n.c[0]:!n.s)return new q(NaN);(l=!h&&p.isInteger()&&n.isInteger())&&(p=p.mod(n))}else{if(e.e>9&&(p.e>0||p.e<-1||(0==p.e?p.c[0]>1||c&&p.c[1]>=24e7:p.c[0]<8e13||c&&p.c[0]<=9999975e7)))return s=p.s<0&&v(e)?-0:0,p.e>-1&&(s=1/s),new q(h?1/s:s);K&&(s=r(K/a+2))}for(c?(t=new q(.5),h&&(e.s=1),f=v(e)):f=(o=Math.abs(+J(e)))%2,d=new q(M);;){if(f){if(!(d=d.times(p)).c)break;s?d.c.length>s&&(d.c.length=s):l&&(d=d.mod(n))}if(o){if(0===(o=i(o/2)))break;f=o%2}else if(W(e=e.times(t),e.e+1,1),e.e>14)f=v(e);else{if(0===(o=+J(e)))break;f=o%2}p=p.times(p),s?p.c&&p.c.length>s&&(p.c.length=s):l&&(p=p.mod(n))}return l?d:(h&&(d=M.div(d)),n?d.mod(n):s?W(d,K,N,undefined):d)},O.integerValue=function(e){var n=new q(this);return null==e?e=N:m(e,0,8),W(n,n.e+1,e)},O.isEqualTo=O.eq=function(e,n){return 0===g(this,new q(e,n))},O.isFinite=function(){return!!this.c},O.isGreaterThan=O.gt=function(e,n){return g(this,new q(e,n))>0},O.isGreaterThanOrEqualTo=O.gte=function(e,n){return 1===(n=g(this,new q(e,n)))||0===n},O.isInteger=function(){return!!this.c&&p(this.e/a)>this.c.length-2},O.isLessThan=O.lt=function(e,n){return g(this,new q(e,n))<0},O.isLessThanOrEqualTo=O.lte=function(e,n){return-1===(n=g(this,new q(e,n)))||0===n},O.isNaN=function(){return!this.s},O.isNegative=function(){return this.s<0},O.isPositive=function(){return this.s>0},O.isZero=function(){return!!this.c&&0==this.c[0]},O.minus=function(e,n){var t,l,r,i,u=this,o=u.s;if(n=(e=new q(e,n)).s,!o||!n)return new q(NaN);if(o!=n)return e.s=-n,u.plus(e);var c=u.e/a,h=e.e/a,f=u.c,d=e.c;if(!c||!h){if(!f||!d)return f?(e.s=-n,e):new q(d?u:NaN);if(!f[0]||!d[0])return d[0]?(e.s=-n,e):new q(f[0]?u:3==N?-0:0)}if(c=p(c),h=p(h),f=f.slice(),o=c-h){for((i=o<0)?(o=-o,r=f):(h=c,r=d),r.reverse(),n=o;n--;r.push(0));r.reverse()}else for(l=(i=(o=f.length)<(n=d.length))?o:n,o=n=0;n<l;n++)if(f[n]!=d[n]){i=f[n]<d[n];break}if(i&&(r=f,f=d,d=r,e.s=-e.s),(n=(l=d.length)-(t=f.length))>0)for(;n--;f[t++]=0);for(n=s-1;l>o;){if(f[--l]<d[l]){for(t=l;t&&!f[--t];f[t]=n);--f[t],f[l]+=s}f[l]-=d[l]}for(;0==f[0];f.splice(0,1),--h);return f[0]?G(e,f,h):(e.s=3==N?-1:1,e.c=[e.e=0],e)},O.modulo=O.mod=function(e,n){var l,r,i=this;return e=new q(e,n),!i.c||!e.s||e.c&&!e.c[0]?new q(NaN):!e.c||i.c&&!i.c[0]?new q(i):(9==B?(r=e.s,e.s=1,l=t(i,e,0,3),e.s=r,l.s*=r):l=t(i,e,0,B),(e=i.minus(l.times(e))).c[0]||1!=B||(e.s=i.s),e)},O.multipliedBy=O.times=function(e,n){var t,l,r,i,u,o,c,h,d,y,g,m,v,b,w,_=this,E=_.c,S=(e=new q(e,n)).c;if(!(E&&S&&E[0]&&S[0]))return!_.s||!e.s||E&&!E[0]&&!S||S&&!S[0]&&!E?e.c=e.e=e.s=null:(e.s*=_.s,E&&S?(e.c=[0],e.e=0):e.c=e.e=null),e;for(l=p(_.e/a)+p(e.e/a),e.s*=_.s,(c=E.length)<(y=S.length)&&(v=E,E=S,S=v,r=c,c=y,y=r),r=c+y,v=[];r--;v.push(0));for(b=s,w=f,r=y;--r>=0;){for(t=0,g=S[r]%w,m=S[r]/w|0,i=r+(u=c);i>r;)t=((h=g*(h=E[--u]%w)+(o=m*h+(d=E[u]/w|0)*g)%w*w+v[i]+t)/b|0)+(o/w|0)+m*d,v[i--]=h%b;v[i]=t}return t?++l:v.splice(0,1),G(e,v,l)},O.negated=function(){var e=new q(this);return e.s=-e.s||null,e},O.plus=function(e,n){var t,l=this,r=l.s;if(n=(e=new q(e,n)).s,!r||!n)return new q(NaN);if(r!=n)return e.s=-n,l.minus(e);var i=l.e/a,u=e.e/a,o=l.c,c=e.c;if(!i||!u){if(!o||!c)return new q(r/0);if(!o[0]||!c[0])return c[0]?e:new q(o[0]?l:0*r)}if(i=p(i),u=p(u),o=o.slice(),r=i-u){for(r>0?(u=i,t=c):(r=-r,t=o),t.reverse();r--;t.push(0));t.reverse()}for((r=o.length)-(n=c.length)<0&&(t=c,c=o,o=t,n=r),r=0;n;)r=(o[--n]=o[n]+c[n]+r)/s|0,o[n]=s===o[n]?0:o[n]%s;return r&&(o=[r].concat(o),++u),G(e,o,u)},O.precision=O.sd=function(e,n){var t,l,r,i=this;if(null!=e&&e!==!!e)return m(e,1,d),null==n?n=N:m(n,0,8),W(new q(i),e,n);if(!(t=i.c))return null;if(l=(r=t.length-1)*a+1,r=t[r]){for(;r%10==0;r/=10,l--);for(r=t[0];r>=10;r/=10,l++);}return e&&i.e+1>l&&(l=i.e+1),l},O.shiftedBy=function(e){return m(e,-9007199254740991,c),this.times("1e"+e)},O.squareRoot=O.sqrt=function(){var e,n,l,r,i,u=this,o=u.c,s=u.s,a=u.e,c=R+4,h=new q("0.5");if(1!==s||!o||!o[0])return new q(!s||s<0&&(!o||o[0])?NaN:o?u:1/0);if(0==(s=Math.sqrt(+J(u)))||s==1/0?(((n=y(o)).length+a)%2==0&&(n+="0"),s=Math.sqrt(+n),a=p((a+1)/2)-(a<0||a%2),l=new q(n=s==1/0?"5e"+a:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+a)):l=new q(s+""),l.c[0])for((s=(a=l.e)+c)<3&&(s=0);;)if(i=l,l=h.times(i.plus(t(u,i,c,1))),y(i.c).slice(0,s)===(n=y(l.c)).slice(0,s)){if(l.e<a&&--s,"9999"!=(n=n.slice(s-3,s+1))&&(r||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(W(l,l.e+R+2,1),e=!l.times(l).eq(u));break}if(!r&&(W(i,i.e+R+2,0),i.times(i).eq(u))){l=i;break}c+=4,s+=4,r=1}return W(l,l.e+R+1,N,e)},O.toExponential=function(e,n){return null!=e&&(m(e,0,d),e++),z(this,e,n,1)},O.toFixed=function(e,n){return null!=e&&(m(e,0,d),e=e+this.e+1),z(this,e,n)},O.toFormat=function(e,n,t){var l,r=this;if(null==t)null!=e&&n&&"object"==typeof n?(t=n,n=null):e&&"object"==typeof e?(t=e,e=n=null):t=F;else if("object"!=typeof t)throw Error(u+"Argument not an object: "+t);if(l=r.toFixed(e,n),r.c){var i,o=l.split("."),s=+t.groupSize,a=+t.secondaryGroupSize,c=t.groupSeparator||"",h=o[0],f=o[1],d=r.s<0,p=d?h.slice(1):h,y=p.length;if(a&&(i=s,s=a,a=i,y-=i),s>0&&y>0){for(i=y%s||s,h=p.substr(0,i);i<y;i+=s)h+=c+p.substr(i,s);a>0&&(h+=c+p.slice(i)),d&&(h="-"+h)}l=f?h+(t.decimalSeparator||"")+((a=+t.fractionGroupSize)?f.replace(new RegExp("\\d{"+a+"}\\B","g"),"$&"+(t.fractionGroupSeparator||"")):f):h}return(t.prefix||"")+l+(t.suffix||"")},O.toFraction=function(e){var n,l,r,i,o,s,c,f,d,p,g,m,v=this,b=v.c;if(null!=e&&(!(c=new q(e)).isInteger()&&(c.c||1!==c.s)||c.lt(M)))throw Error(u+"Argument "+(c.isInteger()?"out of range: ":"not an integer: ")+J(c));if(!b)return new q(v);for(n=new q(M),d=l=new q(M),r=f=new q(M),m=y(b),o=n.e=m.length-v.e-1,n.c[0]=h[(s=o%a)<0?a+s:s],e=!e||c.comparedTo(n)>0?o>0?n:d:c,s=U,U=1/0,c=new q(m),f.c[0]=0;p=t(c,n,0,1),1!=(i=l.plus(p.times(r))).comparedTo(e);)l=r,r=i,d=f.plus(p.times(i=d)),f=i,n=c.minus(p.times(i=n)),c=i;return i=t(e.minus(l),r,0,1),f=f.plus(i.times(d)),l=l.plus(i.times(r)),f.s=d.s=v.s,g=t(d,r,o*=2,N).minus(v).abs().comparedTo(t(f,l,o,N).minus(v).abs())<1?[d,r]:[f,l],U=s,g},O.toNumber=function(){return+J(this)},O.toPrecision=function(e,n){return null!=e&&m(e,1,d),z(this,e,n,2)},O.toString=function(e){var n,t=this,l=t.s,r=t.e;return null===r?l?(n="Infinity",l<0&&(n="-"+n)):n="NaN":(null==e?n=r<=C||r>=L?b(y(t.c),r):w(y(t.c),r,"0"):10===e&&H?n=w(y((t=W(new q(t),R+r+1,N)).c),t.e,"0"):(m(e,2,V.length,"Base"),n=_(w(y(t.c),r,"0"),10,e,l,!0)),l<0&&t.c[0]&&(n="-"+n)),n},O.valueOf=O.toJSON=function(){return J(this)},O._isBigNumber=!0,null!=n&&q.set(n),q}(),t.default=t.BigNumber=t,e.exports?e.exports=t:(n||(n="undefined"!=typeof self&&self?self:window),n.BigNumber=t)}(n)}(ce);var he={},fe={};const de=ce.exports.BigNumber;fe.MT={POS_INT:0,NEG_INT:1,BYTE_STRING:2,UTF8_STRING:3,ARRAY:4,MAP:5,TAG:6,SIMPLE_FLOAT:7},fe.TAG={DATE_STRING:0,DATE_EPOCH:1,POS_BIGINT:2,NEG_BIGINT:3,DECIMAL_FRAC:4,BIGFLOAT:5,BASE64URL_EXPECTED:21,BASE64_EXPECTED:22,BASE16_EXPECTED:23,CBOR:24,URI:32,BASE64URL:33,BASE64:34,REGEXP:35,MIME:36},fe.NUMBYTES={ZERO:0,ONE:24,TWO:25,FOUR:26,EIGHT:27,INDEFINITE:31},fe.SIMPLE={FALSE:20,TRUE:21,NULL:22,UNDEFINED:23},fe.SYMS={NULL:Symbol("null"),UNDEFINED:Symbol("undef"),PARENT:Symbol("parent"),BREAK:Symbol("break"),STREAM:Symbol("stream")},fe.SHIFT32=Math.pow(2,32),fe.SHIFT16=Math.pow(2,16),fe.MAX_SAFE_HIGH=2097151,fe.NEG_ONE=new de(-1),fe.TEN=new de(10),fe.TWO=new de(2),fe.PARENT={ARRAY:0,OBJECT:1,MAP:2,TAG:3,BYTE_STRING:4,UTF8_STRING:5},function(e){const{Buffer:n}=se,t=ce.exports.BigNumber,l=fe,r=l.SHIFT32,i=l.SHIFT16;function u(e){return e<16?"0"+e.toString(16):e.toString(16)}e.parseHalf=function(e){var n,t,l;return l=128&e[0]?-1:1,n=(124&e[0])>>2,t=(3&e[0])<<8|e[1],n?31===n?l*(t?NaN:Infinity):l*Math.pow(2,n-25)*(1024+t):5.960464477539063e-8*l*t},e.arrayBufferToBignumber=function(e){const n=e.byteLength;let l="";for(let t=0;t<n;t++)l+=u(e[t]);return new t(l,16)},e.buildMap=e=>{const n=new Map,t=Object.keys(e),l=t.length;for(let r=0;r<l;r++)n.set(t[r],e[t[r]]);return n},e.buildInt32=(e,n)=>e*i+n,e.buildInt64=(n,l,i,u)=>{const o=e.buildInt32(n,l),s=e.buildInt32(i,u);return o>2097151?new t(o).times(r).plus(s):o*r+s},e.writeHalf=function(e,t){const l=n.allocUnsafe(4);l.writeFloatBE(t,0);const r=l.readUInt32BE(0);if(0!=(8191&r))return!1;var i=r>>16&32768;const u=r>>23&255,o=8388607&r;if(u>=113&&u<=142)i+=(u-112<<10)+(o>>13);else{if(!(u>=103&&u<113))return!1;if(o&(1<<126-u)-1)return!1;i+=o+8388608>>126-u}return e.writeUInt16BE(i,0),!0},e.keySorter=function(e,n){var t=e[0].byteLength,l=n[0].byteLength;return t>l?1:l>t?-1:e[0].compare(n[0])},e.isNegativeZero=e=>0===e&&1/e<0,e.nextPowerOf2=e=>{let n=0;if(e&&!(e&e-1))return e;for(;0!==e;)e>>=1,n+=1;return 1<<n}}(he);const pe=fe,ye=pe.MT,ge=pe.SIMPLE,me=pe.SYMS;class ve{constructor(e){if("number"!=typeof e)throw new Error("Invalid Simple type: "+typeof e);if(e<0||e>255||(0|e)!==e)throw new Error("value must be a small positive integer: "+e);this.value=e}toString(){return"simple("+this.value+")"}inspect(){return"simple("+this.value+")"}encodeCBOR(e){return e._pushInt(this.value,ye.SIMPLE_FLOAT)}static isSimple(e){return e instanceof ve}static decode(e,n){switch(null==n&&(n=!0),e){case ge.FALSE:return!1;case ge.TRUE:return!0;case ge.NULL:return n?null:me.NULL;case ge.UNDEFINED:return n?void 0:me.UNDEFINED;case-1:if(!n)throw new Error("Invalid BREAK");return me.BREAK;default:return new ve(e)}}}var be=ve;class we{constructor(e,n,t){if(this.tag=e,this.value=n,this.err=t,"number"!=typeof this.tag)throw new Error("Invalid tag type ("+typeof this.tag+")");if(this.tag<0||(0|this.tag)!==this.tag)throw new Error("Tag must be a positive integer: "+this.tag)}toString(){return`${this.tag}(${JSON.stringify(this.value)})`}encodeCBOR(e){return e._pushTag(this.tag),e.pushAny(this.value)}convert(e){var n,t;if("function"!=typeof(t=null!=e?e[this.tag]:void 0)&&"function"!=typeof(t=we["_tag"+this.tag]))return this;try{return t.call(we,this.value)}catch(e){return n=e,this.err=n,this}}}var _e=we;const Ee=self.location?self.location.protocol+"//"+self.location.host:"",Se=self.URL;var xe={URLWithLegacySupport:class{constructor(e="",n=Ee){this.super=new Se(e,n),this.path=this.pathname+this.search,this.auth=this.username&&this.password?this.username+":"+this.password:null,this.query=this.search&&this.search.startsWith("?")?this.search.slice(1):null}get hash(){return this.super.hash}get host(){return this.super.host}get hostname(){return this.super.hostname}get href(){return this.super.href}get origin(){return this.super.origin}get password(){return this.super.password}get pathname(){return this.super.pathname}get port(){return this.super.port}get protocol(){return this.super.protocol}get search(){return this.super.search}get searchParams(){return this.super.searchParams}get username(){return this.super.username}set hash(e){this.super.hash=e}set host(e){this.super.host=e}set hostname(e){this.super.hostname=e}set href(e){this.super.href=e}set origin(e){this.super.origin=e}set password(e){this.super.password=e}set pathname(e){this.super.pathname=e}set port(e){this.super.port=e}set protocol(e){this.super.protocol=e}set search(e){this.super.search=e}set searchParams(e){this.super.searchParams=e}set username(e){this.super.username=e}createObjectURL(e){return this.super.createObjectURL(e)}revokeObjectURL(e){this.super.revokeObjectURL(e)}toJSON(){return this.super.toJSON()}toString(){return this.super.toString()}format(){return this.toString()}},URLSearchParams:self.URLSearchParams,defaultBase:Ee,format:function(e){if("string"==typeof e){return new Se(e).toString()}if(!(e instanceof Se)){const n=e.username&&e.password?`${e.username}:${e.password}@`:"",t=e.auth?e.auth+"@":"",l=e.port?":"+e.port:"",r=e.protocol?e.protocol+"//":"",i=e.host||"",u=e.hostname||"",o=e.search||(e.query?"?"+e.query:""),s=e.hash||"",a=e.pathname||"";return`${r}${n||t}${i||u+l}${e.path||a+o}${s}`}}};const{URLWithLegacySupport:ke,format:Ie}=xe;const{URLWithLegacySupport:Pe,format:Ae,URLSearchParams:Te,defaultBase:Oe}=xe,Me=(e,n={},t={},l)=>{let r,i=n.protocol?n.protocol.replace(":",""):"http";i=(t[i]||l||i)+":";try{r=new ke(e)}catch(e){r={}}const u=Object.assign({},n,{protocol:i||r.protocol,host:n.host||r.host});return new ke(e,Ie(u)).toString()};var Re={URL:Pe,URLSearchParams:Te,format:Ae,relative:Me,defaultBase:Oe};const{Buffer:Ne}=se,Ce=ae,Le=ce.exports.BigNumber,je=function(e,n,t){"use asm";var l=new e.Uint8Array(t),r=n.pushInt,i=n.pushInt32,u=n.pushInt32Neg,o=n.pushInt64,s=n.pushInt64Neg,a=n.pushFloat,c=n.pushFloatSingle,h=n.pushFloatDouble,f=n.pushTrue,d=n.pushFalse,p=n.pushUndefined,y=n.pushNull,g=n.pushInfinity,m=n.pushInfinityNeg,v=n.pushNaN,b=n.pushNaNNeg,w=n.pushArrayStart,_=n.pushArrayStartFixed,E=n.pushArrayStartFixed32,S=n.pushArrayStartFixed64,x=n.pushObjectStart,k=n.pushObjectStartFixed,I=n.pushObjectStartFixed32,P=n.pushObjectStartFixed64,A=n.pushByteString,T=n.pushByteStringStart,O=n.pushUtf8String,M=n.pushUtf8StringStart,R=n.pushSimpleUnassigned,N=n.pushTagStart,C=n.pushTagStart4,L=n.pushTagStart8,j=n.pushTagUnassigned,U=n.pushBreak,D=e.Math.pow,B=0,K=0,F=0;function V(e){e=e|0;B=0;K=e;while((B|0)<(K|0)){F=Xe[l[B]&255](l[B]|0)|0;if((F|0)>0){break}}return F|0}function H(e){e=e|0;if(((B|0)+(e|0)|0)<(K|0)){return 0}return 1}function q(e){e=e|0;return l[e|0]<<8|l[e+1|0]|0}function z(e){e=e|0;return l[e|0]<<24|l[e+1|0]<<16|l[e+2|0]<<8|l[e+3|0]|0}function $(e){e=e|0;r(e|0);B=B+1|0;return 0}function G(e){e=e|0;if(H(1)|0){return 1}r(l[B+1|0]|0);B=B+2|0;return 0}function W(e){e=e|0;if(H(2)|0){return 1}r(q(B+1|0)|0);B=B+3|0;return 0}function J(e){e=e|0;if(H(4)|0){return 1}i(q(B+1|0)|0,q(B+3|0)|0);B=B+5|0;return 0}function X(e){e=e|0;if(H(8)|0){return 1}o(q(B+1|0)|0,q(B+3|0)|0,q(B+5|0)|0,q(B+7|0)|0);B=B+9|0;return 0}function Y(e){e=e|0;r(-1-(e-32|0)|0);B=B+1|0;return 0}function Q(e){e=e|0;if(H(1)|0){return 1}r(-1-(l[B+1|0]|0)|0);B=B+2|0;return 0}function Z(e){e=e|0;var n=0;if(H(2)|0){return 1}n=q(B+1|0)|0;r(-1-(n|0)|0);B=B+3|0;return 0}function ee(e){e=e|0;if(H(4)|0){return 1}u(q(B+1|0)|0,q(B+3|0)|0);B=B+5|0;return 0}function ne(e){e=e|0;if(H(8)|0){return 1}s(q(B+1|0)|0,q(B+3|0)|0,q(B+5|0)|0,q(B+7|0)|0);B=B+9|0;return 0}function te(e){e=e|0;var n=0;var t=0;var l=0;l=e-64|0;if(H(l|0)|0){return 1}n=B+1|0;t=(B+1|0)+(l|0)|0;A(n|0,t|0);B=t|0;return 0}function le(e){e=e|0;var n=0;var t=0;var r=0;if(H(1)|0){return 1}r=l[B+1|0]|0;n=B+2|0;t=(B+2|0)+(r|0)|0;if(H(r+1|0)|0){return 1}A(n|0,t|0);B=t|0;return 0}function re(e){e=e|0;var n=0;var t=0;var l=0;if(H(2)|0){return 1}l=q(B+1|0)|0;n=B+3|0;t=(B+3|0)+(l|0)|0;if(H(l+2|0)|0){return 1}A(n|0,t|0);B=t|0;return 0}function ie(e){e=e|0;var n=0;var t=0;var l=0;if(H(4)|0){return 1}l=z(B+1|0)|0;n=B+5|0;t=(B+5|0)+(l|0)|0;if(H(l+4|0)|0){return 1}A(n|0,t|0);B=t|0;return 0}function ue(e){e=e|0;return 1}function oe(e){e=e|0;T();B=B+1|0;return 0}function se(e){e=e|0;var n=0;var t=0;var l=0;l=e-96|0;if(H(l|0)|0){return 1}n=B+1|0;t=(B+1|0)+(l|0)|0;O(n|0,t|0);B=t|0;return 0}function ae(e){e=e|0;var n=0;var t=0;var r=0;if(H(1)|0){return 1}r=l[B+1|0]|0;n=B+2|0;t=(B+2|0)+(r|0)|0;if(H(r+1|0)|0){return 1}O(n|0,t|0);B=t|0;return 0}function ce(e){e=e|0;var n=0;var t=0;var l=0;if(H(2)|0){return 1}l=q(B+1|0)|0;n=B+3|0;t=(B+3|0)+(l|0)|0;if(H(l+2|0)|0){return 1}O(n|0,t|0);B=t|0;return 0}function he(e){e=e|0;var n=0;var t=0;var l=0;if(H(4)|0){return 1}l=z(B+1|0)|0;n=B+5|0;t=(B+5|0)+(l|0)|0;if(H(l+4|0)|0){return 1}O(n|0,t|0);B=t|0;return 0}function fe(e){e=e|0;return 1}function de(e){e=e|0;M();B=B+1|0;return 0}function pe(e){e=e|0;_(e-128|0);B=B+1|0;return 0}function ye(e){e=e|0;if(H(1)|0){return 1}_(l[B+1|0]|0);B=B+2|0;return 0}function ge(e){e=e|0;if(H(2)|0){return 1}_(q(B+1|0)|0);B=B+3|0;return 0}function me(e){e=e|0;if(H(4)|0){return 1}E(q(B+1|0)|0,q(B+3|0)|0);B=B+5|0;return 0}function ve(e){e=e|0;if(H(8)|0){return 1}S(q(B+1|0)|0,q(B+3|0)|0,q(B+5|0)|0,q(B+7|0)|0);B=B+9|0;return 0}function be(e){e=e|0;w();B=B+1|0;return 0}function we(e){e=e|0;var n=0;n=e-160|0;if(H(n|0)|0){return 1}k(n|0);B=B+1|0;return 0}function _e(e){e=e|0;if(H(1)|0){return 1}k(l[B+1|0]|0);B=B+2|0;return 0}function Ee(e){e=e|0;if(H(2)|0){return 1}k(q(B+1|0)|0);B=B+3|0;return 0}function Se(e){e=e|0;if(H(4)|0){return 1}I(q(B+1|0)|0,q(B+3|0)|0);B=B+5|0;return 0}function xe(e){e=e|0;if(H(8)|0){return 1}P(q(B+1|0)|0,q(B+3|0)|0,q(B+5|0)|0,q(B+7|0)|0);B=B+9|0;return 0}function ke(e){e=e|0;x();B=B+1|0;return 0}function Ie(e){e=e|0;N(e-192|0|0);B=B+1|0;return 0}function Pe(e){e=e|0;N(e|0);B=B+1|0;return 0}function Ae(e){e=e|0;N(e|0);B=B+1|0;return 0}function Te(e){e=e|0;N(e|0);B=B+1|0;return 0}function Oe(e){e=e|0;N(e|0);B=B+1|0;return 0}function Me(e){e=e|0;N(e-192|0|0);B=B+1|0;return 0}function Re(e){e=e|0;N(e|0);B=B+1|0;return 0}function Ne(e){e=e|0;N(e|0);B=B+1|0;return 0}function Ce(e){e=e|0;N(e|0);B=B+1|0;return 0}function Le(e){e=e|0;if(H(1)|0){return 1}N(l[B+1|0]|0);B=B+2|0;return 0}function je(e){e=e|0;if(H(2)|0){return 1}N(q(B+1|0)|0);B=B+3|0;return 0}function Ue(e){e=e|0;if(H(4)|0){return 1}C(q(B+1|0)|0,q(B+3|0)|0);B=B+5|0;return 0}function De(e){e=e|0;if(H(8)|0){return 1}L(q(B+1|0)|0,q(B+3|0)|0,q(B+5|0)|0,q(B+7|0)|0);B=B+9|0;return 0}function Be(e){e=e|0;R((e|0)-224|0);B=B+1|0;return 0}function Ke(e){e=e|0;d();B=B+1|0;return 0}function Fe(e){e=e|0;f();B=B+1|0;return 0}function Ve(e){e=e|0;y();B=B+1|0;return 0}function He(e){e=e|0;p();B=B+1|0;return 0}function qe(e){e=e|0;if(H(1)|0){return 1}R(l[B+1|0]|0);B=B+2|0;return 0}function ze(e){e=e|0;var n=0;var t=0;var r=1.0;var i=0.0;var u=0.0;var o=0.0;if(H(2)|0){return 1}n=l[B+1|0]|0;t=l[B+2|0]|0;if((n|0)&0x80){r=-1.0}i=+(((n|0)&0x7C)>>2);u=+(((n|0)&0x03)<<8|t);if(+i==0.0){a(+(+r*+5.9604644775390625e-8*+u))}else if(+i==31.0){if(+r==1.0){if(+u>0.0){v()}else{g()}}else{if(+u>0.0){b()}else{m()}}}else{a(+(+r*D(+2,+(+i-25.0))*+(1024.0+u)))}B=B+3|0;return 0}function $e(e){e=e|0;if(H(4)|0){return 1}c(l[B+1|0]|0,l[B+2|0]|0,l[B+3|0]|0,l[B+4|0]|0);B=B+5|0;return 0}function Ge(e){e=e|0;if(H(8)|0){return 1}h(l[B+1|0]|0,l[B+2|0]|0,l[B+3|0]|0,l[B+4|0]|0,l[B+5|0]|0,l[B+6|0]|0,l[B+7|0]|0,l[B+8|0]|0);B=B+9|0;return 0}function We(e){e=e|0;return 1}function Je(e){e=e|0;U();B=B+1|0;return 0}var Xe=[$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,$,G,W,J,X,We,We,We,We,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Q,Z,ee,ne,We,We,We,We,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,le,re,ie,ue,We,We,We,oe,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,se,ae,ce,he,fe,We,We,We,de,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,pe,ye,ge,me,ve,We,We,We,be,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,we,_e,Ee,Se,xe,We,We,We,ke,Ie,Ie,Ie,Ie,Ie,Ie,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Me,Le,je,Ue,De,We,We,We,We,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Be,Ke,Fe,Ve,He,qe,ze,$e,Ge,We,We,We,Je];return{parse:V}},Ue=he,De=fe,Be=be,Ke=_e,{URL:Fe}=Re;class Ve{constructor(e){!(e=e||{}).size||e.size<65536?e.size=65536:e.size=Ue.nextPowerOf2(e.size),this._heap=new ArrayBuffer(e.size),this._heap8=new Uint8Array(this._heap),this._buffer=Ne.from(this._heap),this._reset(),this._knownTags=Object.assign({0:e=>new Date(e),1:e=>new Date(1e3*e),2:e=>Ue.arrayBufferToBignumber(e),3:e=>De.NEG_ONE.minus(Ue.arrayBufferToBignumber(e)),4:e=>De.TEN.pow(e[0]).times(e[1]),5:e=>De.TWO.pow(e[0]).times(e[1]),32:e=>new Fe(e),35:e=>new RegExp(e)},e.tags),this.parser=je(n,{log:console.log.bind(console),pushInt:this.pushInt.bind(this),pushInt32:this.pushInt32.bind(this),pushInt32Neg:this.pushInt32Neg.bind(this),pushInt64:this.pushInt64.bind(this),pushInt64Neg:this.pushInt64Neg.bind(this),pushFloat:this.pushFloat.bind(this),pushFloatSingle:this.pushFloatSingle.bind(this),pushFloatDouble:this.pushFloatDouble.bind(this),pushTrue:this.pushTrue.bind(this),pushFalse:this.pushFalse.bind(this),pushUndefined:this.pushUndefined.bind(this),pushNull:this.pushNull.bind(this),pushInfinity:this.pushInfinity.bind(this),pushInfinityNeg:this.pushInfinityNeg.bind(this),pushNaN:this.pushNaN.bind(this),pushNaNNeg:this.pushNaNNeg.bind(this),pushArrayStart:this.pushArrayStart.bind(this),pushArrayStartFixed:this.pushArrayStartFixed.bind(this),pushArrayStartFixed32:this.pushArrayStartFixed32.bind(this),pushArrayStartFixed64:this.pushArrayStartFixed64.bind(this),pushObjectStart:this.pushObjectStart.bind(this),pushObjectStartFixed:this.pushObjectStartFixed.bind(this),pushObjectStartFixed32:this.pushObjectStartFixed32.bind(this),pushObjectStartFixed64:this.pushObjectStartFixed64.bind(this),pushByteString:this.pushByteString.bind(this),pushByteStringStart:this.pushByteStringStart.bind(this),pushUtf8String:this.pushUtf8String.bind(this),pushUtf8StringStart:this.pushUtf8StringStart.bind(this),pushSimpleUnassigned:this.pushSimpleUnassigned.bind(this),pushTagUnassigned:this.pushTagUnassigned.bind(this),pushTagStart:this.pushTagStart.bind(this),pushTagStart4:this.pushTagStart4.bind(this),pushTagStart8:this.pushTagStart8.bind(this),pushBreak:this.pushBreak.bind(this)},this._heap)}get _depth(){return this._parents.length}get _currentParent(){return this._parents[this._depth-1]}get _ref(){return this._currentParent.ref}_closeParent(){var e=this._parents.pop();if(e.length>0)throw new Error(`Missing ${e.length} elements`);switch(e.type){case De.PARENT.TAG:this._push(this.createTag(e.ref[0],e.ref[1]));break;case De.PARENT.BYTE_STRING:this._push(this.createByteString(e.ref,e.length));break;case De.PARENT.UTF8_STRING:this._push(this.createUtf8String(e.ref,e.length));break;case De.PARENT.MAP:if(e.values%2>0)throw new Error("Odd number of elements in the map");this._push(this.createMap(e.ref,e.length));break;case De.PARENT.OBJECT:if(e.values%2>0)throw new Error("Odd number of elements in the map");this._push(this.createObject(e.ref,e.length));break;case De.PARENT.ARRAY:this._push(this.createArray(e.ref,e.length))}this._currentParent&&this._currentParent.type===De.PARENT.TAG&&this._dec()}_dec(){const e=this._currentParent;e.length<0||(e.length--,0===e.length&&this._closeParent())}_push(e,n){const t=this._currentParent;switch(t.values++,t.type){case De.PARENT.ARRAY:case De.PARENT.BYTE_STRING:case De.PARENT.UTF8_STRING:t.length>-1?this._ref[this._ref.length-t.length]=e:this._ref.push(e),this._dec();break;case De.PARENT.OBJECT:null!=t.tmpKey?(this._ref[t.tmpKey]=e,t.tmpKey=null,this._dec()):(t.tmpKey=e,"string"!=typeof t.tmpKey&&(t.type=De.PARENT.MAP,t.ref=Ue.buildMap(t.ref)));break;case De.PARENT.MAP:null!=t.tmpKey?(this._ref.set(t.tmpKey,e),t.tmpKey=null,this._dec()):t.tmpKey=e;break;case De.PARENT.TAG:this._ref.push(e),n||this._dec();break;default:throw new Error("Unknown parent type")}}_createParent(e,n,t){this._parents[this._depth]={type:n,length:t,ref:e,values:0,tmpKey:null}}_reset(){this._res=[],this._parents=[{type:De.PARENT.ARRAY,length:-1,ref:this._res,values:0,tmpKey:null}]}createTag(e,n){const t=this._knownTags[e];return t?t(n):new Ke(e,n)}createMap(e,n){return e}createObject(e,n){return e}createArray(e,n){return e}createByteString(e,n){return Ne.concat(e)}createByteStringFromHeap(e,n){return e===n?Ne.alloc(0):Ne.from(this._heap.slice(e,n))}createInt(e){return e}createInt32(e,n){return Ue.buildInt32(e,n)}createInt64(e,n,t,l){return Ue.buildInt64(e,n,t,l)}createFloat(e){return e}createFloatSingle(e,n,t,l){return Ce.read([e,n,t,l],0,!1,23,4)}createFloatDouble(e,n,t,l,r,i,u,o){return Ce.read([e,n,t,l,r,i,u,o],0,!1,52,8)}createInt32Neg(e,n){return-1-Ue.buildInt32(e,n)}createInt64Neg(e,n,t,l){const r=Ue.buildInt32(e,n),i=Ue.buildInt32(t,l);return r>De.MAX_SAFE_HIGH?De.NEG_ONE.minus(new Le(r).times(De.SHIFT32).plus(i)):-1-(r*De.SHIFT32+i)}createTrue(){return!0}createFalse(){return!1}createNull(){return null}createUndefined(){}createInfinity(){return 1/0}createInfinityNeg(){return-1/0}createNaN(){return NaN}createNaNNeg(){return NaN}createUtf8String(e,n){return e.join("")}createUtf8StringFromHeap(e,n){return e===n?"":this._buffer.toString("utf8",e,n)}createSimpleUnassigned(e){return new Be(e)}pushInt(e){this._push(this.createInt(e))}pushInt32(e,n){this._push(this.createInt32(e,n))}pushInt64(e,n,t,l){this._push(this.createInt64(e,n,t,l))}pushFloat(e){this._push(this.createFloat(e))}pushFloatSingle(e,n,t,l){this._push(this.createFloatSingle(e,n,t,l))}pushFloatDouble(e,n,t,l,r,i,u,o){this._push(this.createFloatDouble(e,n,t,l,r,i,u,o))}pushInt32Neg(e,n){this._push(this.createInt32Neg(e,n))}pushInt64Neg(e,n,t,l){this._push(this.createInt64Neg(e,n,t,l))}pushTrue(){this._push(this.createTrue())}pushFalse(){this._push(this.createFalse())}pushNull(){this._push(this.createNull())}pushUndefined(){this._push(this.createUndefined())}pushInfinity(){this._push(this.createInfinity())}pushInfinityNeg(){this._push(this.createInfinityNeg())}pushNaN(){this._push(this.createNaN())}pushNaNNeg(){this._push(this.createNaNNeg())}pushArrayStart(){this._createParent([],De.PARENT.ARRAY,-1)}pushArrayStartFixed(e){this._createArrayStartFixed(e)}pushArrayStartFixed32(e,n){const t=Ue.buildInt32(e,n);this._createArrayStartFixed(t)}pushArrayStartFixed64(e,n,t,l){const r=Ue.buildInt64(e,n,t,l);this._createArrayStartFixed(r)}pushObjectStart(){this._createObjectStartFixed(-1)}pushObjectStartFixed(e){this._createObjectStartFixed(e)}pushObjectStartFixed32(e,n){const t=Ue.buildInt32(e,n);this._createObjectStartFixed(t)}pushObjectStartFixed64(e,n,t,l){const r=Ue.buildInt64(e,n,t,l);this._createObjectStartFixed(r)}pushByteStringStart(){this._parents[this._depth]={type:De.PARENT.BYTE_STRING,length:-1,ref:[],values:0,tmpKey:null}}pushByteString(e,n){this._push(this.createByteStringFromHeap(e,n))}pushUtf8StringStart(){this._parents[this._depth]={type:De.PARENT.UTF8_STRING,length:-1,ref:[],values:0,tmpKey:null}}pushUtf8String(e,n){this._push(this.createUtf8StringFromHeap(e,n))}pushSimpleUnassigned(e){this._push(this.createSimpleUnassigned(e))}pushTagStart(e){this._parents[this._depth]={type:De.PARENT.TAG,length:1,ref:[e]}}pushTagStart4(e,n){this.pushTagStart(Ue.buildInt32(e,n))}pushTagStart8(e,n,t,l){this.pushTagStart(Ue.buildInt64(e,n,t,l))}pushTagUnassigned(e){this._push(this.createTag(e))}pushBreak(){if(this._currentParent.length>-1)throw new Error("Unexpected break");this._closeParent()}_createObjectStartFixed(e){0!==e?this._createParent({},De.PARENT.OBJECT,e):this._push(this.createObject({}))}_createArrayStartFixed(e){0!==e?this._createParent(new Array(e),De.PARENT.ARRAY,e):this._push(this.createArray([]))}_decode(e){if(0===e.byteLength)throw new Error("Input too short");this._reset(),this._heap8.set(e);const n=this.parser.parse(e.byteLength);if(this._depth>1){for(;0===this._currentParent.length;)this._closeParent();if(this._depth>1)throw new Error("Undeterminated nesting")}if(n>0)throw new Error("Failed to parse");if(0===this._res.length)throw new Error("No valid result")}decodeFirst(e){return this._decode(e),this._res[0]}decodeAll(e){return this._decode(e),this._res}static decode(e,n){"string"==typeof e&&(e=Ne.from(e,n||"hex"));return new Ve({size:e.length}).decodeFirst(e)}static decodeAll(e,n){"string"==typeof e&&(e=Ne.from(e,n||"hex"));return new Ve({size:e.length}).decodeAll(e)}}Ve.decodeFirst=Ve.decode;var He=Ve;const{Buffer:qe}=se,ze=He,$e=he;class Ge extends ze{createTag(e,n){return`${e}(${n})`}createInt(e){return super.createInt(e).toString()}createInt32(e,n){return super.createInt32(e,n).toString()}createInt64(e,n,t,l){return super.createInt64(e,n,t,l).toString()}createInt32Neg(e,n){return super.createInt32Neg(e,n).toString()}createInt64Neg(e,n,t,l){return super.createInt64Neg(e,n,t,l).toString()}createTrue(){return"true"}createFalse(){return"false"}createFloat(e){const n=super.createFloat(e);return $e.isNegativeZero(e)?"-0_1":`${n}_1`}createFloatSingle(e,n,t,l){return`${super.createFloatSingle(e,n,t,l)}_2`}createFloatDouble(e,n,t,l,r,i,u,o){return`${super.createFloatDouble(e,n,t,l,r,i,u,o)}_3`}createByteString(e,n){const t=e.join(", ");return-1===n?`(_ ${t})`:`h'${t}`}createByteStringFromHeap(e,n){return`h'${qe.from(super.createByteStringFromHeap(e,n)).toString("hex")}'`}createInfinity(){return"Infinity_1"}createInfinityNeg(){return"-Infinity_1"}createNaN(){return"NaN_1"}createNaNNeg(){return"-NaN_1"}createNull(){return"null"}createUndefined(){return"undefined"}createSimpleUnassigned(e){return`simple(${e})`}createArray(e,n){const t=super.createArray(e,n);return-1===n?`[_ ${t.join(", ")}]`:`[${t.join(", ")}]`}createMap(e,n){const t=super.createMap(e),l=Array.from(t.keys()).reduce(Je(t),"");return-1===n?`{_ ${l}}`:`{${l}}`}createObject(e,n){const t=super.createObject(e),l=Object.keys(t).reduce(Je(t),"");return-1===n?`{_ ${l}}`:`{${l}}`}createUtf8String(e,n){const t=e.join(", ");return-1===n?`(_ ${t})`:`"${t}"`}createUtf8StringFromHeap(e,n){return`"${qe.from(super.createUtf8StringFromHeap(e,n)).toString("utf8")}"`}static diagnose(e,n){"string"==typeof e&&(e=qe.from(e,n||"hex"));return(new Ge).decodeFirst(e)}}var We=Ge;function Je(e){return(n,t)=>n?`${n}, ${t}: ${e[t]}`:`${t}: ${e[t]}`}const{Buffer:Xe}=se,{URL:Ye}=Re,Qe=ce.exports.BigNumber,Ze=he,en=fe,nn=en.MT,tn=en.NUMBYTES,ln=en.SHIFT32,rn=en.SYMS,un=en.TAG,on=en.MT.SIMPLE_FLOAT<<5|en.NUMBYTES.TWO,sn=en.MT.SIMPLE_FLOAT<<5|en.NUMBYTES.FOUR,an=en.MT.SIMPLE_FLOAT<<5|en.NUMBYTES.EIGHT,cn=en.MT.SIMPLE_FLOAT<<5|en.SIMPLE.TRUE,hn=en.MT.SIMPLE_FLOAT<<5|en.SIMPLE.FALSE,fn=en.MT.SIMPLE_FLOAT<<5|en.SIMPLE.UNDEFINED,dn=en.MT.SIMPLE_FLOAT<<5|en.SIMPLE.NULL,pn=new Qe("0x20000000000000"),yn=Xe.from("f97e00","hex"),gn=Xe.from("f9fc00","hex"),mn=Xe.from("f97c00","hex");class vn{constructor(e){e=e||{},this.streaming="function"==typeof e.stream,this.onData=e.stream,this.semanticTypes=[[Ye,this._pushUrl],[Qe,this._pushBigNumber]];const n=e.genTypes||[],t=n.length;for(let e=0;e<t;e++)this.addSemanticType(n[e][0],n[e][1]);this._reset()}addSemanticType(e,n){const t=this.semanticTypes.length;for(let l=0;l<t;l++){if(this.semanticTypes[l][0]===e){const e=this.semanticTypes[l][1];return this.semanticTypes[l][1]=n,e}}return this.semanticTypes.push([e,n]),null}push(e){return!e||(this.result[this.offset]=e,this.resultMethod[this.offset]=0,this.resultLength[this.offset]=e.length,this.offset++,this.streaming&&this.onData(this.finalize()),!0)}pushWrite(e,n,t){return this.result[this.offset]=e,this.resultMethod[this.offset]=n,this.resultLength[this.offset]=t,this.offset++,this.streaming&&this.onData(this.finalize()),!0}_pushUInt8(e){return this.pushWrite(e,1,1)}_pushUInt16BE(e){return this.pushWrite(e,2,2)}_pushUInt32BE(e){return this.pushWrite(e,3,4)}_pushDoubleBE(e){return this.pushWrite(e,4,8)}_pushNaN(){return this.push(yn)}_pushInfinity(e){const n=e<0?gn:mn;return this.push(n)}_pushFloat(e){const n=Xe.allocUnsafe(2);if(Ze.writeHalf(n,e)&&Ze.parseHalf(n)===e)return this._pushUInt8(on)&&this.push(n);const t=Xe.allocUnsafe(4);return t.writeFloatBE(e,0),t.readFloatBE(0)===e?this._pushUInt8(sn)&&this.push(t):this._pushUInt8(an)&&this._pushDoubleBE(e)}_pushInt(e,n,t){const l=n<<5;return e<24?this._pushUInt8(l|e):e<=255?this._pushUInt8(l|tn.ONE)&&this._pushUInt8(e):e<=65535?this._pushUInt8(l|tn.TWO)&&this._pushUInt16BE(e):e<=4294967295?this._pushUInt8(l|tn.FOUR)&&this._pushUInt32BE(e):e<=Number.MAX_SAFE_INTEGER?this._pushUInt8(l|tn.EIGHT)&&this._pushUInt32BE(Math.floor(e/ln))&&this._pushUInt32BE(e%ln):n===nn.NEG_INT?this._pushFloat(t):this._pushFloat(e)}_pushIntNum(e){return e<0?this._pushInt(-e-1,nn.NEG_INT,e):this._pushInt(e,nn.POS_INT)}_pushNumber(e){switch(!1){case e==e:return this._pushNaN(e);case isFinite(e):return this._pushInfinity(e);case e%1!=0:return this._pushIntNum(e);default:return this._pushFloat(e)}}_pushString(e){const n=Xe.byteLength(e,"utf8");return this._pushInt(n,nn.UTF8_STRING)&&this.pushWrite(e,5,n)}_pushBoolean(e){return this._pushUInt8(e?cn:hn)}_pushUndefined(e){return this._pushUInt8(fn)}_pushArray(e,n){const t=n.length;if(!e._pushInt(t,nn.ARRAY))return!1;for(let l=0;l<t;l++)if(!e.pushAny(n[l]))return!1;return!0}_pushTag(e){return this._pushInt(e,nn.TAG)}_pushDate(e,n){return e._pushTag(un.DATE_EPOCH)&&e.pushAny(Math.round(n/1e3))}_pushBuffer(e,n){return e._pushInt(n.length,nn.BYTE_STRING)&&e.push(n)}_pushNoFilter(e,n){return e._pushBuffer(e,n.slice())}_pushRegexp(e,n){return e._pushTag(un.REGEXP)&&e.pushAny(n.source)}_pushSet(e,n){if(!e._pushInt(n.size,nn.ARRAY))return!1;for(const t of n)if(!e.pushAny(t))return!1;return!0}_pushUrl(e,n){return e._pushTag(un.URI)&&e.pushAny(n.format())}_pushBigint(e){let n=un.POS_BIGINT;e.isNegative()&&(e=e.negated().minus(1),n=un.NEG_BIGINT);let t=e.toString(16);t.length%2&&(t="0"+t);const l=Xe.from(t,"hex");return this._pushTag(n)&&this._pushBuffer(this,l)}_pushBigNumber(e,n){if(n.isNaN())return e._pushNaN();if(!n.isFinite())return e._pushInfinity(n.isNegative()?-1/0:1/0);if(n.isInteger())return e._pushBigint(n);if(!e._pushTag(un.DECIMAL_FRAC)||!e._pushInt(2,nn.ARRAY))return!1;const t=n.decimalPlaces(),l=n.multipliedBy(new Qe(10).pow(t));return!!e._pushIntNum(-t)&&(l.abs().isLessThan(pn)?e._pushIntNum(l.toNumber()):e._pushBigint(l))}_pushMap(e,n){return!!e._pushInt(n.size,nn.MAP)&&this._pushRawMap(n.size,Array.from(n))}_pushObject(e){if(!e)return this._pushUInt8(dn);for(var n=this.semanticTypes.length,t=0;t<n;t++)if(e instanceof this.semanticTypes[t][0])return this.semanticTypes[t][1].call(e,this,e);var l=e.encodeCBOR;if("function"==typeof l)return l.call(e,this);var r=Object.keys(e),i=r.length;return!!this._pushInt(i,nn.MAP)&&this._pushRawMap(i,r.map((n=>[n,e[n]])))}_pushRawMap(e,n){n=n.map((function(e){return e[0]=vn.encode(e[0]),e})).sort(Ze.keySorter);for(var t=0;t<e;t++){if(!this.push(n[t][0]))return!1;if(!this.pushAny(n[t][1]))return!1}return!0}write(e){return this.pushAny(e)}pushAny(e){var n=function(e){return{}.toString.call(e).slice(8,-1)}(e);switch(n){case"Number":return this._pushNumber(e);case"String":return this._pushString(e);case"Boolean":return this._pushBoolean(e);case"Object":return this._pushObject(e);case"Array":return this._pushArray(this,e);case"Uint8Array":return this._pushBuffer(this,Xe.isBuffer(e)?e:Xe.from(e));case"Null":return this._pushUInt8(dn);case"Undefined":return this._pushUndefined(e);case"Map":return this._pushMap(this,e);case"Set":return this._pushSet(this,e);case"URL":return this._pushUrl(this,e);case"BigNumber":return this._pushBigNumber(this,e);case"Date":return this._pushDate(this,e);case"RegExp":return this._pushRegexp(this,e);case"Symbol":switch(e){case rn.NULL:return this._pushObject(null);case rn.UNDEFINED:return this._pushUndefined(void 0);default:throw new Error("Unknown symbol: "+e.toString())}default:throw new Error("Unknown type: "+typeof e+", "+(e?e.toString():""))}}finalize(){if(0===this.offset)return null;for(var e=this.result,n=this.resultLength,t=this.resultMethod,l=this.offset,r=0,i=0;i<l;i++)r+=n[i];var u=Xe.allocUnsafe(r),o=0,s=0;for(i=0;i<l;i++){switch(s=n[i],t[i]){case 0:e[i].copy(u,o);break;case 1:u.writeUInt8(e[i],o,!0);break;case 2:u.writeUInt16BE(e[i],o,!0);break;case 3:u.writeUInt32BE(e[i],o,!0);break;case 4:u.writeDoubleBE(e[i],o,!0);break;case 5:u.write(e[i],o,s,"utf8");break;default:throw new Error("unkown method")}o+=s}var a=u;return this._reset(),a}_reset(){this.result=[],this.resultMethod=[],this.resultLength=[],this.offset=0}static encode(e){const n=new vn;if(!n.pushAny(e))throw new Error("Failed to encode input");return n.finalize()}}var bn=vn;!function(e){e.Diagnose=We,e.Decoder=He,e.Encoder=bn,e.Simple=be,e.Tagged=_e,e.decodeAll=e.Decoder.decodeAll,e.decodeFirst=e.Decoder.decodeFirst,e.diagnose=e.Diagnose.diagnose,e.encode=e.Encoder.encode,e.decode=e.Decoder.decode,e.leveldb={decode:e.Decoder.decodeAll,encode:e.Encoder.encode,buffer:!0,name:"cbor"}}(u);var wn={};Object.defineProperty(wn,"__esModule",{value:!0}),wn.stringToUint8Array=void 0,wn.stringToUint8Array=function(e){if("string"==typeof e)return(new TextEncoder).encode(e);if(!(e instanceof Uint8Array))throw new TypeError('"data" be a string or Uint8Array.');return e};
/*!
	 * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.
	 */
var _n=n&&n.__createBinding||(Object.create?function(e,n,t,l){void 0===l&&(l=t);var r=Object.getOwnPropertyDescriptor(n,t);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,l,r)}:function(e,n,t,l){void 0===l&&(l=t),e[l]=n[t]}),En=n&&n.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),Sn=n&&n.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&_n(n,e,t);return En(n,e),n};Object.defineProperty(i,"__esModule",{value:!0}),i.Hashlink=void 0;const xn=Sn(u),kn=wn;i.Hashlink=class{registeredCodecs;constructor(){this.registeredCodecs={}}async encode({data:e,urls:n,codecs:t=["mh-sha2-256","mb-base58-btc"],meta:l={}}){if(void 0===e&&void 0===n)throw new Error("Either `data` or `urls` must be provided.");if(void 0===t)throw new Error("The hashlink creation `codecs` must be provided.");void 0!==n&&(Array.isArray(n)||(n=[n]),n.forEach((e=>{if("string"!=typeof e)throw new Error(`URL "${e}" must be a string.`)})),l={...l,url:n});const r=await t.reduce((async(e,n)=>{const t=this.registeredCodecs[n];if(void 0===t)throw new Error(`Unknown cryptographic hash encoder "${n}".`);return t.encode(await e)}),e),i=new Map;l.url&&i.set(15,l.url),l["content-type"]&&i.set(14,l["content-type"]),l.experimental&&i.set(13,l.experimental),l.transform&&i.set(12,l.transform);const u=new TextDecoder;let o="hl:"+u.decode(r);if(i.size>0){const e=t[t.length-1],n=new Uint8Array(xn.encode(i));o+=":"+u.decode(await this.registeredCodecs[e].encode(n))}return o}async decode({hashlink:e}){const n=e.split(":"),t={hashName:"unknown",hashValue:null,meta:{}};if(n.length<2)throw new Error(`Hashlink "${e}" is invalid; it must contain at least one colon.`);if(n.length>3)throw new Error(`Hashlink "${e}" is invalid; it contains more than two colons.`);const l=(0,kn.stringToUint8Array)(n[1]),r=this._findDecoder(l),i=r.decode(l),u=this._findDecoder(i);if(t.hashName=u.name,t.hashValue=u.decode(i),3===n.length){const e=(0,kn.stringToUint8Array)(n[2]),l=r.decode(e),i=xn.decode(l);i.has(15)&&(t.meta.url=i.get(15)),i.has(14)&&(t.meta["content-type"]=i.get(14)),i.has(13)&&(t.meta.experimental=i.get(13)),i.has(12)&&(t.meta.transform=i.get(12))}return t}async verify({data:e,hashlink:n}){const t=n.split(":");if(t.length>3)throw new Error(`Hashlink "${n}" is invalid; it contains more than two colons.`);const l=(0,kn.stringToUint8Array)(t[1]),r=this._findDecoder(l),i=r.decode(l),u=this._findDecoder(i),o=[];if(3===t.length){const e=(0,kn.stringToUint8Array)(t[2]),n=r.decode(e),l=xn.decode(n);l.has(12)&&o.push(...l.get(12))}o.push(u.algorithm,r.algorithm);const s=(await this.encode({data:e,codecs:o})).split(":");return t[1]===s[1]}use(e){this.registeredCodecs[e.algorithm]=e}_findDecoder(e){const n=Object.values(this.registeredCodecs).find((n=>n.identifier.every(((n,t)=>n===e[t]))));if(!n)throw new Error("Could not determine decoder for: "+e);return n}};var In={},Pn={},An={};Object.defineProperty(An,"__esModule",{value:!0}),An.decode=An.encode=void 0;const Tn={};An.encode=function(e,n,t){if(!(e instanceof Uint8Array))throw new TypeError('"input" must be a Uint8Array.');if("string"!=typeof n)throw new TypeError('"alphabet" must be a string.');if(void 0!==t&&"number"!=typeof t)throw new TypeError('"maxline" must be a number.');if(0===e.length)return"";let l="",r=0;const i=n.length,u=n.charAt(0),o=[0];for(r=0;r<e.length;++r){let n=e[r];for(let e=0;e<o.length;++e)n+=o[e]<<8,o[e]=n%i,n=n/i|0;for(;n>0;)o.push(n%i),n=n/i|0}for(r=0;0===e[r]&&r<e.length-1;++r)l+=u;for(r=o.length-1;r>=0;--r)l+=n[o[r]];if(t){const e=new RegExp(".{1,"+t+"}","g");l=l.match(e).join("\r\n")}return l},An.decode=function(e,n){if("string"!=typeof e)throw new TypeError('"input" must be a string.');if("string"!=typeof n)throw new TypeError('"alphabet" must be a string.');if(0===e.length)return new Uint8Array;let t=Tn[n];if(!t){t=Tn[n]=[];for(let e=0;e<n.length;++e)t[n.charCodeAt(e)]=e}e=e.replace(/\s/g,"");const l=n.length,r=n.charAt(0),i=[0];for(let n=0;n<e.length;n++){const r=t[e.charCodeAt(n)];if(void 0===r)return;let u=r;for(let e=0;e<i.length;++e)u+=i[e]*l,i[e]=255&u,u>>=8;for(;u>0;)i.push(255&u),u>>=8}for(let n=0;e[n]===r&&n<e.length-1;++n)i.push(0);return new Uint8Array(i.reverse())},
/*!
	 * Copyright (c) 2019-2020 Digital Bazaar, Inc. All rights reserved.
	 */
Object.defineProperty(Pn,"__esModule",{value:!0}),Pn.decode=Pn.encode=void 0;const On=An;Pn.encode=function(e,n){return(0,On.encode)(e,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",n)},Pn.decode=function(e){return(0,On.decode)(e,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")};function Mn(e){return(4294967296+e).toString(16).substring(1)}var Rn={normalizeInput:function(e){let n;if(e instanceof Uint8Array)n=e;else{if("string"!=typeof e)throw new Error("Input must be an string, Buffer or Uint8Array");n=(new TextEncoder).encode(e)}return n},toHex:function(e){return Array.prototype.map.call(e,(function(e){return(e<16?"0":"")+e.toString(16)})).join("")},debugPrint:function(e,n,t){let l="\n"+e+" = ";for(let r=0;r<n.length;r+=2){if(32===t)l+=Mn(n[r]).toUpperCase(),l+=" ",l+=Mn(n[r+1]).toUpperCase();else{if(64!==t)throw new Error("Invalid size "+t);l+=Mn(n[r+1]).toUpperCase(),l+=Mn(n[r]).toUpperCase()}r%6==4?l+="\n"+new Array(e.length+4).join(" "):r<n.length-2&&(l+=" ")}console.log(l)},testSpeed:function(e,n,t){let l=(new Date).getTime();const r=new Uint8Array(n);for(let e=0;e<n;e++)r[e]=e%256;const i=(new Date).getTime();console.log("Generated random input in "+(i-l)+"ms"),l=i;for(let i=0;i<t;i++){const t=e(r),i=(new Date).getTime(),u=i-l;l=i,console.log("Hashed in "+u+"ms: "+t.substring(0,20)+"..."),console.log(Math.round(n/(1<<20)/(u/1e3)*100)/100+" MB PER SECOND")}}};const Nn=Rn;function Cn(e,n,t){const l=e[n]+e[t];let r=e[n+1]+e[t+1];l>=4294967296&&r++,e[n]=l,e[n+1]=r}function Ln(e,n,t,l){let r=e[n]+t;t<0&&(r+=4294967296);let i=e[n+1]+l;r>=4294967296&&i++,e[n]=r,e[n+1]=i}function jn(e,n){return e[n]^e[n+1]<<8^e[n+2]<<16^e[n+3]<<24}function Un(e,n,t,l,r,i){const u=Fn[r],o=Fn[r+1],s=Fn[i],a=Fn[i+1];Cn(Kn,e,n),Ln(Kn,e,u,o);let c=Kn[l]^Kn[e],h=Kn[l+1]^Kn[e+1];Kn[l]=h,Kn[l+1]=c,Cn(Kn,t,l),c=Kn[n]^Kn[t],h=Kn[n+1]^Kn[t+1],Kn[n]=c>>>24^h<<8,Kn[n+1]=h>>>24^c<<8,Cn(Kn,e,n),Ln(Kn,e,s,a),c=Kn[l]^Kn[e],h=Kn[l+1]^Kn[e+1],Kn[l]=c>>>16^h<<16,Kn[l+1]=h>>>16^c<<16,Cn(Kn,t,l),c=Kn[n]^Kn[t],h=Kn[n+1]^Kn[t+1],Kn[n]=h>>>31^c<<1,Kn[n+1]=c>>>31^h<<1}const Dn=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),Bn=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map((function(e){return 2*e}))),Kn=new Uint32Array(32),Fn=new Uint32Array(32);function Vn(e,n){let t=0;for(t=0;t<16;t++)Kn[t]=e.h[t],Kn[t+16]=Dn[t];for(Kn[24]=Kn[24]^e.t,Kn[25]=Kn[25]^e.t/4294967296,n&&(Kn[28]=~Kn[28],Kn[29]=~Kn[29]),t=0;t<32;t++)Fn[t]=jn(e.b,4*t);for(t=0;t<12;t++)Un(0,8,16,24,Bn[16*t+0],Bn[16*t+1]),Un(2,10,18,26,Bn[16*t+2],Bn[16*t+3]),Un(4,12,20,28,Bn[16*t+4],Bn[16*t+5]),Un(6,14,22,30,Bn[16*t+6],Bn[16*t+7]),Un(0,10,20,30,Bn[16*t+8],Bn[16*t+9]),Un(2,12,22,24,Bn[16*t+10],Bn[16*t+11]),Un(4,14,16,26,Bn[16*t+12],Bn[16*t+13]),Un(6,8,18,28,Bn[16*t+14],Bn[16*t+15]);for(t=0;t<16;t++)e.h[t]=e.h[t]^Kn[t]^Kn[t+16]}const Hn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function qn(e,n,t,l){if(0===e||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(n&&n.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(t&&16!==t.length)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(l&&16!==l.length)throw new Error("Illegal personal, expected Uint8Array with length is 16");const r={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};Hn.fill(0),Hn[0]=e,n&&(Hn[1]=n.length),Hn[2]=1,Hn[3]=1,t&&Hn.set(t,32),l&&Hn.set(l,48);for(let e=0;e<16;e++)r.h[e]=Dn[e]^jn(Hn,4*e);return n&&(zn(r,n),r.c=128),r}function zn(e,n){for(let t=0;t<n.length;t++)128===e.c&&(e.t+=e.c,Vn(e,!1),e.c=0),e.b[e.c++]=n[t]}function $n(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;Vn(e,!0);const n=new Uint8Array(e.outlen);for(let t=0;t<e.outlen;t++)n[t]=e.h[t>>2]>>8*(3&t);return n}function Gn(e,n,t,l,r){t=t||64,e=Nn.normalizeInput(e),l&&(l=Nn.normalizeInput(l)),r&&(r=Nn.normalizeInput(r));const i=qn(t,n,l,r);return zn(i,e),$n(i)}var Wn={blake2b:Gn,blake2bHex:function(e,n,t,l,r){const i=Gn(e,n,t,l,r);return Nn.toHex(i)},blake2bInit:qn,blake2bUpdate:zn,blake2bFinal:$n};const Jn=Rn;function Xn(e,n){return e[n]^e[n+1]<<8^e[n+2]<<16^e[n+3]<<24}function Yn(e,n,t,l,r,i){nt[e]=nt[e]+nt[n]+r,nt[l]=Qn(nt[l]^nt[e],16),nt[t]=nt[t]+nt[l],nt[n]=Qn(nt[n]^nt[t],12),nt[e]=nt[e]+nt[n]+i,nt[l]=Qn(nt[l]^nt[e],8),nt[t]=nt[t]+nt[l],nt[n]=Qn(nt[n]^nt[t],7)}function Qn(e,n){return e>>>n^e<<32-n}const Zn=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),et=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),nt=new Uint32Array(16),tt=new Uint32Array(16);function lt(e,n){let t=0;for(t=0;t<8;t++)nt[t]=e.h[t],nt[t+8]=Zn[t];for(nt[12]^=e.t,nt[13]^=e.t/4294967296,n&&(nt[14]=~nt[14]),t=0;t<16;t++)tt[t]=Xn(e.b,4*t);for(t=0;t<10;t++)Yn(0,4,8,12,tt[et[16*t+0]],tt[et[16*t+1]]),Yn(1,5,9,13,tt[et[16*t+2]],tt[et[16*t+3]]),Yn(2,6,10,14,tt[et[16*t+4]],tt[et[16*t+5]]),Yn(3,7,11,15,tt[et[16*t+6]],tt[et[16*t+7]]),Yn(0,5,10,15,tt[et[16*t+8]],tt[et[16*t+9]]),Yn(1,6,11,12,tt[et[16*t+10]],tt[et[16*t+11]]),Yn(2,7,8,13,tt[et[16*t+12]],tt[et[16*t+13]]),Yn(3,4,9,14,tt[et[16*t+14]],tt[et[16*t+15]]);for(t=0;t<8;t++)e.h[t]^=nt[t]^nt[t+8]}function rt(e,n){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");const t=n?n.length:0;if(n&&!(t>0&&t<=32))throw new Error("Incorrect key length, should be in [1, 32]");const l={h:new Uint32Array(Zn),b:new Uint8Array(64),c:0,t:0,outlen:e};return l.h[0]^=16842752^t<<8^e,t>0&&(it(l,n),l.c=64),l}function it(e,n){for(let t=0;t<n.length;t++)64===e.c&&(e.t+=e.c,lt(e,!1),e.c=0),e.b[e.c++]=n[t]}function ut(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;lt(e,!0);const n=new Uint8Array(e.outlen);for(let t=0;t<e.outlen;t++)n[t]=e.h[t>>2]>>8*(3&t)&255;return n}function ot(e,n,t){t=t||32,e=Jn.normalizeInput(e);const l=rt(t,n);return it(l,e),ut(l)}var st={blake2s:ot,blake2sHex:function(e,n,t){const l=ot(e,n,t);return Jn.toHex(l)},blake2sInit:rt,blake2sUpdate:it,blake2sFinal:ut};var at={blake2b:Wn.blake2b,blake2bHex:Wn.blake2bHex,blake2bInit:Wn.blake2bInit,blake2bUpdate:Wn.blake2bUpdate,blake2bFinal:Wn.blake2bFinal,blake2s:st.blake2s,blake2sHex:st.blake2sHex,blake2sInit:st.blake2sInit,blake2sUpdate:st.blake2sUpdate,blake2sFinal:st.blake2sFinal},ct={},ht=t(Object.freeze({__proto__:null,default:{}}));class ft{constructor({type:e,extractable:n,algorithm:t,usages:l,handle:r}){this.type=e,this.extractable=n,this.algorithm=t,this.usages=l,Object.defineProperties(this,{handle:{enumerable:!1,writeable:!1,value:r}})}clone({type:e,extractable:n,algorithm:t,usages:l,handle:r},i){return new ft({type:e,extractable:n,algorithm:t,usages:l,handle:r})}}var dt=ft;var pt=class{constructor({publicKey:e,privateKey:n}){this.publicKey=e,this.privateKey=n}};var yt=class{constructor(e){Object.assign(this,e)}};var gt=new class extends Array{constructor(e){super(),e.forEach((e=>this.push(e)))}normalize(e){let n=[];for(let t=0;t<this.length;t++){let l=this[t];e.includes(l)&&n.push(l)}return n}}(["encrypt","decrypt","sign","verify","deriveBits","wrapKey","unwrapKey"]);var mt=class{constructor(e){if("string"==typeof e)this.name=e;else if(Object.assign(this,e),"string"!=typeof this.name)throw new Error("Algorithm name must be a string")}};class vt extends Error{constructor(e){super(e)}}var bt=vt;class wt extends Error{constructor(e){super(e)}}var _t=wt;class Et extends Error{constructor(e){super(),this.message=`${e} is not a supported algorithm`}}var St=Et;const xt=St;var kt=class extends xt{constructor(e){super(),this.message=`${e} is not a supported key format`}};const It=St;var Pt=class extends It{constructor(e,n){super(),this.message=`Currently '${e}' is not a supported format. Please use '${n}' in the interim.`}};class At extends Error{constructor(e){super(e)}}var Tt=At;class Ot extends Error{constructor(e){super(e)}}var Mt=Ot;class Rt extends Error{constructor(e){super(e)}}var Nt={DataError:bt,InvalidAccessError:_t,KeyFormatNotSupportedError:kt,CurrentlyNotSupportedError:Pt,NotSupportedError:St,OperationError:Tt,QuotaExceededError:Mt,TypeMismatchError:Rt};var Ct=class{constructor(e){if(Object.assign(this,e),void 0===this.name)throw new Error("KeyAlgorithm must have a name")}};var Lt=class{constructor(e){Object.assign(this,e)}getCaseInsensitive(e){for(let n in this)if(n.match(new RegExp(`^${e}$`,"i")))return n}};const jt=mt,Ut=Ct,Dt=Lt,{NotSupportedError:Bt}=Nt,Kt=["encrypt","decrypt","sign","verify","deriveBits","digest","wrapKey","unwrapKey","generateKey","importKey","exportKey","getLength"];var Ft=class{constructor(){Kt.forEach((e=>{this[e]=new Dt}))}static get operations(){return Kt}define(e,n,t){this[n][e]=t}normalize(e,n){if("string"==typeof n)return this.normalize(e,new Ut({name:n}));if("object"==typeof n){let t,r=this[e];try{t=new jt(n)}catch(e){return e}let i,u,o=t.name;if(o=r.getCaseInsensitive(o),void 0===o)return new Bt(n.name);try{i=l(r[o]),u=new i(n),u.name=o}catch(e){return e}let s=i.dictionaries;for(let e=0;e<s.length;e++){let n=s[e].members;for(let e in n){let t=n[e],l=u[e];try{if("BufferSource"===t&&void 0!==l&&(u[e]=l.slice()),"HashAlgorithmIdentifier"===t){let n=this.normalize("digest",l);if(n instanceof Error)return n;u[e]=n}"AlgorithmIdentifier"===t&&(u[e]=this.normalize(WTF,l))}catch(e){return e}}}return u}}};const Vt=new Ft;Vt.define("RSA-OAEP","encrypt","../algorithms/RSA-OAEP"),Vt.define("AES-CTR","encrypt","../algorithms/AES-CTR"),Vt.define("AES-CBC","encrypt","../algorithms/AES-CBC"),Vt.define("AES-GCM","encrypt","../algorithms/AES-GCM"),Vt.define("RSA-OAEP","decrypt","../algorithms/RSA-OAEP"),Vt.define("AES-CTR","decrypt","../algorithms/AES-CTR"),Vt.define("AES-CBC","decrypt","../algorithms/AES-CBC"),Vt.define("AES-GCM","decrypt","../algorithms/AES-GCM"),Vt.define("RSASSA-PKCS1-v1_5","sign","../algorithms/RSASSA-PKCS1-v1_5"),Vt.define("RSA-PSS","sign","../algorithms/RSA-PSS"),Vt.define("ECDSA","sign","../algorithms/ECDSA"),Vt.define("EDDSA","sign","../algorithms/EDDSA"),Vt.define("HMAC","sign","../algorithms/HMAC"),Vt.define("RSASSA-PKCS1-v1_5","verify","../algorithms/RSASSA-PKCS1-v1_5"),Vt.define("RSA-PSS","verify","../algorithms/RSA-PSS"),Vt.define("ECDSA","verify","../algorithms/ECDSA"),Vt.define("EDDSA","verify","../algorithms/EDDSA"),Vt.define("HMAC","verify","../algorithms/HMAC"),Vt.define("SHA-1","digest","../algorithms/SHA"),Vt.define("SHA-256","digest","../algorithms/SHA"),Vt.define("SHA-384","digest","../algorithms/SHA"),Vt.define("SHA-512","digest","../algorithms/SHA"),Vt.define("RSASSA-PKCS1-v1_5","generateKey","../algorithms/RSASSA-PKCS1-v1_5"),Vt.define("RSA-PSS","generateKey","../algorithms/RSA-PSS"),Vt.define("RSA-OAEP","generateKey","../algorithms/RSA-OAEP"),Vt.define("ECDSA","generateKey","../algorithms/ECDSA"),Vt.define("EDDSA","generateKey","../algorithms/EDDSA"),Vt.define("AES-CTR","generateKey","../algorithms/AES-CTR"),Vt.define("AES-CBC","generateKey","../algorithms/AES-CBC"),Vt.define("AES-GCM","generateKey","../algorithms/AES-GCM"),Vt.define("AES-KW","generateKey","../algorithms/AES-KW"),Vt.define("HMAC","generateKey","../algorithms/HMAC"),Vt.define("RSASSA-PKCS1-v1_5","importKey","../algorithms/RSASSA-PKCS1-v1_5"),Vt.define("RSA-PSS","importKey","../algorithms/RSA-PSS"),Vt.define("RSA-OAEP","importKey","../algorithms/RSA-OAEP"),Vt.define("ECDSA","importKey","../algorithms/ECDSA"),Vt.define("EDDSA","importKey","../algorithms/EDDSA"),Vt.define("AES-CTR","importKey","../algorithms/AES-CTR"),Vt.define("AES-CBC","importKey","../algorithms/AES-CBC"),Vt.define("AES-GCM","importKey","../algorithms/AES-GCM"),Vt.define("AES-KW","importKey","../algorithms/AES-KW"),Vt.define("HMAC","importKey","../algorithms/HMAC"),Vt.define("RSASSA-PKCS1-v1_5","exportKey","../algorithms/RSASSA-PKCS1-v1_5"),Vt.define("RSA-PSS","exportKey","../algorithms/RSA-PSS"),Vt.define("RSA-OAEP","exportKey","../algorithms/RSA-OAEP"),Vt.define("EDDSA","exportKey","../algorithms/EDDSA"),Vt.define("ECDSA","exportKey","../algorithms/ECDSA"),Vt.define("AES-CTR","exportKey","../algorithms/AES-CTR"),Vt.define("AES-CBC","exportKey","../algorithms/AES-CBC"),Vt.define("AES-GCM","exportKey","../algorithms/AES-GCM"),Vt.define("AES-KW","exportKey","../algorithms/AES-KW"),Vt.define("HMAC","exportKey","../algorithms/HMAC"),Vt.define("RSA-OAEP","wrapKey","../algorithms/RSA-OAEP"),Vt.define("AES-CTR","wrapKey","../algorithms/AES-CTR"),Vt.define("AES-CBC","wrapKey","../algorithms/AES-CBC"),Vt.define("AES-GCM","wrapKey","../algorithms/AES-GCM"),Vt.define("AES-KW","wrapKey","../algorithms/AES-KW"),Vt.define("RSA-OAEP","unwrapKey","../algorithms/RSA-OAEP"),Vt.define("AES-CTR","unwrapKey","../algorithms/AES-CTR"),Vt.define("AES-CBC","unwrapKey","../algorithms/AES-CBC"),Vt.define("AES-GCM","unwrapKey","../algorithms/AES-GCM"),Vt.define("AES-KW","unwrapKey","../algorithms/AES-KW");var Ht=Vt,qt={exports:{}},zt={exports:{}};!function(e){!function(n){e.exports&&(e.exports=n),n["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(n||{})}(zt),function(e){!function(n){function t(e,n,t){return n<=e&&e<=t}e.exports&&!n["encoding-indexes"]&&(n["encoding-indexes"]=zt.exports["encoding-indexes"]);var l=Math.floor;function r(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function i(e){return 0<=e&&e<=127}var u=i,o=-1;function s(e){this.tokens=[].slice.call(e),this.tokens.reverse()}s.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():o},prepend:function(e){if(Array.isArray(e))for(var n=e;n.length;)this.tokens.push(n.pop());else this.tokens.push(e)},push:function(e){if(Array.isArray(e))for(var n=e;n.length;)this.tokens.unshift(n.shift());else this.tokens.unshift(e)}};var a=-1;function c(e,n){if(e)throw TypeError("Decoder error");return n||65533}function h(e){throw TypeError("The code point "+e+" could not be encoded.")}function f(e){return e=String(e).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(p,e)?p[e]:null}var d=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],p={};d.forEach((function(e){e.encodings.forEach((function(e){e.labels.forEach((function(n){p[n]=e}))}))}));var y,g,m={},v={};function b(e,n){return n&&n[e]||null}function w(e,n){var t=n.indexOf(e);return-1===t?null:t}function _(e){if(!("encoding-indexes"in n))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return n["encoding-indexes"][e]}var E="utf-8";function S(e,n){if(!(this instanceof S))throw TypeError("Called as a function. Did you forget 'new'?");e=void 0!==e?String(e):E,n=r(n),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var t=f(e);if(null===t||"replacement"===t.name)throw RangeError("Unknown encoding: "+e);if(!v[t.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var l=this;return l._encoding=t,Boolean(n.fatal)&&(l._error_mode="fatal"),Boolean(n.ignoreBOM)&&(l._ignoreBOM=!0),Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase(),this.fatal="fatal"===l._error_mode,this.ignoreBOM=l._ignoreBOM),l}function x(e,t){if(!(this instanceof x))throw TypeError("Called as a function. Did you forget 'new'?");t=r(t),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(t.fatal)?"fatal":"replacement";var l=this;if(Boolean(t.NONSTANDARD_allowLegacyEncoding)){var i=f(e=void 0!==e?String(e):E);if(null===i||"replacement"===i.name)throw RangeError("Unknown encoding: "+e);if(!m[i.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");l._encoding=i}else l._encoding=f("utf-8"),void 0!==e&&"console"in n&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase()),l}function k(e){var n=e.fatal,l=0,r=0,i=0,u=128,s=191;this.handler=function(e,h){if(h===o&&0!==i)return i=0,c(n);if(h===o)return a;if(0===i){if(t(h,0,127))return h;if(t(h,194,223))i=1,l=31&h;else if(t(h,224,239))224===h&&(u=160),237===h&&(s=159),i=2,l=15&h;else{if(!t(h,240,244))return c(n);240===h&&(u=144),244===h&&(s=143),i=3,l=7&h}return null}if(!t(h,u,s))return l=i=r=0,u=128,s=191,e.prepend(h),c(n);if(u=128,s=191,l=l<<6|63&h,(r+=1)!==i)return null;var f=l;return l=i=r=0,f}}function I(e){e.fatal,this.handler=function(e,n){if(n===o)return a;if(u(n))return n;var l,r;t(n,128,2047)?(l=1,r=192):t(n,2048,65535)?(l=2,r=224):t(n,65536,1114111)&&(l=3,r=240);for(var i=[(n>>6*l)+r];l>0;){var s=n>>6*(l-1);i.push(128|63&s),l-=1}return i}}function P(e,n){var t=n.fatal;this.handler=function(n,l){if(l===o)return a;if(i(l))return l;var r=e[l-128];return null===r?c(t):r}}function A(e,n){n.fatal,this.handler=function(n,t){if(t===o)return a;if(u(t))return t;var l=w(t,e);return null===l&&h(t),l+128}}function T(e){var n=e.fatal,l=0,r=0,u=0;this.handler=function(e,s){if(s===o&&0===l&&0===r&&0===u)return a;var h;if(s!==o||0===l&&0===r&&0===u||(l=0,r=0,u=0,c(n)),0!==u){h=null,t(s,48,57)&&(h=function(e){if(e>39419&&e<189e3||e>1237575)return null;if(7457===e)return 59335;var n,t=0,l=0,r=_("gb18030-ranges");for(n=0;n<r.length;++n){var i=r[n];if(!(i[0]<=e))break;t=i[0],l=i[1]}return l+e-t}(10*(126*(10*(l-129)+r-48)+u-129)+s-48));var f=[r,u,s];return l=0,r=0,u=0,null===h?(e.prepend(f),c(n)):h}if(0!==r)return t(s,129,254)?(u=s,null):(e.prepend([r,s]),l=0,r=0,c(n));if(0!==l){if(t(s,48,57))return r=s,null;var d=l,p=null;l=0;var y=s<127?64:65;return(t(s,64,126)||t(s,128,254))&&(p=190*(d-129)+(s-y)),null===(h=null===p?null:b(p,_("gb18030")))&&i(s)&&e.prepend(s),null===h?c(n):h}return i(s)?s:128===s?8364:t(s,129,254)?(l=s,null):c(n)}}function O(e,n){e.fatal,this.handler=function(e,t){if(t===o)return a;if(u(t))return t;if(58853===t)return h(t);if(n&&8364===t)return 128;var r=w(t,_("gb18030"));if(null!==r){var i=r%190;return[l(r/190)+129,i+(i<63?64:65)]}if(n)return h(t);r=function(e){if(59335===e)return 7457;var n,t=0,l=0,r=_("gb18030-ranges");for(n=0;n<r.length;++n){var i=r[n];if(!(i[1]<=e))break;t=i[1],l=i[0]}return l+e-t}(t);var s=l(r/10/126/10),c=l((r-=10*s*126*10)/10/126),f=l((r-=10*c*126)/10);return[s+129,c+48,f+129,r-10*f+48]}}function M(e){var n=e.fatal,l=0;this.handler=function(e,r){if(r===o&&0!==l)return l=0,c(n);if(r===o&&0===l)return a;if(0!==l){var u=l,s=null;l=0;var h=r<127?64:98;switch((t(r,64,126)||t(r,161,254))&&(s=157*(u-129)+(r-h)),s){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var f=null===s?null:b(s,_("big5"));return null===f&&i(r)&&e.prepend(r),null===f?c(n):f}return i(r)?r:t(r,129,254)?(l=r,null):c(n)}}function R(e){e.fatal,this.handler=function(e,n){if(n===o)return a;if(u(n))return n;var t=function(e){g=g||_("big5").map((function(e,n){return n<5024?null:e}));var n=g;return 9552===e||9566===e||9569===e||9578===e||21313===e||21317===e?n.lastIndexOf(e):w(e,n)}(n);if(null===t)return h(n);var r=l(t/157)+129;if(r<161)return h(n);var i=t%157;return[r,i+(i<63?64:98)]}}function N(e){var n=e.fatal,l=!1,r=0;this.handler=function(e,u){if(u===o&&0!==r)return r=0,c(n);if(u===o&&0===r)return a;if(142===r&&t(u,161,223))return r=0,65216+u;if(143===r&&t(u,161,254))return l=!0,r=u,null;if(0!==r){var s=r;r=0;var h=null;return t(s,161,254)&&t(u,161,254)&&(h=b(94*(s-161)+(u-161),_(l?"jis0212":"jis0208"))),l=!1,t(u,161,254)||e.prepend(u),null===h?c(n):h}return i(u)?u:142===u||143===u||t(u,161,254)?(r=u,null):c(n)}}function C(e){e.fatal,this.handler=function(e,n){if(n===o)return a;if(u(n))return n;if(165===n)return 92;if(8254===n)return 126;if(t(n,65377,65439))return[142,n-65377+161];8722===n&&(n=65293);var r=w(n,_("jis0208"));return null===r?h(n):[l(r/94)+161,r%94+161]}}function L(e){var n=e.fatal,l=0,r=1,i=2,u=3,s=4,h=5,f=6,d=l,p=l,y=0,g=!1;this.handler=function(e,m){switch(d){default:case l:return 27===m?(d=h,null):t(m,0,127)&&14!==m&&15!==m&&27!==m?(g=!1,m):m===o?a:(g=!1,c(n));case r:return 27===m?(d=h,null):92===m?(g=!1,165):126===m?(g=!1,8254):t(m,0,127)&&14!==m&&15!==m&&27!==m&&92!==m&&126!==m?(g=!1,m):m===o?a:(g=!1,c(n));case i:return 27===m?(d=h,null):t(m,33,95)?(g=!1,65344+m):m===o?a:(g=!1,c(n));case u:return 27===m?(d=h,null):t(m,33,126)?(g=!1,y=m,d=s,null):m===o?a:(g=!1,c(n));case s:if(27===m)return d=h,c(n);if(t(m,33,126)){d=u;var v=b(94*(y-33)+m-33,_("jis0208"));return null===v?c(n):v}return m===o?(d=u,e.prepend(m),c(n)):(d=u,c(n));case h:return 36===m||40===m?(y=m,d=f,null):(e.prepend(m),g=!1,d=p,c(n));case f:var w=y;y=0;var E=null;if(40===w&&66===m&&(E=l),40===w&&74===m&&(E=r),40===w&&73===m&&(E=i),36!==w||64!==m&&66!==m||(E=u),null!==E){d=d=E;var S=g;return g=!0,S?c(n):null}return e.prepend([w,m]),g=!1,d=p,c(n)}}}function j(e){e.fatal;var n=0,t=1,r=2,i=n;this.handler=function(e,s){if(s===o&&i!==n)return e.prepend(s),i=n,[27,40,66];if(s===o&&i===n)return a;if(!(i!==n&&i!==t||14!==s&&15!==s&&27!==s))return h(65533);if(i===n&&u(s))return s;if(i===t&&(u(s)&&92!==s&&126!==s||165==s||8254==s)){if(u(s))return s;if(165===s)return 92;if(8254===s)return 126}if(u(s)&&i!==n)return e.prepend(s),i=n,[27,40,66];if((165===s||8254===s)&&i!==t)return e.prepend(s),i=t,[27,40,74];8722===s&&(s=65293);var c=w(s,_("jis0208"));return null===c?h(s):i!==r?(e.prepend(s),i=r,[27,36,66]):[l(c/94)+33,c%94+33]}}function U(e){var n=e.fatal,l=0;this.handler=function(e,r){if(r===o&&0!==l)return l=0,c(n);if(r===o&&0===l)return a;if(0!==l){var u=l,s=null;l=0;var h=r<127?64:65,f=u<160?129:193;if((t(r,64,126)||t(r,128,252))&&(s=188*(u-f)+r-h),t(s,8836,10715))return 48508+s;var d=null===s?null:b(s,_("jis0208"));return null===d&&i(r)&&e.prepend(r),null===d?c(n):d}return i(r)||128===r?r:t(r,161,223)?65216+r:t(r,129,159)||t(r,224,252)?(l=r,null):c(n)}}function D(e){e.fatal,this.handler=function(e,n){if(n===o)return a;if(u(n)||128===n)return n;if(165===n)return 92;if(8254===n)return 126;if(t(n,65377,65439))return n-65377+161;8722===n&&(n=65293);var r=function(e){return y=y||_("jis0208").map((function(e,n){return t(n,8272,8835)?null:e})),y.indexOf(e)}(n);if(null===r)return h(n);var i=l(r/188),s=r%188;return[i+(i<31?129:193),s+(s<63?64:65)]}}function B(e){var n=e.fatal,l=0;this.handler=function(e,r){if(r===o&&0!==l)return l=0,c(n);if(r===o&&0===l)return a;if(0!==l){var u=l,s=null;l=0,t(r,65,254)&&(s=190*(u-129)+(r-65));var h=null===s?null:b(s,_("euc-kr"));return null===s&&i(r)&&e.prepend(r),null===h?c(n):h}return i(r)?r:t(r,129,254)?(l=r,null):c(n)}}function K(e){e.fatal,this.handler=function(e,n){if(n===o)return a;if(u(n))return n;var t=w(n,_("euc-kr"));return null===t?h(n):[l(t/190)+129,t%190+65]}}function F(e,n){var t=e>>8,l=255&e;return n?[t,l]:[l,t]}function V(e,n){var l=n.fatal,r=null,i=null;this.handler=function(n,u){if(u===o&&(null!==r||null!==i))return c(l);if(u===o&&null===r&&null===i)return a;if(null===r)return r=u,null;var s;if(s=e?(r<<8)+u:(u<<8)+r,r=null,null!==i){var h=i;return i=null,t(s,56320,57343)?65536+1024*(h-55296)+(s-56320):(n.prepend(F(s,e)),c(l))}return t(s,55296,56319)?(i=s,null):t(s,56320,57343)?c(l):s}}function H(e,n){n.fatal,this.handler=function(n,l){if(l===o)return a;if(t(l,0,65535))return F(l,e);var r=F(55296+(l-65536>>10),e),i=F(56320+(l-65536&1023),e);return r.concat(i)}}function q(e){e.fatal,this.handler=function(e,n){return n===o?a:i(n)?n:63360+n-128}}function z(e){e.fatal,this.handler=function(e,n){return n===o?a:u(n)?n:t(n,63360,63487)?n-63360+128:h(n)}}Object.defineProperty&&(Object.defineProperty(S.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(S.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(S.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),S.prototype.decode=function(e,n){var t;t="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),n=r(n),this._do_not_flush||(this._decoder=v[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(n.stream);for(var l,i=new s(t),u=[];;){var c=i.read();if(c===o)break;if((l=this._decoder.handler(i,c))===a)break;null!==l&&(Array.isArray(l)?u.push.apply(u,l):u.push(l))}if(!this._do_not_flush){do{if((l=this._decoder.handler(i,i.read()))===a)break;null!==l&&(Array.isArray(l)?u.push.apply(u,l):u.push(l))}while(!i.endOfStream());this._decoder=null}return function(e){var n,t;return n=["UTF-8","UTF-16LE","UTF-16BE"],t=this._encoding.name,-1===n.indexOf(t)||this._ignoreBOM||this._BOMseen||(e.length>0&&65279===e[0]?(this._BOMseen=!0,e.shift()):e.length>0&&(this._BOMseen=!0)),function(e){for(var n="",t=0;t<e.length;++t){var l=e[t];l<=65535?n+=String.fromCharCode(l):(l-=65536,n+=String.fromCharCode(55296+(l>>10),56320+(1023&l)))}return n}(e)}.call(this,u)},Object.defineProperty&&Object.defineProperty(x.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),x.prototype.encode=function(e,n){e=void 0===e?"":String(e),n=r(n),this._do_not_flush||(this._encoder=m[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(n.stream);for(var t,l=new s(function(e){for(var n=String(e),t=n.length,l=0,r=[];l<t;){var i=n.charCodeAt(l);if(i<55296||i>57343)r.push(i);else if(56320<=i&&i<=57343)r.push(65533);else if(55296<=i&&i<=56319)if(l===t-1)r.push(65533);else{var u=n.charCodeAt(l+1);if(56320<=u&&u<=57343){var o=1023&i,s=1023&u;r.push(65536+(o<<10)+s),l+=1}else r.push(65533)}l+=1}return r}(e)),i=[];;){var u=l.read();if(u===o)break;if((t=this._encoder.handler(l,u))===a)break;Array.isArray(t)?i.push.apply(i,t):i.push(t)}if(!this._do_not_flush){for(;(t=this._encoder.handler(l,l.read()))!==a;)Array.isArray(t)?i.push.apply(i,t):i.push(t);this._encoder=null}return new Uint8Array(i)},m["UTF-8"]=function(e){return new I(e)},v["UTF-8"]=function(e){return new k(e)},"encoding-indexes"in n&&d.forEach((function(e){"Legacy single-byte encodings"===e.heading&&e.encodings.forEach((function(e){var n=e.name,t=_(n.toLowerCase());v[n]=function(e){return new P(t,e)},m[n]=function(e){return new A(t,e)}}))})),v.GBK=function(e){return new T(e)},m.GBK=function(e){return new O(e,!0)},m.gb18030=function(e){return new O(e)},v.gb18030=function(e){return new T(e)},m.Big5=function(e){return new R(e)},v.Big5=function(e){return new M(e)},m["EUC-JP"]=function(e){return new C(e)},v["EUC-JP"]=function(e){return new N(e)},m["ISO-2022-JP"]=function(e){return new j(e)},v["ISO-2022-JP"]=function(e){return new L(e)},m.Shift_JIS=function(e){return new D(e)},v.Shift_JIS=function(e){return new U(e)},m["EUC-KR"]=function(e){return new K(e)},v["EUC-KR"]=function(e){return new B(e)},m["UTF-16BE"]=function(e){return new H(!0,e)},v["UTF-16BE"]=function(e){return new V(!0,e)},m["UTF-16LE"]=function(e){return new H(!1,e)},v["UTF-16LE"]=function(e){return new V(!1,e)},m["x-user-defined"]=function(e){return new z(e)},v["x-user-defined"]=function(e){return new q(e)},n.TextEncoder||(n.TextEncoder=x),n.TextDecoder||(n.TextDecoder=S),e.exports&&(e.exports={TextEncoder:n.TextEncoder,TextDecoder:n.TextDecoder,EncodingIndexes:n["encoding-indexes"]})}(n||{})}(qt);var $t=qt.exports,Gt={TextEncoder:$t.TextEncoder,TextDecoder:$t.TextDecoder};const Wt=dt,Jt=pt,Xt=yt,Yt=gt,Qt=Ht,{InvalidAccessError:Zt,NotSupportedError:el}=Nt,{TextEncoder:nl,TextDecoder:tl}=Gt;var ll=class{encrypt(e,n,t){t=t.slice();let l=Qt.normalize("encrypt",e);return l instanceof Error?Promise.reject(l):new Promise(((r,i)=>{if(l.name!==n.algorithm.name)throw new Zt("Algorithm does not match key");if(!n.usages.includes("encrypt"))throw new Zt('Key usages must include "encrypt"');r(l.encrypt(e,n,t))}))}decrypt(e,n,t){let l=Qt.normalize("decrypt",e);return l instanceof Error?Promise.reject(l):(t=t.slice(),new Promise(((r,i)=>{if(l.name!==n.algorithm.name)throw new Zt("Algorithm does not match key");if(!n.usages.includes("decrypt"))throw new Zt('Key usages must include "decrypt"');r(l.decrypt(e,n,t))})))}sign(e,n,t){t=t.slice();let l=Qt.normalize("sign",e);return l instanceof Error?Promise.reject(l):new Promise(((e,r)=>{if(l.name!==n.algorithm.name)throw new Zt("Algorithm does not match key");if(!n.usages.includes("sign"))throw new Zt('Key usages must include "sign"');e(l.sign(n,t))}))}verify(e,n,t,l){t=t.slice();let r=Qt.normalize("verify",e);return r instanceof Error?Promise.reject(r):(l=l.slice(),new Promise(((e,i)=>{if(r.name!==n.algorithm.name)throw new Zt("Algorithm does not match key");if(!n.usages.includes("verify"))throw new Zt('Key usages must include "verify"');e(r.verify(n,t,l))})))}digest(e,n){n=n.slice();let t=Qt.normalize("digest",e);return t instanceof Error?Promise.reject(t):new Promise(((l,r)=>{try{return l(t.digest(e,n))}catch(e){return r(e)}}))}generateKey(e,n,t){let l=Qt.normalize("generateKey",e);return l instanceof Error?Promise.reject(l):new Promise(((r,i)=>{try{let i=l.generateKey(e,n,t);if(i instanceof Wt){let{type:e,usages:n}=i,t="secret"===e||"private"===e,l=!n||0===n.length;if(t&&l)throw new SyntaxError}if(i instanceof Jt){let{privateKey:{usages:e}}=i;if(!e||0===e.length)throw new SyntaxError}r(i)}catch(e){return i(e)}}))}deriveKey(e,n,t,l,r){return new Promise}deriveBits(e,n,t){return new Promise}importKey(e,n,t,l,r){let i=Qt.normalize("importKey",t);return i instanceof Error?Promise.reject(i):new Promise(((u,o)=>{if("raw"===e||"pkcs8"===e||"spki"===e){if(n instanceof Xt)throw new TypeError;n=n.slice()}if("jwk"===e&&!((n=new Xt(n))instanceof Xt))throw new TypeError("key is not a JSON Web Key");try{let o=i.importKey(e,n,t,l,r);if(!("secret"!==o.type&&"private"!==o.type||o.usages&&0!==o.usages.length))throw new SyntaxError;o.extractable=l,o.usages=Yt.normalize(r),u(o)}catch(e){return o(e)}}))}exportKey(e,n){return new Promise(((t,l)=>{try{if(!Qt.exportKey[n.algorithm.name])throw new el(n.algorithm.name);if(!1===n.extractable)throw new Zt("Key is not extractable");t(n.algorithm.exportKey(e,n))}catch(e){return l(e)}}))}wrapKey(e,n,t,l){let r=Qt.normalize("wrapKey",l);return r instanceof Error&&(r=Qt.normalize("encrypt",l)),r instanceof Error?Promise.reject(r):new Promise(((i,u)=>{try{if(r.name!==t.algorithm.name)throw new Zt("NormalizedAlgorthm name must be same as wrappingKey algorithm name");if(!t.usages.includes("wrapKey"))throw new Zt('Wrapping key usages must include "wrapKey"');if(!Qt.exportKey[n.algorithm.name])throw new el(n.algorithm.name);if(!1===n.extractable)throw new Zt("Key is not extractable");return this.exportKey(e,n).then((n=>{let i;if(["raw","pkcs8","spki"].includes(e))i=n;else if("jwk"===e){let e=JSON.stringify(n);i=(new nl).encode(e)}return r.wrapKey?r.wrapKey(e,i,t,l):r.encrypt?r.encrypt(l,t,new Uint8Array(i)):u(new el(r.name))})).then(i)}catch(e){return u(e)}}))}unwrapKey(e,n,t,l,r,i,u){let o=Qt.normalize("unwrapKey",l);if(o instanceof Error&&(o=Qt.normalize("decrypt",l)),o instanceof Error)return Promise.reject(o);let s=Qt.normalize("importKey",r);return s instanceof Error?Promise.reject(s):new Promise(((a,c)=>{try{if(o.name!==t.algorithm.name)throw new Zt("NormalizedAlgorthm name must be same as unwrappingKey algorithm name");if(!t.usages.includes("unwrapKey"))throw new Zt('Unwrapping key usages must include "unwrapKey"');let h,f;if(o.unwrapKey)h=o.unwrapKey(e,n,t,l,r,i,u);else{if(!o.decrypt)return c(new el(o.name));h=o.decrypt(l,t,n)}return["raw","pkcs8","spki"].includes(e)?f=h:"jwk"===e&&(f=JSON.parse((new tl).decode(h))),a(s.importKey(e,f,r,i,u))}catch(e){return c(e)}}))}};const rl=ht,il=ll,{QuotaExceededError:ul,TypeMismatchError:ol}=Nt,sl=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array],al={Int8Array:"getInt8",Uint8Array:"getUint8",Int16Array:"getInt16",Uint16Array:"getUint16",Int32Array:"getInt32",Uint32Array:"getUint32"};var cl=class{getRandomValues(e){if(!sl.some((n=>e instanceof n)))throw new ol;let n=e.byteLength;if(n>65536)throw new ul;let t=e.constructor,l=al[t.name],r=n*e.length,i=rl.randomBytes(r),u=new Uint8Array(i),o=new DataView(u.buffer);for(let t=0;t<r;t+=n){let r=o[l](t);e[t/n]=r}return e}get subtle(){return new il}};var hl=new cl,fl=n&&n.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(ct,"__esModule",{value:!0});const dl=fl(hl);let pl;pl="undefined"!=typeof self&&(self.crypto||self.msCrypto)?self.crypto||self.msCrypto:dl.default,ct.default=pl;
/*!
	 * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.
	 */
var yl=n&&n.__createBinding||(Object.create?function(e,n,t,l){void 0===l&&(l=t);var r=Object.getOwnPropertyDescriptor(n,t);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,l,r)}:function(e,n,t,l){void 0===l&&(l=t),e[l]=n[t]}),gl=n&&n.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),ml=n&&n.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&yl(n,e,t);return gl(n,e),n},vl=n&&n.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(In,"__esModule",{value:!0}),In.MultibaseBase58btc=In.MultihashBlake2b64=In.MultihashSha2256=In.Codec=void 0;const bl=ml(Pn),wl=at,_l=vl(ct),El=wn;class Sl{identifier;algorithm;name}In.Codec=Sl;In.MultihashSha2256=class extends Sl{constructor(){super(),this.identifier=new Uint8Array([18,32]),this.algorithm="mh-sha2-256",this.name="sha2-256"}async encode(e){const n=new Uint8Array(await _l.default.subtle.digest({name:"SHA-256"},e)),t=new Uint8Array(n.byteLength+this.identifier.byteLength);return t.set(this.identifier,0),t.set(n,this.identifier.byteLength),t}decode(e){return e.slice(this.identifier.length)}};In.MultihashBlake2b64=class extends Sl{constructor(){super(),this.identifier=new Uint8Array([178,8,8]),this.algorithm="mh-blake2b-64",this.name="blake2b-64"}async encode(e){const n=(0,wl.blake2b)(e,null,8),t=new Uint8Array(n.byteLength+this.identifier.byteLength);return t.set(this.identifier,0),t.set(n,this.identifier.byteLength),t}decode(e){return e.slice(this.identifier.length)}};In.MultibaseBase58btc=class extends Sl{constructor(){super(),this.identifier=new Uint8Array([122]),this.algorithm="mb-base58-btc",this.name="base58-btc"}async encode(e){return new Uint8Array((0,El.stringToUint8Array)("z"+bl.encode(e)))}decode(e){return bl.decode(new TextDecoder("utf-8").decode(e.slice(1)))}};var xl=n&&n.__createBinding||(Object.create?function(e,n,t,l){void 0===l&&(l=t);var r=Object.getOwnPropertyDescriptor(n,t);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,l,r)}:function(e,n,t,l){void 0===l&&(l=t),e[l]=n[t]}),kl=n&&n.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),Il=n&&n.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&xl(n,e,t);return kl(n,e),n};Object.defineProperty(r,"__esModule",{value:!0});var Pl=r.HashlinkVerifier=void 0;const Al=i,Tl=Il(In);function Ol(e,n){return"string"!=typeof e?(console.warn("Trying to test a non string variable"),!1):0===e.indexOf(n)}function Ml(e){return"string"==typeof e}var Rl;Pl=r.HashlinkVerifier=class{hl;hashlinkTable={};constructor(){this.hl=new Al.Hashlink,this.hl.use(new Tl.MultihashSha2256),this.hl.use(new Tl.MultihashBlake2b64),this.hl.use(new Tl.MultibaseBase58btc)}async decode(e,n){const t=await this.hl.decode({hashlink:e});if(!t.meta&&!t.meta.url?.length)throw new Error("unparseable document, no url provided as meta data");this.hashlinkTable[e]=t;return n?.(t.meta.url[0]),t}async verifyHashlinkTable(){const e=Object.keys(this.hashlinkTable);for(let n=0;n<e.length;n++)await this.verify(e[n]).catch((e=>console.log("caught an hashlink exception",e)));return!0}async verify(e){const n=await this.getSourceUrlFromHashlink(e);let t;await fetch(n).then((async e=>await e.text())).then((e=>{t=e}));const l=new TextEncoder,r=await this.hl.verify({data:l.encode(t),hashlink:e});if(!r)throw new Error(`Hashlink ${e} does not match data from url ${n}`);return console.log(`hashlink ${e} bound to ${n} was successfully verified`),r}hasHashlinksToVerify(){return Object.keys(this.hashlinkTable).length>0}async getSourceUrlFromHashlink(e){let n;return n=this.hashlinkTable[e]?this.hashlinkTable[e]:await this.decode(e),this.getMetaUrl(n)}getMetaUrl(e){return e.meta.url[0]}},function(e){e.blockcypher="blockcypher",e.blockstream="blockstream",e.etherscan="etherscan"}(Rl||(Rl={}));const Nl="{transaction_id}";var Cl;!function(e){e.V1_1="1.1",e.V1_2="1.2",e.V2_0="2.0",e.V3_0_alpha="3.0-alpha",e.V3_0_beta="3.0-beta",e.V3_0="3.0"}(Cl||(Cl={}));var Ll,jl=Cl;!function(e){e.Bitcoin="bitcoin",e.Ethmain="ethmain",e.Ethropst="ethropst",e.Ethrinkeby="ethrinkeby",e.Mocknet="mocknet",e.Regtest="regtest",e.Testnet="testnet"}(Ll||(Ll={}));const Ul={[Ll.Bitcoin]:{code:Ll.Bitcoin,name:"Bitcoin",prefixes:["6a20","OP_RETURN "],signatureValue:"bitcoinMainnet",transactionTemplates:{full:"https://blockchain.info/tx/{transaction_id}",raw:"https://blockchain.info/rawtx/{transaction_id}"}},[Ll.Ethmain]:{code:Ll.Ethmain,name:"Ethereum",prefixes:["0x"],signatureValue:"ethereumMainnet",transactionTemplates:{full:"https://etherscan.io/tx/{transaction_id}",raw:"https://etherscan.io/tx/{transaction_id}"}},[Ll.Ethropst]:{code:Ll.Ethropst,name:"Ethereum Testnet",signatureValue:"ethereumRopsten",transactionTemplates:{full:"https://ropsten.etherscan.io/tx/{transaction_id}",raw:"https://ropsten.etherscan.io/getRawTx?tx={transaction_id}"}},[Ll.Ethrinkeby]:{code:Ll.Ethrinkeby,name:"Ethereum Testnet",signatureValue:"ethereumRinkeby",transactionTemplates:{full:"https://rinkeby.etherscan.io/tx/{transaction_id}",raw:"https://rinkeby.etherscan.io/getRawTx?tx={transaction_id}"}},[Ll.Mocknet]:{code:Ll.Mocknet,name:"Mocknet",test:!0,signatureValue:"mockchain",transactionTemplates:{full:"",raw:""}},[Ll.Regtest]:{code:Ll.Regtest,name:"Mocknet",test:!0,signatureValue:"bitcoinRegtest",transactionTemplates:{full:"",raw:""}},[Ll.Testnet]:{code:Ll.Testnet,name:"Bitcoin Testnet",signatureValue:"bitcoinTestnet",transactionTemplates:{full:"https://testnet.blockchain.info/tx/{transaction_id}",raw:"https://testnet.blockchain.info/rawtx/{transaction_id}"}}};var Dl;!function(e){e.mainnet="mainnet",e.testnet="testnet"}(Dl||(Dl={}));var Bl="ecdsa-koblitz-pubkey:1",Kl="https://openbadgespec.org/v2/context.json",Fl="https://www.w3.org/2018/credentials/v1",Vl="https://w3id.org/blockcerts/schema/2.0/context.json",Hl="https://w3id.org/blockcerts/v2",ql="https://www.blockcerts.org/schema/2.0/context.json",zl="https://w3id.org/blockcerts/schema/2.1/context.json",$l="https://w3id.org/blockcerts/v2.1",Gl="https://www.blockcerts.org/schema/2.1/context.json",Wl="https://w3id.org/blockcerts/schema/3.0/context.json",Jl="https://w3id.org/blockcerts/v3",Xl="https://www.blockcerts.org/schema/3.0/context.json",Yl={"@context":{id:"@id",type:"@type",extensions:"https://w3id.org/openbadges/extensions#",obi:"https://w3id.org/openbadges#",validation:"obi:validation",cred:"https://w3id.org/credentials#",dc:"http://purl.org/dc/terms/",schema:"http://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",AlignmentObject:"schema:AlignmentObject",CryptographicKey:"sec:Key",Endorsement:"cred:Credential",Assertion:"obi:Assertion",BadgeClass:"obi:BadgeClass",Criteria:"obi:Criteria",Evidence:"obi:Evidence",Extension:"obi:Extension",FrameValidation:"obi:FrameValidation",IdentityObject:"obi:IdentityObject",Image:"obi:Image",HostedBadge:"obi:HostedBadge",hosted:"obi:HostedBadge",Issuer:"obi:Issuer",Profile:"obi:Profile",RevocationList:"obi:RevocationList",SignedBadge:"obi:SignedBadge",signed:"obi:SignedBadge",TypeValidation:"obi:TypeValidation",VerificationObject:"obi:VerificationObject",author:{"@id":"schema:author","@type":"@id"},caption:{"@id":"schema:caption"},claim:{"@id":"cred:claim","@type":"@id"},created:{"@id":"dc:created","@type":"xsd:dateTime"},creator:{"@id":"dc:creator","@type":"@id"},description:{"@id":"schema:description"},email:{"@id":"schema:email"},endorsement:{"@id":"cred:credential","@type":"@id"},expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},genre:{"@id":"schema:genre"},image:{"@id":"schema:image","@type":"@id"},name:{"@id":"schema:name"},owner:{"@id":"sec:owner","@type":"@id"},publicKey:{"@id":"sec:publicKey","@type":"@id"},publicKeyPem:{"@id":"sec:publicKeyPem"},related:{"@id":"dc:relation","@type":"@id"},startsWith:{"@id":"http://purl.org/dqm-vocabulary/v1/dqm#startsWith"},tags:{"@id":"schema:keywords"},targetDescription:{"@id":"schema:targetDescription"},targetFramework:{"@id":"schema:targetFramework"},targetName:{"@id":"schema:targetName"},targetUrl:{"@id":"schema:targetUrl"},telephone:{"@id":"schema:telephone"},url:{"@id":"schema:url","@type":"@id"},version:{"@id":"schema:version"},alignment:{"@id":"obi:alignment","@type":"@id"},allowedOrigins:{"@id":"obi:allowedOrigins"},audience:{"@id":"obi:audience"},badge:{"@id":"obi:badge","@type":"@id"},criteria:{"@id":"obi:criteria","@type":"@id"},endorsementComment:{"@id":"obi:endorsementComment"},evidence:{"@id":"obi:evidence","@type":"@id"},hashed:{"@id":"obi:hashed","@type":"xsd:boolean"},identity:{"@id":"obi:identityHash"},issuedOn:{"@id":"obi:issueDate","@type":"xsd:dateTime"},issuer:{"@id":"obi:issuer","@type":"@id"},narrative:{"@id":"obi:narrative"},recipient:{"@id":"obi:recipient","@type":"@id"},revocationList:{"@id":"obi:revocationList","@type":"@id"},revocationReason:{"@id":"obi:revocationReason"},revoked:{"@id":"obi:revoked","@type":"xsd:boolean"},revokedAssertions:{"@id":"obi:revoked"},salt:{"@id":"obi:salt"},targetCode:{"@id":"obi:targetCode"},uid:{"@id":"obi:uid"},validatesType:"obi:validatesType",validationFrame:"obi:validationFrame",validationSchema:"obi:validationSchema",verification:{"@id":"obi:verify","@type":"@id"},verificationProperty:{"@id":"obi:verificationProperty"},verify:"verification"}},Ql={"@context":{id:"@id",type:"@type",bc:"https://w3id.org/blockcerts#",obi:"https://w3id.org/openbadges#",cp:"https://w3id.org/chainpoint#",schema:"http://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",MerkleProof2017:"sec:MerkleProof2017",RecipientProfile:"bc:RecipientProfile",SignatureLine:"bc:SignatureLine",MerkleProofVerification2017:"bc:MerkleProofVerification2017",recipientProfile:"bc:recipientProfile",signatureLines:"bc:signatureLines",introductionUrl:{"@id":"bc:introductionUrl","@type":"@id"},subtitle:"bc:subtitle",jobTitle:"schema:jobTitle",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},revoked:{"@id":"obi:revoked","@type":"xsd:boolean"},CryptographicKey:"sec:Key",signature:"sec:signature",verification:{"@id":"obi:verify","@type":"@id"},publicKey:{"@id":"sec:publicKey","@type":"@id"},BTCOpReturn:"cp:BTCOpReturn",targetHash:"cp:targetHash",merkleRoot:"cp:merkleRoot",proof:"cp:proof",anchors:"cp:anchors",sourceId:"cp:sourceId",right:"cp:right",left:"cp:left"},"obi:validation":[{"obi:validatesType":"RecipientProfile","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.0/recipientSchema.json"},{"obi:validatesType":"SignatureLine","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.0/signatureLineSchema.json"},{"obi:validatesType":"MerkleProof2017","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.0/merkleProof2017Schema.json"}]},Zl={"@context":{id:"@id",type:"@type",bc:"https://w3id.org/blockcerts#",obi:"https://w3id.org/openbadges#",cp:"https://w3id.org/chainpoint#",schema:"http://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",MerkleProof2017:"sec:MerkleProof2017",RecipientProfile:"bc:RecipientProfile",SignatureLine:"bc:SignatureLine",MerkleProofVerification2017:"bc:MerkleProofVerification2017",recipientProfile:"bc:recipientProfile",signatureLines:"bc:signatureLines",introductionUrl:{"@id":"bc:introductionUrl","@type":"@id"},subtitle:"bc:subtitle",jobTitle:"schema:jobTitle",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},revoked:{"@id":"obi:revoked","@type":"xsd:boolean"},CryptographicKey:"sec:Key",signature:"sec:signature",verification:{"@id":"obi:verify","@type":"@id"},publicKey:{"@id":"sec:publicKey","@type":"@id"},BTCOpReturn:"cp:BTCOpReturn",targetHash:"cp:targetHash",merkleRoot:"cp:merkleRoot",proof:"cp:proof",anchors:"cp:anchors",sourceId:"cp:sourceId",right:"cp:right",left:"cp:left"},"obi:validation":[{"obi:validatesType":"RecipientProfile","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.1/recipientSchema.json"},{"obi:validatesType":"SignatureLine","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.1/signatureLineSchema.json"},{"obi:validatesType":"MerkleProof2017","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.1/merkleProof2017Schema.json"}]},er={"@context":{id:"@id",type:"@type",bc:"https://w3id.org/blockcerts#",cp:"https://w3id.org/chainpoint#",vc:"https://www.w3.org/2018/credentials/v1",schema:"https://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",MerkleProof2019:"sec:MerkleProof2019",BlockcertsCredential:"bc:BlockcertsCredential",introductionUrl:{"@id":"bc:introductionUrl","@type":"@id"},metadata:"bc:metadata",display:{"@id":"bc:display","@context":{id:"@id",type:"@type",contentMediaType:{"@id":"bc:contentMediaType"},contentEncoding:{"@id":"bc:contentEncoding"},content:{"@id":"bc:content"}}},CryptographicKey:"sec:Key",domain:"sec:domain",nonce:"sec:nonce",proofValue:"sec:proofValue",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"},proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab"},verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"},created:{"@id":"https://purl.org/dc/terms/created","@type":"xsd:dateTime"},challenge:"sec:challenge",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},name:{"@id":"schema:name"},description:{"@id":"schema:description"},email:{"@id":"schema:email"},publicKey:{"@id":"sec:publicKey"},url:{"@id":"schema:url"},image:{"@id":"schema:image"},criteria:{"@id":"schema:criteria"},claim:{"@id":"schema:claim"}}};const nr={};nr["https://w3id.org/openbadges/v2"]=Yl,nr[Kl]=Yl,nr[Fl]={"@context":{"@version":1.1,id:"@id",type:"@type",VerifiableCredential:{"@id":"https://www.w3.org/2018/credentials#VerifiableCredential","@context":{"@version":1.1,id:"@id",type:"@type",cred:"https://www.w3.org/2018/credentials#",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",credentialSchema:{"@id":"cred:credentialSchema","@type":"@id","@context":{"@version":1.1,id:"@id",type:"@type",cred:"https://www.w3.org/2018/credentials#",JsonSchemaValidator2018:"cred:JsonSchemaValidator2018"}},credentialStatus:{"@id":"cred:credentialStatus","@type":"@id"},credentialSubject:{"@id":"cred:credentialSubject","@type":"@id"},evidence:{"@id":"cred:evidence","@type":"@id"},expirationDate:{"@id":"cred:expirationDate","@type":"xsd:dateTime"},holder:{"@id":"cred:holder","@type":"@id"},issued:{"@id":"cred:issued","@type":"xsd:dateTime"},issuer:{"@id":"cred:issuer","@type":"@id"},issuanceDate:{"@id":"cred:issuanceDate","@type":"xsd:dateTime"},proof:{"@id":"sec:proof","@type":"@id","@container":"@graph"},refreshService:{"@id":"cred:refreshService","@type":"@id","@context":{"@version":1.1,id:"@id",type:"@type",cred:"https://www.w3.org/2018/credentials#",ManualRefreshService2018:"cred:ManualRefreshService2018"}},termsOfUse:{"@id":"cred:termsOfUse","@type":"@id"},validFrom:{"@id":"cred:validFrom","@type":"xsd:dateTime"},validUntil:{"@id":"cred:validUntil","@type":"xsd:dateTime"}}},VerifiablePresentation:{"@id":"https://www.w3.org/2018/credentials#VerifiablePresentation","@context":{"@version":1.1,id:"@id",type:"@type",cred:"https://www.w3.org/2018/credentials#",sec:"https://w3id.org/security#",holder:{"@id":"cred:holder","@type":"@id"},proof:{"@id":"sec:proof","@type":"@id","@container":"@graph"},verifiableCredential:{"@id":"cred:verifiableCredential","@type":"@id","@container":"@graph"}}},EcdsaSecp256k1Signature2019:{"@id":"https://w3id.org/security#EcdsaSecp256k1Signature2019","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",challenge:"sec:challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},domain:"sec:domain",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},jws:"sec:jws",nonce:"sec:nonce",proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},proofValue:"sec:proofValue",verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"}}},EcdsaSecp256r1Signature2019:{"@id":"https://w3id.org/security#EcdsaSecp256r1Signature2019","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",challenge:"sec:challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},domain:"sec:domain",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},jws:"sec:jws",nonce:"sec:nonce",proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},proofValue:"sec:proofValue",verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"}}},Ed25519Signature2018:{"@id":"https://w3id.org/security#Ed25519Signature2018","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",challenge:"sec:challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},domain:"sec:domain",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},jws:"sec:jws",nonce:"sec:nonce",proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},proofValue:"sec:proofValue",verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"}}},RsaSignature2018:{"@id":"https://w3id.org/security#RsaSignature2018","@context":{"@version":1.1,challenge:"sec:challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},domain:"sec:domain",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},jws:"sec:jws",nonce:"sec:nonce",proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,id:"@id",type:"@type",sec:"https://w3id.org/security#",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},proofValue:"sec:proofValue",verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"}}},proof:{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"}}},nr[Vl]=Ql,nr[ql]=Ql,nr[Hl]=Ql,nr[zl]=Zl,nr[Gl]=Zl,nr[$l]=Zl,nr[Wl]=er,nr[Xl]=er,nr[Jl]=er;var tr={"@context":{id:"@id",type:"@type",bc:"https://w3id.org/blockcerts#",obi:"https://w3id.org/openbadges#",cp:"https://w3id.org/chainpoint#",schema:"http://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",MerkleProof2017:"sec:MerkleProof2017",RecipientProfile:"bc:RecipientProfile",SignatureLine:"bc:SignatureLine",MerkleProofVerification2017:"bc:MerkleProofVerification2017",recipientProfile:"bc:recipientProfile",signatureLines:"bc:signatureLines",introductionUrl:{"@id":"bc:introductionUrl","@type":"@id"},subtitle:"bc:subtitle",jobTitle:"schema:jobTitle",creator:{"@id":"dc:creator","@type":"@id"},expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},revoked:{"@id":"sec:expiration","@type":"xsd:dateTime"},CryptographicKey:"sec:Key",signature:"sec:signature",verification:"bc:verification",publicKeys:"bc:publicKeys",ChainpointSHA256v2:"cp:ChainpointSHA256v2",BTCOpReturn:"cp:BTCOpReturn",targetHash:"cp:targetHash",merkleRoot:"cp:merkleRoot",proof:"cp:proof",anchors:"cp:anchors",sourceId:"cp:sourceId",right:"cp:right",left:"cp:left"},"obi:validation":[{"obi:validatesType":"RecipientProfile","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.0-alpha/recipientSchema.json"},{"obi:validatesType":"SignatureLine","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.0-alpha/signatureLineSchema.json"},{"obi:validatesType":"MerkleProof2017","obi:validationSchema":"https://w3id.org/blockcerts/schema/2.0-alpha/merkleProof2017Schema.json"}]},lr={"@context":{id:"@id",type:"@type",bc:"https://w3id.org/blockcerts#",cp:"https://w3id.org/chainpoint#",schema:"http://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",MerkleProof2019:"sec:MerkleProof2019",BlockcertsCredential:"bc:BlockcertsCredential",introductionUrl:{"@id":"bc:introductionUrl","@type":"@id"},CryptographicKey:"sec:Key",domain:"sec:domain",nonce:"sec:nonce",proofValue:"sec:proofValue",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab"},verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"},created:{"@id":"bc:created","@type":"xsd:dateTime"},name:{"@id":"schema:name"}}},rr={"@context":{id:"@id",type:"@type",bc:"https://w3id.org/blockcerts#",cp:"https://w3id.org/chainpoint#",vc:"https://www.w3.org/2018/credentials/v1",schema:"https://schema.org/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",MerkleProof2019:"sec:MerkleProof2019",BlockcertsCredential:"bc:BlockcertsCredential",introductionUrl:{"@id":"bc:introductionUrl","@type":"@id"},metadata:"bc:metadata",display:{"@id":"bc:display","@context":{id:"@id",type:"@type",contentMediaType:{"@id":"bc:contentMediaType","@type":"@id"},contentEncoding:{"@id":"bc:contentEncoding","@type":"@id"},content:{"@id":"bc:content","@type":"@id"}}},CryptographicKey:"sec:Key",domain:"sec:domain",nonce:"sec:nonce",proofValue:"sec:proofValue",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"},proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab"},verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"},created:{"@id":"https://purl.org/dc/terms/created","@type":"xsd:dateTime"},challenge:"sec:challenge",expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},name:{"@id":"schema:name"},description:{"@id":"schema:description"},email:{"@id":"schema:email"},publicKey:{"@id":"sec:publicKey","@type":"@id"},url:{"@id":"schema:url","@type":"@id"},image:{"@id":"schema:image","@type":"@id"}}},ir={"@context":{id:"@id",type:"@type","@protected":!0,proof:{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"},Ed25519VerificationKey2020:{"@id":"https://w3id.org/security#Ed25519VerificationKey2020","@context":{"@protected":!0,id:"@id",type:"@type",controller:{"@id":"https://w3id.org/security#controller","@type":"@id"},revoked:{"@id":"https://w3id.org/security#revoked","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},publicKeyMultibase:{"@id":"https://w3id.org/security#publicKeyMultibase","@type":"https://w3id.org/security#multibase"}}},Ed25519Signature2020:{"@id":"https://w3id.org/security#Ed25519Signature2020","@context":{"@protected":!0,id:"@id",type:"@type",challenge:"https://w3id.org/security#challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},domain:"https://w3id.org/security#domain",expires:{"@id":"https://w3id.org/security#expiration","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},nonce:"https://w3id.org/security#nonce",proofPurpose:{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@protected":!0,id:"@id",type:"@type",assertionMethod:{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"},capabilityInvocation:{"@id":"https://w3id.org/security#capabilityInvocationMethod","@type":"@id","@container":"@set"},capabilityDelegation:{"@id":"https://w3id.org/security#capabilityDelegationMethod","@type":"@id","@container":"@set"},keyAgreement:{"@id":"https://w3id.org/security#keyAgreementMethod","@type":"@id","@container":"@set"}}},proofValue:{"@id":"https://w3id.org/security#proofValue","@type":"https://w3id.org/security#multibase"},verificationMethod:{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}}};nr["https://w3id.org/blockcerts/schema/2.0-alpha/context.json"]=tr,nr["https://www.blockcerts.org/schema/2.0-alpha/context.json"]=tr,nr["https://www.blockcerts.org/schema/3.0-alpha/context.json"]=lr,nr["https://w3id.org/blockcerts/schema/3.0-alpha/context.json"]=lr,nr["https://w3id.org/blockcerts/v3.0-alpha"]=lr,nr["https://www.blockcerts.org/schema/3.0-beta/context.json"]=rr,nr["https://w3id.org/blockcerts/schema/3.0-beta/context.json"]=rr,nr["https://w3id.org/blockcerts/v3.0-beta"]=rr,nr["https://w3id.org/security/suites/ed25519-2020/v1"]=ir;const ur={locale:"en-US"};var or=Object.freeze({__proto__:null,isMainnet:function(e){return Ol(e,"1")||Ol(e,Bl)}});var sr={locale:"en-US"},ar={"en-US":{steps:{formatValidationLabel:"Format validation",formatValidationLabelPending:"Validating format",signatureVerificationLabel:"Proof Verification",signatureVerificationLabelPending:"Verifying Proof",identityVerificationLabel:"Identity verification",identityVerificationLabelPending:"Verifying identity",statusCheckLabel:"Status check",statusCheckLabelPending:"Checking record status"},subSteps:{getTransactionIdLabel:"Get transaction ID",getTransactionIdLabelPending:"Getting transaction ID",computeLocalHashLabel:"Compute local hash",computeLocalHashLabelPending:"Computing local hash",fetchRemoteHashLabel:"Fetch remote hash",fetchRemoteHashLabelPending:"Fetching remote hash",getIssuerProfileLabel:"Get issuer profile",getIssuerProfileLabelPending:"Getting issuer profile",parseIssuerKeysLabel:"Parse issuer keys",parseIssuerKeysLabelPending:"Parsing issuer keys",compareHashesLabel:"Compare hashes",compareHashesLabelPending:"Comparing hashes",checkDocumentSignatureLabel:"Check document signature",checkDocumentSignatureLabelPending:"Checking document signature",checkMerkleRootLabel:"Check Merkle Root",checkMerkleRootLabelPending:"Checking Merkle Root",checkReceiptLabel:"Check Receipt",checkReceiptLabelPending:"Checking Receipt",checkAuthenticityLabel:"Check Authenticity",checkAuthenticityLabelPending:"Checking Authenticity",checkRevokedStatusLabel:"Check Revoked Status",checkRevokedStatusLabelPending:"Checking Revoked Status",checkExpiresDateLabel:"Check Expiration Date",checkExpiresDateLabelPending:"Checking Expiration Date",controlVerificationMethodLabel:"Control Verification Method",controlVerificationMethodLabelPending:"Controlling Verification Method",retrieveVerificationMethodPublicKeyLabel:"Extract Public Key from DID Document",retrieveVerificationMethodPublicKeyLabelPending:"Extracting Public Key from DID Document",deriveIssuingAddressFromPublicKeyLabel:"Derive Issuing Address from Public Key",deriveIssuingAddressFromPublicKeyLabelPending:"Deriving Issuing Address from Public Key",compareIssuingAddressLabel:"Compare addresses",compareIssuingAddressLabelPending:"Comparing addresses",checkImagesIntegrityLabel:"Verify Images Integrity",checkImagesIntegrityLabelPending:"Verifying Images Integrity"},revocation:{preReason:"Reason given:",reason:"This certificate has been revoked by the issuer."},success:{mocknet:{label:"This Mocknet credential passed all checks",description:"Mocknet credentials are used for test purposes only. They are not recorded on a blockchain, and they should not be considered verified Blockcerts."},blockchain:{label:"Verified",description:"This is a valid ${chain} certificate.",linkText:"View transaction link"},multisign:{label:"Verified",description:"All the signatures of this certificate have successfully verified."}},errors:{certificateNotValid:"This is not a valid certificate",couldNotConfirmTx:"Could not confirm the transaction",ensureHashesEqual:"Computed hash does not match remote hash",ensureMerkleRootEqual:"Merkle root does not match remote hash.",ensureNotExpired:"This certificate has expired.",ensureValidReceipt:"The receipt is malformed. There was a problem navigating the merkle tree in the receipt.",failedJsonLdNormalization:"Failed JSON-LD normalization",foundUnmappedFields:"Found unmapped fields during JSON-LD normalization",identityErrorBaseMessage:"Issuer identity mismatch",deriveIssuingAddressFromPublicKey:"Unsupported blockchain for DID verification",controlVerificationMethod:"The identity document provided by the issuer does not match the verification method",retrieveVerificationMethodPublicKey:"The identity document provided by the issuer does not reference the verification method",compareIssuingAddress:"The provided verification method does not match the issuer identity",invalidIssuingAddressCreationTime:"The specified issuing address was created after the transaction occurred.",invalidIssuingAddressRevoked:"The specified issuing address was revoked by the issuer before the transaction occurred.",invalidIssuingAddressExpired:"The specified issuing address expired before the transaction occurred.",invalidIssuingAddressUnknown:"The address used to issue this Blockcerts does not belong to the claimed issuer.",getChain:"Didn't recognize chain value",getIssuerProfile:"Unable to get issuer profile",getRevokedAssertions:"Unable to get revocation assertions",getTransactionId:"Cannot verify this certificate without a transaction ID to compare against.",invalidMerkleReceipt:"Invalid Merkle Receipt. Proof hash did not match Merkle root",invalidMerkleVersion:"Merkle version used for signature is incompatible with Blockcerts version.",isTransactionIdValid:"Cannot verify this certificate without a transaction ID to compare against.",issuerProfileNotSet:"no issuer address given",issuerProfileInvalid:"retrieved file does not seem to be a valid profile",parseIssuerKeys:"Unable to parse JSON out of issuer identification data.",checkImagesIntegrity:"Image integrity verification proved that the content was modified after issuance."}},fr:{steps:{formatValidationLabel:"Validation du format",formatValidationLabelPending:"Validation du format",signatureVerificationLabel:"Vérification de la preuve",signatureVerificationLabelPending:"Vérification de la preuve",identityVerificationLabel:"Vérification de l'identité",identityVerificationLabelPending:"Vérification de l'identité",statusCheckLabel:"Vérification du status",statusCheckLabelPending:"Vérification du status"},subSteps:{getTransactionIdLabel:"Obtention de l'identifiant de transaction",getTransactionIdLabelPending:"Obtention de l'identifiant de transaction",computeLocalHashLabel:"Calcul du hash local",computeLocalHashLabelPending:"Calcul du hash local",fetchRemoteHashLabel:"Récupération du hash distant",fetchRemoteHashLabelPending:"Récupération du hash distant",getIssuerProfileLabel:"Obtention du profil de l'émetteur",getIssuerProfileLabelPending:"Obtention du profil de l'émetteur",parseIssuerKeysLabel:"Traitement des clés de l'émetteur",parseIssuerKeysLabelPending:"Traitement des clés de l'émetteur",compareHashesLabel:"Comparaison des hash",compareHashesLabelPending:"Comparaison des hashs",checkDocumentSignatureLabel:"Vérification de la signature du document",checkDocumentSignatureLabelPending:"Vérification de la signature du document",checkMerkleRootLabel:"Vérification du Merkle Root",checkMerkleRootLabelPending:"Vérification du  Merkle Root",checkReceiptLabel:"Vérification du reçu",checkReceiptLabelPending:"Vérification du reçu",checkAuthenticityLabel:"Vérification de l'authenticité",checkAuthenticityLabelPending:"Vérification de l'authenticité",checkRevokedStatusLabel:"Vérification du status de révocation",checkRevokedStatusLabelPending:"Vérification du status de révocation",checkExpiresDateLabel:"Vérification de la date d'expiration",checkExpiresDateLabelPending:"Vérification de la date d'expiration",controlVerificationMethodLabel:"Contrôle de la Méthode de Vérification",controlVerificationMethodLabelPending:"Contrôle de la Méthode de Vérification",retrieveVerificationMethodPublicKeyLabel:"Extraction de la clé publique depuis le document DID",retrieveVerificationMethodPublicKeyLabelPending:"Extraction de la clé publique depuis le document DID",deriveIssuingAddressFromPublicKeyLabel:"Dérivation de l'adresse d'émission depuis la clé publique",deriveIssuingAddressFromPublicKeyLabelPending:"Dérivation de l'adresse d'émission depuis la clé publique",compareIssuingAddressLabel:"Comparaison des adresses",compareIssuingAddressLabelPending:"Comparaison des adresses",checkImagesIntegrityLabel:"Vérification de l'Intégrité des Images",checkImagesIntegrityLabelPending:"Vérification de l'Intégrité des Images"},revocation:{preReason:"Raison :",reason:"Ce certificat a été révoqué par l'émetteur."},success:{mocknet:{label:"Cet enregistrement Mocknet a été vérifié",description:"Le mode Mocknet est utilisé à des fins de tests uniquement. Ce Blockcert n'a pas été enregistré sur une blockchain, et en tant que tel ne peut pas être considéré un Blockcert valide."},blockchain:{label:"Vérifié",description:"Ceci est un certificat ${chain} valide.",linkText:"Voir la transaction"},multisign:{label:"Vérifié",description:"Toutes les signatures numériques de ce certificat ont été vérifiées avec succès."}},errors:{certificateNotValid:"Certificat invalide",couldNotConfirmTx:"Impossible de confirmer la transaction",ensureHashesEqual:"Calcul du hash local différent du hash distant",ensureMerkleRootEqual:"Le Merkle root ne correspond pas au hash distant",ensureNotExpired:"Certificat expiré",ensureValidReceipt:"Erreur d'écriture du reçu. Un problème est survenu lors de la navigation de l'arbre Merkle du reçu.",failedJsonLdNormalization:"Erreur de normalisation JSON-LD",foundUnmappedFields:"Champs non liés découverts durant la normalisation JSON-LD",identityErrorBaseMessage:"Identité de l'émetteur invalide",deriveIssuingAddressFromPublicKey:"Cette blockchain n'est pas supportée pour la vérification de l'identité décentralisée.",controlVerificationMethod:"Le document d'identité de l'émetteur ne correspond pas à la méthode de vérification.",retrieveVerificationMethodPublicKey:"Le document d'identité de l'émetteur ne fait pas mention de la méthode de vérification.",compareIssuingAddress:"La méthode de vérification n'a pas permis d'établir l'identité de l'émetteur.",invalidIssuingAddressCreationTime:"L'adresse d'émission utilisée a été créée après la transaction d'enregistrement.",invalidIssuingAddressRevoked:"L'adresse d'émission utilisée a été décommissionnée par l'émetteur avant la transaction d'enregistrement.",invalidIssuingAddressExpired:"L'adresse d'émission utilisée a expiré avant la transaction.",invalidIssuingAddressUnknown:"L'adresse utilisée pour émettre ce Blockcerts n'appartient à l'émetteur déclaré.",getChain:"Valeur de chaine non reconnue",getIssuerProfile:"Profil de l'émetteur indisponible",getRevokedAssertions:"Impossible d'obtenir les raisons de revocation",getTransactionId:"Impossible de vérifier ce certificat sans un identifiant de transaction valide",invalidMerkleReceipt:"Reçu Merkle invalide. Hash de preuve différent du Merkle root",invalidMerkleVersion:"La version du Merkle utilisé est incompatible avec la version Blockcerts.",isTransactionIdValid:"Impossible de vérifier ce certificat sans un identifiant de transaction valide",issuerProfileNotSet:"l'URL de l'émetteur n'est pas définie",issuerProfileInvalid:"le document distant ne semble pas être un profil d'émetteur valide",parseIssuerKeys:"Impossible de lire le JSON d'identification de l'émetteur",checkImagesIntegrity:"La vérification des images a prouvé que le contenu a été modifié après l'émission."}},es:{steps:{formatValidationLabel:"Validación de formato",formatValidationLabelPending:"Validando el formato",signatureVerificationLabel:"Verificar prueba",signatureVerificationLabelPending:"Verificando prueba",identityVerificationLabel:"Verificar identitad",identityVerificationLabelPending:"Verificando identitad",statusCheckLabel:"Estado de Verificación",statusCheckLabelPending:"Verificando Estado de Grabación"},subSteps:{getTransactionIdLabel:"Obtener Identificación de Transacción",getTransactionIdLabelPending:"Obteniendo Identificación de Transacción",computeLocalHashLabel:"Calcular cadena binaria local",computeLocalHashLabelPending:"Calculando cadena binaria local",fetchRemoteHashLabel:"Obtener cadena binaria remota",fetchRemoteHashLabelPending:"Obeniendo cadena binaria remota",getIssuerProfileLabel:"Obtener perfil de emisor",getIssuerProfileLabelPending:"Obteniendo perfil de emisor",parseIssuerKeysLabel:"Analizar claves del emisor",parseIssuerKeysLabelPending:"Analizando claves del emisor",compareHashesLabel:"Comparar cadenas binarias",compareHashesLabelPending:"Comparando cadenas binarias",checkDocumentSignatureLabel:"Controlar firma del documento",checkDocumentSignatureLabelPending:"Controlando firma del documento",checkMerkleRootLabel:"Verificar Merkle Root",checkMerkleRootLabelPending:"Verificando Merkle Root",checkReceiptLabel:"Verificar Recibo",checkReceiptLabelPending:"Verificando Recibo",checkAuthenticityLabel:"Verificar Autenticidad",checkAuthenticityLabelPending:"Verificando Autenticidad",checkRevokedStatusLabel:"Verificar Estado de Revocación",checkRevokedStatusLabelPending:"Verificando Estado de Revocación",checkExpiresDateLabel:"Verificar Fechas de Expiración",checkExpiresDateLabelPending:"Verificando Fechas de Expiración",controlVerificationMethodLabel:"Controlar Metodo de Verificación",controlVerificationMethodLabelPending:"Controlando Metodo de Verificación",retrieveVerificationMethodPublicKeyLabel:"Extraer la llave pública desde el documento DID",retrieveVerificationMethodPublicKeyLabelPending:"Extraendo la llave pública desde el documento DID",deriveIssuingAddressFromPublicKeyLabel:"Derivar la dirección del emisor desde la llave pública",deriveIssuingAddressFromPublicKeyLabelPending:"Derivando la dirección del emisor desde la llave pública",compareIssuingAddressLabel:"Comparar direcciones",compareIssuingAddressLabelPending:"Comparando direcciones",checkImagesIntegrityLabel:"Comprobar Integridad de las Imagens",checkImagesIntegrityLabelPending:"Comprobando Integridad de las Imagens"},revocation:{preReason:"Razón dada:",reason:"Este certificado ha sido revocado por el emisor"},success:{mocknet:{label:"Esta credencial de Mocknet pasó todas las comprobaciones",description:"Las credenciales de Mocknet se usan solo con fines de prueba. No se graban en una cadena de bloques, y no se deben considerar Blockcerts Verificados."},blockchain:{label:"Verificado",description:"Este es un certificado válido de ${chain}.",linkText:"Ver enlace de transacción"},multisign:{label:"Verificado",description:"Todas las firmas digitales de este certificado han verificado con éxito."}},errors:{certificateNotValid:"Este no es un certificado válido",couldNotConfirmTx:"No se ha podido confirmar la transacción",ensureHashesEqual:"La cadena binaria calculada no corresponde con la cadena binaria remota",ensureMerkleRootEqual:"La raíz Merkle no corresponde con la cadena binaria remota",ensureNotExpired:"Este certificado ha expirado",ensureValidReceipt:"El recibo está malformado. Hubo un problema navegando el árbol Merkle en el recibo",failedJsonLdNormalization:"La normalización del JSON-LD ha fallado",foundUnmappedFields:"Se han encontrado campos no mapeados durante la normalización de JSON-LD",identityErrorBaseMessage:"Identitad del emisor inválida",deriveIssuingAddressFromPublicKey:"No se puede validar la identitad decentalisada con esta cadena binaria.",controlVerificationMethod:"El documento de identitad del emisor no corresponde al metodo de verificación.",retrieveVerificationMethodPublicKey:"El documento de identitad del emisor no hace constar al metodo de verificación.",compareIssuingAddress:"El metodo de verificación no corresponde a la identitad del emisor.",invalidIssuingAddressCreationTime:"The specified issuing address was created after the transaction occurred.",invalidIssuingAddressRevoked:"The specified issuing address was revoked by the issuer before the transaction occurred.",invalidIssuingAddressExpired:"The specified issuing address expired before the transaction occurred.",invalidIssuingAddressUnknown:"The address used to issue this Blockcerts does not belong to the claimed issuer.",getChain:"Valor de cadena no reconocido",getIssuerProfile:"No se ha podido obtener el perfil del emisor",getRevokedAssertions:"No se ha podido obtener aseveraciones de revocación",getTransactionId:"No se puede verificar este certificado sin una identificación de transacción que sirva como comparación",invalidMerkleReceipt:"Recibo Merkle inválido. La cadena binaria de prueba no corresponde con la raíz Merkle",invalidMerkleVersion:"Merkle version used for signature is incompatible with Blockcerts version.",isTransactionIdValid:"No se puede verificar este certificado sin una identificación de transacción que sirva como comparación",issuerProfileNotSet:"URL del emisor no definido",issuerProfileInvalid:"el documento recogido no parece ser un perfil de emisor valido",parseIssuerKeys:"No se ha podido analizar el JSON de la información de identificación del emisor",checkImagesIntegrity:"La verificación de la integridad de los imagens provó alteración del contenido después de la emisión."}},mt:{steps:{formatValidationLabel:"Validazzjoni tal-format",formatValidationLabelPending:"Il-format qed jiġi vvalidat",signatureVerificationLabel:"Proof Verification",signatureVerificationLabelPending:"Verifying Proof",identityVerificationLabel:"Identity verification",identityVerificationLabelPending:"Verifying identity",statusCheckLabel:"Status check",statusCheckLabelPending:"Ir-record status qed jiġi ċċekkjat"},subSteps:{getTransactionIdLabel:"Ikseb l-ID ta' tranżazzjoni",getTransactionIdLabelPending:"L-ID ta' tranżazzjoni qed tiġi mniżżla",computeLocalHashLabel:"Ikkalkula l-hash lokali",computeLocalHashLabelPending:"Il-hash lokali qed jiġi kkalkulat",fetchRemoteHashLabel:"Fittex ir-remote hash",fetchRemoteHashLabelPending:"Ir-remote hash qed jiġi mfittex",getIssuerProfileLabel:"Ikseb il-profil tal-emittent",getIssuerProfileLabelPending:"Il-profil tal-emittent qed jiġi mniżżel",parseIssuerKeysLabel:"Estratta ċ-ċwievet tal-emittent",parseIssuerKeysLabelPending:"Iċ-ċwievet tal-emittent qed jiġu estratti",compareHashesLabel:"Ikkumpara l-hashes",compareHashesLabelPending:"Il-hashes qed jiġu kkomparati",checkDocumentSignatureLabel:"Check document signature",checkDocumentSignatureLabelPending:"Checking document signature",checkMerkleRootLabel:"Iċċekkja l-Merkle Root",checkMerkleRootLabelPending:"Il-Merkle Root Qed Tiġi Ċċekkjata",checkReceiptLabel:"Iċċekkja l-Irċevuta",checkReceiptLabelPending:"L-Irċevuta Qed Tiġi Ċċekkjata",checkAuthenticityLabel:"Iċċekkja l-Awtentiċità",checkAuthenticityLabelPending:"L-Awtentiċità Qed Tiġi Ċċekkjata",checkRevokedStatusLabel:"Iċċekkja l-Istatus Revokat",checkRevokedStatusLabelPending:"L-Istatus Revokat Qed Jiġi Ċċekkjat",checkExpiresDateLabel:"Iċċekkja d-Data ta' Skadenza",checkExpiresDateLabelPending:"Id-Data ta' Skadenza Qed Tiġi Ċċekkjata",controlVerificationMethodLabel:"Control Verification Method",controlVerificationMethodLabelPending:"Controlling Verification Method",retrieveVerificationMethodPublicKeyLabel:"Extract Public Key from DID Document",retrieveVerificationMethodPublicKeyLabelPending:"Extracting Public Key from DID Document",deriveIssuingAddressFromPublicKeyLabel:"Derive Issuing Address from Public Key",deriveIssuingAddressFromPublicKeyLabelPending:"Deriving Issuing Address from Public Key",compareIssuingAddressLabel:"Compare addresses",compareIssuingAddressLabelPending:"Comparing addresses",checkImagesIntegrityLabel:"Verify Images Integrity",checkImagesIntegrityLabelPending:"Verifying Images Integrity"},revocation:{preReason:"Raġuni mogħtija:",reason:"Dan iċ-ċertifikat ġie revokat mill-emittent."},success:{mocknet:{label:"Din il-kredenzjali tal-Mocknet għaddiet il-kontrolli kollha",description:"Il-kredenzjali tal-Mocknet jintużaw biss għal skopijiet ta 'ttestjar. Dawn mhumiex irreġistrati fuq blockchain, u ma għandhomx jiġu kkunsidrati bħala blockcerts verifikati."},blockchain:{label:"Ivverifikat",description:"Dan huwa ċertifikat ${chain} huwa validu.",linkText:"Ara l-link tat-transazzjoni"},multisign:{label:"Ivverifikat",description:"All the signatures of this certificate have successfully verified."}},errors:{certificateNotValid:"Dan mhux ċertifikat validu",couldNotConfirmTx:"Ma setgħetx tiġi kkonfermata t-tranżazzjoni",ensureHashesEqual:"Il-hash ikkalkulat ma jikkorrispondix mar-remote hash",ensureMerkleRootEqual:"Merkle root ma taqbilx mar-remote hash",ensureNotExpired:"Dan iċ-ċertifikat skada",ensureValidReceipt:"L-irċevuta hija malformata. Kien hemm problema fin-navigazzjoni tal-merkle tree fl-irċevuta",failedJsonLdNormalization:"In-normalizzazzjoni ta' JSON-LD ma rnexxietx",foundUnmappedFields:"Instabu unmapped fields matul in-normalizzazzjoni JSON-LD",identityErrorBaseMessage:"Issuer identity mismatch",deriveIssuingAddressFromPublicKey:"Unsupported blockchain for DID verification",controlVerificationMethod:"The identity document provided by the issuer does not match the verification method",retrieveVerificationMethodPublicKey:"The identity document provided by the issuer does not reference the verification method",compareIssuingAddress:"The provided verification method does not match the issuer identity",invalidIssuingAddressCreationTime:"L-indirizz elettroniku tal-ħruġ speċifikat inħoloq wara li seħħet it-tranżazzjoni.",invalidIssuingAddressRevoked:"L-indirizz elettroniku tal-ħruġ speċifikat ġie revokat mill-emittent qabel ma seħħet it-tranżazzjoni.",invalidIssuingAddressExpired:"L-indirizz elettroniku tal-ħruġ speċifikat skada qabel ma seħħet it-tranżazzjoni.",invalidIssuingAddressUnknown:"L-indirizz elettroniku użat biex jinħarġu dawn il-Blockcerts ma jappartjenix għall-emittent mitlub.",getChain:"Iċ-chain value ma ntgħarafx",getIssuerProfile:"Mhux possibbli jinkiseb il-profil tal-emittent",getRevokedAssertions:"Mhux possibbli jinkisbu dikjarazzjonijiet revokati",getTransactionId:"Dan iċ-ċertifikat ma jistax jiġi vverifikat mingħajr ID ta' tranżazzjoni mqabbla miegħu",invalidMerkleReceipt:"Irċevuta Merkle invalida. Il-proof hash ma kienx jaqbel mal-Merkle root",invalidMerkleVersion:"Merkle version used for signature is incompatible with Blockcerts version.",isTransactionIdValid:"Dan iċ-ċertifikat ma jistax jiġi vverifikat mingħajr ID ta' tranżazzjoni mqabbla miegħu",issuerProfileNotSet:"no issuer address given",issuerProfileInvalid:"retrieved file does not seem to be a valid profile",parseIssuerKeys:"Ma jistax jiġi estratt JSON mid-data tal-identifikazzjoni tal-emittent",checkImagesIntegrity:"Image integrity verification proved that the content was modified after issuance."}},"it-IT":{steps:{formatValidationLabel:"Convalidare formato",formatValidationLabelPending:"Convalida formato",signatureVerificationLabel:"Proof Verification",signatureVerificationLabelPending:"Verifying Proof",identityVerificationLabel:"Identity verification",identityVerificationLabelPending:"Verifying identity",statusCheckLabel:"Verificare stato",statusCheckLabelPending:"Verifica stato del record"},subSteps:{getTransactionIdLabel:"Ottenere ID transazione",getTransactionIdLabelPending:"Ottieni ID transazione",computeLocalHashLabel:"Calcolare hash locale",computeLocalHashLabelPending:"Calcola hash locale",fetchRemoteHashLabel:"Recuperare hash remoto",fetchRemoteHashLabelPending:"Recupera hash remoto",getIssuerProfileLabel:"Ottenere profilo issuer",getIssuerProfileLabelPending:"Ottieni profilo issuer",parseIssuerKeysLabel:"Analizzare chiavi issuer",parseIssuerKeysLabelPending:"Analizza chiavi issuer",compareHashesLabel:"Confrontare gli hash",compareHashesLabelPending:"Confronto hash",checkDocumentSignatureLabel:"Check document signature",checkDocumentSignatureLabelPending:"Checking document signature",checkMerkleRootLabel:"Controllare radice di Merkle",checkMerkleRootLabelPending:"Controllo radice di Merkle",checkReceiptLabel:"Verificare ricevuta",checkReceiptLabelPending:"Verifica ricevuta",checkAuthenticityLabel:"Verificare autenticità",checkAuthenticityLabelPending:"Verifica autenticità",checkRevokedStatusLabel:"Verificare stato revocato",checkRevokedStatusLabelPending:"Verifica stato revocato",checkExpiresDateLabel:"Verificare data di scadenza",checkExpiresDateLabelPending:"Verifica data di scadenza",controlVerificationMethodLabel:"Control Verification Method",controlVerificationMethodLabelPending:"Controlling Verification Method",retrieveVerificationMethodPublicKeyLabel:"Extract Public Key from DID Document",retrieveVerificationMethodPublicKeyLabelPending:"Extracting Public Key from DID Document",deriveIssuingAddressFromPublicKeyLabel:"Derive Issuing Address from Public Key",deriveIssuingAddressFromPublicKeyLabelPending:"Deriving Issuing Address from Public Key",compareIssuingAddressLabel:"Compare addresses",compareIssuingAddressLabelPending:"Comparing addresses",checkImagesIntegrityLabel:"Verify Images Integrity",checkImagesIntegrityLabelPending:"Verifying Images Integrity"},revocation:{preReason:"Motivo indicato:",reason:"Questo certificato è stato revocato dall'emittente."},success:{mocknet:{label:"Questo Blockcert simulato ha superato tutti i controlli.",description:"La modalità Mocknet è utilizzata solo dagli emittenti per testare il loro flusso di lavoro localmente. Questo Blockcert non è stato registrato su una blockchain e non dovrebbe essere considerato un Blockcert verificato."},blockchain:{label:"Verificato",description:"Questo è un certificato ${chain} valido.",linkText:"Vedi la transazione"},multisign:{label:"Verificato",description:"All the signatures of this certificate have successfully verified."}},errors:{certificateNotValid:"Questo non è un certificato valido",couldNotConfirmTx:"Impossibile confermare la transazione",ensureHashesEqual:"L'hash calcolato non corrisponde all'hash remoto",ensureMerkleRootEqual:"La radice di Merkle non corrisponde all'hash remoto.",ensureNotExpired:"Questo certificato è scaduto.",ensureValidReceipt:"La ricevuta è malformata. C'è stato un problema nella navigazione dell'albero di Merkle nella ricevuta.",failedJsonLdNormalization:"Normalizzazione JSON-LD fallita",foundUnmappedFields:"Campi non mappati trovati durante la normalizzazione JSON-LD",identityErrorBaseMessage:"Issuer identity mismatch",deriveIssuingAddressFromPublicKey:"Unsupported blockchain for DID verification",controlVerificationMethod:"The identity document provided by the issuer does not match the verification method",retrieveVerificationMethodPublicKey:"The identity document provided by the issuer does not reference the verification method",compareIssuingAddress:"The provided verification method does not match the issuer identity",invalidIssuingAddressCreationTime:"The specified issuing address was created after the transaction occurred.",invalidIssuingAddressRevoked:"The specified issuing address was revoked by the issuer before the transaction occurred.",invalidIssuingAddressExpired:"The specified issuing address expired before the transaction occurred.",invalidIssuingAddressUnknown:"The address used to issue this Blockcerts does not belong to the claimed issuer.",getChain:"Il valore della catena non è stato riconosciuto",getIssuerProfile:"Impossibile ottenere il profilo dell'emittente",getRevokedAssertions:"Impossibile ottenere le asserzioni di revoca",getTransactionId:"Impossibile verificare questo certificato senza un ID transazione da confrontare.",invalidMerkleReceipt:"Ricevuta Merkle non valida. L'hash di prova non corrisponde alla radice di Merkle",invalidMerkleVersion:"Merkle version used for signature is incompatible with Blockcerts version.",isTransactionIdValid:"Impossibile verificare questo certificato senza un ID transazione da confrontare.",issuerProfileNotSet:"no issuer address given",issuerProfileInvalid:"retrieved file does not seem to be a valid profile",parseIssuerKeys:"Impossibile analizzare JSON dai dati di identificazione dell'emittente.",checkImagesIntegrity:"Image integrity verification proved that the content was modified after issuance."}},ja:{steps:{formatValidationLabel:"フォーマットの検証",formatValidationLabelPending:"フォーマットを検証しています",signatureVerificationLabel:"Proof Verification",signatureVerificationLabelPending:"Verifying Proof",identityVerificationLabel:"Identity verification",identityVerificationLabelPending:"Verifying identity",statusCheckLabel:"ステータスの確認",statusCheckLabelPending:"ステータスを確認しています"},subSteps:{getTransactionIdLabel:"取引IDの取得",getTransactionIdLabelPending:"取引IDを取得しています",computeLocalHashLabel:"ローカルハッシュの算出",computeLocalHashLabelPending:"ローカルハッシュを算出しています",fetchRemoteHashLabel:"リモートハッシュのフェッチ",fetchRemoteHashLabelPending:"リモートハッシュをフェッチしています",getIssuerProfileLabel:"発行者プロフィールの取得",getIssuerProfileLabelPending:"発行者プロフィールを取得しています",parseIssuerKeysLabel:"発行者の鍵のパース",parseIssuerKeysLabelPending:"発行者の鍵をパースしています",compareHashesLabel:"ハッシュの照合",compareHashesLabelPending:"ハッシュを照合しています",checkDocumentSignatureLabel:"Check document signature",checkDocumentSignatureLabelPending:"Checking document signature",checkMerkleRootLabel:"Merkle Rootの確認",checkMerkleRootLabelPending:"Merkle Rootを確認しています",checkReceiptLabel:"レシートの確認",checkReceiptLabelPending:"レシートを確認しています",checkAuthenticityLabel:"真正性の確認",checkAuthenticityLabelPending:"真正性を確認しています",checkRevokedStatusLabel:"取消ステータスの確認",checkRevokedStatusLabelPending:"取消ステータスを確認しています",checkExpiresDateLabel:"有効期限の確認",checkExpiresDateLabelPending:"有効期限を確認しています",controlVerificationMethodLabel:"Control Verification Method",controlVerificationMethodLabelPending:"Controlling Verification Method",retrieveVerificationMethodPublicKeyLabel:"Extract Public Key from DID Document",retrieveVerificationMethodPublicKeyLabelPending:"Extracting Public Key from DID Document",deriveIssuingAddressFromPublicKeyLabel:"Derive Issuing Address from Public Key",deriveIssuingAddressFromPublicKeyLabelPending:"Deriving Issuing Address from Public Key",compareIssuingAddressLabel:"Compare addresses",compareIssuingAddressLabelPending:"Comparing addresses",checkImagesIntegrityLabel:"Verify Images Integrity",checkImagesIntegrityLabelPending:"Verifying Images Integrity"},revocation:{preReason:"理由：",reason:"この証明書は発行者によって取り消されました。"},success:{mocknet:{label:"このMocknetの証明書は全てのチェックを通過しました。",description:"Mocknetの証明書はテスト用のものです。ブロックチェーンに記録されませんし、認証済みのBlockcertとして扱われません。"},blockchain:{label:"認証されました",description:"この証明書は有効な${chain}証明書です。",linkText:"取引を確認する"},multisign:{label:"認証されました",description:"All the signatures of this certificate have successfully verified."}},errors:{certificateNotValid:"この証明書は有効ではありません",couldNotConfirmTx:"取引を確認できませんでした",ensureHashesEqual:"算出されたハッシュがリモートハッシュと一致しませんでした",ensureMerkleRootEqual:"Merkle rootがリモートハッシュと一致しませんでした",ensureNotExpired:"この証明書の有効期限が切れています",ensureValidReceipt:"レシートが異常です。レシート内のMerkle treeを辿る際に問題が発生しました。",failedJsonLdNormalization:"JSON-LDの正規化に失敗しました",foundUnmappedFields:"JSON-LDの正規化時にマップされていないフィールドを検出しました",identityErrorBaseMessage:"Issuer identity mismatch",deriveIssuingAddressFromPublicKey:"Unsupported blockchain for DID verification",controlVerificationMethod:"The identity document provided by the issuer does not match the verification method",retrieveVerificationMethodPublicKey:"The identity document provided by the issuer does not reference the verification method",compareIssuingAddress:"The provided verification method does not match the issuer identity",invalidIssuingAddressCreationTime:"The specified issuing address was created after the transaction occurred.",invalidIssuingAddressRevoked:"The specified issuing address was revoked by the issuer before the transaction occurred.",invalidIssuingAddressExpired:"The specified issuing address expired before the transaction occurred.",invalidIssuingAddressUnknown:"The address used to issue this Blockcerts does not belong to the claimed issuer.",getChain:"チェーンの値を認識できませんでした",getIssuerProfile:"発行者プロフィールを取得できません",getRevokedAssertions:"取消assertionsを取得できません",getTransactionId:"照合のための取引IDがないため、この証明書を認証できません。",invalidMerkleReceipt:"Merkleレシートが無効です。証明ハッシュがMerkle rootと一致しませんでした。",invalidMerkleVersion:"Merkle version used for signature is incompatible with Blockcerts version.",isTransactionIdValid:"照合するための取引IDがないため、この証明書を認証できません。",issuerProfileNotSet:"no issuer address given",issuerProfileInvalid:"retrieved file does not seem to be a valid profile",parseIssuerKeys:"発行者識別データからJSONをパースできません",checkImagesIntegrity:"Image integrity verification proved that the content was modified after issuance."}}};function cr(e,n){return e&&n?ar[sr.locale]?ar[sr.locale][e]?ar[sr.locale][e][n]?ar[sr.locale][e][n]||"":"[missing locale item data]":"[missing locale group data]":"[missing locale data]":""}function hr(){return Object.keys(ar)}var fr=Object.freeze({__proto__:null,detectLocale:function(){return navigator.language||ur.locale},ensureIsSupported:function(e){let n;const t=Zc.i18n.getSupportedLanguages().map((e=>e.toLowerCase()));if(n=t.includes(e.toLowerCase()),!n){const l=e.substr(0,2).toLowerCase(),r=t.map((e=>e.split("-")[0])).indexOf(l);n=r>-1,n&&(e=t[r])}return n||(e=ur.locale),function(e){const n=e.split("-");return n.length>1?`${n[0].toLowerCase()}-${n[1].toUpperCase()}`:n[0].toLowerCase()}(e)},getText:cr,getSupportedLanguages:hr});function dr(e=""){return or.isMainnet(e)?Ul.bitcoin:Ul.testnet}function pr(e){const n=Object.keys(Ul).map((e=>Ul[e])).find((n=>n.signatureValue===e));if(void 0===n)throw new Error(cr("errors","getChain"));return n}class yr{publicKey;created;revoked;expires;constructor(e,n,t,l){this.publicKey=e,this.created=n,this.revoked=t,this.expires=l}}class gr{image;jobTitle;name;constructor(e,n,t){this.image=e,this.jobTitle=n,this.name=t}}class mr extends Error{stepCode;constructor(e,n){super(n),this.stepCode=e}}const vr=ar[sr.locale];var br,wr;function _r(){return{[br.formatValidation]:{code:br.formatValidation,label:vr.steps.formatValidationLabel,labelPending:vr.steps.formatValidationLabelPending,subSteps:[]},[br.proofVerification]:{code:br.proofVerification,label:vr.steps.signatureVerificationLabel,labelPending:vr.steps.signatureVerificationLabelPending,subSteps:[]},[br.identityVerification]:{code:br.identityVerification,label:vr.steps.identityVerificationLabel,labelPending:vr.steps.identityVerificationLabelPending,subSteps:[]},[br.statusCheck]:{code:br.statusCheck,label:vr.steps.statusCheckLabel,labelPending:vr.steps.statusCheckLabelPending,subSteps:[]}}}!function(e){e.formatValidation="formatValidation",e.proofVerification="proofVerification",e.identityVerification="identityVerification",e.statusCheck="statusCheck",e.final="final"}(br||(br={})),function(e){e.checkImagesIntegrity="checkImagesIntegrity",e.checkRevokedStatus="checkRevokedStatus",e.checkExpiresDate="checkExpiresDate",e.controlVerificationMethod="controlVerificationMethod"}(wr||(wr={}));var Er=Object.freeze({__proto__:null,final:"final",get VerificationSteps(){return br},get SUB_STEPS(){return wr},default:_r});function Sr(e,n){const t=e.findIndex((e=>e===n));t>-1&&e.splice(t,1)}const xr={[br.formatValidation]:[wr.checkImagesIntegrity],[br.proofVerification]:[],[br.identityVerification]:[wr.controlVerificationMethod],[br.statusCheck]:[wr.checkRevokedStatus,wr.checkExpiresDate]};function kr(e,n){return xr[e].filter((e=>n.includes(e))).map((n=>Zc.verifier.convertToVerificationSubsteps(e,n)))}function Ir(e){const n=_r();return Object.keys(n).map((t=>({...n[t],subSteps:kr(t,e)})))}var Pr=Object.freeze({__proto__:null,getChain:function(e,n){const t=n||null;if(t?.anchors){const e=t.anchors[0];if(e.chain){return pr(e.chain)}if("string"==typeof e)return function(e){const n={btc:{chainName:Ul.bitcoin.name},eth:{chainName:Ul.ethmain.name}},t=e.split(":"),l=t.findIndex((e=>Object.keys(n).includes(e)));if(l>-1){const e=t[l],r=t[l+1],i=n[e].chainName.toLowerCase()+function(e){const n=e.substr(0,1),t=e.substr(1,e.length-1);return n.toUpperCase()+t.toLowerCase()}(r);return pr(i)}return dr()}(e)}return dr(e)},generateRevocationReason:function(e){return e=(e=e.trim()).length>0?` ${cr("revocation","preReason")} ${e}${"."!==e.slice(-1)?".":""}`:"",`${cr("revocation","reason")}${e}`},getTransactionId:function(e={}){try{const{anchors:n}=e,t=n[0];if(t.sourceId)return t.sourceId;if("string"==typeof t){return t.split(":").pop()}}catch(e){throw new mr("",cr("errors","getTransactionId"))}},getTransactionLink:function(e,n){return e&&n?{rawTransactionLink:n.transactionTemplates.raw.replace(Nl,e),transactionLink:n.transactionTemplates.full.replace(Nl,e)}:null},getVerificationMap:function(e=!1,n=!1){const t=function(e,n){const t=Object.values(wr);return e||Sr(t,wr.controlVerificationMethod),n||Sr(t,wr.checkImagesIntegrity),t}(e,n);return{verificationProcess:t,verificationMap:Ir(t)}}});var Ar,Tr=Object.freeze({__proto__:null,isMockChain:function(e){if(e){const n="string"==typeof e?e:e.code;return!!Object.keys(Ul).some((e=>e===n))&&!!Ul[n].test}return!1}});!function(e){e.blockcypher="blockcypher",e.blockstream="blockstream",e.etherscan="etherscan"}(Ar||(Ar={}));var Or;!function(e){e.Bitcoin="bitcoin",e.Ethmain="ethmain",e.Ethropst="ethropst",e.Ethrinkeby="ethrinkeby",e.Mocknet="mocknet",e.Regtest="regtest",e.Testnet="testnet"}(Or||(Or={}));const Mr={[Or.Bitcoin]:{code:Or.Bitcoin,name:"Bitcoin",prefixes:["6a20","OP_RETURN "],signatureValue:"bitcoinMainnet",transactionTemplates:{full:"https://blockchain.info/tx/{transaction_id}",raw:"https://blockchain.info/rawtx/{transaction_id}"}},[Or.Ethmain]:{code:Or.Ethmain,name:"Ethereum",prefixes:["0x"],signatureValue:"ethereumMainnet",transactionTemplates:{full:"https://etherscan.io/tx/{transaction_id}",raw:"https://etherscan.io/tx/{transaction_id}"}},[Or.Ethropst]:{code:Or.Ethropst,name:"Ethereum Testnet",signatureValue:"ethereumRopsten",transactionTemplates:{full:"https://ropsten.etherscan.io/tx/{transaction_id}",raw:"https://ropsten.etherscan.io/getRawTx?tx={transaction_id}"}},[Or.Ethrinkeby]:{code:Or.Ethrinkeby,name:"Ethereum Testnet",signatureValue:"ethereumRinkeby",transactionTemplates:{full:"https://rinkeby.etherscan.io/tx/{transaction_id}",raw:"https://rinkeby.etherscan.io/getRawTx?tx={transaction_id}"}},[Or.Mocknet]:{code:Or.Mocknet,name:"Mocknet",test:!0,signatureValue:"mockchain",transactionTemplates:{full:"",raw:""}},[Or.Regtest]:{code:Or.Regtest,name:"Mocknet",test:!0,signatureValue:"bitcoinRegtest",transactionTemplates:{full:"",raw:""}},[Or.Testnet]:{code:Or.Testnet,name:"Bitcoin Testnet",signatureValue:"bitcoinTestnet",transactionTemplates:{full:"https://testnet.blockchain.info/tx/{transaction_id}",raw:"https://testnet.blockchain.info/rawtx/{transaction_id}"}}};function Rr(e){return e!==Mr.bitcoin.code&&e!==Mr.ethmain.code}const Nr=1,Cr=1;var Lr=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};function jr(e,n,t=[]){return Lr(this,void 0,void 0,(function*(){if((e=Array.from(e)).length<n)throw new Error("Could not retrieve tx data");const l=e.map(((e,n)=>e.then((()=>n)).catch((e=>{throw n}))));return Promise.race(l).then((l=>(e.splice(l,1)[0].then((e=>t.push(e))),1===n?t:jr(e,n-1,t)))).catch((l=>(e.splice(l,1),jr(e,n,t))))}))}function Ur({explorerAPI:e,transactionIdPlaceholder:n="{transaction_id}",transactionId:t="",isTestApi:l=!1}){const{serviceURL:r}=e;let i="string"==typeof r?r:l?r.test:r.main;return i=i.replace(n,t),i=function(e,n){if(!n.key)return e;if(n.key&&!n.keyPropertyName)throw new Error(`No keyPropertyName defined for explorerAPI ${n.serviceName}`);return function(e,n,t){const l=e.includes("?")?"&":"?";return`${e}${l}${n}=${t}`}(e,n.keyPropertyName,n.key)}(i,e),i}function Dr(){throw new Error("setTimeout has not been defined")}function Br(){throw new Error("clearTimeout has not been defined")}var Kr=Dr,Fr=Br;function Vr(e){if(Kr===setTimeout)return setTimeout(e,0);if((Kr===Dr||!Kr)&&setTimeout)return Kr=setTimeout,setTimeout(e,0);try{return Kr(e,0)}catch(n){try{return Kr.call(null,e,0)}catch(n){return Kr.call(this,e,0)}}}"function"==typeof s.setTimeout&&(Kr=setTimeout),"function"==typeof s.clearTimeout&&(Fr=clearTimeout);var Hr,qr=[],zr=!1,$r=-1;function Gr(){zr&&Hr&&(zr=!1,Hr.length?qr=Hr.concat(qr):$r=-1,qr.length&&Wr())}function Wr(){if(!zr){var e=Vr(Gr);zr=!0;for(var n=qr.length;n;){for(Hr=qr,qr=[];++$r<n;)Hr&&Hr[$r].run();$r=-1,n=qr.length}Hr=null,zr=!1,function(e){if(Fr===clearTimeout)return clearTimeout(e);if((Fr===Br||!Fr)&&clearTimeout)return Fr=clearTimeout,clearTimeout(e);try{Fr(e)}catch(n){try{return Fr.call(null,e)}catch(n){return Fr.call(this,e)}}}(e)}}function Jr(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];qr.push(new Xr(e,n)),1!==qr.length||zr||Vr(Wr)}function Xr(e,n){this.fun=e,this.array=n}Xr.prototype.run=function(){this.fun.apply(null,this.array)};function Yr(){}var Qr=Yr,Zr=Yr,ei=Yr,ni=Yr,ti=Yr,li=Yr,ri=Yr;var ii=s.performance||{},ui=ii.now||ii.mozNow||ii.msNow||ii.oNow||ii.webkitNow||function(){return(new Date).getTime()};var oi=new Date;var si={nextTick:Jr,title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Qr,addListener:Zr,once:ei,off:ni,removeListener:ti,removeAllListeners:li,emit:ri,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var n=.001*ui.call(ii),t=Math.floor(n),l=Math.floor(n%1*1e9);return e&&(t-=e[0],(l-=e[1])<0&&(t--,l+=1e9)),[t,l]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-oi)/1e3}},ai=2147483647,ci=/[^\x20-\x7E]/,hi=/[\x2E\u3002\uFF0E\uFF61]/g,fi={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},di=Math.floor,pi=String.fromCharCode;
/*! https://mths.be/punycode v1.4.1 by @mathias */function yi(e){throw new RangeError(fi[e])}function gi(e,n){return e+22+75*(e<26)-((0!=n)<<5)}function mi(e,n,t){var l=0;for(e=t?di(e/700):e>>1,e+=di(e/n);e>455;l+=36)e=di(e/35);return di(l+36*e/(e+38))}function vi(e){return function(e,n){var t=e.split("@"),l="";t.length>1&&(l=t[0]+"@",e=t[1]);var r=function(e,n){for(var t=e.length,l=[];t--;)l[t]=n(e[t]);return l}((e=e.replace(hi,".")).split("."),n).join(".");return l+r}(e,(function(e){return ci.test(e)?"xn--"+function(e){var n,t,l,r,i,u,o,s,a,c,h,f,d,p,y,g=[];for(e=function(e){for(var n,t,l=[],r=0,i=e.length;r<i;)(n=e.charCodeAt(r++))>=55296&&n<=56319&&r<i?56320==(64512&(t=e.charCodeAt(r++)))?l.push(((1023&n)<<10)+(1023&t)+65536):(l.push(n),r--):l.push(n);return l}(e),f=e.length,n=128,t=0,i=72,u=0;u<f;++u)(h=e[u])<128&&g.push(pi(h));for(l=r=g.length,r&&g.push("-");l<f;){for(o=ai,u=0;u<f;++u)(h=e[u])>=n&&h<o&&(o=h);for(o-n>di((ai-t)/(d=l+1))&&yi("overflow"),t+=(o-n)*d,n=o,u=0;u<f;++u)if((h=e[u])<n&&++t>ai&&yi("overflow"),h==n){for(s=t,a=36;!(s<(c=a<=i?1:a>=i+26?26:a-i));a+=36)y=s-c,p=36-c,g.push(pi(gi(c+y%p,0))),s=di(y/p);g.push(pi(gi(s,0))),i=mi(t,d,l==r),t=0,++l}++t,++n}return g.join("")}(e):e}))}var bi="function"==typeof Object.create?function(e,n){e.super_=n,e.prototype=Object.create(n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:function(e,n){e.super_=n;var t=function(){};t.prototype=n.prototype,e.prototype=new t,e.prototype.constructor=e},wi=/%[sdj%]/g;function _i(e){if(!Ui(e)){for(var n=[],t=0;t<arguments.length;t++)n.push(Ii(arguments[t]));return n.join(" ")}t=1;for(var l=arguments,r=l.length,i=String(e).replace(wi,(function(e){if("%%"===e)return"%";if(t>=r)return e;switch(e){case"%s":return String(l[t++]);case"%d":return Number(l[t++]);case"%j":try{return JSON.stringify(l[t++])}catch(e){return"[Circular]"}default:return e}})),u=l[t];t<r;u=l[++t])Ci(u)||!Fi(u)?i+=" "+u:i+=" "+Ii(u);return i}function Ei(e,n){if(Bi(s.process))return function(){return Ei(e,n).apply(this,arguments)};if(!0===si.noDeprecation)return e;var t=!1;return function(){if(!t){if(si.throwDeprecation)throw new Error(n);si.traceDeprecation?console.trace(n):console.error(n),t=!0}return e.apply(this,arguments)}}var Si,xi={};function ki(e){if(Bi(Si)&&(Si=si.env.NODE_DEBUG||""),e=e.toUpperCase(),!xi[e])if(new RegExp("\\b"+e+"\\b","i").test(Si)){xi[e]=function(){var n=_i.apply(null,arguments);console.error("%s %d: %s",e,0,n)}}else xi[e]=function(){};return xi[e]}function Ii(e,n){var t={seen:[],stylize:Ai};return arguments.length>=3&&(t.depth=arguments[2]),arguments.length>=4&&(t.colors=arguments[3]),Ni(n)?t.showHidden=n:n&&Qi(t,n),Bi(t.showHidden)&&(t.showHidden=!1),Bi(t.depth)&&(t.depth=2),Bi(t.colors)&&(t.colors=!1),Bi(t.customInspect)&&(t.customInspect=!0),t.colors&&(t.stylize=Pi),Ti(t,e,t.depth)}function Pi(e,n){var t=Ii.styles[n];return t?"["+Ii.colors[t][0]+"m"+e+"["+Ii.colors[t][1]+"m":e}function Ai(e,n){return e}function Ti(e,n,t){if(e.customInspect&&n&&qi(n.inspect)&&n.inspect!==Ii&&(!n.constructor||n.constructor.prototype!==n)){var l=n.inspect(t,e);return Ui(l)||(l=Ti(e,l,t)),l}var r=function(e,n){if(Bi(n))return e.stylize("undefined","undefined");if(Ui(n)){var t="'"+JSON.stringify(n).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string")}if(ji(n))return e.stylize(""+n,"number");if(Ni(n))return e.stylize(""+n,"boolean");if(Ci(n))return e.stylize("null","null")}(e,n);if(r)return r;var i=Object.keys(n),u=function(e){var n={};return e.forEach((function(e,t){n[e]=!0})),n}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(n)),Hi(n)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return Oi(n);if(0===i.length){if(qi(n)){var o=n.name?": "+n.name:"";return e.stylize("[Function"+o+"]","special")}if(Ki(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(Vi(n))return e.stylize(Date.prototype.toString.call(n),"date");if(Hi(n))return Oi(n)}var s,a="",c=!1,h=["{","}"];(Ri(n)&&(c=!0,h=["[","]"]),qi(n))&&(a=" [Function"+(n.name?": "+n.name:"")+"]");return Ki(n)&&(a=" "+RegExp.prototype.toString.call(n)),Vi(n)&&(a=" "+Date.prototype.toUTCString.call(n)),Hi(n)&&(a=" "+Oi(n)),0!==i.length||c&&0!=n.length?t<0?Ki(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),s=c?function(e,n,t,l,r){for(var i=[],u=0,o=n.length;u<o;++u)Zi(n,String(u))?i.push(Mi(e,n,t,l,String(u),!0)):i.push("");return r.forEach((function(r){r.match(/^\d+$/)||i.push(Mi(e,n,t,l,r,!0))})),i}(e,n,t,u,i):i.map((function(l){return Mi(e,n,t,u,l,c)})),e.seen.pop(),function(e,n,t){if(e.reduce((function(e,n){return n.indexOf("\n"),e+n.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return t[0]+(""===n?"":n+"\n ")+" "+e.join(",\n  ")+" "+t[1];return t[0]+n+" "+e.join(", ")+" "+t[1]}(s,a,h)):h[0]+a+h[1]}function Oi(e){return"["+Error.prototype.toString.call(e)+"]"}function Mi(e,n,t,l,r,i){var u,o,s;if((s=Object.getOwnPropertyDescriptor(n,r)||{value:n[r]}).get?o=s.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):s.set&&(o=e.stylize("[Setter]","special")),Zi(l,r)||(u="["+r+"]"),o||(e.seen.indexOf(s.value)<0?(o=Ci(t)?Ti(e,s.value,null):Ti(e,s.value,t-1)).indexOf("\n")>-1&&(o=i?o.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+o.split("\n").map((function(e){return"   "+e})).join("\n")):o=e.stylize("[Circular]","special")),Bi(u)){if(i&&r.match(/^\d+$/))return o;(u=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(u=u.substr(1,u.length-2),u=e.stylize(u,"name")):(u=u.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),u=e.stylize(u,"string"))}return u+": "+o}function Ri(e){return Array.isArray(e)}function Ni(e){return"boolean"==typeof e}function Ci(e){return null===e}function Li(e){return null==e}function ji(e){return"number"==typeof e}function Ui(e){return"string"==typeof e}function Di(e){return"symbol"==typeof e}function Bi(e){return void 0===e}function Ki(e){return Fi(e)&&"[object RegExp]"===Gi(e)}function Fi(e){return"object"==typeof e&&null!==e}function Vi(e){return Fi(e)&&"[object Date]"===Gi(e)}function Hi(e){return Fi(e)&&("[object Error]"===Gi(e)||e instanceof Error)}function qi(e){return"function"==typeof e}function zi(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function $i(e){return ue(e)}function Gi(e){return Object.prototype.toString.call(e)}function Wi(e){return e<10?"0"+e.toString(10):e.toString(10)}Ii.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},Ii.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};var Ji=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function Xi(){var e=new Date,n=[Wi(e.getHours()),Wi(e.getMinutes()),Wi(e.getSeconds())].join(":");return[e.getDate(),Ji[e.getMonth()],n].join(" ")}function Yi(){console.log("%s - %s",Xi(),_i.apply(null,arguments))}function Qi(e,n){if(!n||!Fi(n))return e;for(var t=Object.keys(n),l=t.length;l--;)e[t[l]]=n[t[l]];return e}function Zi(e,n){return Object.prototype.hasOwnProperty.call(e,n)}var eu={inherits:bi,_extend:Qi,log:Yi,isBuffer:$i,isPrimitive:zi,isFunction:qi,isError:Hi,isDate:Vi,isObject:Fi,isRegExp:Ki,isUndefined:Bi,isSymbol:Di,isString:Ui,isNumber:ji,isNullOrUndefined:Li,isNull:Ci,isBoolean:Ni,isArray:Ri,inspect:Ii,deprecate:Ei,format:_i,debuglog:ki},nu=Object.freeze({__proto__:null,format:_i,deprecate:Ei,debuglog:ki,inspect:Ii,isArray:Ri,isBoolean:Ni,isNull:Ci,isNullOrUndefined:Li,isNumber:ji,isString:Ui,isSymbol:Di,isUndefined:Bi,isRegExp:Ki,isObject:Fi,isDate:Vi,isError:Hi,isFunction:qi,isPrimitive:zi,isBuffer:$i,log:Yi,inherits:bi,_extend:Qi,default:eu});function tu(e,n){return Object.prototype.hasOwnProperty.call(e,n)}var lu=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};function ru(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}}function iu(e,n){if(e.map)return e.map(n);for(var t=[],l=0;l<e.length;l++)t.push(n(e[l],l));return t}var uu=Object.keys||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&n.push(t);return n};function ou(e,n,t,l){n=n||"&",t=t||"=";var r={};if("string"!=typeof e||0===e.length)return r;var i=/\+/g;e=e.split(n);var u=1e3;l&&"number"==typeof l.maxKeys&&(u=l.maxKeys);var o=e.length;u>0&&o>u&&(o=u);for(var s=0;s<o;++s){var a,c,h,f,d=e[s].replace(i,"%20"),p=d.indexOf(t);p>=0?(a=d.substr(0,p),c=d.substr(p+1)):(a=d,c=""),h=decodeURIComponent(a),f=decodeURIComponent(c),tu(r,h)?lu(r[h])?r[h].push(f):r[h]=[r[h],f]:r[h]=f}return r}var su={parse:Eu,resolve:Iu,resolveObject:Pu,format:xu,Url:au};function au(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var cu=/^([a-z0-9.+-]+:)/i,hu=/:[0-9]*$/,fu=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,du=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),pu=["'"].concat(du),yu=["%","/","?",";","#"].concat(pu),gu=["/","?","#"],mu=/^[+a-z0-9A-Z_-]{0,63}$/,vu=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,bu={javascript:!0,"javascript:":!0},wu={javascript:!0,"javascript:":!0},_u={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function Eu(e,n,t){if(e&&Fi(e)&&e instanceof au)return e;var l=new au;return l.parse(e,n,t),l}function Su(e,n,t,l){if(!Ui(n))throw new TypeError("Parameter 'url' must be a string, not "+typeof n);var r=n.indexOf("?"),i=-1!==r&&r<n.indexOf("#")?"?":"#",u=n.split(i);u[0]=u[0].replace(/\\/g,"/");var o=n=u.join(i);if(o=o.trim(),!l&&1===n.split("#").length){var s=fu.exec(o);if(s)return e.path=o,e.href=o,e.pathname=s[1],s[2]?(e.search=s[2],e.query=t?ou(e.search.substr(1)):e.search.substr(1)):t&&(e.search="",e.query={}),e}var a,c,h,f,d=cu.exec(o);if(d){var p=(d=d[0]).toLowerCase();e.protocol=p,o=o.substr(d.length)}if(l||d||o.match(/^\/\/[^@\/]+@[^@\/]+/)){var y="//"===o.substr(0,2);!y||d&&wu[d]||(o=o.substr(2),e.slashes=!0)}if(!wu[d]&&(y||d&&!_u[d])){var g,m,v=-1;for(a=0;a<gu.length;a++)-1!==(c=o.indexOf(gu[a]))&&(-1===v||c<v)&&(v=c);for(-1!==(m=-1===v?o.lastIndexOf("@"):o.lastIndexOf("@",v))&&(g=o.slice(0,m),o=o.slice(m+1),e.auth=decodeURIComponent(g)),v=-1,a=0;a<yu.length;a++)-1!==(c=o.indexOf(yu[a]))&&(-1===v||c<v)&&(v=c);-1===v&&(v=o.length),e.host=o.slice(0,v),o=o.slice(v),Au(e),e.hostname=e.hostname||"";var b="["===e.hostname[0]&&"]"===e.hostname[e.hostname.length-1];if(!b){var w=e.hostname.split(/\./);for(a=0,h=w.length;a<h;a++){var _=w[a];if(_&&!_.match(mu)){for(var E="",S=0,x=_.length;S<x;S++)_.charCodeAt(S)>127?E+="x":E+=_[S];if(!E.match(mu)){var k=w.slice(0,a),I=w.slice(a+1),P=_.match(vu);P&&(k.push(P[1]),I.unshift(P[2])),I.length&&(o="/"+I.join(".")+o),e.hostname=k.join(".");break}}}}e.hostname.length>255?e.hostname="":e.hostname=e.hostname.toLowerCase(),b||(e.hostname=vi(e.hostname)),f=e.port?":"+e.port:"";var A=e.hostname||"";e.host=A+f,e.href+=e.host,b&&(e.hostname=e.hostname.substr(1,e.hostname.length-2),"/"!==o[0]&&(o="/"+o))}if(!bu[p])for(a=0,h=pu.length;a<h;a++){var T=pu[a];if(-1!==o.indexOf(T)){var O=encodeURIComponent(T);O===T&&(O=escape(T)),o=o.split(T).join(O)}}var M=o.indexOf("#");-1!==M&&(e.hash=o.substr(M),o=o.slice(0,M));var R=o.indexOf("?");if(-1!==R?(e.search=o.substr(R),e.query=o.substr(R+1),t&&(e.query=ou(e.query)),o=o.slice(0,R)):t&&(e.search="",e.query={}),o&&(e.pathname=o),_u[p]&&e.hostname&&!e.pathname&&(e.pathname="/"),e.pathname||e.search){f=e.pathname||"";var N=e.search||"";e.path=f+N}return e.href=ku(e),e}function xu(e){return Ui(e)&&(e=Su({},e)),ku(e)}function ku(e){var n=e.auth||"";n&&(n=(n=encodeURIComponent(n)).replace(/%3A/i,":"),n+="@");var t=e.protocol||"",l=e.pathname||"",r=e.hash||"",i=!1,u="";e.host?i=n+e.host:e.hostname&&(i=n+(-1===e.hostname.indexOf(":")?e.hostname:"["+this.hostname+"]"),e.port&&(i+=":"+e.port)),e.query&&Fi(e.query)&&Object.keys(e.query).length&&(u=function(e,n,t,l){return n=n||"&",t=t||"=",null===e&&(e=void 0),"object"==typeof e?iu(uu(e),(function(l){var r=encodeURIComponent(ru(l))+t;return lu(e[l])?iu(e[l],(function(e){return r+encodeURIComponent(ru(e))})).join(n):r+encodeURIComponent(ru(e[l]))})).join(n):l?encodeURIComponent(ru(l))+t+encodeURIComponent(ru(e)):""}(e.query));var o=e.search||u&&"?"+u||"";return t&&":"!==t.substr(-1)&&(t+=":"),e.slashes||(!t||_u[t])&&!1!==i?(i="//"+(i||""),l&&"/"!==l.charAt(0)&&(l="/"+l)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),o&&"?"!==o.charAt(0)&&(o="?"+o),t+i+(l=l.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(o=o.replace("#","%23"))+r}function Iu(e,n){return Eu(e,!1,!0).resolve(n)}function Pu(e,n){return e?Eu(e,!1,!0).resolveObject(n):n}function Au(e){var n=e.host,t=hu.exec(n);t&&(":"!==(t=t[0])&&(e.port=t.substr(1)),n=n.substr(0,n.length-t.length)),n&&(e.hostname=n)}au.prototype.parse=function(e,n,t){return Su(this,e,n,t)},au.prototype.format=function(){return ku(this)},au.prototype.resolve=function(e){return this.resolveObject(Eu(e,!1,!0)).format()},au.prototype.resolveObject=function(e){if(Ui(e)){var n=new au;n.parse(e,!1,!0),e=n}for(var t,l=new au,r=Object.keys(this),i=0;i<r.length;i++){var u=r[i];l[u]=this[u]}if(l.hash=e.hash,""===e.href)return l.href=l.format(),l;if(e.slashes&&!e.protocol){for(var o=Object.keys(e),s=0;s<o.length;s++){var a=o[s];"protocol"!==a&&(l[a]=e[a])}return _u[l.protocol]&&l.hostname&&!l.pathname&&(l.path=l.pathname="/"),l.href=l.format(),l}if(e.protocol&&e.protocol!==l.protocol){if(!_u[e.protocol]){for(var c=Object.keys(e),h=0;h<c.length;h++){var f=c[h];l[f]=e[f]}return l.href=l.format(),l}if(l.protocol=e.protocol,e.host||wu[e.protocol])l.pathname=e.pathname;else{for(t=(e.pathname||"").split("/");t.length&&!(e.host=t.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==t[0]&&t.unshift(""),t.length<2&&t.unshift(""),l.pathname=t.join("/")}if(l.search=e.search,l.query=e.query,l.host=e.host||"",l.auth=e.auth,l.hostname=e.hostname||e.host,l.port=e.port,l.pathname||l.search){var d=l.pathname||"",p=l.search||"";l.path=d+p}return l.slashes=l.slashes||e.slashes,l.href=l.format(),l}var y,g=l.pathname&&"/"===l.pathname.charAt(0),m=e.host||e.pathname&&"/"===e.pathname.charAt(0),v=m||g||l.host&&e.pathname,b=v,w=l.pathname&&l.pathname.split("/")||[],_=l.protocol&&!_u[l.protocol];if(t=e.pathname&&e.pathname.split("/")||[],_&&(l.hostname="",l.port=null,l.host&&(""===w[0]?w[0]=l.host:w.unshift(l.host)),l.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===t[0]?t[0]=e.host:t.unshift(e.host)),e.host=null),v=v&&(""===t[0]||""===w[0])),m)l.host=e.host||""===e.host?e.host:l.host,l.hostname=e.hostname||""===e.hostname?e.hostname:l.hostname,l.search=e.search,l.query=e.query,w=t;else if(t.length)w||(w=[]),w.pop(),w=w.concat(t),l.search=e.search,l.query=e.query;else if(!Li(e.search))return _&&(l.hostname=l.host=w.shift(),(y=!!(l.host&&l.host.indexOf("@")>0)&&l.host.split("@"))&&(l.auth=y.shift(),l.host=l.hostname=y.shift())),l.search=e.search,l.query=e.query,Ci(l.pathname)&&Ci(l.search)||(l.path=(l.pathname?l.pathname:"")+(l.search?l.search:"")),l.href=l.format(),l;if(!w.length)return l.pathname=null,l.search?l.path="/"+l.search:l.path=null,l.href=l.format(),l;for(var E=w.slice(-1)[0],S=(l.host||e.host||w.length>1)&&("."===E||".."===E)||""===E,x=0,k=w.length;k>=0;k--)"."===(E=w[k])?w.splice(k,1):".."===E?(w.splice(k,1),x++):x&&(w.splice(k,1),x--);if(!v&&!b)for(;x--;x)w.unshift("..");!v||""===w[0]||w[0]&&"/"===w[0].charAt(0)||w.unshift(""),S&&"/"!==w.join("/").substr(-1)&&w.push("");var I=""===w[0]||w[0]&&"/"===w[0].charAt(0);return _&&(l.hostname=l.host=I?"":w.length?w.shift():"",(y=!!(l.host&&l.host.indexOf("@")>0)&&l.host.split("@"))&&(l.auth=y.shift(),l.host=l.hostname=y.shift())),(v=v||l.host&&w.length)&&!I&&w.unshift(""),w.length?l.pathname=w.join("/"):(l.pathname=null,l.path=null),Ci(l.pathname)&&Ci(l.search)||(l.path=(l.pathname?l.pathname:"")+(l.search?l.search:"")),l.auth=e.auth||l.auth,l.slashes=l.slashes||e.slashes,l.href=l.format(),l},au.prototype.parseHost=function(){return Au(this)};var Tu,Ou,Mu=t(Object.freeze({__proto__:null,parse:Eu,resolve:Iu,resolveObject:Pu,format:xu,default:su,Url:au})),Ru=Fu(s.fetch)&&Fu(s.ReadableStream);function Nu(e){Ou||(Ou=new s.XMLHttpRequest).open("GET",s.location.host?"/":"https://example.com");try{return Ou.responseType=e,Ou.responseType===e}catch(e){return!1}}var Cu=void 0!==s.ArrayBuffer,Lu=Cu&&Fu(s.ArrayBuffer.prototype.slice),ju=Cu&&Nu("arraybuffer"),Uu=!Ru&&Lu&&Nu("ms-stream"),Du=!Ru&&Cu&&Nu("moz-chunked-arraybuffer"),Bu=Fu(Ou.overrideMimeType),Ku=Fu(s.VBArray);function Fu(e){return"function"==typeof e}function Vu(){}function Hu(){Hu.init.call(this)}function qu(e){return void 0===e._maxListeners?Hu.defaultMaxListeners:e._maxListeners}function zu(e,n,t){if(n)e.call(t);else for(var l=e.length,r=Zu(e,l),i=0;i<l;++i)r[i].call(t)}function $u(e,n,t,l){if(n)e.call(t,l);else for(var r=e.length,i=Zu(e,r),u=0;u<r;++u)i[u].call(t,l)}function Gu(e,n,t,l,r){if(n)e.call(t,l,r);else for(var i=e.length,u=Zu(e,i),o=0;o<i;++o)u[o].call(t,l,r)}function Wu(e,n,t,l,r,i){if(n)e.call(t,l,r,i);else for(var u=e.length,o=Zu(e,u),s=0;s<u;++s)o[s].call(t,l,r,i)}function Ju(e,n,t,l){if(n)e.apply(t,l);else for(var r=e.length,i=Zu(e,r),u=0;u<r;++u)i[u].apply(t,l)}function Xu(e,n,t,l){var r,i,u,o;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if((i=e._events)?(i.newListener&&(e.emit("newListener",n,t.listener?t.listener:t),i=e._events),u=i[n]):(i=e._events=new Vu,e._eventsCount=0),u){if("function"==typeof u?u=i[n]=l?[t,u]:[u,t]:l?u.unshift(t):u.push(t),!u.warned&&(r=qu(e))&&r>0&&u.length>r){u.warned=!0;var s=new Error("Possible EventEmitter memory leak detected. "+u.length+" "+n+" listeners added. Use emitter.setMaxListeners() to increase limit");s.name="MaxListenersExceededWarning",s.emitter=e,s.type=n,s.count=u.length,o=s,"function"==typeof console.warn?console.warn(o):console.log(o)}}else u=i[n]=t,++e._eventsCount;return e}function Yu(e,n,t){var l=!1;function r(){e.removeListener(n,r),l||(l=!0,t.apply(e,arguments))}return r.listener=t,r}function Qu(e){var n=this._events;if(n){var t=n[e];if("function"==typeof t)return 1;if(t)return t.length}return 0}function Zu(e,n){for(var t=new Array(n);n--;)t[n]=e[n];return t}Ou=null,Vu.prototype=Object.create(null),Hu.EventEmitter=Hu,Hu.usingDomains=!1,Hu.prototype.domain=void 0,Hu.prototype._events=void 0,Hu.prototype._maxListeners=void 0,Hu.defaultMaxListeners=10,Hu.init=function(){this.domain=null,Hu.usingDomains&&undefined.active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new Vu,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},Hu.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},Hu.prototype.getMaxListeners=function(){return qu(this)},Hu.prototype.emit=function(e){var n,t,l,r,i,u,o,s="error"===e;if(u=this._events)s=s&&null==u.error;else if(!s)return!1;if(o=this.domain,s){if(n=arguments[1],!o){if(n instanceof Error)throw n;var a=new Error('Uncaught, unspecified "error" event. ('+n+")");throw a.context=n,a}return n||(n=new Error('Uncaught, unspecified "error" event')),n.domainEmitter=this,n.domain=o,n.domainThrown=!1,o.emit("error",n),!1}if(!(t=u[e]))return!1;var c="function"==typeof t;switch(l=arguments.length){case 1:zu(t,c,this);break;case 2:$u(t,c,this,arguments[1]);break;case 3:Gu(t,c,this,arguments[1],arguments[2]);break;case 4:Wu(t,c,this,arguments[1],arguments[2],arguments[3]);break;default:for(r=new Array(l-1),i=1;i<l;i++)r[i-1]=arguments[i];Ju(t,c,this,r)}return!0},Hu.prototype.addListener=function(e,n){return Xu(this,e,n,!1)},Hu.prototype.on=Hu.prototype.addListener,Hu.prototype.prependListener=function(e,n){return Xu(this,e,n,!0)},Hu.prototype.once=function(e,n){if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');return this.on(e,Yu(this,e,n)),this},Hu.prototype.prependOnceListener=function(e,n){if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,Yu(this,e,n)),this},Hu.prototype.removeListener=function(e,n){var t,l,r,i,u;if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');if(!(l=this._events))return this;if(!(t=l[e]))return this;if(t===n||t.listener&&t.listener===n)0==--this._eventsCount?this._events=new Vu:(delete l[e],l.removeListener&&this.emit("removeListener",e,t.listener||n));else if("function"!=typeof t){for(r=-1,i=t.length;i-- >0;)if(t[i]===n||t[i].listener&&t[i].listener===n){u=t[i].listener,r=i;break}if(r<0)return this;if(1===t.length){if(t[0]=void 0,0==--this._eventsCount)return this._events=new Vu,this;delete l[e]}else!function(e,n){for(var t=n,l=t+1,r=e.length;l<r;t+=1,l+=1)e[t]=e[l];e.pop()}(t,r);l.removeListener&&this.emit("removeListener",e,u||n)}return this},Hu.prototype.removeAllListeners=function(e){var n,t;if(!(t=this._events))return this;if(!t.removeListener)return 0===arguments.length?(this._events=new Vu,this._eventsCount=0):t[e]&&(0==--this._eventsCount?this._events=new Vu:delete t[e]),this;if(0===arguments.length){for(var l,r=Object.keys(t),i=0;i<r.length;++i)"removeListener"!==(l=r[i])&&this.removeAllListeners(l);return this.removeAllListeners("removeListener"),this._events=new Vu,this._eventsCount=0,this}if("function"==typeof(n=t[e]))this.removeListener(e,n);else if(n)do{this.removeListener(e,n[n.length-1])}while(n[0]);return this},Hu.prototype.listeners=function(e){var n,t=this._events;return t&&(n=t[e])?"function"==typeof n?[n.listener||n]:function(e){for(var n=new Array(e.length),t=0;t<n.length;++t)n[t]=e[t].listener||e[t];return n}(n):[]},Hu.listenerCount=function(e,n){return"function"==typeof e.listenerCount?e.listenerCount(n):Qu.call(e,n)},Hu.prototype.listenerCount=Qu,Hu.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var eo=Object.freeze({__proto__:null,default:Hu,EventEmitter:Hu});function no(){this.head=null,this.tail=null,this.length=0}no.prototype.push=function(e){var n={data:e,next:null};this.length>0?this.tail.next=n:this.head=n,this.tail=n,++this.length},no.prototype.unshift=function(e){var n={data:e,next:this.head};0===this.length&&(this.tail=n),this.head=n,++this.length},no.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},no.prototype.clear=function(){this.head=this.tail=null,this.length=0},no.prototype.join=function(e){if(0===this.length)return"";for(var n=this.head,t=""+n.data;n=n.next;)t+=e+n.data;return t},no.prototype.concat=function(e){if(0===this.length)return S.alloc(0);if(1===this.length)return this.head.data;for(var n=S.allocUnsafe(e>>>0),t=this.head,l=0;t;)t.data.copy(n,l),l+=t.data.length,t=t.next;return n};var to=S.isEncoding||function(e){switch(e&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function lo(e){switch(this.encoding=(e||"utf8").toLowerCase().replace(/[-_]/,""),function(e){if(e&&!to(e))throw new Error("Unknown encoding: "+e)}(e),this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2,this.detectIncompleteChar=io;break;case"base64":this.surrogateSize=3,this.detectIncompleteChar=uo;break;default:return void(this.write=ro)}this.charBuffer=new S(6),this.charReceived=0,this.charLength=0}function ro(e){return e.toString(this.encoding)}function io(e){this.charReceived=e.length%2,this.charLength=this.charReceived?2:0}function uo(e){this.charReceived=e.length%3,this.charLength=this.charReceived?3:0}lo.prototype.write=function(e){for(var n="";this.charLength;){var t=e.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:e.length;if(e.copy(this.charBuffer,this.charReceived,0,t),this.charReceived+=t,this.charReceived<this.charLength)return"";if(e=e.slice(t,e.length),!((r=(n=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(n.length-1))>=55296&&r<=56319)){if(this.charReceived=this.charLength=0,0===e.length)return n;break}this.charLength+=this.surrogateSize,n=""}this.detectIncompleteChar(e);var l=e.length;this.charLength&&(e.copy(this.charBuffer,0,e.length-this.charReceived,l),l-=this.charReceived);var r;l=(n+=e.toString(this.encoding,0,l)).length-1;if((r=n.charCodeAt(l))>=55296&&r<=56319){var i=this.surrogateSize;return this.charLength+=i,this.charReceived+=i,this.charBuffer.copy(this.charBuffer,i,0,i),e.copy(this.charBuffer,0,0,i),n.substring(0,l)}return n},lo.prototype.detectIncompleteChar=function(e){for(var n=e.length>=3?3:e.length;n>0;n--){var t=e[e.length-n];if(1==n&&t>>5==6){this.charLength=2;break}if(n<=2&&t>>4==14){this.charLength=3;break}if(n<=3&&t>>3==30){this.charLength=4;break}}this.charReceived=n},lo.prototype.end=function(e){var n="";if(e&&e.length&&(n=this.write(e)),this.charReceived){var t=this.charReceived,l=this.charBuffer,r=this.encoding;n+=l.slice(0,t).toString(r)}return n};var oo=Object.freeze({__proto__:null,StringDecoder:lo});co.ReadableState=ao;var so=ki("stream");function ao(e,n){e=e||{},this.objectMode=!!e.objectMode,n instanceof Bo&&(this.objectMode=this.objectMode||!!e.readableObjectMode);var t=e.highWaterMark,l=this.objectMode?16:16384;this.highWaterMark=t||0===t?t:l,this.highWaterMark=~~this.highWaterMark,this.buffer=new no,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(this.decoder=new lo(e.encoding),this.encoding=e.encoding)}function co(e){if(!(this instanceof co))return new co(e);this._readableState=new ao(e,this),this.readable=!0,e&&"function"==typeof e.read&&(this._read=e.read),Hu.call(this)}function ho(e,n,t,l,r){var i=function(e,n){var t=null;ue(n)||"string"==typeof n||null==n||e.objectMode||(t=new TypeError("Invalid non-string/buffer chunk"));return t}(n,t);if(i)e.emit("error",i);else if(null===t)n.reading=!1,function(e,n){if(n.ended)return;if(n.decoder){var t=n.decoder.end();t&&t.length&&(n.buffer.push(t),n.length+=n.objectMode?1:t.length)}n.ended=!0,yo(e)}(e,n);else if(n.objectMode||t&&t.length>0)if(n.ended&&!r){var u=new Error("stream.push() after EOF");e.emit("error",u)}else if(n.endEmitted&&r){var o=new Error("stream.unshift() after end event");e.emit("error",o)}else{var s;!n.decoder||r||l||(t=n.decoder.write(t),s=!n.objectMode&&0===t.length),r||(n.reading=!1),s||(n.flowing&&0===n.length&&!n.sync?(e.emit("data",t),e.read(0)):(n.length+=n.objectMode?1:t.length,r?n.buffer.unshift(t):n.buffer.push(t),n.needReadable&&yo(e))),function(e,n){n.readingMore||(n.readingMore=!0,Jr(mo,e,n))}(e,n)}else r||(n.reading=!1);return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}(n)}bi(co,Hu),co.prototype.push=function(e,n){var t=this._readableState;return t.objectMode||"string"!=typeof e||(n=n||t.defaultEncoding)!==t.encoding&&(e=S.from(e,n),n=""),ho(this,t,e,n,!1)},co.prototype.unshift=function(e){return ho(this,this._readableState,e,"",!0)},co.prototype.isPaused=function(){return!1===this._readableState.flowing},co.prototype.setEncoding=function(e){return this._readableState.decoder=new lo(e),this._readableState.encoding=e,this};var fo=8388608;function po(e,n){return e<=0||0===n.length&&n.ended?0:n.objectMode?1:e!=e?n.flowing&&n.length?n.buffer.head.data.length:n.length:(e>n.highWaterMark&&(n.highWaterMark=function(e){return e>=fo?e=fo:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=n.length?e:n.ended?n.length:(n.needReadable=!0,0))}function yo(e){var n=e._readableState;n.needReadable=!1,n.emittedReadable||(so("emitReadable",n.flowing),n.emittedReadable=!0,n.sync?Jr(go,e):go(e))}function go(e){so("emit readable"),e.emit("readable"),wo(e)}function mo(e,n){for(var t=n.length;!n.reading&&!n.flowing&&!n.ended&&n.length<n.highWaterMark&&(so("maybeReadMore read 0"),e.read(0),t!==n.length);)t=n.length;n.readingMore=!1}function vo(e){so("readable nexttick read 0"),e.read(0)}function bo(e,n){n.reading||(so("resume read 0"),e.read(0)),n.resumeScheduled=!1,n.awaitDrain=0,e.emit("resume"),wo(e),n.flowing&&!n.reading&&e.read(0)}function wo(e){var n=e._readableState;for(so("flow",n.flowing);n.flowing&&null!==e.read(););}function _o(e,n){return 0===n.length?null:(n.objectMode?t=n.buffer.shift():!e||e>=n.length?(t=n.decoder?n.buffer.join(""):1===n.buffer.length?n.buffer.head.data:n.buffer.concat(n.length),n.buffer.clear()):t=function(e,n,t){var l;e<n.head.data.length?(l=n.head.data.slice(0,e),n.head.data=n.head.data.slice(e)):l=e===n.head.data.length?n.shift():t?function(e,n){var t=n.head,l=1,r=t.data;e-=r.length;for(;t=t.next;){var i=t.data,u=e>i.length?i.length:e;if(u===i.length?r+=i:r+=i.slice(0,e),0===(e-=u)){u===i.length?(++l,t.next?n.head=t.next:n.head=n.tail=null):(n.head=t,t.data=i.slice(u));break}++l}return n.length-=l,r}(e,n):function(e,n){var t=S.allocUnsafe(e),l=n.head,r=1;l.data.copy(t),e-=l.data.length;for(;l=l.next;){var i=l.data,u=e>i.length?i.length:e;if(i.copy(t,t.length-e,0,u),0===(e-=u)){u===i.length?(++r,l.next?n.head=l.next:n.head=n.tail=null):(n.head=l,l.data=i.slice(u));break}++r}return n.length-=r,t}(e,n);return l}(e,n.buffer,n.decoder),t);var t}function Eo(e){var n=e._readableState;if(n.length>0)throw new Error('"endReadable()" called on non-empty stream');n.endEmitted||(n.ended=!0,Jr(So,n,e))}function So(e,n){e.endEmitted||0!==e.length||(e.endEmitted=!0,n.readable=!1,n.emit("end"))}function xo(e,n){for(var t=0,l=e.length;t<l;t++)if(e[t]===n)return t;return-1}function ko(){}function Io(e,n,t){this.chunk=e,this.encoding=n,this.callback=t,this.next=null}function Po(e,n){Object.defineProperty(this,"buffer",{get:Ei((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")}),e=e||{},this.objectMode=!!e.objectMode,n instanceof Bo&&(this.objectMode=this.objectMode||!!e.writableObjectMode);var t=e.highWaterMark,l=this.objectMode?16:16384;this.highWaterMark=t||0===t?t:l,this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;var r=!1===e.decodeStrings;this.decodeStrings=!r,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,n){var t=e._writableState,l=t.sync,r=t.writecb;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(t),n)!function(e,n,t,l,r){--n.pendingcb,t?Jr(r,l):r(l);e._writableState.errorEmitted=!0,e.emit("error",l)}(e,t,l,n,r);else{var i=Ro(t);i||t.corked||t.bufferProcessing||!t.bufferedRequest||Mo(e,t),l?Jr(Oo,e,t,i,r):Oo(e,t,i,r)}}(n,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new Lo(this)}function Ao(e){if(!(this instanceof Ao||this instanceof Bo))return new Ao(e);this._writableState=new Po(e,this),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev)),Hu.call(this)}function To(e,n,t,l,r,i,u){n.writelen=l,n.writecb=u,n.writing=!0,n.sync=!0,t?e._writev(r,n.onwrite):e._write(r,i,n.onwrite),n.sync=!1}function Oo(e,n,t,l){t||function(e,n){0===n.length&&n.needDrain&&(n.needDrain=!1,e.emit("drain"))}(e,n),n.pendingcb--,l(),Co(e,n)}function Mo(e,n){n.bufferProcessing=!0;var t=n.bufferedRequest;if(e._writev&&t&&t.next){var l=n.bufferedRequestCount,r=new Array(l),i=n.corkedRequestsFree;i.entry=t;for(var u=0;t;)r[u]=t,t=t.next,u+=1;To(e,n,!0,n.length,r,"",i.finish),n.pendingcb++,n.lastBufferedRequest=null,i.next?(n.corkedRequestsFree=i.next,i.next=null):n.corkedRequestsFree=new Lo(n)}else{for(;t;){var o=t.chunk,s=t.encoding,a=t.callback;if(To(e,n,!1,n.objectMode?1:o.length,o,s,a),t=t.next,n.writing)break}null===t&&(n.lastBufferedRequest=null)}n.bufferedRequestCount=0,n.bufferedRequest=t,n.bufferProcessing=!1}function Ro(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function No(e,n){n.prefinished||(n.prefinished=!0,e.emit("prefinish"))}function Co(e,n){var t=Ro(n);return t&&(0===n.pendingcb?(No(e,n),n.finished=!0,e.emit("finish")):No(e,n)),t}function Lo(e){var n=this;this.next=null,this.entry=null,this.finish=function(t){var l=n.entry;for(n.entry=null;l;){var r=l.callback;e.pendingcb--,r(t),l=l.next}e.corkedRequestsFree?e.corkedRequestsFree.next=n:e.corkedRequestsFree=n}}co.prototype.read=function(e){so("read",e),e=parseInt(e,10);var n=this._readableState,t=e;if(0!==e&&(n.emittedReadable=!1),0===e&&n.needReadable&&(n.length>=n.highWaterMark||n.ended))return so("read: emitReadable",n.length,n.ended),0===n.length&&n.ended?Eo(this):yo(this),null;if(0===(e=po(e,n))&&n.ended)return 0===n.length&&Eo(this),null;var l,r=n.needReadable;return so("need readable",r),(0===n.length||n.length-e<n.highWaterMark)&&so("length less than watermark",r=!0),n.ended||n.reading?so("reading or ended",r=!1):r&&(so("do read"),n.reading=!0,n.sync=!0,0===n.length&&(n.needReadable=!0),this._read(n.highWaterMark),n.sync=!1,n.reading||(e=po(t,n))),null===(l=e>0?_o(e,n):null)?(n.needReadable=!0,e=0):n.length-=e,0===n.length&&(n.ended||(n.needReadable=!0),t!==e&&n.ended&&Eo(this)),null!==l&&this.emit("data",l),l},co.prototype._read=function(e){this.emit("error",new Error("not implemented"))},co.prototype.pipe=function(e,n){var t=this,l=this._readableState;switch(l.pipesCount){case 0:l.pipes=e;break;case 1:l.pipes=[l.pipes,e];break;default:l.pipes.push(e)}l.pipesCount+=1,so("pipe count=%d opts=%j",l.pipesCount,n);var r=!n||!1!==n.end?u:a;function i(e){so("onunpipe"),e===t&&a()}function u(){so("onend"),e.end()}l.endEmitted?Jr(r):t.once("end",r),e.on("unpipe",i);var o=function(e){return function(){var n=e._readableState;so("pipeOnDrain",n.awaitDrain),n.awaitDrain&&n.awaitDrain--,0===n.awaitDrain&&e.listeners("data").length&&(n.flowing=!0,wo(e))}}(t);e.on("drain",o);var s=!1;function a(){so("cleanup"),e.removeListener("close",d),e.removeListener("finish",p),e.removeListener("drain",o),e.removeListener("error",f),e.removeListener("unpipe",i),t.removeListener("end",u),t.removeListener("end",a),t.removeListener("data",h),s=!0,!l.awaitDrain||e._writableState&&!e._writableState.needDrain||o()}var c=!1;function h(n){so("ondata"),c=!1,!1!==e.write(n)||c||((1===l.pipesCount&&l.pipes===e||l.pipesCount>1&&-1!==xo(l.pipes,e))&&!s&&(so("false write response, pause",t._readableState.awaitDrain),t._readableState.awaitDrain++,c=!0),t.pause())}function f(n){so("onerror",n),y(),e.removeListener("error",f),0===function(e,n){return e.listeners(n).length}(e,"error")&&e.emit("error",n)}function d(){e.removeListener("finish",p),y()}function p(){so("onfinish"),e.removeListener("close",d),y()}function y(){so("unpipe"),t.unpipe(e)}return t.on("data",h),function(e,n,t){if("function"==typeof e.prependListener)return e.prependListener(n,t);e._events&&e._events[n]?Array.isArray(e._events[n])?e._events[n].unshift(t):e._events[n]=[t,e._events[n]]:e.on(n,t)}(e,"error",f),e.once("close",d),e.once("finish",p),e.emit("pipe",t),l.flowing||(so("pipe resume"),t.resume()),e},co.prototype.unpipe=function(e){var n=this._readableState;if(0===n.pipesCount)return this;if(1===n.pipesCount)return e&&e!==n.pipes||(e||(e=n.pipes),n.pipes=null,n.pipesCount=0,n.flowing=!1,e&&e.emit("unpipe",this)),this;if(!e){var t=n.pipes,l=n.pipesCount;n.pipes=null,n.pipesCount=0,n.flowing=!1;for(var r=0;r<l;r++)t[r].emit("unpipe",this);return this}var i=xo(n.pipes,e);return-1===i||(n.pipes.splice(i,1),n.pipesCount-=1,1===n.pipesCount&&(n.pipes=n.pipes[0]),e.emit("unpipe",this)),this},co.prototype.on=function(e,n){var t=Hu.prototype.on.call(this,e,n);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var l=this._readableState;l.endEmitted||l.readableListening||(l.readableListening=l.needReadable=!0,l.emittedReadable=!1,l.reading?l.length&&yo(this):Jr(vo,this))}return t},co.prototype.addListener=co.prototype.on,co.prototype.resume=function(){var e=this._readableState;return e.flowing||(so("resume"),e.flowing=!0,function(e,n){n.resumeScheduled||(n.resumeScheduled=!0,Jr(bo,e,n))}(this,e)),this},co.prototype.pause=function(){return so("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(so("pause"),this._readableState.flowing=!1,this.emit("pause")),this},co.prototype.wrap=function(e){var n=this._readableState,t=!1,l=this;for(var r in e.on("end",(function(){if(so("wrapped end"),n.decoder&&!n.ended){var e=n.decoder.end();e&&e.length&&l.push(e)}l.push(null)})),e.on("data",(function(r){(so("wrapped data"),n.decoder&&(r=n.decoder.write(r)),n.objectMode&&null==r)||(n.objectMode||r&&r.length)&&(l.push(r)||(t=!0,e.pause()))})),e)void 0===this[r]&&"function"==typeof e[r]&&(this[r]=function(n){return function(){return e[n].apply(e,arguments)}}(r));return function(e,n){for(var t=0,l=e.length;t<l;t++)n(e[t],t)}(["error","close","destroy","pause","resume"],(function(n){e.on(n,l.emit.bind(l,n))})),l._read=function(n){so("wrapped _read",n),t&&(t=!1,e.resume())},l},co._fromList=_o,Ao.WritableState=Po,bi(Ao,Hu),Po.prototype.getBuffer=function(){for(var e=this.bufferedRequest,n=[];e;)n.push(e),e=e.next;return n},Ao.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},Ao.prototype.write=function(e,n,t){var l=this._writableState,r=!1;return"function"==typeof n&&(t=n,n=null),S.isBuffer(e)?n="buffer":n||(n=l.defaultEncoding),"function"!=typeof t&&(t=ko),l.ended?function(e,n){var t=new Error("write after end");e.emit("error",t),Jr(n,t)}(this,t):function(e,n,t,l){var r=!0,i=!1;return null===t?i=new TypeError("May not write null values to stream"):S.isBuffer(t)||"string"==typeof t||void 0===t||n.objectMode||(i=new TypeError("Invalid non-string/buffer chunk")),i&&(e.emit("error",i),Jr(l,i),r=!1),r}(this,l,e,t)&&(l.pendingcb++,r=function(e,n,t,l,r){t=function(e,n,t){e.objectMode||!1===e.decodeStrings||"string"!=typeof n||(n=S.from(n,t));return n}(n,t,l),S.isBuffer(t)&&(l="buffer");var i=n.objectMode?1:t.length;n.length+=i;var u=n.length<n.highWaterMark;u||(n.needDrain=!0);if(n.writing||n.corked){var o=n.lastBufferedRequest;n.lastBufferedRequest=new Io(t,l,r),o?o.next=n.lastBufferedRequest:n.bufferedRequest=n.lastBufferedRequest,n.bufferedRequestCount+=1}else To(e,n,!1,i,t,l,r);return u}(this,l,e,n,t)),r},Ao.prototype.cork=function(){this._writableState.corked++},Ao.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||Mo(this,e))},Ao.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},Ao.prototype._write=function(e,n,t){t(new Error("not implemented"))},Ao.prototype._writev=null,Ao.prototype.end=function(e,n,t){var l=this._writableState;"function"==typeof e?(t=e,e=null,n=null):"function"==typeof n&&(t=n,n=null),null!=e&&this.write(e,n),l.corked&&(l.corked=1,this.uncork()),l.ending||l.finished||function(e,n,t){n.ending=!0,Co(e,n),t&&(n.finished?Jr(t):e.once("finish",t));n.ended=!0,e.writable=!1}(this,l,t)},bi(Bo,co);for(var jo=Object.keys(Ao.prototype),Uo=0;Uo<jo.length;Uo++){var Do=jo[Uo];Bo.prototype[Do]||(Bo.prototype[Do]=Ao.prototype[Do])}function Bo(e){if(!(this instanceof Bo))return new Bo(e);co.call(this,e),Ao.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",Ko)}function Ko(){this.allowHalfOpen||this._writableState.ended||Jr(Fo,this)}function Fo(e){e.end()}function Vo(e){this.afterTransform=function(n,t){return function(e,n,t){var l=e._transformState;l.transforming=!1;var r=l.writecb;if(!r)return e.emit("error",new Error("no writecb in Transform class"));l.writechunk=null,l.writecb=null,null!=t&&e.push(t);r(n);var i=e._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&e._read(i.highWaterMark)}(e,n,t)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null,this.writeencoding=null}function Ho(e){if(!(this instanceof Ho))return new Ho(e);Bo.call(this,e),this._transformState=new Vo(this);var n=this;this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.once("prefinish",(function(){"function"==typeof this._flush?this._flush((function(e){qo(n,e)})):qo(n)}))}function qo(e,n){if(n)return e.emit("error",n);var t=e._writableState,l=e._transformState;if(t.length)throw new Error("Calling transform done when ws.length != 0");if(l.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}function zo(e){if(!(this instanceof zo))return new zo(e);Ho.call(this,e)}function $o(){Hu.call(this)}bi(Ho,Bo),Ho.prototype.push=function(e,n){return this._transformState.needTransform=!1,Bo.prototype.push.call(this,e,n)},Ho.prototype._transform=function(e,n,t){throw new Error("Not implemented")},Ho.prototype._write=function(e,n,t){var l=this._transformState;if(l.writecb=t,l.writechunk=e,l.writeencoding=n,!l.transforming){var r=this._readableState;(l.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},Ho.prototype._read=function(e){var n=this._transformState;null!==n.writechunk&&n.writecb&&!n.transforming?(n.transforming=!0,this._transform(n.writechunk,n.writeencoding,n.afterTransform)):n.needTransform=!0},bi(zo,Ho),zo.prototype._transform=function(e,n,t){t(null,e)},bi($o,Hu),$o.Readable=co,$o.Writable=Ao,$o.Duplex=Bo,$o.Transform=Ho,$o.PassThrough=zo,$o.Stream=$o,$o.prototype.pipe=function(e,n){var t=this;function l(n){e.writable&&!1===e.write(n)&&t.pause&&t.pause()}function r(){t.readable&&t.resume&&t.resume()}t.on("data",l),e.on("drain",r),e._isStdio||n&&!1===n.end||(t.on("end",u),t.on("close",o));var i=!1;function u(){i||(i=!0,e.end())}function o(){i||(i=!0,"function"==typeof e.destroy&&e.destroy())}function s(e){if(a(),0===Hu.listenerCount(this,"error"))throw e}function a(){t.removeListener("data",l),e.removeListener("drain",r),t.removeListener("end",u),t.removeListener("close",o),t.removeListener("error",s),e.removeListener("error",s),t.removeListener("end",a),t.removeListener("close",a),e.removeListener("close",a)}return t.on("error",s),e.on("error",s),t.on("end",a),t.on("close",a),e.on("close",a),e.emit("pipe",t),e};var Go=Object.freeze({__proto__:null,default:$o,Readable:co,Writable:Ao,Duplex:Bo,Transform:Ho,PassThrough:zo,Stream:$o}),Wo=3,Jo=4;function Xo(e,n,t){var l,r=this;if(co.call(r),r._mode=t,r.headers={},r.rawHeaders=[],r.trailers={},r.rawTrailers=[],r.on("end",(function(){Jr((function(){r.emit("close")}))})),"fetch"===t){r._fetchResponse=n,r.url=n.url,r.statusCode=n.status,r.statusMessage=n.statusText;for(var i,u,o=n.headers[Symbol.iterator]();i=(u=o.next()).value,!u.done;)r.headers[i[0].toLowerCase()]=i[1],r.rawHeaders.push(i[0],i[1]);var s=n.body.getReader();(l=function(){s.read().then((function(e){r._destroyed||(e.done?r.push(null):(r.push(new S(e.value)),l()))}))})()}else{if(r._xhr=e,r._pos=0,r.url=e.responseURL,r.statusCode=e.status,r.statusMessage=e.statusText,e.getAllResponseHeaders().split(/\r?\n/).forEach((function(e){var n=e.match(/^([^:]+):\s*(.*)/);if(n){var t=n[1].toLowerCase();"set-cookie"===t?(void 0===r.headers[t]&&(r.headers[t]=[]),r.headers[t].push(n[2])):void 0!==r.headers[t]?r.headers[t]+=", "+n[2]:r.headers[t]=n[2],r.rawHeaders.push(n[1],n[2])}})),r._charset="x-user-defined",!Bu){var a=r.rawHeaders["mime-type"];if(a){var c=a.match(/;\s*charset=([^;])(;|$)/);c&&(r._charset=c[1].toLowerCase())}r._charset||(r._charset="utf-8")}}}function Yo(e){var n,t=this;Ao.call(t),t._opts=e,t._body=[],t._headers={},e.auth&&t.setHeader("Authorization","Basic "+new S(e.auth).toString("base64")),Object.keys(e.headers).forEach((function(n){t.setHeader(n,e.headers[n])}));var l=!0;if("disable-fetch"===e.mode)l=!1,n=!0;else if("prefer-streaming"===e.mode)n=!1;else if("allow-wrong-content-type"===e.mode)n=!Bu;else{if(e.mode&&"default"!==e.mode&&"prefer-fast"!==e.mode)throw new Error("Invalid value for opts.mode");n=!0}t._mode=function(e,n){return Ru&&n?"fetch":Du?"moz-chunked-arraybuffer":Uu?"ms-stream":ju&&e?"arraybuffer":Ku&&e?"text:vbarray":"text"}(n,l),t.on("finish",(function(){t._onFinish()}))}bi(Xo,co),Xo.prototype._read=function(){},Xo.prototype._onXHRProgress=function(){var e=this,n=e._xhr,t=null;switch(e._mode){case"text:vbarray":if(n.readyState!==Jo)break;try{t=new s.VBArray(n.responseBody).toArray()}catch(e){}if(null!==t){e.push(new S(t));break}case"text":try{t=n.responseText}catch(n){e._mode="text:vbarray";break}if(t.length>e._pos){var l=t.substr(e._pos);if("x-user-defined"===e._charset){for(var r=new S(l.length),i=0;i<l.length;i++)r[i]=255&l.charCodeAt(i);e.push(r)}else e.push(l,e._charset);e._pos=t.length}break;case"arraybuffer":if(n.readyState!==Jo||!n.response)break;t=n.response,e.push(new S(new Uint8Array(t)));break;case"moz-chunked-arraybuffer":if(t=n.response,n.readyState!==Wo||!t)break;e.push(new S(new Uint8Array(t)));break;case"ms-stream":if(t=n.response,n.readyState!==Wo)break;var u=new s.MSStreamReader;u.onprogress=function(){u.result.byteLength>e._pos&&(e.push(new S(new Uint8Array(u.result.slice(e._pos)))),e._pos=u.result.byteLength)},u.onload=function(){e.push(null)},u.readAsArrayBuffer(t)}e._xhr.readyState===Jo&&"ms-stream"!==e._mode&&e.push(null)},bi(Yo,Ao);var Qo=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","cookie","cookie2","date","dnt","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","user-agent","via"];function Zo(e,n){"string"==typeof e&&(e=Eu(e));var t=-1===s.location.protocol.search(/^https?:$/)?"http:":"",l=e.protocol||t,r=e.hostname||e.host,i=e.port,u=e.path||"/";r&&-1!==r.indexOf(":")&&(r="["+r+"]"),e.url=(r?l+"//"+r:"")+(i?":"+i:"")+u,e.method=(e.method||"GET").toUpperCase(),e.headers=e.headers||{};var o=new Yo(e);return n&&o.on("response",n),o}function es(e,n){var t=Zo(e,n);return t.end(),t}function ns(){}Yo.prototype.setHeader=function(e,n){var t=e.toLowerCase();-1===Qo.indexOf(t)&&(this._headers[t]={name:e,value:n})},Yo.prototype.getHeader=function(e){return this._headers[e.toLowerCase()].value},Yo.prototype.removeHeader=function(e){delete this._headers[e.toLowerCase()]},Yo.prototype._onFinish=function(){var e=this;if(!e._destroyed){var n,t=e._opts,l=e._headers;if("POST"!==t.method&&"PUT"!==t.method&&"PATCH"!==t.method||(n=function(){if(void 0!==Tu)return Tu;try{new s.Blob([new ArrayBuffer(1)]),Tu=!0}catch(e){Tu=!1}return Tu}()?new s.Blob(e._body.map((function(e){return function(e){if(e instanceof Uint8Array){if(0===e.byteOffset&&e.byteLength===e.buffer.byteLength)return e.buffer;if("function"==typeof e.buffer.slice)return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}if(ue(e)){for(var n=new Uint8Array(e.length),t=e.length,l=0;l<t;l++)n[l]=e[l];return n.buffer}throw new Error("Argument must be a Buffer")}(e)})),{type:(l["content-type"]||{}).value||""}):S.concat(e._body).toString()),"fetch"===e._mode){var r=Object.keys(l).map((function(e){return[l[e].name,l[e].value]}));s.fetch(e._opts.url,{method:e._opts.method,headers:r,body:n,mode:"cors",credentials:t.withCredentials?"include":"same-origin"}).then((function(n){e._fetchResponse=n,e._connect()}),(function(n){e.emit("error",n)}))}else{var i=e._xhr=new s.XMLHttpRequest;try{i.open(e._opts.method,e._opts.url,!0)}catch(n){return void Jr((function(){e.emit("error",n)}))}"responseType"in i&&(i.responseType=e._mode.split(":")[0]),"withCredentials"in i&&(i.withCredentials=!!t.withCredentials),"text"===e._mode&&"overrideMimeType"in i&&i.overrideMimeType("text/plain; charset=x-user-defined"),Object.keys(l).forEach((function(e){i.setRequestHeader(l[e].name,l[e].value)})),e._response=null,i.onreadystatechange=function(){switch(i.readyState){case Wo:case Jo:e._onXHRProgress()}},"moz-chunked-arraybuffer"===e._mode&&(i.onprogress=function(){e._onXHRProgress()}),i.onerror=function(){e._destroyed||e.emit("error",new Error("XHR error"))};try{i.send(n)}catch(n){return void Jr((function(){e.emit("error",n)}))}}}},Yo.prototype._onXHRProgress=function(){var e=this;(function(e){try{var n=e.status;return null!==n&&0!==n}catch(e){return!1}})(e._xhr)&&!e._destroyed&&(e._response||e._connect(),e._response._onXHRProgress())},Yo.prototype._connect=function(){var e=this;e._destroyed||(e._response=new Xo(e._xhr,e._fetchResponse,e._mode),e.emit("response",e._response))},Yo.prototype._write=function(e,n,t){this._body.push(e),t()},Yo.prototype.abort=Yo.prototype.destroy=function(){var e=this;e._destroyed=!0,e._response&&(e._response._destroyed=!0),e._xhr&&e._xhr.abort()},Yo.prototype.end=function(e,n,t){"function"==typeof e&&(t=e,e=void 0),Ao.prototype.end.call(this,e,n,t)},Yo.prototype.flushHeaders=function(){},Yo.prototype.setTimeout=function(){},Yo.prototype.setNoDelay=function(){},Yo.prototype.setSocketKeepAlive=function(){},ns.defaultMaxSockets=4;var ts=["CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","REPORT","SEARCH","SUBSCRIBE","TRACE","UNLOCK","UNSUBSCRIBE"],ls={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",300:"Multiple Choices",301:"Moved Permanently",302:"Moved Temporarily",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Time-out",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Large",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Time-out",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"},rs={request:Zo,get:es,Agent:ns,METHODS:ts,STATUS_CODES:ls},is=t(Object.freeze({__proto__:null,request:Zo,get:es,Agent:ns,METHODS:ts,STATUS_CODES:ls,default:rs})),us=Mu,os=ht.spawn,ss=ht,as=function(){var e,n,t=this,l=is,r=is,i={},u=!1,o={"User-Agent":"node-XMLHttpRequest",Accept:"*/*"},s={},a={},c=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","content-transfer-encoding","cookie","cookie2","date","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"],h=["TRACE","TRACK","CONNECT"],f=!1,d=!1,p={};this.UNSENT=0,this.OPENED=1,this.HEADERS_RECEIVED=2,this.LOADING=3,this.DONE=4,this.readyState=this.UNSENT,this.onreadystatechange=null,this.responseText="",this.responseXML="",this.status=null,this.statusText=null,this.withCredentials=!1;this.open=function(e,n,t,l,r){if(this.abort(),d=!1,!function(e){return e&&-1===h.indexOf(e)}(e))throw new Error("SecurityError: Request method not allowed");i={method:e,url:n.toString(),async:"boolean"!=typeof t||t,user:l||null,password:r||null},y(this.OPENED)},this.setDisableHeaderCheck=function(e){u=e},this.setRequestHeader=function(e,n){if(this.readyState!==this.OPENED)throw new Error("INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN");if(function(e){return u||e&&-1===c.indexOf(e.toLowerCase())}(e)){if(f)throw new Error("INVALID_STATE_ERR: send flag is true");e=a[e.toLowerCase()]||e,a[e.toLowerCase()]=e,s[e]=s[e]?s[e]+", "+n:n}else console.warn('Refused to set unsafe header "'+e+'"')},this.getResponseHeader=function(e){return"string"==typeof e&&this.readyState>this.OPENED&&n&&n.headers&&n.headers[e.toLowerCase()]&&!d?n.headers[e.toLowerCase()]:null},this.getAllResponseHeaders=function(){if(this.readyState<this.HEADERS_RECEIVED||d)return"";var e="";for(var t in n.headers)"set-cookie"!==t&&"set-cookie2"!==t&&(e+=t+": "+n.headers[t]+"\r\n");return e.substr(0,e.length-2)},this.getRequestHeader=function(e){return"string"==typeof e&&a[e.toLowerCase()]?s[a[e.toLowerCase()]]:""},this.send=function(u){if(this.readyState!==this.OPENED)throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");if(f)throw new Error("INVALID_STATE_ERR: send has already been called");var c,h=!1,p=!1,g=us.parse(i.url);switch(g.protocol){case"https:":h=!0;case"http:":c=g.hostname;break;case"file:":p=!0;break;case void 0:case null:case"":c="localhost";break;default:throw new Error("Protocol not supported.")}if(p){if("GET"!==i.method)throw new Error("XMLHttpRequest: Only GET method is supported");if(i.async)ss.readFile(g.pathname,"utf8",(function(e,n){e?t.handleError(e):(t.status=200,t.responseText=n,y(t.DONE))}));else try{this.responseText=ss.readFileSync(g.pathname,"utf8"),this.status=200,y(t.DONE)}catch(e){this.handleError(e)}}else{var m=g.port||(h?443:80),v=g.pathname+(g.search?g.search:"");for(var b in o)a[b.toLowerCase()]||(s[b]=o[b]);if(s.Host=c,h&&443===m||80===m||(s.Host+=":"+g.port),i.user){void 0===i.password&&(i.password="");var w=new S(i.user+":"+i.password);s.Authorization="Basic "+w.toString("base64")}"GET"===i.method||"HEAD"===i.method?u=null:u?(s["Content-Length"]=ue(u)?u.length:S.byteLength(u),s["Content-Type"]||(s["Content-Type"]="text/plain;charset=UTF-8")):"POST"===i.method&&(s["Content-Length"]=0);var _={host:c,port:m,path:v,method:i.method,headers:s,agent:!1,withCredentials:t.withCredentials};if(d=!1,i.async){var E=h?r.request:l.request;f=!0,t.dispatchEvent("readystatechange");var x=function(e){t.handleError(e)};e=E(_,(function l(r){if(301!==(n=r).statusCode&&302!==n.statusCode&&303!==n.statusCode&&307!==n.statusCode)n.setEncoding("utf8"),y(t.HEADERS_RECEIVED),t.status=n.statusCode,n.on("data",(function(e){e&&(t.responseText+=e),f&&y(t.LOADING)})),n.on("end",(function(){f&&(y(t.DONE),f=!1)})),n.on("error",(function(e){t.handleError(e)}));else{i.url=n.headers.location;var u=us.parse(i.url);c=u.hostname;var o={hostname:u.hostname,port:u.port,path:u.path,method:303===n.statusCode?"GET":i.method,headers:s,withCredentials:t.withCredentials};(e=E(o,l).on("error",x)).end()}})).on("error",x),u&&e.write(u),e.end(),t.dispatchEvent("loadstart")}else{var k=".node-xmlhttprequest-content-"+si.pid,I=".node-xmlhttprequest-sync-"+si.pid;ss.writeFileSync(I,"","utf8");for(var P="var http = require('http'), https = require('https'), fs = require('fs');var doRequest = http"+(h?"s":"")+".request;var options = "+JSON.stringify(_)+";var responseText = '';var req = doRequest(options, function(response) {response.setEncoding('utf8');response.on('data', function(chunk) {  responseText += chunk;});response.on('end', function() {fs.writeFileSync('"+k+"', JSON.stringify({err: null, data: {statusCode: response.statusCode, headers: response.headers, text: responseText}}), 'utf8');fs.unlinkSync('"+I+"');});response.on('error', function(error) {fs.writeFileSync('"+k+"', JSON.stringify({err: error}), 'utf8');fs.unlinkSync('"+I+"');});}).on('error', function(error) {fs.writeFileSync('"+k+"', JSON.stringify({err: error}), 'utf8');fs.unlinkSync('"+I+"');});"+(u?"req.write('"+JSON.stringify(u).slice(1,-1).replace(/'/g,"\\'")+"');":"")+"req.end();",A=os(si.argv[0],["-e",P]);ss.existsSync(I););var T=JSON.parse(ss.readFileSync(k,"utf8"));A.stdin.end(),ss.unlinkSync(k),T.err?t.handleError(T.err):(n=T.data,t.status=T.data.statusCode,t.responseText=T.data.text,y(t.DONE))}}},this.handleError=function(e){this.status=0,this.statusText=e,this.responseText=e.stack,d=!0,y(this.DONE),this.dispatchEvent("error")},this.abort=function(){e&&(e.abort(),e=null),s=o,this.status=0,this.responseText="",this.responseXML="",d=!0,this.readyState===this.UNSENT||this.readyState===this.OPENED&&!f||this.readyState===this.DONE||(f=!1,y(this.DONE)),this.readyState=this.UNSENT,this.dispatchEvent("abort")},this.addEventListener=function(e,n){e in p||(p[e]=[]),p[e].push(n)},this.removeEventListener=function(e,n){e in p&&(p[e]=p[e].filter((function(e){return e!==n})))},this.dispatchEvent=function(e){if("function"==typeof t["on"+e]&&t["on"+e](),e in p)for(var n=0,l=p[e].length;n<l;n++)p[e][n].call(t)};var y=function(e){e!=t.LOADING&&t.readyState===e||(t.readyState=e,(i.async||t.readyState<t.OPENED||t.readyState===t.DONE)&&t.dispatchEvent("readystatechange"),t.readyState!==t.DONE||d||(t.dispatchEvent("load"),t.dispatchEvent("loadend")))}},cs=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};function hs(e){return cs(this,void 0,void 0,(function*(){return yield new Promise(((n,t)=>{let{url:l}=e;l||t(new Error("URL is missing")),"http://"!==l.substr(0,7)||e.forceHttp||(console.warn(`Upgrading requested url ${l} to https protocol.`),l=l.replace("http://","https://"));const r=new("undefined"==typeof XMLHttpRequest?as:XMLHttpRequest);e["bearer-token"]&&r.setRequestHeader("Authorization",`Bearer ${e["bearer-token"]}`),r.onload=()=>{if(r.status>=200&&r.status<300)n(r.responseText);else{console.log(r.responseText);const e=`Error fetching url:${l}; status code:${r.status}`;t(new Error(e))}},r.ontimeout=e=>{console.log("ontimeout",e)},r.onreadystatechange=()=>{404===r.status&&t(new Error(`Error fetching url:${l}; status code:${r.status}`))},r.onerror=()=>{console.error(`Request failed with error ${r.responseText}`),t(new Error(r.responseText))},r.open(e.method||"GET",l),e.body?r.send(JSON.stringify(e.body)):r.send()}))}))}function fs(e,n){return"string"!=typeof e?(console.warn("Trying to test a non string variable"),!1):0===e.indexOf(n)}function ds(e,n){for(let t=0;t<n.length;t++){const l=n[t];if(fs(e,l))return e.slice(l.length)}return e}var ps=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};const ys="https://api.etherscan.io/api?module=proxy",gs="https://api-ropsten.etherscan.io/api?module=proxy";const ms={serviceURL:{main:`${ys}&action=eth_getTransactionByHash&txhash={transaction_id}`,test:`${gs}&action=eth_getTransactionByHash&txhash={transaction_id}`},serviceName:Ar.etherscan,parsingFunction:function({jsonResponse:e,chain:n,key:t,keyPropertyName:l}){return ps(this,void 0,void 0,(function*(){const r={serviceURL:{main:`${ys}&action=eth_getBlockByNumber&boolean=true&tag={transaction_id}`,test:`${gs}&action=eth_getBlockByNumber&boolean=true&tag={transaction_id}`}},i={serviceURL:{main:`${ys}&action=eth_blockNumber`,test:`${gs}&action=eth_blockNumber`}};const u=yield function(e,n){return ps(this,void 0,void 0,(function*(){const u=e.result.blockNumber,o=Ur({explorerAPI:Object.assign(Object.assign({},r),{key:t,keyPropertyName:l}),transactionId:u,isTestApi:Rr(n)});try{const e=yield hs({url:o}),r=JSON.parse(e).result;return yield function(e,n){return ps(this,void 0,void 0,(function*(){const r=Ur({explorerAPI:Object.assign(Object.assign({},i),{key:t,keyPropertyName:l}),isTestApi:Rr(e)});let u;try{u=yield hs({url:r})}catch(e){throw new Error("Unable to get remote hash")}const o=JSON.parse(u).result;if(o-n<Nr)throw new Error("Not enough");return o}))}(n,u),r}catch(e){throw new Error("Unable to get remote hash")}}))}(e,n);return function(e,n){const t=e.result,l=new Date(1e3*parseInt(n.timestamp,16)),r=t.from;return{remoteHash:ds(t.input,Mr.ethmain.prefixes),issuingAddress:r,time:l,revokedAddresses:[]}}(e,u)}))},priority:-1};function vs(e){const n=Date.parse(e);if(n)return new Date(n);const t=function(e){let n=e.slice(0,-5).split(/\D/).map((function(e){return parseInt(e,10)||0}));n[1]-=1,n=new Date(Date.UTC.apply(Date,n));const t=e.slice(-5);let l=parseInt(t,10)/100;return"+"===t.slice(0,1)&&(l*=-1),n.setHours(n.getHours()+l),n.getTime()}(e);return t||function(e){let n,t;const l=/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/.exec(e)||[];return l[1]?(n=l[1].split(/\D/).map((function(e){return parseInt(e,10)||0})),n[1]-=1,n=new Date(Date.UTC.apply(Date,n)),n.getDate()?(l[5]&&(t=parseInt(l[5],10)/100*60,l[6]&&(t+=parseInt(l[6],10)),"+"===l[4]&&(t*=-1),t&&n.setUTCMinutes(n.getUTCMinutes()+t)),n):null):null}(e)}function bs(e){return""===e?"":vs(`${e}`)}function ws(e){return new Date(1e3*e)}const _s={serviceURL:{main:"https://api.blockcypher.com/v1/eth/main/txs/{transaction_id}?limit=500",test:"https://api.blockcypher.com/v1/beth/test/txs/{transaction_id}?limit=500"},serviceName:Ar.blockcypher,parsingFunction:function({jsonResponse:e}){if(e.confirmations<Nr)throw new Error("Not enough");const n=bs(e.received),t=e.outputs,l=t[t.length-1];let r=e.inputs[0].addresses[0];const i=ds(l.script,Mr.ethmain.prefixes);r=function(e,n){for(let t=0;t<n.length;t++){const l=n[t];if(!fs(e,l))return`${l}${e}`}return e}(r,Mr.ethmain.prefixes);const u=t.filter((e=>!!e.spent_by)).map((e=>e.addresses[0]));return{remoteHash:i,issuingAddress:r,time:n,revokedAddresses:u}},priority:-1};const Es={serviceURL:{main:"https://blockstream.info/api/tx/{transaction_id}",test:"https://blockstream.info/testnet/api/tx/{transaction_id}"},serviceName:Ar.blockstream,parsingFunction:function({jsonResponse:e}){if(!e.status.confirmed)throw new Error("Number of transaction confirmations were less than the minimum required, according to Blockstream API");const n=ws(e.status.block_time),t=e.vout,l=t[t.length-1],r=e.vin[0].prevout.scriptpubkey_address,i=ds(l.scriptpubkey,Mr.bitcoin.prefixes),u=t.filter((e=>!!e.scriptpubkey_address)).map((e=>e.scriptpubkey_address));return{remoteHash:i,issuingAddress:r,time:n,revokedAddresses:u}},priority:-1};const Ss={serviceURL:{main:"https://api.blockcypher.com/v1/btc/main/txs/{transaction_id}?limit=500",test:"https://api.blockcypher.com/v1/btc/test3/txs/{transaction_id}?limit=500"},serviceName:Ar.blockcypher,parsingFunction:function({jsonResponse:e}){if(e.confirmations<Nr)throw new Error("Number of transaction confirmations were less than the minimum required, according to Blockcypher API");const n=bs(e.received),t=e.outputs,l=t[t.length-1],r=e.inputs[0].addresses[0],i=ds(l.script,Mr.bitcoin.prefixes),u=t.filter((e=>!!e.spent_by)).map((e=>e.addresses[0]));return{remoteHash:i,issuingAddress:r,time:n,revokedAddresses:u}},priority:-1};var xs=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};function ks(e){return e.map((e=>({getTxData:(n,t)=>xs(this,void 0,void 0,(function*(){return yield function(e,n,t){return xs(this,void 0,void 0,(function*(){const l=Ur({explorerAPI:e,transactionId:n,isTestApi:Rr(t)});try{const n=yield hs({url:l});return yield e.parsingFunction(Object.assign({jsonResponse:JSON.parse(n),chain:t},e))}catch(e){throw new Error("Unable to get remote hash")}}))}(e,n,t)})),priority:e.priority})))}const Is=[Ss,Es],Ps=[ms,_s];var As=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};function Ts({serviceUrl:e,transactionId:n}){return As(this,void 0,void 0,(function*(){const t={method:"eth_getTransactionByHash",jsonrpc:"2.0",id:"getbyhash",params:["0x"+n]},l=yield hs({url:e,body:t,method:"POST"}),r=JSON.parse(l),i={method:"eth_getBlockByNumber",jsonrpc:"2.0",id:"blockbynumber",params:[r.result.blockNumber,!0]},u=yield hs({url:e,body:i,method:"POST"}),o=JSON.parse(u),s=r.result,a=o.result,c=new Date(1e3*parseInt(a.timestamp,16)),h=s.from;return{remoteHash:ds(s.input,["0x"]),issuingAddress:h,time:c,revokedAddresses:[]}}))}var Os=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};function Ms({serviceUrl:e,transactionId:n}){return Os(this,void 0,void 0,(function*(){const t={method:"getrawtransaction",jsonrpc:"2.0",id:"rpctest",params:[n,!0]},l=yield hs({url:e,body:t,method:"POST"}),r=JSON.parse(l).result,i=r.vout[0].scriptPubKey.addresses[0],u=ds(r.vout[1].scriptPubKey.asm,["6a20","OP_RETURN "]),o=ws(r.blocktime),s=r.vout.filter((e=>!!e.scriptPubKey.addresses)).map((e=>e.scriptPubKey.addresses)).flat();return{issuingAddress:i,remoteHash:u,time:o,revokedAddresses:s}}))}var Rs=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};const Ns=[];function Cs(e=[],n=[],t=!1){const l=e.map((e=>e.serviceName)).filter((e=>!!e)).filter((e=>!!Ar[e]));return l.length?n.reduce(((n,r)=>{if(l.includes(r.serviceName)){const t=Object.assign({},r),l=e.find((e=>e.serviceName===r.serviceName));if(function(e){if(e.key&&!e.keyPropertyName)throw new Error(`Property keyPropertyName is not set for ${e.serviceName}. Cannot pass the key property to the service.`);return!0}(l)){const r=Object.assign(t,l);n.push(r);const i=e.findIndex((e=>e.serviceName===r.serviceName));Ns.includes(i)||Ns.push(i)}}else n.push(r);return t&&function(e,n){n.forEach((n=>e.splice(n,1)))}(e,Ns),n}),[]):n}function Ls(e){return e.map((e=>(e.parsingFunction||(e.parsingFunction="btc"===e.chainType?Ms:Ts),e))).map((e=>({getTxData:n=>Rs(this,void 0,void 0,(function*(){return yield e.parsingFunction(Object.assign(Object.assign({},e),{transactionId:n}))})),priority:e.priority})))}function js(e){const{bitcoin:n,ethereum:t}={bitcoin:ks(Cs(l=e,Is)),ethereum:ks(Cs(l,Ps))};var l;const{custom:r}=function(e){return{custom:Ls(e)}}(e.filter((e=>"rpc"===e.apiType)));return{bitcoin:n,ethereum:t,custom:[...r,...ks(e.filter((e=>"rpc"!==e.apiType)))]}}var Us=function(e,n,t,l){return new(t||(t=Promise))((function(r,i){function u(e){try{s(l.next(e))}catch(e){i(e)}}function o(e){try{s(l.throw(e))}catch(e){i(e)}}function s(e){e.done?r(e.value):function(e){return e instanceof t?e:new t((function(n){n(e)}))}(e.value).then(u,o)}s((l=l.apply(e,n||[])).next())}))};function Ds(e,n){var t;switch(e){case Mr[Or.Bitcoin].code:case Mr[Or.Regtest].code:case Mr[Or.Testnet].code:case Mr[Or.Mocknet].code:return n.bitcoin;case Mr[Or.Ethmain].code:case Mr[Or.Ethropst].code:case Mr[Or.Ethrinkeby].code:return n.ethereum;default:if(!(null===(t=n.custom)||void 0===t?void 0:t.length))throw new Error("Chain is not natively supported. Use custom explorers to retrieve tx data.");return n.custom}}function Bs(e){return Us(this,void 0,void 0,(function*(){let n;try{n=yield jr(e,Cr)}catch(e){throw new Error(`Transaction lookup error: ${e.message}`)}if(!n||0===n.length)throw new Error("Could not confirm transaction data.");const t=n[0];for(let e=1;e<n.length;e++){const l=n[e];if(t.issuingAddress!==l.issuingAddress)throw new Error("Issuing addresses do not match consistently");if(t.remoteHash!==l.remoteHash)throw new Error("Remote hashes do not match consistently")}return t}))}function Ks(e,n,t,l){return Us(this,void 0,void 0,(function*(){try{const r=function(e,n,t){if(Cr>e.length)throw new Error("Invalid application configuration; check the CONFIG.MinimumBlockchainExplorers configuration value");const l=[],r=e.length;for(let i=0;i<r;i++)l.push(e[i].getTxData(n,t));return l}(e[n],t,l);return yield Bs(r)}catch(r){if(n<e.length-1)return n++,yield Ks(e,n,t,l);throw r}}))}const Fs={value:"https://dev.uniresolver.io/1.0/identifiers",set url(e){this.value=e},get url(){return this.value}};function Vs(e){return e.startsWith("did:",0)}function Hs(e){return e.startsWith("did:key:",0)}const qs={};
/*!
	 * Copyright (c) 2019-2022 Digital Bazaar, Inc. All rights reserved.
	 */
const zs="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";function $s(e,n){return function(e,n,t){if(!(e instanceof Uint8Array))throw new TypeError('"input" must be a Uint8Array.');if("string"!=typeof n)throw new TypeError('"alphabet" must be a string.');if(void 0!==t&&"number"!=typeof t)throw new TypeError('"maxline" must be a number.');if(0===e.length)return"";let l="",r=0;const i=n.length,u=n.charAt(0),o=[0];for(r=0;r<e.length;++r){let n=e[r];for(let e=0;e<o.length;++e)n+=o[e]<<8,o[e]=n%i,n=n/i|0;for(;n>0;)o.push(n%i),n=n/i|0}for(r=0;0===e[r]&&r<e.length-1;++r)l+=u;for(r=o.length-1;r>=0;--r)l+=n[o[r]];if(t){const e=new RegExp(".{1,"+t+"}","g");l=l.match(e).join("\r\n")}return l}(e,zs,n)}function Gs(e){return function(e,n){if("string"!=typeof e)throw new TypeError('"input" must be a string.');if("string"!=typeof n)throw new TypeError('"alphabet" must be a string.');if(0===e.length)return new Uint8Array;let t=qs[n];if(!t){t=qs[n]=[];for(let e=0;e<n.length;++e)t[n.charCodeAt(e)]=e}e=e.replace(/\s/g,"");const l=n.length,r=n.charAt(0),i=[0];for(let n=0;n<e.length;n++){const r=t[e.charCodeAt(n)];if(void 0===r)return;let u=r;for(let e=0;e<i.length;++e)u+=i[e]*l,i[e]=255&u,u>>=8;for(;u>0;)i.push(255&u),u>>=8}for(let n=0;e[n]===r&&n<e.length-1;++n)i.push(0);return new Uint8Array(i.reverse())}(e,zs)}
/*!
	 * Copyright (c) 2018-2022 Digital Bazaar, Inc. All rights reserved.
	 */const Ws="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",Js=[62,-1,-1,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,63,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51];function Xs(e){if(!(e instanceof Uint8Array||"string"==typeof e))throw new TypeError('"input" be a string or Uint8Array.');"string"==typeof e&&(e=(new TextEncoder).encode(e));let n,t,l,r="",i=0;for(;i<e.byteLength;)n=e[i++],t=e[i++],l=e[i++],r+=Ws.charAt(n>>2),r+=Ws.charAt((3&n)<<4|t>>4),isNaN(t)||(r+=Ws.charAt((15&t)<<2|l>>6),isNaN(l)||(r+=Ws.charAt(63&l)));return r}var Ys={},Qs=Object.freeze({__proto__:null,default:Ys});
/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */
const Zs=BigInt(0),ea=BigInt(1),na=BigInt(2),ta=BigInt(255),la=na**BigInt(252)+BigInt("27742317777372353535851937790883648493"),ra={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:na**ta-BigInt(19),l:la,n:la,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")},ia=na**BigInt(256),ua=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742");const oa=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),sa=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),aa=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),ca=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");class ha{constructor(e,n,t,l){this.x=e,this.y=n,this.z=t,this.t=l}static fromAffine(e){if(!(e instanceof ma))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return e.equals(ma.ZERO)?ha.ZERO:new ha(e.x,e.y,ea,Pa(e.x*e.y))}static toAffineBatch(e){const n=function(e,n=ra.P){const t=new Array(e.length),l=Aa(e.reduce(((e,l,r)=>l===Zs?e:(t[r]=e,Pa(e*l,n))),ea),n);return e.reduceRight(((e,l,r)=>l===Zs?e:(t[r]=Pa(e*t[r],n),Pa(e*l,n))),l),t}(e.map((e=>e.z)));return e.map(((e,t)=>e.toAffine(n[t])))}static normalizeZ(e){return this.toAffineBatch(e).map(this.fromAffine)}equals(e){fa(e);const{x:n,y:t,z:l}=this,{x:r,y:i,z:u}=e,o=Pa(n*u),s=Pa(r*l),a=Pa(t*u),c=Pa(i*l);return o===s&&a===c}negate(){return new ha(Pa(-this.x),this.y,this.z,Pa(-this.t))}double(){const{x:e,y:n,z:t}=this,{a:l}=ra,r=Pa(e**na),i=Pa(n**na),u=Pa(na*Pa(t**na)),o=Pa(l*r),s=Pa(Pa((e+n)**na)-r-i),a=o+i,c=a-u,h=o-i,f=Pa(s*c),d=Pa(a*h),p=Pa(s*h),y=Pa(c*a);return new ha(f,d,y,p)}add(e){fa(e);const{x:n,y:t,z:l,t:r}=this,{x:i,y:u,z:o,t:s}=e,a=Pa((t-n)*(u+i)),c=Pa((t+n)*(u-i)),h=Pa(c-a);if(h===Zs)return this.double();const f=Pa(l*na*s),d=Pa(r*na*o),p=d+f,y=c+a,g=d-f,m=Pa(p*h),v=Pa(y*g),b=Pa(p*g),w=Pa(h*y);return new ha(m,v,w,b)}subtract(e){return this.add(e.negate())}precomputeWindow(e){const n=1+256/e,t=[];let l=this,r=l;for(let i=0;i<n;i++){r=l,t.push(r);for(let n=1;n<2**(e-1);n++)r=r.add(l),t.push(r);l=r.double()}return t}wNAF(e,n){!n&&this.equals(ha.BASE)&&(n=ma.BASE);const t=n&&n._WINDOW_SIZE||1;if(256%t)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let l=n&&ga.get(n);l||(l=this.precomputeWindow(t),n&&1!==t&&(l=ha.normalizeZ(l),ga.set(n,l)));let r=ha.ZERO,i=ha.ZERO;const u=1+256/t,o=2**(t-1),s=BigInt(2**t-1),a=2**t,c=BigInt(t);for(let n=0;n<u;n++){const t=n*o;let u=Number(e&s);if(e>>=c,u>o&&(u-=a,e+=ea),0===u){let e=l[t];n%2&&(e=e.negate()),i=i.add(e)}else{let e=l[t+Math.abs(u)-1];u<0&&(e=e.negate()),r=r.add(e)}}return ha.normalizeZ([r,i])[0]}multiply(e,n){return this.wNAF(Ca(e,ra.l),n)}multiplyUnsafe(e){let n=Ca(e,ra.l,!1);const t=ha.BASE,l=ha.ZERO;if(n===Zs)return l;if(this.equals(l)||n===ea)return this;if(this.equals(t))return this.wNAF(n);let r=l,i=this;for(;n>Zs;)n&ea&&(r=r.add(i)),i=i.double(),n>>=ea;return r}isSmallOrder(){return this.multiplyUnsafe(ra.h).equals(ha.ZERO)}isTorsionFree(){return this.multiplyUnsafe(ra.l).equals(ha.ZERO)}toAffine(e=Aa(this.z)){const{x:n,y:t,z:l}=this,r=Pa(n*e),i=Pa(t*e);if(Pa(l*e)!==ea)throw new Error("invZ was invalid");return new ma(r,i)}fromRistrettoBytes(){pa()}toRistrettoBytes(){pa()}fromRistrettoHash(){pa()}}function fa(e){if(!(e instanceof ha))throw new TypeError("ExtendedPoint expected")}function da(e){if(!(e instanceof ya))throw new TypeError("RistrettoPoint expected")}function pa(){throw new Error("Legacy method: switch to RistrettoPoint")}ha.BASE=new ha(ra.Gx,ra.Gy,ea,Pa(ra.Gx*ra.Gy)),ha.ZERO=new ha(Zs,ea,ea,Zs);class ya{constructor(e){this.ep=e}static calcElligatorRistrettoMap(e){const{d:n}=ra,t=Pa(ua*e*e),l=Pa((t+ea)*aa);let r=BigInt(-1);const i=Pa((r-n*t)*Pa(t+n));let{isValid:u,value:o}=Oa(l,i),s=Pa(o*e);xa(s)||(s=Pa(-s)),u||(o=s),u||(r=t);const a=Pa(r*(t-ea)*ca-i),c=o*o,h=Pa((o+o)*i),f=Pa(a*oa),d=Pa(ea-c),p=Pa(ea+c);return new ha(Pa(h*p),Pa(d*f),Pa(f*p),Pa(h*d))}static hashToCurve(e){const n=Ia((e=Na(e,64)).slice(0,32)),t=this.calcElligatorRistrettoMap(n),l=Ia(e.slice(32,64)),r=this.calcElligatorRistrettoMap(l);return new ya(t.add(r))}static fromHex(e){e=Na(e,32);const{a:n,d:t}=ra,l="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",r=Ia(e);if(!function(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}(Sa(r),e)||xa(r))throw new Error(l);const i=Pa(r*r),u=Pa(ea+n*i),o=Pa(ea-n*i),s=Pa(u*u),a=Pa(o*o),c=Pa(n*t*s-a),{isValid:h,value:f}=Ma(Pa(c*a)),d=Pa(f*o),p=Pa(f*d*c);let y=Pa((r+r)*d);xa(y)&&(y=Pa(-y));const g=Pa(u*p),m=Pa(y*g);if(!h||xa(m)||g===Zs)throw new Error(l);return new ya(new ha(y,g,ea,m))}toRawBytes(){let{x:e,y:n,z:t,t:l}=this.ep;const r=Pa(Pa(t+n)*Pa(t-n)),i=Pa(e*n),{value:u}=Ma(Pa(r*i**na)),o=Pa(u*r),s=Pa(u*i),a=Pa(o*s*l);let c;if(xa(l*a)){let t=Pa(n*ua),l=Pa(e*ua);e=t,n=l,c=Pa(o*sa)}else c=s;xa(e*a)&&(n=Pa(-n));let h=Pa((t-n)*c);return xa(h)&&(h=Pa(-h)),Sa(h)}toHex(){return wa(this.toRawBytes())}toString(){return this.toHex()}equals(e){da(e);const n=this.ep,t=e.ep,l=Pa(n.x*t.y)===Pa(n.y*t.x),r=Pa(n.y*t.y)===Pa(n.x*t.x);return l||r}add(e){return da(e),new ya(this.ep.add(e.ep))}subtract(e){return da(e),new ya(this.ep.subtract(e.ep))}multiply(e){return new ya(this.ep.multiply(e))}multiplyUnsafe(e){return new ya(this.ep.multiplyUnsafe(e))}}ya.BASE=new ya(ha.BASE),ya.ZERO=new ya(ha.ZERO);const ga=new WeakMap;class ma{constructor(e,n){this.x=e,this.y=n}_setWindowSize(e){this._WINDOW_SIZE=e,ga.delete(this)}static fromHex(e,n=!0){const{d:t,P:l}=ra,r=(e=Na(e,32)).slice();r[31]=-129&e[31];const i=ka(r);if(n&&i>=l)throw new Error("Expected 0 < hex < P");if(!n&&i>=ia)throw new Error("Expected 0 < hex < 2**256");const u=Pa(i*i),o=Pa(u-ea),s=Pa(t*u+ea);let{isValid:a,value:c}=Oa(o,s);if(!a)throw new Error("Point.fromHex: invalid y coordinate");const h=(c&ea)===ea;return 0!=(128&e[31])!==h&&(c=Pa(-c)),new ma(c,i)}static async fromPrivateKey(e){return(await La(e)).point}toRawBytes(){const e=Sa(this.y);return e[31]|=this.x&ea?128:0,e}toHex(){return wa(this.toRawBytes())}toX25519(){const{y:e}=this;return Sa(Pa((ea+e)*Aa(ea-e)))}isTorsionFree(){return ha.fromAffine(this).isTorsionFree()}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new ma(Pa(-this.x),this.y)}add(e){return ha.fromAffine(this).add(ha.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return ha.fromAffine(this).multiply(e,this).toAffine()}}ma.BASE=new ma(ra.Gx,ra.Gy),ma.ZERO=new ma(Zs,ea);class va{constructor(e,n){this.r=e,this.s=n,this.assertValidity()}static fromHex(e){const n=Na(e,64),t=ma.fromHex(n.slice(0,32),!1),l=ka(n.slice(32,64));return new va(t,l)}assertValidity(){const{r:e,s:n}=this;if(!(e instanceof ma))throw new Error("Expected Point instance");return Ca(n,ra.l,!1),this}toRawBytes(){const e=new Uint8Array(64);return e.set(this.r.toRawBytes()),e.set(Sa(this.s),32),e}toHex(){return wa(this.toRawBytes())}}const ba=Array.from({length:256},((e,n)=>n.toString(16).padStart(2,"0")));function wa(e){if(!(e instanceof Uint8Array))throw new Error("Uint8Array expected");let n="";for(let t=0;t<e.length;t++)n+=ba[e[t]];return n}function _a(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const n=new Uint8Array(e.length/2);for(let t=0;t<n.length;t++){const l=2*t,r=e.slice(l,l+2),i=Number.parseInt(r,16);if(Number.isNaN(i)||i<0)throw new Error("Invalid byte sequence");n[t]=i}return n}function Ea(e){return _a(e.toString(16).padStart(64,"0"))}function Sa(e){return Ea(e).reverse()}function xa(e){return(Pa(e)&ea)===ea}function ka(e){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+wa(Uint8Array.from(e).reverse()))}function Ia(e){return Pa(ka(e)&na**ta-ea)}function Pa(e,n=ra.P){const t=e%n;return t>=Zs?t:n+t}function Aa(e,n=ra.P){if(e===Zs||n<=Zs)throw new Error(`invert: expected positive integers, got n=${e} mod=${n}`);let t=Pa(e,n),l=n,r=Zs,i=ea;for(;t!==Zs;){const e=l%t,n=r-i*(l/t);l=t,t=e,r=i,i=n}if(l!==ea)throw new Error("invert: does not exist");return Pa(r,n)}function Ta(e,n){const{P:t}=ra;let l=e;for(;n-- >Zs;)l*=l,l%=t;return l}function Oa(e,n){const t=Pa(n*n*n),l=function(e){const{P:n}=ra,t=BigInt(5),l=BigInt(10),r=BigInt(20),i=BigInt(40),u=BigInt(80),o=e*e%n*e%n,s=Ta(o,na)*o%n,a=Ta(s,ea)*e%n,c=Ta(a,t)*a%n,h=Ta(c,l)*c%n,f=Ta(h,r)*h%n,d=Ta(f,i)*f%n,p=Ta(d,u)*d%n,y=Ta(p,u)*d%n,g=Ta(y,l)*c%n;return{pow_p_5_8:Ta(g,na)*e%n,b2:o}}(e*Pa(t*t*n)).pow_p_5_8;let r=Pa(e*t*l);const i=Pa(n*r*r),u=r,o=Pa(r*ua),s=i===e,a=i===Pa(-e),c=i===Pa(-e*ua);return s&&(r=u),(a||c)&&(r=o),xa(r)&&(r=Pa(-r)),{isValid:s||a,value:r}}function Ma(e){return Oa(ea,e)}async function Ra(...e){const n=await Ua.sha512(function(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error("Expected Uint8Array list");if(1===e.length)return e[0];const n=e.reduce(((e,n)=>e+n.length),0),t=new Uint8Array(n);for(let n=0,l=0;n<e.length;n++){const r=e[n];t.set(r,l),l+=r.length}return t}(...e));return Pa(ka(n),ra.l)}function Na(e,n){const t=e instanceof Uint8Array?Uint8Array.from(e):_a(e);if("number"==typeof n&&t.length!==n)throw new Error(`Expected ${n} bytes`);return t}function Ca(e,n,t=!0){if(!n)throw new TypeError("Specify max value");if("number"==typeof e&&Number.isSafeInteger(e)&&(e=BigInt(e)),"bigint"==typeof e&&e<n)if(t){if(Zs<e)return e}else if(Zs<=e)return e;throw new TypeError("Expected valid scalar: 0 < scalar < max")}async function La(e){if(32!==(e="bigint"==typeof e||"number"==typeof e?Ea(Ca(e,ia)):Na(e)).length)throw new Error("Expected 32 bytes");const n=await Ua.sha512(e),t=((l=n.slice(0,32))[0]&=248,l[31]&=127,l[31]|=64,l);var l;const r=n.slice(32,64),i=Pa(ka(t),ra.l),u=ma.BASE.multiply(i),o=u.toRawBytes();return{head:t,prefix:r,scalar:i,point:u,pointBytes:o}}ma.BASE._setWindowSize(8);const ja={node:Ys,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0},Ua={TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],bytesToHex:wa,getExtendedPublicKey:La,mod:Pa,invert:Aa,hashToPrivateScalar:e=>{if((e=Na(e)).length<40||e.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");const n=Pa(ka(e),ra.l);if(n===Zs||n===ea)throw new Error("Invalid private key");return n},randomBytes:(e=32)=>{if(ja.web)return ja.web.getRandomValues(new Uint8Array(e));if(ja.node){const{randomBytes:n}=ja.node;return new Uint8Array(n(e).buffer)}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>Ua.randomBytes(32),sha512:async e=>{if(ja.web){const n=await ja.web.subtle.digest("SHA-512",e.buffer);return new Uint8Array(n)}if(ja.node)return Uint8Array.from(ja.node.createHash("sha512").update(e).digest());throw new Error("The environment doesn't have sha512 function")},precompute(e=8,n=ma.BASE){const t=n.equals(ma.BASE)?n:new ma(n.x,n.y);return t._setWindowSize(e),t.multiply(na),t}},Da=self.crypto;if(!Da.getRandomValues)throw new Error('Browser does not provide "crypto.getRandomValues".');var Ba={async generateKeyPair(){const e=new Uint8Array(32);Da.getRandomValues(e);const n=await Ka(e);return e.fill(0),n},generateKeyPairFromSeed:Ka,sign:async(e,n)=>async function(e,n){e=Na(e);const{prefix:t,scalar:l,pointBytes:r}=await La(n),i=await Ra(t,e),u=ma.BASE.multiply(i),o=Pa(i+await Ra(u.toRawBytes(),r,e)*l,ra.l);return new va(u,o).toRawBytes()}(n,e.slice(0,32)),verify:async(e,n,t)=>async function(e,n,t){n=Na(n),t instanceof ma||(t=ma.fromHex(t,!1));const{r:l,s:r}=e instanceof va?e.assertValidity():va.fromHex(e),i=ha.BASE.multiplyUnsafe(r),u=await Ra(l.toRawBytes(),t.toRawBytes(),n),o=ha.fromAffine(t).multiplyUnsafe(u);return ha.fromAffine(l).add(o).subtract(i).multiplyUnsafe(ra.h).equals(ha.ZERO)}(t,n,e),sha256digest:async({data:e})=>Da.subtle.digest("SHA-256",e)};async function Ka(e){const n=await async function(e){return(await La(e)).pointBytes}(e),t=new Uint8Array(64);return t.set(e),t.set(n,e.length),{publicKey:n,secretKey:t}}
/*!
	 * Copyright (c) 2018-2022 Digital Bazaar, Inc. All rights reserved.
	 */class Fa{constructor({id:e,controller:n,revoked:t}={}){this.id=e,this.controller=n,this.revoked=t}static async generate(){throw new Error("Abstract method, must be implemented in subclass.")}static async fromKeyDocument({document:e,checkContext:n=!0,checkRevoked:t=!0}={}){if(!e)throw new TypeError('The "document" parameter is required.');if(n){if(![].concat(e["@context"]).includes(this.SUITE_CONTEXT))throw new Error('Key document does not contain required context "'+this.SUITE_CONTEXT+'".')}if(t&&e.revoked)throw new Error(`Key has been revoked since: "${e.revoked}".`);return this.from(e)}static async from(){throw new Error("Abstract method from() must be implemented in subclass.")}export({publicKey:e=!1,privateKey:n=!1}={}){if(!e&&!n)throw new Error('Export requires specifying either "publicKey" or "privateKey".');const t={id:this.id,type:this.type,controller:this.controller};return this.revoked&&(t.revoked=this.revoked),t}fingerprint(){throw new Error("Abstract method, must be implemented in subclass.")}verifyFingerprint(){throw new Error("Abstract method, must be implemented in subclass.")}signer(){return{async sign({}){throw new Error("Abstract method, must be implemented in subclass.")}}}verifier(){return{async verify({}){throw new Error("Abstract method, must be implemented in subclass.")}}}}Fa.SUITE_CONTEXT="INVALID LDKeyPair CONTEXT";
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
const Va="Ed25519VerificationKey2020",Ha=new Uint8Array([237,1]),qa=new Uint8Array([128,38]);class za extends Fa{constructor(e={}){super(e),this.type=Va;const{publicKeyMultibase:n,privateKeyMultibase:t}=e;if(!n)throw new TypeError('The "publicKeyMultibase" property is required.');if(!n||!$a(n,Ha))throw new Error(`"publicKeyMultibase" has invalid header bytes: "${n}".`);if(t&&!$a(t,qa))throw new Error('"privateKeyMultibase" has invalid header bytes.');this.publicKeyMultibase=n,this.privateKeyMultibase=t,this.controller&&!this.id&&(this.id=`${this.controller}#${this.fingerprint()}`)}static async from(e){return"Ed25519VerificationKey2018"===e.type?za.fromEd25519VerificationKey2018(e):"JsonWebKey2020"===e.type?za.fromJsonWebKey2020(e):new za(e)}static fromEd25519VerificationKey2018({keyPair:e}={}){const n=Ga(Ha,Gs(e.publicKeyBase58)),t=new za({id:e.id,controller:e.controller,publicKeyMultibase:n});return e.privateKeyBase58&&(t.privateKeyMultibase=Ga(qa,Gs(e.privateKeyBase58))),t}static fromJsonWebKey2020({id:e,type:n,controller:t,publicKeyJwk:l}={}){if("JsonWebKey2020"!==n)throw new TypeError(`Invalid key type: "${n}".`);if(!l)throw new TypeError('"publicKeyJwk" property is required.');const{kty:r,crv:i}=l;if("OKP"!==r)throw new TypeError('"kty" is required to be "OKP".');if("Ed25519"!==i)throw new TypeError('"crv" is required to be "Ed25519".');const{x:u}=l,o=Ga(Ha,function(e){let n=e.length;const t=n%4;if(1===t)throw new Error("Illegal base64 string.");let l=0;t>0&&(l=4-t,n+=l);const r=new Uint8Array(n/4*3-l);let i,u,o,s,a=0,c=0;for(;a<n;)i=Js[e.charCodeAt(a++)-45],u=Js[e.charCodeAt(a++)-45],r[c++]=i<<2|u>>4,a<e.length&&(o=Js[e.charCodeAt(a++)-45],r[c++]=(15&u)<<4|o>>2,a<e.length&&(s=Js[e.charCodeAt(a++)-45],r[c++]=(3&o)<<6|s));return r}(u));return za.from({id:e,controller:t,publicKeyMultibase:o})}static async generate({seed:e,...n}={}){let t;t=e?await Ba.generateKeyPairFromSeed(e):await Ba.generateKeyPair();const l=Ga(Ha,t.publicKey),r=Ga(qa,t.secretKey);return new za({publicKeyMultibase:l,privateKeyMultibase:r,...n})}static fromFingerprint({fingerprint:e}={}){return new za({publicKeyMultibase:e})}get _publicKeyBuffer(){if(!this.publicKeyMultibase)return;return Gs(this.publicKeyMultibase.substr(1)).slice(Ha.length)}get _privateKeyBuffer(){if(!this.privateKeyMultibase)return;return Gs(this.privateKeyMultibase.substr(1)).slice(qa.length)}fingerprint(){return this.publicKeyMultibase}export({publicKey:e=!1,privateKey:n=!1,includeContext:t=!1}={}){if(!e&&!n)throw new TypeError('Export requires specifying either "publicKey" or "privateKey".');const l={id:this.id,type:this.type};return t&&(l["@context"]=za.SUITE_CONTEXT),this.controller&&(l.controller=this.controller),e&&(l.publicKeyMultibase=this.publicKeyMultibase),n&&(l.privateKeyMultibase=this.privateKeyMultibase),this.revoked&&(l.revoked=this.revoked),l}toJwk({publicKey:e=!0,privateKey:n=!1}={}){if(!e&&!n)throw TypeError('Either a "publicKey" or a "privateKey" is required.');const t={crv:"Ed25519",kty:"OKP"};return e&&(t.x=Xs(this._publicKeyBuffer)),n&&(t.d=Xs(this._privateKeyBuffer)),t}async jwkThumbprint(){const e=`{"crv":"Ed25519","kty":"OKP","x":"${Xs(this._publicKeyBuffer)}"}`,n=(new TextEncoder).encode(e);return Xs(new Uint8Array(await Ba.sha256digest({data:n})))}async toJsonWebKey2020(){return{"@context":"https://w3id.org/security/jws/v1",id:this.controller+"#"+await this.jwkThumbprint(),type:"JsonWebKey2020",controller:this.controller,publicKeyJwk:this.toJwk({publicKey:!0})}}verifyFingerprint({fingerprint:e}={}){if("string"!=typeof e||"z"!==e[0])return{error:new Error('"fingerprint" must be a multibase encoded string.'),valid:!1};let n;try{if(n=Gs(e.substr(1)),!n)throw new TypeError("Invalid encoding of fingerprint.")}catch(e){return{error:e,valid:!1}}const t=function(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}(this._publicKeyBuffer,n.slice(2)),l=n[0]===Ha[0]&&n[1]===Ha[1]&&t;return l?{valid:l}:{error:new Error("The fingerprint does not match the public key."),valid:!1}}signer(){const e=this._privateKeyBuffer;return{async sign({data:n}){if(!e)throw new Error("A private key is not available for signing.");return Ba.sign(e,n)},id:this.id}}verifier(){const e=this._publicKeyBuffer;return{async verify({data:n,signature:t}){if(!e)throw new Error("A public key is not available for verifying.");return Ba.verify(e,n,t)},id:this.id}}}function $a(e,n){if("string"!=typeof e||"z"!==e[0])return!1;const t=Gs(e.slice(1));return n.every(((e,n)=>t[n]===e))}function Ga(e,n){const t=new Uint8Array(e.length+n.length);return t.set(e),t.set(n,e.length),"z"+$s(t)}za.suite=Va,za.SUITE_CONTEXT="https://w3id.org/security/suites/ed25519-2020/v1";var Wa={exports:{}},Ja={exports:{}},Xa=t(Qs);!function(e){!function(e){var n=function(e){var n,t=new Float64Array(16);if(e)for(n=0;n<e.length;n++)t[n]=e[n];return t},t=function(){throw new Error("no PRNG")},l=new Uint8Array(16),r=new Uint8Array(32);r[0]=9;var i=n(),u=n([1]),o=n([56129,1]),s=n([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),a=n([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),c=n([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),h=n([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),f=n([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function d(e,n,t,l){e[n]=t>>24&255,e[n+1]=t>>16&255,e[n+2]=t>>8&255,e[n+3]=255&t,e[n+4]=l>>24&255,e[n+5]=l>>16&255,e[n+6]=l>>8&255,e[n+7]=255&l}function p(e,n,t,l,r){var i,u=0;for(i=0;i<r;i++)u|=e[n+i]^t[l+i];return(1&u-1>>>8)-1}function y(e,n,t,l){return p(e,n,t,l,16)}function g(e,n,t,l){return p(e,n,t,l,32)}function m(e,n,t,l){!function(e,n,t,l){for(var r,i=255&l[0]|(255&l[1])<<8|(255&l[2])<<16|(255&l[3])<<24,u=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,o=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,s=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,a=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,c=255&l[4]|(255&l[5])<<8|(255&l[6])<<16|(255&l[7])<<24,h=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,d=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,p=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,y=255&l[8]|(255&l[9])<<8|(255&l[10])<<16|(255&l[11])<<24,g=255&t[16]|(255&t[17])<<8|(255&t[18])<<16|(255&t[19])<<24,m=255&t[20]|(255&t[21])<<8|(255&t[22])<<16|(255&t[23])<<24,v=255&t[24]|(255&t[25])<<8|(255&t[26])<<16|(255&t[27])<<24,b=255&t[28]|(255&t[29])<<8|(255&t[30])<<16|(255&t[31])<<24,w=255&l[12]|(255&l[13])<<8|(255&l[14])<<16|(255&l[15])<<24,_=i,E=u,S=o,x=s,k=a,I=c,P=h,A=f,T=d,O=p,M=y,R=g,N=m,C=v,L=b,j=w,U=0;U<20;U+=2)_^=(r=(N^=(r=(T^=(r=(k^=(r=_+N|0)<<7|r>>>25)+_|0)<<9|r>>>23)+k|0)<<13|r>>>19)+T|0)<<18|r>>>14,I^=(r=(E^=(r=(C^=(r=(O^=(r=I+E|0)<<7|r>>>25)+I|0)<<9|r>>>23)+O|0)<<13|r>>>19)+C|0)<<18|r>>>14,M^=(r=(P^=(r=(S^=(r=(L^=(r=M+P|0)<<7|r>>>25)+M|0)<<9|r>>>23)+L|0)<<13|r>>>19)+S|0)<<18|r>>>14,j^=(r=(R^=(r=(A^=(r=(x^=(r=j+R|0)<<7|r>>>25)+j|0)<<9|r>>>23)+x|0)<<13|r>>>19)+A|0)<<18|r>>>14,_^=(r=(x^=(r=(S^=(r=(E^=(r=_+x|0)<<7|r>>>25)+_|0)<<9|r>>>23)+E|0)<<13|r>>>19)+S|0)<<18|r>>>14,I^=(r=(k^=(r=(A^=(r=(P^=(r=I+k|0)<<7|r>>>25)+I|0)<<9|r>>>23)+P|0)<<13|r>>>19)+A|0)<<18|r>>>14,M^=(r=(O^=(r=(T^=(r=(R^=(r=M+O|0)<<7|r>>>25)+M|0)<<9|r>>>23)+R|0)<<13|r>>>19)+T|0)<<18|r>>>14,j^=(r=(L^=(r=(C^=(r=(N^=(r=j+L|0)<<7|r>>>25)+j|0)<<9|r>>>23)+N|0)<<13|r>>>19)+C|0)<<18|r>>>14;_=_+i|0,E=E+u|0,S=S+o|0,x=x+s|0,k=k+a|0,I=I+c|0,P=P+h|0,A=A+f|0,T=T+d|0,O=O+p|0,M=M+y|0,R=R+g|0,N=N+m|0,C=C+v|0,L=L+b|0,j=j+w|0,e[0]=_>>>0&255,e[1]=_>>>8&255,e[2]=_>>>16&255,e[3]=_>>>24&255,e[4]=E>>>0&255,e[5]=E>>>8&255,e[6]=E>>>16&255,e[7]=E>>>24&255,e[8]=S>>>0&255,e[9]=S>>>8&255,e[10]=S>>>16&255,e[11]=S>>>24&255,e[12]=x>>>0&255,e[13]=x>>>8&255,e[14]=x>>>16&255,e[15]=x>>>24&255,e[16]=k>>>0&255,e[17]=k>>>8&255,e[18]=k>>>16&255,e[19]=k>>>24&255,e[20]=I>>>0&255,e[21]=I>>>8&255,e[22]=I>>>16&255,e[23]=I>>>24&255,e[24]=P>>>0&255,e[25]=P>>>8&255,e[26]=P>>>16&255,e[27]=P>>>24&255,e[28]=A>>>0&255,e[29]=A>>>8&255,e[30]=A>>>16&255,e[31]=A>>>24&255,e[32]=T>>>0&255,e[33]=T>>>8&255,e[34]=T>>>16&255,e[35]=T>>>24&255,e[36]=O>>>0&255,e[37]=O>>>8&255,e[38]=O>>>16&255,e[39]=O>>>24&255,e[40]=M>>>0&255,e[41]=M>>>8&255,e[42]=M>>>16&255,e[43]=M>>>24&255,e[44]=R>>>0&255,e[45]=R>>>8&255,e[46]=R>>>16&255,e[47]=R>>>24&255,e[48]=N>>>0&255,e[49]=N>>>8&255,e[50]=N>>>16&255,e[51]=N>>>24&255,e[52]=C>>>0&255,e[53]=C>>>8&255,e[54]=C>>>16&255,e[55]=C>>>24&255,e[56]=L>>>0&255,e[57]=L>>>8&255,e[58]=L>>>16&255,e[59]=L>>>24&255,e[60]=j>>>0&255,e[61]=j>>>8&255,e[62]=j>>>16&255,e[63]=j>>>24&255}(e,n,t,l)}function v(e,n,t,l){!function(e,n,t,l){for(var r,i=255&l[0]|(255&l[1])<<8|(255&l[2])<<16|(255&l[3])<<24,u=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,o=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,s=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,a=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,c=255&l[4]|(255&l[5])<<8|(255&l[6])<<16|(255&l[7])<<24,h=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,d=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,p=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,y=255&l[8]|(255&l[9])<<8|(255&l[10])<<16|(255&l[11])<<24,g=255&t[16]|(255&t[17])<<8|(255&t[18])<<16|(255&t[19])<<24,m=255&t[20]|(255&t[21])<<8|(255&t[22])<<16|(255&t[23])<<24,v=255&t[24]|(255&t[25])<<8|(255&t[26])<<16|(255&t[27])<<24,b=255&t[28]|(255&t[29])<<8|(255&t[30])<<16|(255&t[31])<<24,w=255&l[12]|(255&l[13])<<8|(255&l[14])<<16|(255&l[15])<<24,_=0;_<20;_+=2)i^=(r=(m^=(r=(d^=(r=(a^=(r=i+m|0)<<7|r>>>25)+i|0)<<9|r>>>23)+a|0)<<13|r>>>19)+d|0)<<18|r>>>14,c^=(r=(u^=(r=(v^=(r=(p^=(r=c+u|0)<<7|r>>>25)+c|0)<<9|r>>>23)+p|0)<<13|r>>>19)+v|0)<<18|r>>>14,y^=(r=(h^=(r=(o^=(r=(b^=(r=y+h|0)<<7|r>>>25)+y|0)<<9|r>>>23)+b|0)<<13|r>>>19)+o|0)<<18|r>>>14,w^=(r=(g^=(r=(f^=(r=(s^=(r=w+g|0)<<7|r>>>25)+w|0)<<9|r>>>23)+s|0)<<13|r>>>19)+f|0)<<18|r>>>14,i^=(r=(s^=(r=(o^=(r=(u^=(r=i+s|0)<<7|r>>>25)+i|0)<<9|r>>>23)+u|0)<<13|r>>>19)+o|0)<<18|r>>>14,c^=(r=(a^=(r=(f^=(r=(h^=(r=c+a|0)<<7|r>>>25)+c|0)<<9|r>>>23)+h|0)<<13|r>>>19)+f|0)<<18|r>>>14,y^=(r=(p^=(r=(d^=(r=(g^=(r=y+p|0)<<7|r>>>25)+y|0)<<9|r>>>23)+g|0)<<13|r>>>19)+d|0)<<18|r>>>14,w^=(r=(b^=(r=(v^=(r=(m^=(r=w+b|0)<<7|r>>>25)+w|0)<<9|r>>>23)+m|0)<<13|r>>>19)+v|0)<<18|r>>>14;e[0]=i>>>0&255,e[1]=i>>>8&255,e[2]=i>>>16&255,e[3]=i>>>24&255,e[4]=c>>>0&255,e[5]=c>>>8&255,e[6]=c>>>16&255,e[7]=c>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=h>>>0&255,e[17]=h>>>8&255,e[18]=h>>>16&255,e[19]=h>>>24&255,e[20]=f>>>0&255,e[21]=f>>>8&255,e[22]=f>>>16&255,e[23]=f>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,n,t,l)}var b=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function w(e,n,t,l,r,i,u){var o,s,a=new Uint8Array(16),c=new Uint8Array(64);for(s=0;s<16;s++)a[s]=0;for(s=0;s<8;s++)a[s]=i[s];for(;r>=64;){for(m(c,a,u,b),s=0;s<64;s++)e[n+s]=t[l+s]^c[s];for(o=1,s=8;s<16;s++)o=o+(255&a[s])|0,a[s]=255&o,o>>>=8;r-=64,n+=64,l+=64}if(r>0)for(m(c,a,u,b),s=0;s<r;s++)e[n+s]=t[l+s]^c[s];return 0}function _(e,n,t,l,r){var i,u,o=new Uint8Array(16),s=new Uint8Array(64);for(u=0;u<16;u++)o[u]=0;for(u=0;u<8;u++)o[u]=l[u];for(;t>=64;){for(m(s,o,r,b),u=0;u<64;u++)e[n+u]=s[u];for(i=1,u=8;u<16;u++)i=i+(255&o[u])|0,o[u]=255&i,i>>>=8;t-=64,n+=64}if(t>0)for(m(s,o,r,b),u=0;u<t;u++)e[n+u]=s[u];return 0}function E(e,n,t,l,r){var i=new Uint8Array(32);v(i,l,r,b);for(var u=new Uint8Array(8),o=0;o<8;o++)u[o]=l[o+16];return _(e,n,t,u,i)}function S(e,n,t,l,r,i,u){var o=new Uint8Array(32);v(o,i,u,b);for(var s=new Uint8Array(8),a=0;a<8;a++)s[a]=i[a+16];return w(e,n,t,l,r,s,o)}var x=function(e){var n,t,l,r,i,u,o,s;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,n=255&e[0]|(255&e[1])<<8,this.r[0]=8191&n,t=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(n>>>13|t<<3),l=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(t>>>10|l<<6),r=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(l>>>7|r<<9),i=255&e[8]|(255&e[9])<<8,this.r[4]=255&(r>>>4|i<<12),this.r[5]=i>>>1&8190,u=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(i>>>14|u<<2),o=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(u>>>11|o<<5),s=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(o>>>8|s<<8),this.r[9]=s>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function k(e,n,t,l,r,i){var u=new x(i);return u.update(t,l,r),u.finish(e,n),0}function I(e,n,t,l,r,i){var u=new Uint8Array(16);return k(u,0,t,l,r,i),y(e,n,u,0)}function P(e,n,t,l,r){var i;if(t<32)return-1;for(S(e,0,n,0,t,l,r),k(e,16,e,32,t-32,e),i=0;i<16;i++)e[i]=0;return 0}function A(e,n,t,l,r){var i,u=new Uint8Array(32);if(t<32)return-1;if(E(u,0,32,l,r),0!==I(n,16,n,32,t-32,u))return-1;for(S(e,0,n,0,t,l,r),i=0;i<32;i++)e[i]=0;return 0}function T(e,n){var t;for(t=0;t<16;t++)e[t]=0|n[t]}function O(e){var n,t,l=1;for(n=0;n<16;n++)t=e[n]+l+65535,l=Math.floor(t/65536),e[n]=t-65536*l;e[0]+=l-1+37*(l-1)}function M(e,n,t){for(var l,r=~(t-1),i=0;i<16;i++)l=r&(e[i]^n[i]),e[i]^=l,n[i]^=l}function R(e,t){var l,r,i,u=n(),o=n();for(l=0;l<16;l++)o[l]=t[l];for(O(o),O(o),O(o),r=0;r<2;r++){for(u[0]=o[0]-65517,l=1;l<15;l++)u[l]=o[l]-65535-(u[l-1]>>16&1),u[l-1]&=65535;u[15]=o[15]-32767-(u[14]>>16&1),i=u[15]>>16&1,u[14]&=65535,M(o,u,1-i)}for(l=0;l<16;l++)e[2*l]=255&o[l],e[2*l+1]=o[l]>>8}function N(e,n){var t=new Uint8Array(32),l=new Uint8Array(32);return R(t,e),R(l,n),g(t,0,l,0)}function C(e){var n=new Uint8Array(32);return R(n,e),1&n[0]}function L(e,n){var t;for(t=0;t<16;t++)e[t]=n[2*t]+(n[2*t+1]<<8);e[15]&=32767}function j(e,n,t){for(var l=0;l<16;l++)e[l]=n[l]+t[l]}function U(e,n,t){for(var l=0;l<16;l++)e[l]=n[l]-t[l]}function D(e,n,t){var l,r,i=0,u=0,o=0,s=0,a=0,c=0,h=0,f=0,d=0,p=0,y=0,g=0,m=0,v=0,b=0,w=0,_=0,E=0,S=0,x=0,k=0,I=0,P=0,A=0,T=0,O=0,M=0,R=0,N=0,C=0,L=0,j=t[0],U=t[1],D=t[2],B=t[3],K=t[4],F=t[5],V=t[6],H=t[7],q=t[8],z=t[9],$=t[10],G=t[11],W=t[12],J=t[13],X=t[14],Y=t[15];i+=(l=n[0])*j,u+=l*U,o+=l*D,s+=l*B,a+=l*K,c+=l*F,h+=l*V,f+=l*H,d+=l*q,p+=l*z,y+=l*$,g+=l*G,m+=l*W,v+=l*J,b+=l*X,w+=l*Y,u+=(l=n[1])*j,o+=l*U,s+=l*D,a+=l*B,c+=l*K,h+=l*F,f+=l*V,d+=l*H,p+=l*q,y+=l*z,g+=l*$,m+=l*G,v+=l*W,b+=l*J,w+=l*X,_+=l*Y,o+=(l=n[2])*j,s+=l*U,a+=l*D,c+=l*B,h+=l*K,f+=l*F,d+=l*V,p+=l*H,y+=l*q,g+=l*z,m+=l*$,v+=l*G,b+=l*W,w+=l*J,_+=l*X,E+=l*Y,s+=(l=n[3])*j,a+=l*U,c+=l*D,h+=l*B,f+=l*K,d+=l*F,p+=l*V,y+=l*H,g+=l*q,m+=l*z,v+=l*$,b+=l*G,w+=l*W,_+=l*J,E+=l*X,S+=l*Y,a+=(l=n[4])*j,c+=l*U,h+=l*D,f+=l*B,d+=l*K,p+=l*F,y+=l*V,g+=l*H,m+=l*q,v+=l*z,b+=l*$,w+=l*G,_+=l*W,E+=l*J,S+=l*X,x+=l*Y,c+=(l=n[5])*j,h+=l*U,f+=l*D,d+=l*B,p+=l*K,y+=l*F,g+=l*V,m+=l*H,v+=l*q,b+=l*z,w+=l*$,_+=l*G,E+=l*W,S+=l*J,x+=l*X,k+=l*Y,h+=(l=n[6])*j,f+=l*U,d+=l*D,p+=l*B,y+=l*K,g+=l*F,m+=l*V,v+=l*H,b+=l*q,w+=l*z,_+=l*$,E+=l*G,S+=l*W,x+=l*J,k+=l*X,I+=l*Y,f+=(l=n[7])*j,d+=l*U,p+=l*D,y+=l*B,g+=l*K,m+=l*F,v+=l*V,b+=l*H,w+=l*q,_+=l*z,E+=l*$,S+=l*G,x+=l*W,k+=l*J,I+=l*X,P+=l*Y,d+=(l=n[8])*j,p+=l*U,y+=l*D,g+=l*B,m+=l*K,v+=l*F,b+=l*V,w+=l*H,_+=l*q,E+=l*z,S+=l*$,x+=l*G,k+=l*W,I+=l*J,P+=l*X,A+=l*Y,p+=(l=n[9])*j,y+=l*U,g+=l*D,m+=l*B,v+=l*K,b+=l*F,w+=l*V,_+=l*H,E+=l*q,S+=l*z,x+=l*$,k+=l*G,I+=l*W,P+=l*J,A+=l*X,T+=l*Y,y+=(l=n[10])*j,g+=l*U,m+=l*D,v+=l*B,b+=l*K,w+=l*F,_+=l*V,E+=l*H,S+=l*q,x+=l*z,k+=l*$,I+=l*G,P+=l*W,A+=l*J,T+=l*X,O+=l*Y,g+=(l=n[11])*j,m+=l*U,v+=l*D,b+=l*B,w+=l*K,_+=l*F,E+=l*V,S+=l*H,x+=l*q,k+=l*z,I+=l*$,P+=l*G,A+=l*W,T+=l*J,O+=l*X,M+=l*Y,m+=(l=n[12])*j,v+=l*U,b+=l*D,w+=l*B,_+=l*K,E+=l*F,S+=l*V,x+=l*H,k+=l*q,I+=l*z,P+=l*$,A+=l*G,T+=l*W,O+=l*J,M+=l*X,R+=l*Y,v+=(l=n[13])*j,b+=l*U,w+=l*D,_+=l*B,E+=l*K,S+=l*F,x+=l*V,k+=l*H,I+=l*q,P+=l*z,A+=l*$,T+=l*G,O+=l*W,M+=l*J,R+=l*X,N+=l*Y,b+=(l=n[14])*j,w+=l*U,_+=l*D,E+=l*B,S+=l*K,x+=l*F,k+=l*V,I+=l*H,P+=l*q,A+=l*z,T+=l*$,O+=l*G,M+=l*W,R+=l*J,N+=l*X,C+=l*Y,w+=(l=n[15])*j,u+=38*(E+=l*D),o+=38*(S+=l*B),s+=38*(x+=l*K),a+=38*(k+=l*F),c+=38*(I+=l*V),h+=38*(P+=l*H),f+=38*(A+=l*q),d+=38*(T+=l*z),p+=38*(O+=l*$),y+=38*(M+=l*G),g+=38*(R+=l*W),m+=38*(N+=l*J),v+=38*(C+=l*X),b+=38*(L+=l*Y),i=(l=(i+=38*(_+=l*U))+(r=1)+65535)-65536*(r=Math.floor(l/65536)),u=(l=u+r+65535)-65536*(r=Math.floor(l/65536)),o=(l=o+r+65535)-65536*(r=Math.floor(l/65536)),s=(l=s+r+65535)-65536*(r=Math.floor(l/65536)),a=(l=a+r+65535)-65536*(r=Math.floor(l/65536)),c=(l=c+r+65535)-65536*(r=Math.floor(l/65536)),h=(l=h+r+65535)-65536*(r=Math.floor(l/65536)),f=(l=f+r+65535)-65536*(r=Math.floor(l/65536)),d=(l=d+r+65535)-65536*(r=Math.floor(l/65536)),p=(l=p+r+65535)-65536*(r=Math.floor(l/65536)),y=(l=y+r+65535)-65536*(r=Math.floor(l/65536)),g=(l=g+r+65535)-65536*(r=Math.floor(l/65536)),m=(l=m+r+65535)-65536*(r=Math.floor(l/65536)),v=(l=v+r+65535)-65536*(r=Math.floor(l/65536)),b=(l=b+r+65535)-65536*(r=Math.floor(l/65536)),w=(l=w+r+65535)-65536*(r=Math.floor(l/65536)),i=(l=(i+=r-1+37*(r-1))+(r=1)+65535)-65536*(r=Math.floor(l/65536)),u=(l=u+r+65535)-65536*(r=Math.floor(l/65536)),o=(l=o+r+65535)-65536*(r=Math.floor(l/65536)),s=(l=s+r+65535)-65536*(r=Math.floor(l/65536)),a=(l=a+r+65535)-65536*(r=Math.floor(l/65536)),c=(l=c+r+65535)-65536*(r=Math.floor(l/65536)),h=(l=h+r+65535)-65536*(r=Math.floor(l/65536)),f=(l=f+r+65535)-65536*(r=Math.floor(l/65536)),d=(l=d+r+65535)-65536*(r=Math.floor(l/65536)),p=(l=p+r+65535)-65536*(r=Math.floor(l/65536)),y=(l=y+r+65535)-65536*(r=Math.floor(l/65536)),g=(l=g+r+65535)-65536*(r=Math.floor(l/65536)),m=(l=m+r+65535)-65536*(r=Math.floor(l/65536)),v=(l=v+r+65535)-65536*(r=Math.floor(l/65536)),b=(l=b+r+65535)-65536*(r=Math.floor(l/65536)),w=(l=w+r+65535)-65536*(r=Math.floor(l/65536)),i+=r-1+37*(r-1),e[0]=i,e[1]=u,e[2]=o,e[3]=s,e[4]=a,e[5]=c,e[6]=h,e[7]=f,e[8]=d,e[9]=p,e[10]=y,e[11]=g,e[12]=m,e[13]=v,e[14]=b,e[15]=w}function B(e,n){D(e,n,n)}function K(e,t){var l,r=n();for(l=0;l<16;l++)r[l]=t[l];for(l=253;l>=0;l--)B(r,r),2!==l&&4!==l&&D(r,r,t);for(l=0;l<16;l++)e[l]=r[l]}function F(e,t){var l,r=n();for(l=0;l<16;l++)r[l]=t[l];for(l=250;l>=0;l--)B(r,r),1!==l&&D(r,r,t);for(l=0;l<16;l++)e[l]=r[l]}function V(e,t,l){var r,i,u=new Uint8Array(32),s=new Float64Array(80),a=n(),c=n(),h=n(),f=n(),d=n(),p=n();for(i=0;i<31;i++)u[i]=t[i];for(u[31]=127&t[31]|64,u[0]&=248,L(s,l),i=0;i<16;i++)c[i]=s[i],f[i]=a[i]=h[i]=0;for(a[0]=f[0]=1,i=254;i>=0;--i)M(a,c,r=u[i>>>3]>>>(7&i)&1),M(h,f,r),j(d,a,h),U(a,a,h),j(h,c,f),U(c,c,f),B(f,d),B(p,a),D(a,h,a),D(h,c,d),j(d,a,h),U(a,a,h),B(c,a),U(h,f,p),D(a,h,o),j(a,a,f),D(h,h,a),D(a,f,p),D(f,c,s),B(c,d),M(a,c,r),M(h,f,r);for(i=0;i<16;i++)s[i+16]=a[i],s[i+32]=h[i],s[i+48]=c[i],s[i+64]=f[i];var y=s.subarray(32),g=s.subarray(16);return K(y,y),D(g,g,y),R(e,g),0}function H(e,n){return V(e,n,r)}function q(e,n){return t(n,32),H(e,n)}function z(e,n,t){var r=new Uint8Array(32);return V(r,t,n),v(e,l,r,b)}x.prototype.blocks=function(e,n,t){for(var l,r,i,u,o,s,a,c,h,f,d,p,y,g,m,v,b,w,_,E=this.fin?0:2048,S=this.h[0],x=this.h[1],k=this.h[2],I=this.h[3],P=this.h[4],A=this.h[5],T=this.h[6],O=this.h[7],M=this.h[8],R=this.h[9],N=this.r[0],C=this.r[1],L=this.r[2],j=this.r[3],U=this.r[4],D=this.r[5],B=this.r[6],K=this.r[7],F=this.r[8],V=this.r[9];t>=16;)f=h=0,f+=(S+=8191&(l=255&e[n+0]|(255&e[n+1])<<8))*N,f+=(x+=8191&(l>>>13|(r=255&e[n+2]|(255&e[n+3])<<8)<<3))*(5*V),f+=(k+=8191&(r>>>10|(i=255&e[n+4]|(255&e[n+5])<<8)<<6))*(5*F),f+=(I+=8191&(i>>>7|(u=255&e[n+6]|(255&e[n+7])<<8)<<9))*(5*K),h=(f+=(P+=8191&(u>>>4|(o=255&e[n+8]|(255&e[n+9])<<8)<<12))*(5*B))>>>13,f&=8191,f+=(A+=o>>>1&8191)*(5*D),f+=(T+=8191&(o>>>14|(s=255&e[n+10]|(255&e[n+11])<<8)<<2))*(5*U),f+=(O+=8191&(s>>>11|(a=255&e[n+12]|(255&e[n+13])<<8)<<5))*(5*j),f+=(M+=8191&(a>>>8|(c=255&e[n+14]|(255&e[n+15])<<8)<<8))*(5*L),d=h+=(f+=(R+=c>>>5|E)*(5*C))>>>13,d+=S*C,d+=x*N,d+=k*(5*V),d+=I*(5*F),h=(d+=P*(5*K))>>>13,d&=8191,d+=A*(5*B),d+=T*(5*D),d+=O*(5*U),d+=M*(5*j),h+=(d+=R*(5*L))>>>13,d&=8191,p=h,p+=S*L,p+=x*C,p+=k*N,p+=I*(5*V),h=(p+=P*(5*F))>>>13,p&=8191,p+=A*(5*K),p+=T*(5*B),p+=O*(5*D),p+=M*(5*U),y=h+=(p+=R*(5*j))>>>13,y+=S*j,y+=x*L,y+=k*C,y+=I*N,h=(y+=P*(5*V))>>>13,y&=8191,y+=A*(5*F),y+=T*(5*K),y+=O*(5*B),y+=M*(5*D),g=h+=(y+=R*(5*U))>>>13,g+=S*U,g+=x*j,g+=k*L,g+=I*C,h=(g+=P*N)>>>13,g&=8191,g+=A*(5*V),g+=T*(5*F),g+=O*(5*K),g+=M*(5*B),m=h+=(g+=R*(5*D))>>>13,m+=S*D,m+=x*U,m+=k*j,m+=I*L,h=(m+=P*C)>>>13,m&=8191,m+=A*N,m+=T*(5*V),m+=O*(5*F),m+=M*(5*K),v=h+=(m+=R*(5*B))>>>13,v+=S*B,v+=x*D,v+=k*U,v+=I*j,h=(v+=P*L)>>>13,v&=8191,v+=A*C,v+=T*N,v+=O*(5*V),v+=M*(5*F),b=h+=(v+=R*(5*K))>>>13,b+=S*K,b+=x*B,b+=k*D,b+=I*U,h=(b+=P*j)>>>13,b&=8191,b+=A*L,b+=T*C,b+=O*N,b+=M*(5*V),w=h+=(b+=R*(5*F))>>>13,w+=S*F,w+=x*K,w+=k*B,w+=I*D,h=(w+=P*U)>>>13,w&=8191,w+=A*j,w+=T*L,w+=O*C,w+=M*N,_=h+=(w+=R*(5*V))>>>13,_+=S*V,_+=x*F,_+=k*K,_+=I*B,h=(_+=P*D)>>>13,_&=8191,_+=A*U,_+=T*j,_+=O*L,_+=M*C,S=f=8191&(h=(h=((h+=(_+=R*N)>>>13)<<2)+h|0)+(f&=8191)|0),x=d+=h>>>=13,k=p&=8191,I=y&=8191,P=g&=8191,A=m&=8191,T=v&=8191,O=b&=8191,M=w&=8191,R=_&=8191,n+=16,t-=16;this.h[0]=S,this.h[1]=x,this.h[2]=k,this.h[3]=I,this.h[4]=P,this.h[5]=A,this.h[6]=T,this.h[7]=O,this.h[8]=M,this.h[9]=R},x.prototype.finish=function(e,n){var t,l,r,i,u=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(t=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=t,t=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*t,t=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=t,t=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=t,u[0]=this.h[0]+5,t=u[0]>>>13,u[0]&=8191,i=1;i<10;i++)u[i]=this.h[i]+t,t=u[i]>>>13,u[i]&=8191;for(u[9]-=8192,l=(1^t)-1,i=0;i<10;i++)u[i]&=l;for(l=~l,i=0;i<10;i++)this.h[i]=this.h[i]&l|u[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),r=this.h[0]+this.pad[0],this.h[0]=65535&r,i=1;i<8;i++)r=(this.h[i]+this.pad[i]|0)+(r>>>16)|0,this.h[i]=65535&r;e[n+0]=this.h[0]>>>0&255,e[n+1]=this.h[0]>>>8&255,e[n+2]=this.h[1]>>>0&255,e[n+3]=this.h[1]>>>8&255,e[n+4]=this.h[2]>>>0&255,e[n+5]=this.h[2]>>>8&255,e[n+6]=this.h[3]>>>0&255,e[n+7]=this.h[3]>>>8&255,e[n+8]=this.h[4]>>>0&255,e[n+9]=this.h[4]>>>8&255,e[n+10]=this.h[5]>>>0&255,e[n+11]=this.h[5]>>>8&255,e[n+12]=this.h[6]>>>0&255,e[n+13]=this.h[6]>>>8&255,e[n+14]=this.h[7]>>>0&255,e[n+15]=this.h[7]>>>8&255},x.prototype.update=function(e,n,t){var l,r;if(this.leftover){for((r=16-this.leftover)>t&&(r=t),l=0;l<r;l++)this.buffer[this.leftover+l]=e[n+l];if(t-=r,n+=r,this.leftover+=r,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(t>=16&&(r=t-t%16,this.blocks(e,n,r),n+=r,t-=r),t){for(l=0;l<t;l++)this.buffer[this.leftover+l]=e[n+l];this.leftover+=t}};var $=P,G=A;var W=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,n,t,l){for(var r,i,u,o,s,a,c,h,f,d,p,y,g,m,v,b,w,_,E,S,x,k,I,P,A,T,O=new Int32Array(16),M=new Int32Array(16),R=e[0],N=e[1],C=e[2],L=e[3],j=e[4],U=e[5],D=e[6],B=e[7],K=n[0],F=n[1],V=n[2],H=n[3],q=n[4],z=n[5],$=n[6],G=n[7],J=0;l>=128;){for(E=0;E<16;E++)S=8*E+J,O[E]=t[S+0]<<24|t[S+1]<<16|t[S+2]<<8|t[S+3],M[E]=t[S+4]<<24|t[S+5]<<16|t[S+6]<<8|t[S+7];for(E=0;E<80;E++)if(r=R,i=N,u=C,o=L,s=j,a=U,c=D,B,f=K,d=F,p=V,y=H,g=q,m=z,v=$,G,I=65535&(k=G),P=k>>>16,A=65535&(x=B),T=x>>>16,I+=65535&(k=(q>>>14|j<<18)^(q>>>18|j<<14)^(j>>>9|q<<23)),P+=k>>>16,A+=65535&(x=(j>>>14|q<<18)^(j>>>18|q<<14)^(q>>>9|j<<23)),T+=x>>>16,I+=65535&(k=q&z^~q&$),P+=k>>>16,A+=65535&(x=j&U^~j&D),T+=x>>>16,I+=65535&(k=W[2*E+1]),P+=k>>>16,A+=65535&(x=W[2*E]),T+=x>>>16,x=O[E%16],P+=(k=M[E%16])>>>16,A+=65535&x,T+=x>>>16,A+=(P+=(I+=65535&k)>>>16)>>>16,I=65535&(k=_=65535&I|P<<16),P=k>>>16,A=65535&(x=w=65535&A|(T+=A>>>16)<<16),T=x>>>16,I+=65535&(k=(K>>>28|R<<4)^(R>>>2|K<<30)^(R>>>7|K<<25)),P+=k>>>16,A+=65535&(x=(R>>>28|K<<4)^(K>>>2|R<<30)^(K>>>7|R<<25)),T+=x>>>16,P+=(k=K&F^K&V^F&V)>>>16,A+=65535&(x=R&N^R&C^N&C),T+=x>>>16,h=65535&(A+=(P+=(I+=65535&k)>>>16)>>>16)|(T+=A>>>16)<<16,b=65535&I|P<<16,I=65535&(k=y),P=k>>>16,A=65535&(x=o),T=x>>>16,P+=(k=_)>>>16,A+=65535&(x=w),T+=x>>>16,N=r,C=i,L=u,j=o=65535&(A+=(P+=(I+=65535&k)>>>16)>>>16)|(T+=A>>>16)<<16,U=s,D=a,B=c,R=h,F=f,V=d,H=p,q=y=65535&I|P<<16,z=g,$=m,G=v,K=b,E%16==15)for(S=0;S<16;S++)x=O[S],I=65535&(k=M[S]),P=k>>>16,A=65535&x,T=x>>>16,x=O[(S+9)%16],I+=65535&(k=M[(S+9)%16]),P+=k>>>16,A+=65535&x,T+=x>>>16,w=O[(S+1)%16],I+=65535&(k=((_=M[(S+1)%16])>>>1|w<<31)^(_>>>8|w<<24)^(_>>>7|w<<25)),P+=k>>>16,A+=65535&(x=(w>>>1|_<<31)^(w>>>8|_<<24)^w>>>7),T+=x>>>16,w=O[(S+14)%16],P+=(k=((_=M[(S+14)%16])>>>19|w<<13)^(w>>>29|_<<3)^(_>>>6|w<<26))>>>16,A+=65535&(x=(w>>>19|_<<13)^(_>>>29|w<<3)^w>>>6),T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,O[S]=65535&A|T<<16,M[S]=65535&I|P<<16;I=65535&(k=K),P=k>>>16,A=65535&(x=R),T=x>>>16,x=e[0],P+=(k=n[0])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[0]=R=65535&A|T<<16,n[0]=K=65535&I|P<<16,I=65535&(k=F),P=k>>>16,A=65535&(x=N),T=x>>>16,x=e[1],P+=(k=n[1])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[1]=N=65535&A|T<<16,n[1]=F=65535&I|P<<16,I=65535&(k=V),P=k>>>16,A=65535&(x=C),T=x>>>16,x=e[2],P+=(k=n[2])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[2]=C=65535&A|T<<16,n[2]=V=65535&I|P<<16,I=65535&(k=H),P=k>>>16,A=65535&(x=L),T=x>>>16,x=e[3],P+=(k=n[3])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[3]=L=65535&A|T<<16,n[3]=H=65535&I|P<<16,I=65535&(k=q),P=k>>>16,A=65535&(x=j),T=x>>>16,x=e[4],P+=(k=n[4])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[4]=j=65535&A|T<<16,n[4]=q=65535&I|P<<16,I=65535&(k=z),P=k>>>16,A=65535&(x=U),T=x>>>16,x=e[5],P+=(k=n[5])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[5]=U=65535&A|T<<16,n[5]=z=65535&I|P<<16,I=65535&(k=$),P=k>>>16,A=65535&(x=D),T=x>>>16,x=e[6],P+=(k=n[6])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[6]=D=65535&A|T<<16,n[6]=$=65535&I|P<<16,I=65535&(k=G),P=k>>>16,A=65535&(x=B),T=x>>>16,x=e[7],P+=(k=n[7])>>>16,A+=65535&x,T+=x>>>16,T+=(A+=(P+=(I+=65535&k)>>>16)>>>16)>>>16,e[7]=B=65535&A|T<<16,n[7]=G=65535&I|P<<16,J+=128,l-=128}return l}function X(e,n,t){var l,r=new Int32Array(8),i=new Int32Array(8),u=new Uint8Array(256),o=t;for(r[0]=1779033703,r[1]=3144134277,r[2]=1013904242,r[3]=2773480762,r[4]=1359893119,r[5]=2600822924,r[6]=528734635,r[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,J(r,i,n,t),t%=128,l=0;l<t;l++)u[l]=n[o-t+l];for(u[t]=128,u[(t=256-128*(t<112?1:0))-9]=0,d(u,t-8,o/536870912|0,o<<3),J(r,i,u,t),l=0;l<8;l++)d(e,8*l,r[l],i[l]);return 0}function Y(e,t){var l=n(),r=n(),i=n(),u=n(),o=n(),s=n(),c=n(),h=n(),f=n();U(l,e[1],e[0]),U(f,t[1],t[0]),D(l,l,f),j(r,e[0],e[1]),j(f,t[0],t[1]),D(r,r,f),D(i,e[3],t[3]),D(i,i,a),D(u,e[2],t[2]),j(u,u,u),U(o,r,l),U(s,u,i),j(c,u,i),j(h,r,l),D(e[0],o,s),D(e[1],h,c),D(e[2],c,s),D(e[3],o,h)}function Q(e,n,t){var l;for(l=0;l<4;l++)M(e[l],n[l],t)}function Z(e,t){var l=n(),r=n(),i=n();K(i,t[2]),D(l,t[0],i),D(r,t[1],i),R(e,r),e[31]^=C(l)<<7}function ee(e,n,t){var l,r;for(T(e[0],i),T(e[1],u),T(e[2],u),T(e[3],i),r=255;r>=0;--r)Q(e,n,l=t[r/8|0]>>(7&r)&1),Y(n,e),Y(e,e),Q(e,n,l)}function ne(e,t){var l=[n(),n(),n(),n()];T(l[0],c),T(l[1],h),T(l[2],u),D(l[3],c,h),ee(e,l,t)}function te(e,l,r){var i,u=new Uint8Array(64),o=[n(),n(),n(),n()];for(r||t(l,32),X(u,l,32),u[0]&=248,u[31]&=127,u[31]|=64,ne(o,u),Z(e,o),i=0;i<32;i++)l[i+32]=e[i];return 0}var le=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function re(e,n){var t,l,r,i;for(l=63;l>=32;--l){for(t=0,r=l-32,i=l-12;r<i;++r)n[r]+=t-16*n[l]*le[r-(l-32)],t=Math.floor((n[r]+128)/256),n[r]-=256*t;n[r]+=t,n[l]=0}for(t=0,r=0;r<32;r++)n[r]+=t-(n[31]>>4)*le[r],t=n[r]>>8,n[r]&=255;for(r=0;r<32;r++)n[r]-=t*le[r];for(l=0;l<32;l++)n[l+1]+=n[l]>>8,e[l]=255&n[l]}function ie(e){var n,t=new Float64Array(64);for(n=0;n<64;n++)t[n]=e[n];for(n=0;n<64;n++)e[n]=0;re(e,t)}function ue(e,t,l,r){var i,u,o=new Uint8Array(64),s=new Uint8Array(64),a=new Uint8Array(64),c=new Float64Array(64),h=[n(),n(),n(),n()];X(o,r,32),o[0]&=248,o[31]&=127,o[31]|=64;var f=l+64;for(i=0;i<l;i++)e[64+i]=t[i];for(i=0;i<32;i++)e[32+i]=o[32+i];for(X(a,e.subarray(32),l+32),ie(a),ne(h,a),Z(e,h),i=32;i<64;i++)e[i]=r[i];for(X(s,e,l+64),ie(s),i=0;i<64;i++)c[i]=0;for(i=0;i<32;i++)c[i]=a[i];for(i=0;i<32;i++)for(u=0;u<32;u++)c[i+u]+=s[i]*o[u];return re(e.subarray(32),c),f}function oe(e,t,l,r){var o,a=new Uint8Array(32),c=new Uint8Array(64),h=[n(),n(),n(),n()],d=[n(),n(),n(),n()];if(l<64)return-1;if(function(e,t){var l=n(),r=n(),o=n(),a=n(),c=n(),h=n(),d=n();return T(e[2],u),L(e[1],t),B(o,e[1]),D(a,o,s),U(o,o,e[2]),j(a,e[2],a),B(c,a),B(h,c),D(d,h,c),D(l,d,o),D(l,l,a),F(l,l),D(l,l,o),D(l,l,a),D(l,l,a),D(e[0],l,a),B(r,e[0]),D(r,r,a),N(r,o)&&D(e[0],e[0],f),B(r,e[0]),D(r,r,a),N(r,o)?-1:(C(e[0])===t[31]>>7&&U(e[0],i,e[0]),D(e[3],e[0],e[1]),0)}(d,r))return-1;for(o=0;o<l;o++)e[o]=t[o];for(o=0;o<32;o++)e[o+32]=r[o];if(X(c,e,l),ie(c),ee(h,d,c),ne(d,t.subarray(32)),Y(h,d),Z(a,h),l-=64,g(t,0,a,0)){for(o=0;o<l;o++)e[o]=0;return-1}for(o=0;o<l;o++)e[o]=t[o+64];return l}var se=16,ae=64,ce=32,he=64;function fe(e,n){if(32!==e.length)throw new Error("bad key size");if(24!==n.length)throw new Error("bad nonce size")}function de(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function pe(e){for(var n=0;n<e.length;n++)e[n]=0}e.lowlevel={crypto_core_hsalsa20:v,crypto_stream_xor:S,crypto_stream:E,crypto_stream_salsa20_xor:w,crypto_stream_salsa20:_,crypto_onetimeauth:k,crypto_onetimeauth_verify:I,crypto_verify_16:y,crypto_verify_32:g,crypto_secretbox:P,crypto_secretbox_open:A,crypto_scalarmult:V,crypto_scalarmult_base:H,crypto_box_beforenm:z,crypto_box_afternm:$,crypto_box:function(e,n,t,l,r,i){var u=new Uint8Array(32);return z(u,r,i),$(e,n,t,l,u)},crypto_box_open:function(e,n,t,l,r,i){var u=new Uint8Array(32);return z(u,r,i),G(e,n,t,l,u)},crypto_box_keypair:q,crypto_hash:X,crypto_sign:ue,crypto_sign_keypair:te,crypto_sign_open:oe,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:se,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ae,crypto_sign_PUBLICKEYBYTES:ce,crypto_sign_SECRETKEYBYTES:he,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:n,D:s,L:le,pack25519:R,unpack25519:L,M:D,A:j,S:B,Z:U,pow2523:F,add:Y,set25519:T,modL:re,scalarmult:ee,scalarbase:ne},e.randomBytes=function(e){var n=new Uint8Array(e);return t(n,e),n},e.secretbox=function(e,n,t){de(e,n,t),fe(t,n);for(var l=new Uint8Array(32+e.length),r=new Uint8Array(l.length),i=0;i<e.length;i++)l[i+32]=e[i];return P(r,l,l.length,n,t),r.subarray(se)},e.secretbox.open=function(e,n,t){de(e,n,t),fe(t,n);for(var l=new Uint8Array(se+e.length),r=new Uint8Array(l.length),i=0;i<e.length;i++)l[i+se]=e[i];return l.length<32||0!==A(r,l,l.length,n,t)?null:r.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=se,e.scalarMult=function(e,n){if(de(e,n),32!==e.length)throw new Error("bad n size");if(32!==n.length)throw new Error("bad p size");var t=new Uint8Array(32);return V(t,e,n),t},e.scalarMult.base=function(e){if(de(e),32!==e.length)throw new Error("bad n size");var n=new Uint8Array(32);return H(n,e),n},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(n,t,l,r){var i=e.box.before(l,r);return e.secretbox(n,t,i)},e.box.before=function(e,n){de(e,n),function(e,n){if(32!==e.length)throw new Error("bad public key size");if(32!==n.length)throw new Error("bad secret key size")}(e,n);var t=new Uint8Array(32);return z(t,e,n),t},e.box.after=e.secretbox,e.box.open=function(n,t,l,r){var i=e.box.before(l,r);return e.secretbox.open(n,t,i)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),n=new Uint8Array(32);return q(e,n),{publicKey:e,secretKey:n}},e.box.keyPair.fromSecretKey=function(e){if(de(e),32!==e.length)throw new Error("bad secret key size");var n=new Uint8Array(32);return H(n,e),{publicKey:n,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,n){if(de(e,n),n.length!==he)throw new Error("bad secret key size");var t=new Uint8Array(ae+e.length);return ue(t,e,e.length,n),t},e.sign.open=function(e,n){if(de(e,n),n.length!==ce)throw new Error("bad public key size");var t=new Uint8Array(e.length),l=oe(t,e,e.length,n);if(l<0)return null;for(var r=new Uint8Array(l),i=0;i<r.length;i++)r[i]=t[i];return r},e.sign.detached=function(n,t){for(var l=e.sign(n,t),r=new Uint8Array(ae),i=0;i<r.length;i++)r[i]=l[i];return r},e.sign.detached.verify=function(e,n,t){if(de(e,n,t),n.length!==ae)throw new Error("bad signature size");if(t.length!==ce)throw new Error("bad public key size");var l,r=new Uint8Array(ae+e.length),i=new Uint8Array(ae+e.length);for(l=0;l<ae;l++)r[l]=n[l];for(l=0;l<e.length;l++)r[l+ae]=e[l];return oe(i,r,r.length,t)>=0},e.sign.keyPair=function(){var e=new Uint8Array(ce),n=new Uint8Array(he);return te(e,n),{publicKey:e,secretKey:n}},e.sign.keyPair.fromSecretKey=function(e){if(de(e),e.length!==he)throw new Error("bad secret key size");for(var n=new Uint8Array(ce),t=0;t<n.length;t++)n[t]=e[32+t];return{publicKey:n,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(de(e),32!==e.length)throw new Error("bad seed size");for(var n=new Uint8Array(ce),t=new Uint8Array(he),l=0;l<32;l++)t[l]=e[l];return te(n,t,!0),{publicKey:n,secretKey:t}},e.sign.publicKeyLength=ce,e.sign.secretKeyLength=he,e.sign.seedLength=32,e.sign.signatureLength=ae,e.hash=function(e){de(e);var n=new Uint8Array(64);return X(n,e,e.length),n},e.hash.hashLength=64,e.verify=function(e,n){return de(e,n),0!==e.length&&0!==n.length&&(e.length===n.length&&0===p(e,0,n,0,e.length))},e.setPRNG=function(e){t=e},function(){var n="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(n&&n.getRandomValues){e.setPRNG((function(e,t){var l,r=new Uint8Array(t);for(l=0;l<t;l+=65536)n.getRandomValues(r.subarray(l,l+Math.min(t-l,65536)));for(l=0;l<t;l++)e[l]=r[l];pe(r)}))}else(n=Xa)&&n.randomBytes&&e.setPRNG((function(e,t){var l,r=n.randomBytes(t);for(l=0;l<t;l++)e[l]=r[l];pe(r)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})}(Ja);var Ya=Ja.exports;!function(e){!function(n,t){e.exports?e.exports=t(Ja.exports):n.ed2curve=t(n.nacl)}(n,(function(e){if(!e)throw new Error("tweetnacl not loaded");var n=function(e){var n,t=new Float64Array(16);if(e)for(n=0;n<e.length;n++)t[n]=e[n];return t},t=n(),l=n([1]),r=n([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),i=n([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function u(e){var n,t;for(t=0;t<16;t++)e[t]+=65536,n=Math.floor(e[t]/65536),e[(t+1)*(t<15?1:0)]+=n-1+37*(n-1)*(15===t?1:0),e[t]-=65536*n}function o(e,n,t){for(var l,r=~(t-1),i=0;i<16;i++)l=r&(e[i]^n[i]),e[i]^=l,n[i]^=l}function s(e,n,t){var l;for(l=0;l<16;l++)e[l]=n[l]+t[l]|0}function a(e,n,t){var l;for(l=0;l<16;l++)e[l]=n[l]-t[l]|0}function c(e,n,t){var l,r,i=new Float64Array(31);for(l=0;l<31;l++)i[l]=0;for(l=0;l<16;l++)for(r=0;r<16;r++)i[l+r]+=n[l]*t[r];for(l=0;l<15;l++)i[l]+=38*i[l+16];for(l=0;l<16;l++)e[l]=i[l];u(e),u(e)}function h(e,n){c(e,n,n)}function f(e,t){var l,r,i,s=n(),a=n();for(l=0;l<16;l++)a[l]=t[l];for(u(a),u(a),u(a),r=0;r<2;r++){for(s[0]=a[0]-65517,l=1;l<15;l++)s[l]=a[l]-65535-(s[l-1]>>16&1),s[l-1]&=65535;s[15]=a[15]-32767-(s[14]>>16&1),i=s[15]>>16&1,s[14]&=65535,o(a,s,1-i)}for(l=0;l<16;l++)e[2*l]=255&a[l],e[2*l+1]=a[l]>>8}function d(e,n){var t=new Uint8Array(32),l=new Uint8Array(32);return f(t,e),f(l,n),function(e,n,t,l){return function(e,n,t,l,r){var i,u=0;for(i=0;i<r;i++)u|=e[n+i]^t[l+i];return(1&u-1>>>8)-1}(e,n,t,l,32)}(t,0,l,0)}function p(e,u){var o=n(),p=n(),y=n(),g=n(),m=n(),v=n(),b=n();return function(e,n){var t;for(t=0;t<16;t++)e[t]=0|n[t]}(e[2],l),function(e,n){var t;for(t=0;t<16;t++)e[t]=n[2*t]+(n[2*t+1]<<8);e[15]&=32767}(e[1],u),h(y,e[1]),c(g,y,r),a(y,y,e[2]),s(g,e[2],g),h(m,g),h(v,m),c(b,v,m),c(o,b,y),c(o,o,g),function(e,t){var l,r=n();for(l=0;l<16;l++)r[l]=t[l];for(l=250;l>=0;l--)h(r,r),1!==l&&c(r,r,t);for(l=0;l<16;l++)e[l]=r[l]}(o,o),c(o,o,y),c(o,o,g),c(o,o,g),c(e[0],o,g),h(p,e[0]),c(p,p,g),d(p,y)&&c(e[0],e[0],i),h(p,e[0]),c(p,p,g),d(p,y)?-1:(function(e){var n=new Uint8Array(32);return f(n,e),1&n[0]}(e[0])===u[31]>>7&&a(e[0],t,e[0]),c(e[3],e[0],e[1]),0)}function y(e){var t=new Uint8Array(32),r=[n(),n(),n(),n()],i=n(),u=n();if(p(r,e))return null;var o=r[1];return s(i,l,o),a(u,l,o),function(e,t){var l,r=n();for(l=0;l<16;l++)r[l]=t[l];for(l=253;l>=0;l--)h(r,r),2!==l&&4!==l&&c(r,r,t);for(l=0;l<16;l++)e[l]=r[l]}(u,u),c(i,i,u),f(t,i),t}function g(n){var t,l=new Uint8Array(64),r=new Uint8Array(32);for(e.lowlevel.crypto_hash(l,n,32),l[0]&=248,l[31]&=127,l[31]|=64,t=0;t<32;t++)r[t]=l[t];for(t=0;t<64;t++)l[t]=0;return r}return{convertPublicKey:y,convertSecretKey:g,convertKeyPair:function(e){var n=y(e.publicKey);return n?{publicKey:n,secretKey:g(e.secretKey)}:null}}}))}(Wa);var Qa=Wa.exports;
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
/*!
	 * Copyright (c) 2021-2022 Digital Bazaar, Inc. All rights reserved.
	 */
const Za="X25519KeyAgreementKey2020",ec="z",nc=new Uint8Array([237,1]),tc=new Uint8Array([128,38]),lc=new Uint8Array([236,1]),rc=new Uint8Array([130,38]);class ic extends Fa{constructor(e={}){super(e),this.type=Za;const{publicKeyMultibase:n,privateKeyMultibase:t}=e;if(!n)throw new TypeError('The "publicKeyMultibase" property is required.');if(!n||!uc(n,lc))throw new Error(`"publicKeyMultibase" has invalid header bytes: "${n}".`);if(t&&!uc(t,rc))throw new Error('"privateKeyMultibase" has invalid header bytes.');this.publicKeyMultibase=n,this.privateKeyMultibase=t,this.controller&&!this.id&&(this.id=`${this.controller}#${this.fingerprint()}`)}static async generate(e={}){const{publicKey:n,privateKey:t}=await async function(){const{publicKey:e,secretKey:n}=Ya.box.keyPair();return{publicKey:e,privateKey:n}}();return new ic({publicKeyMultibase:oc(lc,n),privateKeyMultibase:oc(rc,t),...e})}static async from(e={}){return e.publicKeyBase58?this.fromX25519KeyAgreementKey2019(e):new ic(e)}static async fromX25519KeyAgreementKey2019({publicKeyBase58:e,privateKeyBase58:n,...t}={}){let l,r;return e&&(l=oc(lc,Gs(e))),n&&(r=oc(rc,Gs(n))),new ic({publicKeyMultibase:l,privateKeyMultibase:r,...t})}static fromEd25519VerificationKey2020({keyPair:e}={}){if(!e.publicKeyMultibase)throw new Error("Source public key is required to convert.");if(!e.publicKeyMultibase.startsWith(ec))throw new TypeError('Expecting "publicKeyMultibase" value to be multibase base58btc encoded (must start with "z").');const n=new ic({controller:e.controller,publicKeyMultibase:ic.convertFromEdPublicKey(e)});if(e.privateKeyMultibase){if(!e.privateKeyMultibase.startsWith(ec))throw new TypeError('Expecting "privateKeyMultibase" value to be multibase base58btc encoded (must start with "z").');n.privateKeyMultibase=ic.convertFromEdPrivateKey(e)}return n}static convertFromEdPublicKey({publicKeyMultibase:e}={}){if(!e)throw new Error("Source public key is required to convert.");const n=sc(nc,e),t=ma.fromHex(n).toX25519();if(!t)throw new Error("Error converting to X25519; Invalid Ed25519 public key.");return oc(lc,t)}static convertFromEdPrivateKey({privateKeyMultibase:e}={}){if(!e)throw new Error("Source private key is required to convert.");const n=sc(tc,e),t=Qa.convertSecretKey(n);if(!t)throw new Error("Error converting to X25519; Invalid Ed25519 private key.");return oc(rc,t)}export({publicKey:e=!1,privateKey:n=!1,includeContext:t=!1}={}){if(!e&&!n)throw new TypeError('Export requires specifying either "publicKey" or "privateKey".');const l={id:this.id,type:this.type};return t&&(l["@context"]=ic.SUITE_CONTEXT),this.controller&&(l.controller=this.controller),e&&(l.publicKeyMultibase=this.publicKeyMultibase),n&&(l.privateKeyMultibase=this.privateKeyMultibase),this.revoked&&(l.revoked=this.revoked),l}static fingerprintFromPublicKey({publicKeyMultibase:e}={}){if(!e)throw new Error("Source public key is required.");return e}static fromFingerprint({fingerprint:e}={}){return new ic({publicKeyMultibase:e})}async deriveSecret({publicKey:e}){const n=sc(lc,e.publicKeyMultibase);return async function({privateKey:e,remotePublicKey:n}){return Ya.scalarMult(e,n)}({privateKey:sc(rc,this.privateKeyMultibase),remotePublicKey:n})}fingerprint(){return this.publicKeyMultibase}verifyFingerprint({fingerprint:e}={}){if(!uc(e,lc))throw new Error(`"fingerprint" has invalid header bytes: "${e}".`);return{valid:!0}}}function uc(e,n){if("string"!=typeof e||e[0]!==ec)return!1;const t=Gs(e.slice(1));return n.every(((e,n)=>t[n]===e))}function oc(e,n){const t=new Uint8Array(e.length+n.length);return t.set(e),t.set(n,e.length),ec+$s(t)}function sc(e,n){const t=Gs(n.substr(1));if(!e.every(((e,n)=>t[n]===e)))throw new Error("Multibase value does not have expected header.");return t.slice(e.length)}
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */ic.suite=Za,ic.SUITE_CONTEXT="https://w3id.org/security/suites/x25519-2020/v1";
/*!
	 * Copyright (c) 2019-2021 Digital Bazaar, Inc. All rights reserved.
	 */
const ac="X25519KeyAgreementKey2019",cc=new Uint8Array([237,1]),hc=new Uint8Array([128,38]);class fc extends Fa{constructor(e={}){if(super(e),this.type=ac,this.publicKeyBase58=e.publicKeyBase58,!this.publicKeyBase58)throw TypeError('The "publicKeyBase58" property is required.');this.privateKeyBase58=e.privateKeyBase58,this.controller&&!this.id&&(this.id=`${this.controller}#${this.fingerprint()}`)}static async generate(e={}){const{publicKey:n,privateKey:t}=await async function(){const{publicKey:e,secretKey:n}=Ya.box.keyPair();return{publicKey:e,privateKey:n}}();return new fc({publicKeyBase58:$s(n),privateKeyBase58:$s(t),...e})}static async from(e){return new fc(e)}static fromEd25519VerificationKey2018({keyPair:e}){const n=new fc({controller:e.controller,publicKeyBase58:fc.convertFromEdPublicKey(e)});return e.privateKeyBase58&&(n.privateKeyBase58=fc.convertFromEdPrivateKey(e)),n}static fromEd25519VerificationKey2020({keyPair:e}){if(!e.publicKeyMultibase)throw new Error("Source public key is required to convert.");if(!e.publicKeyMultibase.startsWith("z"))throw new TypeError("Expecting source public Ed25519 2020 key to have base58btc encoding.");const n=$s(dc(cc,e.publicKeyMultibase)),t=new fc({controller:e.controller,publicKeyBase58:fc.convertFromEdPublicKey({publicKeyBase58:n})});if(e.privateKeyMultibase){if(!e.privateKeyMultibase.startsWith("z"))throw new TypeError("Expecting source private Ed25519 2020 key to have base58btc encoding.");const n=$s(dc(hc,e.privateKeyMultibase));t.privateKeyBase58=fc.convertFromEdPrivateKey({privateKeyBase58:n})}return t}static fromEdKeyPair({keyPair:e}){return this.fromEd25519VerificationKey2018({keyPair:e})}static convertFromEdPublicKey({publicKeyBase58:e}){const n=Gs(e),t=ma.fromHex(n).toX25519();if(!t)throw new Error("Error converting to X25519; Invalid Ed25519 public key.");return $s(t)}static convertFromEdPrivateKey({privateKeyBase58:e}){const n=Gs(e),t=Qa.convertSecretKey(n);if(!t)throw new Error("Error converting to X25519; Invalid Ed25519 private key.");return $s(t)}export({publicKey:e=!1,privateKey:n=!1,includeContext:t=!1}={}){if(!e&&!n)throw new TypeError('Export requires specifying either "publicKey" or "privateKey".');const l={id:this.id,type:this.type};return t&&(l["@context"]=fc.SUITE_CONTEXT),this.controller&&(l.controller=this.controller),e&&(l.publicKeyBase58=this.publicKeyBase58),n&&(l.privateKeyBase58=this.privateKeyBase58),this.revoked&&(l.revoked=this.revoked),l}static fingerprintFromPublicKey({publicKeyBase58:e}){const n=Gs(e),t=new Uint8Array(2+n.length);return t[0]=236,t[1]=1,t.set(n,2),`z${$s(t)}`}static fromFingerprint({fingerprint:e}={}){if(!e||"string"!=typeof e||"z"!==e[0])throw new Error("`fingerprint` must be a multibase encoded string.");const n=Gs(e.substr(1));if(236!==n[0]||1!==n[1])throw new Error(`Unsupported Fingerprint Type: ${e}`);return new fc({publicKeyBase58:$s(n.slice(2))})}async deriveSecret({publicKey:e}){const n=Gs(e.publicKeyBase58);return async function({privateKey:e,remotePublicKey:n}){return Ya.scalarMult(e,n)}({privateKey:Gs(this.privateKeyBase58),remotePublicKey:n})}fingerprint(){const{publicKeyBase58:e}=this;return fc.fingerprintFromPublicKey({publicKeyBase58:e})}verifyFingerprint({fingerprint:e}={}){if("string"!=typeof e||"z"!==e[0])return{error:new Error("`fingerprint` must be a multibase encoded string."),valid:!1};let n,t;try{n=Gs(e.slice(1))}catch(e){return{error:e,valid:!1}}try{t=Gs(this.publicKeyBase58)}catch(e){return{error:e,valid:!1}}const l=236===n[0]&&1===n[1]&&t.toString()===n.slice(2).toString();return l?{valid:l}:{error:new Error("The fingerprint does not match the public key."),valid:!1}}}function dc(e,n){const t=Gs(n.slice(1));if(!e.every(((e,n)=>t[n]===e)))throw new Error("Multibase value does not have expected header.");return t.slice(e.length)}
/*!
	 * Copyright (c) 2021 Digital Bazaar. All rights reserved.
	 */fc.suite=ac,fc.SUITE_CONTEXT="https://w3id.org/security/suites/x25519-2019/v1";const pc=new Set(["assertionMethod","authentication","capabilityDelegation","capabilityInvocation","keyAgreement"]);
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */function yc({doc:e,methodId:n,purpose:t}={}){if(!e)throw new TypeError("A DID Document is required.");if(!n&&!t)throw new TypeError("A method id or purpose is required.");if(n)return gc({doc:e,methodId:n});const[l]=e[t]||[];return l&&"string"==typeof l?gc({doc:e,methodId:l}):l}function gc({doc:e,methodId:n}){let t;e.verificationMethod&&(t=e.verificationMethod.find((e=>e.id===n)));for(const l of pc){const r=e[l]||[];for(const e of r)if("object"==typeof e&&e.id===n){t=e;break}if(t)return t}}var mc=vc;function vc(e){var n=this;if(n instanceof vc||(n=new vc),n.tail=null,n.head=null,n.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){n.push(e)}));else if(arguments.length>0)for(var t=0,l=arguments.length;t<l;t++)n.push(arguments[t]);return n}function bc(e,n,t){var l=n===e.head?new Ec(t,null,n,e):new Ec(t,n,n.next,e);return null===l.next&&(e.tail=l),null===l.prev&&(e.head=l),e.length++,l}function wc(e,n){e.tail=new Ec(n,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function _c(e,n){e.head=new Ec(n,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function Ec(e,n,t,l){if(!(this instanceof Ec))return new Ec(e,n,t,l);this.list=l,this.value=e,n?(n.next=this,this.prev=n):this.prev=null,t?(t.prev=this,this.next=t):this.next=null}vc.Node=Ec,vc.create=vc,vc.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var n=e.next,t=e.prev;return n&&(n.prev=t),t&&(t.next=n),e===this.head&&(this.head=n),e===this.tail&&(this.tail=t),e.list.length--,e.next=null,e.prev=null,e.list=null,n},vc.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var n=this.head;e.list=this,e.next=n,n&&(n.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},vc.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var n=this.tail;e.list=this,e.prev=n,n&&(n.next=e),this.tail=e,this.head||(this.head=e),this.length++}},vc.prototype.push=function(){for(var e=0,n=arguments.length;e<n;e++)wc(this,arguments[e]);return this.length},vc.prototype.unshift=function(){for(var e=0,n=arguments.length;e<n;e++)_c(this,arguments[e]);return this.length},vc.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},vc.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},vc.prototype.forEach=function(e,n){n=n||this;for(var t=this.head,l=0;null!==t;l++)e.call(n,t.value,l,this),t=t.next},vc.prototype.forEachReverse=function(e,n){n=n||this;for(var t=this.tail,l=this.length-1;null!==t;l--)e.call(n,t.value,l,this),t=t.prev},vc.prototype.get=function(e){for(var n=0,t=this.head;null!==t&&n<e;n++)t=t.next;if(n===e&&null!==t)return t.value},vc.prototype.getReverse=function(e){for(var n=0,t=this.tail;null!==t&&n<e;n++)t=t.prev;if(n===e&&null!==t)return t.value},vc.prototype.map=function(e,n){n=n||this;for(var t=new vc,l=this.head;null!==l;)t.push(e.call(n,l.value,this)),l=l.next;return t},vc.prototype.mapReverse=function(e,n){n=n||this;for(var t=new vc,l=this.tail;null!==l;)t.push(e.call(n,l.value,this)),l=l.prev;return t},vc.prototype.reduce=function(e,n){var t,l=this.head;if(arguments.length>1)t=n;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");l=this.head.next,t=this.head.value}for(var r=0;null!==l;r++)t=e(t,l.value,r),l=l.next;return t},vc.prototype.reduceReverse=function(e,n){var t,l=this.tail;if(arguments.length>1)t=n;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");l=this.tail.prev,t=this.tail.value}for(var r=this.length-1;null!==l;r--)t=e(t,l.value,r),l=l.prev;return t},vc.prototype.toArray=function(){for(var e=new Array(this.length),n=0,t=this.head;null!==t;n++)e[n]=t.value,t=t.next;return e},vc.prototype.toArrayReverse=function(){for(var e=new Array(this.length),n=0,t=this.tail;null!==t;n++)e[n]=t.value,t=t.prev;return e},vc.prototype.slice=function(e,n){(n=n||this.length)<0&&(n+=this.length),(e=e||0)<0&&(e+=this.length);var t=new vc;if(n<e||n<0)return t;e<0&&(e=0),n>this.length&&(n=this.length);for(var l=0,r=this.head;null!==r&&l<e;l++)r=r.next;for(;null!==r&&l<n;l++,r=r.next)t.push(r.value);return t},vc.prototype.sliceReverse=function(e,n){(n=n||this.length)<0&&(n+=this.length),(e=e||0)<0&&(e+=this.length);var t=new vc;if(n<e||n<0)return t;e<0&&(e=0),n>this.length&&(n=this.length);for(var l=this.length,r=this.tail;null!==r&&l>n;l--)r=r.prev;for(;null!==r&&l>e;l--,r=r.prev)t.push(r.value);return t},vc.prototype.splice=function(e,n,...t){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var l=0,r=this.head;null!==r&&l<e;l++)r=r.next;var i=[];for(l=0;r&&l<n;l++)i.push(r.value),r=this.removeNode(r);null===r&&(r=this.tail),r!==this.head&&r!==this.tail&&(r=r.prev);for(l=0;l<t.length;l++)r=bc(this,r,t[l]);return i},vc.prototype.reverse=function(){for(var e=this.head,n=this.tail,t=e;null!==t;t=t.prev){var l=t.prev;t.prev=t.next,t.next=l}return this.head=n,this.tail=e,this};try{require("./iterator.js")(vc)}catch(e){}const Sc=mc,xc=Symbol("max"),kc=Symbol("length"),Ic=Symbol("lengthCalculator"),Pc=Symbol("allowStale"),Ac=Symbol("maxAge"),Tc=Symbol("dispose"),Oc=Symbol("noDisposeOnSet"),Mc=Symbol("lruList"),Rc=Symbol("cache"),Nc=Symbol("updateAgeOnGet"),Cc=()=>1;const Lc=(e,n,t)=>{const l=e[Rc].get(n);if(l){const n=l.value;if(jc(e,n)){if(Dc(e,l),!e[Pc])return}else t&&(e[Nc]&&(l.value.now=Date.now()),e[Mc].unshiftNode(l));return n.value}},jc=(e,n)=>{if(!n||!n.maxAge&&!e[Ac])return!1;const t=Date.now()-n.now;return n.maxAge?t>n.maxAge:e[Ac]&&t>e[Ac]},Uc=e=>{if(e[kc]>e[xc])for(let n=e[Mc].tail;e[kc]>e[xc]&&null!==n;){const t=n.prev;Dc(e,n),n=t}},Dc=(e,n)=>{if(n){const t=n.value;e[Tc]&&e[Tc](t.key,t.value),e[kc]-=t.length,e[Rc].delete(t.key),e[Mc].removeNode(n)}};class Bc{constructor(e,n,t,l,r){this.key=e,this.value=n,this.length=t,this.now=l,this.maxAge=r||0}}const Kc=(e,n,t,l)=>{let r=t.value;jc(e,r)&&(Dc(e,t),e[Pc]||(r=void 0)),r&&n.call(l,r.value,r.key,e)};var Fc=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[xc]=e.max||1/0;const n=e.length||Cc;if(this[Ic]="function"!=typeof n?Cc:n,this[Pc]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[Ac]=e.maxAge||0,this[Tc]=e.dispose,this[Oc]=e.noDisposeOnSet||!1,this[Nc]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[xc]=e||1/0,Uc(this)}get max(){return this[xc]}set allowStale(e){this[Pc]=!!e}get allowStale(){return this[Pc]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[Ac]=e,Uc(this)}get maxAge(){return this[Ac]}set lengthCalculator(e){"function"!=typeof e&&(e=Cc),e!==this[Ic]&&(this[Ic]=e,this[kc]=0,this[Mc].forEach((e=>{e.length=this[Ic](e.value,e.key),this[kc]+=e.length}))),Uc(this)}get lengthCalculator(){return this[Ic]}get length(){return this[kc]}get itemCount(){return this[Mc].length}rforEach(e,n){n=n||this;for(let t=this[Mc].tail;null!==t;){const l=t.prev;Kc(this,e,t,n),t=l}}forEach(e,n){n=n||this;for(let t=this[Mc].head;null!==t;){const l=t.next;Kc(this,e,t,n),t=l}}keys(){return this[Mc].toArray().map((e=>e.key))}values(){return this[Mc].toArray().map((e=>e.value))}reset(){this[Tc]&&this[Mc]&&this[Mc].length&&this[Mc].forEach((e=>this[Tc](e.key,e.value))),this[Rc]=new Map,this[Mc]=new Sc,this[kc]=0}dump(){return this[Mc].map((e=>!jc(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[Mc]}set(e,n,t){if((t=t||this[Ac])&&"number"!=typeof t)throw new TypeError("maxAge must be a number");const l=t?Date.now():0,r=this[Ic](n,e);if(this[Rc].has(e)){if(r>this[xc])return Dc(this,this[Rc].get(e)),!1;const i=this[Rc].get(e).value;return this[Tc]&&(this[Oc]||this[Tc](e,i.value)),i.now=l,i.maxAge=t,i.value=n,this[kc]+=r-i.length,i.length=r,this.get(e),Uc(this),!0}const i=new Bc(e,n,r,l,t);return i.length>this[xc]?(this[Tc]&&this[Tc](e,n),!1):(this[kc]+=i.length,this[Mc].unshift(i),this[Rc].set(e,this[Mc].head),Uc(this),!0)}has(e){if(!this[Rc].has(e))return!1;const n=this[Rc].get(e).value;return!jc(this,n)}get(e){return Lc(this,e,!0)}peek(e){return Lc(this,e,!1)}pop(){const e=this[Mc].tail;return e?(Dc(this,e),e.value):null}del(e){Dc(this,this[Rc].get(e))}load(e){this.reset();const n=Date.now();for(let t=e.length-1;t>=0;t--){const l=e[t],r=l.e||0;if(0===r)this.set(l.k,l.v);else{const e=r-n;e>0&&this.set(l.k,l.v,e)}}}prune(){this[Rc].forEach(((e,n)=>Lc(this,n,!1)))}};
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */const Vc="https://w3id.org/security/suites/ed25519-2018/v1",Hc=new Map([[za.suite,za.SUITE_CONTEXT],["Ed25519VerificationKey2018",Vc],[ic.suite,ic.SUITE_CONTEXT],[fc.suite,fc.SUITE_CONTEXT]]);class qc{constructor({verificationSuite:e=za}={}){this.method="key",this.verificationSuite=e}async generate({seed:e}={}){const n=await this.verificationSuite.generate({seed:e}),{didDocument:t,keyPairs:l}=await this._keyPairToDidDocument({keyPair:n});return{didDocument:t,keyPairs:l,methodFor:({purpose:e})=>{const{id:n}=yc({doc:t,purpose:e});return l.get(n)}}}publicMethodFor({didDocument:e,purpose:n}={}){if(!e)throw new TypeError('The "didDocument" parameter is required.');if(!n)throw new TypeError('The "purpose" parameter is required.');const t=yc({doc:e,purpose:n});if(!t)throw new Error(`No verification method found for purpose "${n}"`);return t}async get({did:e,url:n}={}){if(!(e=e||n))throw new TypeError('"did" must be a string.');const[t,l]=e.split("#"),r=t.substr("did:key:".length),i=this.verificationSuite.fromFingerprint({fingerprint:r}),{didDocument:u}=await this._keyPairToDidDocument({keyPair:i});return l?function({didDocument:e,keyIdFragment:n}){const t=e.id+"#"+n;let l;l=e.verificationMethod[0].id===t?e.verificationMethod[0]:e.keyAgreement[0];return{"@context":Hc.get(l.type),...l}}({didDocument:u,keyIdFragment:l}):u}async publicKeyToDidDoc({publicKeyDescription:e}={}){const{didDocument:n}=await this._keyPairToDidDocument({keyPair:e});return{didDocument:n}}async _keyPairToDidDocument({keyPair:e}={}){const n=await this.verificationSuite.from({...e}),t=`did:key:${n.fingerprint()}`;n.controller=t;const l=["https://www.w3.org/ns/did/v1"];let r;if("Ed25519VerificationKey2020"===n.type)r=ic.fromEd25519VerificationKey2020({keyPair:n}),l.push(za.SUITE_CONTEXT,ic.SUITE_CONTEXT);else{if("Ed25519VerificationKey2018"!==n.type)throw new Error('Cannot derive key agreement key from verification key type "'+n.type+'".');r=fc.fromEd25519VerificationKey2018({keyPair:n}),l.push(Vc,fc.SUITE_CONTEXT)}n.id=`${t}#${n.fingerprint()}`;const i=n.export({publicKey:!0}),u=r.export({publicKey:!0}),o={"@context":l,id:t,verificationMethod:[i],authentication:[i.id],assertionMethod:[i.id],capabilityDelegation:[i.id],capabilityInvocation:[i.id],keyAgreement:[u]},s=new Map;return s.set(n.id,n),s.set(r.id,r),{didDocument:o,keyPairs:s}}async computeId({keyPair:e}){return`did:key:${e.fingerprint()}#${e.fingerprint()}`}}async function zc(e){const n=new qc;return await n.get({did:e})}var $c,Gc={...Object.freeze({__proto__:null,resolve:async function(e,n=Fs.url){if(Hs(e)){return await zc(e)}const t=await hs({url:`${n}/${e}`});return JSON.parse(t).didDocument},resolveDidKeyDocument:zc,getIssuerProfileUrl:function(e){if(!e.service)return"";const n=e.service.find((e=>"IssuerProfile"===e.type))?.serviceEndpoint;return n??""}}),didResolver:Fs};e.VERIFICATION_STATUSES=void 0,($c=e.VERIFICATION_STATUSES||(e.VERIFICATION_STATUSES={})).DEFAULT="standby",$c.FAILURE="failure",$c.STARTING="starting",$c.SUCCESS="success";class Wc{code;label;labelPending;parentStep;status;constructor(n,t){this.code=t,this.label=cr("subSteps",`${t}Label`),this.labelPending=cr("subSteps",`${t}LabelPending`),this.parentStep=n,this.status=e.VERIFICATION_STATUSES.DEFAULT}}function Jc(e){const n=Date.parse(e);if(n)return new Date(n);const t=function(e){let n=e.slice(0,-5).split(/\D/).map((function(e){return parseInt(e,10)||0}));n[1]-=1,n=new Date(Date.UTC.apply(Date,n));const t=e.slice(-5);let l=parseInt(t,10)/100;return"+"===t.slice(0,1)&&(l*=-1),n.setHours(n.getHours()+l),n}(e);return t||function(e){let n,t;const l=/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/.exec(e)||[];return l[1]?(n=l[1].split(/\D/).map((function(e){return parseInt(e,10)||0})),n[1]-=1,n=new Date(Date.UTC.apply(Date,n)),n.getDate()?(l[5]&&(t=parseInt(l[5],10)/100*60,l[6]&&(t+=parseInt(l[6],10)),"+"===l[4]&&(t*=-1),t&&n.setUTCMinutes(n.getUTCMinutes()+t)),n):null):null}(e)}function Xc(e){return""===e?0:Jc(`${e}`).getTime()}function Yc(e,n=null){const t=e.created?Xc(e.created):null,l=e.revoked?Xc(e.revoked):null,r=e.expires?Xc(e.expires):null;let i=n;if(!n){i=(e.id||e.publicKey).replace("ecdsa-koblitz-pubkey:","")}return new yr(i,t,l,r)}var Qc=Object.freeze({__proto__:null,convertToVerificationSubsteps:function(e,n){return new Wc(e,n)},findVerificationSubstep:function(e,n,t=""){for(let l=0;l<n.length;l++){let r=n[l].subSteps.find((n=>n.code===e));if(r&&""===t)return r;if(n[l].suites?.length)for(let i=0;i<n[l].suites.length;i++){const u=n[l].suites[i];if(r=u.subSteps.find((n=>n.code===e)),r&&u.proofType===t)return r}}},getIssuerProfile:async function e(n){const t=cr("errors","getIssuerProfile");if(!n)throw new mr("getIssuerProfile",`${t} - ${cr("errors","issuerProfileNotSet")}`);let l;if("object"==typeof n&&(n=n.id),Vs(n))try{const t=await Zc.did.resolve(n);if(Hs(n))l=function(e){return{"@context":["https://w3id.org/openbadges/v2","https://w3id.org/blockcerts/3.0"],publicKey:[{created:(new Date).toISOString(),id:e.id.split(":").pop()}]}}(t);else{const n=await Zc.did.getIssuerProfileUrl(t);n&&(l=await e(n))}return{didDocument:t,...l}}catch(e){throw console.error(e),new mr("getIssuerProfile",`${t} - ${e}`)}else if(!function(e){return/^(ftp|http|https):\/\/[^ "]+$/.test(e)}(n))throw new mr("getIssuerProfile",`${t} - ${cr("errors","issuerProfileNotSet")}`);if(l=JSON.parse(await hs({url:n}).catch((()=>{throw new mr("getIssuerProfile",t)}))),!function(e){const n=["issuer","profile"],{type:t}=e;return!!t&&(Array.isArray(t)?t.some((e=>n.includes(e.toLowerCase()))):n.includes(t.toLowerCase()))}(l)&&!function(e){const{issuer_key:n,revocation_key:t,issuerKeys:l,revocationKeys:r}=e;return!(!n||!t)||!(!l||!r)}(l))throw new mr("getIssuerProfile",`${t} - ${cr("errors","issuerProfileInvalid")}`);return l},getRevokedAssertions:async function(e,n){if(!e)return[];const t=cr("errors","getRevokedAssertions");n&&(e=function(e,n,t){const l=e.includes("?")?"&":"?";return`${e}${l}${n}=${t}`}(e,"assertionId",encodeURIComponent(n)));const l=await hs({url:e}).catch((()=>{throw new mr(wr.checkRevokedStatus,t)}));return JSON.parse(l).revokedAssertions??[]},lookForTx:function({transactionId:e,chain:n,explorerAPIs:t=[]}){return Us(this,void 0,void 0,(function*(){const l=js(t),r=function({defaultAPIs:e,customAPIs:n}){const t=[e];if(null==n?void 0:n.length){const e=n[0].priority;t.splice(e,0,n)}const l=e.concat(n).length;if(Cr>l)throw new Error("Invalid application configuration; check the CONFIG.MinimumBlockchainExplorers configuration value");return t}({defaultAPIs:Ds(n,l),customAPIs:l.custom});return yield Ks(r,0,e,n)}))},parseIssuerKeys:function(e){try{const n={};if("@context"in e){const t=e.publicKey||e.publicKeys;for(let e=0;e<t.length;e++){const l=Yc(t[e]);n[l.publicKey]=l}}else{const t=Yc({},(e.issuerKeys||[])[0].key);n[t.publicKey]=t}return n}catch(e){throw console.error(e),new mr("parseIssuerKeys",cr("errors","parseIssuerKeys"))}},parseRevocationKey:function(e){return e&&Object.prototype.hasOwnProperty.call(e,"revocationKeys")&&e.revocationKeys.length>0?e.revocationKeys[0].key:""}}),Zc={addresses:or,certificates:Pr,chains:Tr,did:Gc,i18n:fr,verifier:Qc};function eh(e){const{credentialSubject:n}=e;return n.name||""}function nh(e){"string"==typeof e&&(e=[e]);const n=(t=function(e){return e.filter(Ml)}(e),t.find((e=>e.toLowerCase().indexOf("blockcerts")>0)));var t;const l=n.split("/").filter((e=>""!==e)),r=Object.keys(th),i=parseInt(r.filter((e=>function(e,n){return e.some((e=>e.includes(`v${n}`)||e.includes(`${n}.`)))}(l,e.toString())))[0],10);let u;switch(i){case 1:u=jl.V1_2;break;case 2:u=jl.V2_0;break;case 3:if(n.includes("-alpha")){u=jl.V3_0_alpha;break}if(n.includes("-beta")){u=jl.V3_0_beta;break}u=jl.V3_0}return{versionNumber:i,version:u}}const th={1:function(){throw new mr("","Verification of v1 certificates is not supported by this component. See the python cert-verifier for v1.1 verification or the npm package cert-verifier-js-v1-legacy for v1.2 (https://www.npmjs.com/package/@blockcerts/cert-verifier-js-v1-legacy)")},2:async function(e){const{id:n,expires:t,badge:l}=e,{image:r,name:i,description:u,subtitle:o,issuer:s}=l,a=e.recipientProfile||e.recipient.recipientProfile,c=e.issuedOn,h=e.metadataJson,f=a.name,d=function(e){const n=[];for(const t in e){const l=e[t],r=new gr(l.image,l.jobTitle,l.name);n.push(r)}return n}(l.signatureLines),p=await Zc.verifier.getIssuerProfile(s);return{certificateImage:r,description:u,expires:t,id:n,issuedOn:c,issuer:p,metadataJson:h,name:i,recipientFullName:f,recordLink:n,revocationKey:null,sealImage:p.image,signatureImage:d,subtitle:o}},3:async function(e){const{issuer:n,metadataJson:t,metadata:l,issuanceDate:r,id:i,expirationDate:u,display:o}=e,s=l||t;return{display:o,expires:u,issuedOn:r,id:i,issuer:await Zc.verifier.getIssuerProfile(n),metadataJson:s,recipientFullName:eh(e),recordLink:i}}};var lh={exports:{}},rh=1e3,ih=6e4,uh=60*ih,oh=24*uh,sh=7*oh,ah=365.25*oh,ch=function(e,n){n=n||{};var t=typeof e;if("string"===t&&e.length>0)return function(e){if((e=String(e)).length>100)return;var n=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!n)return;var t=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return t*ah;case"weeks":case"week":case"w":return t*sh;case"days":case"day":case"d":return t*oh;case"hours":case"hour":case"hrs":case"hr":case"h":return t*uh;case"minutes":case"minute":case"mins":case"min":case"m":return t*ih;case"seconds":case"second":case"secs":case"sec":case"s":return t*rh;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:return}}(e);if("number"===t&&isFinite(e))return n.long?function(e){var n=Math.abs(e);if(n>=oh)return hh(e,n,oh,"day");if(n>=uh)return hh(e,n,uh,"hour");if(n>=ih)return hh(e,n,ih,"minute");if(n>=rh)return hh(e,n,rh,"second");return e+" ms"}(e):function(e){var n=Math.abs(e);if(n>=oh)return Math.round(e/oh)+"d";if(n>=uh)return Math.round(e/uh)+"h";if(n>=ih)return Math.round(e/ih)+"m";if(n>=rh)return Math.round(e/rh)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function hh(e,n,t,l){var r=n>=1.5*t;return Math.round(e/t)+" "+l+(r?"s":"")}var fh=function(e){function n(e){let l,r,i,u=null;function o(...e){if(!o.enabled)return;const t=o,r=Number(new Date),i=r-(l||r);t.diff=i,t.prev=l,t.curr=r,l=r,e[0]=n.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let u=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((l,r)=>{if("%%"===l)return"%";u++;const i=n.formatters[r];if("function"==typeof i){const n=e[u];l=i.call(t,n),e.splice(u,1),u--}return l})),n.formatArgs.call(t,e);(t.log||n.log).apply(t,e)}return o.namespace=e,o.useColors=n.useColors(),o.color=n.selectColor(e),o.extend=t,o.destroy=n.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==u?u:(r!==n.namespaces&&(r=n.namespaces,i=n.enabled(e)),i),set:e=>{u=e}}),"function"==typeof n.init&&n.init(o),o}function t(e,t){const l=n(this.namespace+(void 0===t?":":t)+e);return l.log=this.log,l}function l(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return n.debug=n,n.default=n,n.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},n.disable=function(){const e=[...n.names.map(l),...n.skips.map(l).map((e=>"-"+e))].join(",");return n.enable(""),e},n.enable=function(e){let t;n.save(e),n.namespaces=e,n.names=[],n.skips=[];const l=("string"==typeof e?e:"").split(/[\s,]+/),r=l.length;for(t=0;t<r;t++)l[t]&&("-"===(e=l[t].replace(/\*/g,".*?"))[0]?n.skips.push(new RegExp("^"+e.slice(1)+"$")):n.names.push(new RegExp("^"+e+"$")))},n.enabled=function(e){if("*"===e[e.length-1])return!0;let t,l;for(t=0,l=n.skips.length;t<l;t++)if(n.skips[t].test(e))return!1;for(t=0,l=n.names.length;t<l;t++)if(n.names[t].test(e))return!0;return!1},n.humanize=ch,n.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((t=>{n[t]=e[t]})),n.names=[],n.skips=[],n.formatters={},n.selectColor=function(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return n.colors[Math.abs(t)%n.colors.length]},n.enable(n.load()),n};!function(e,n){n.formatArgs=function(n){if(n[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+n[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const t="color: "+this.color;n.splice(1,0,t,"color: inherit");let l=0,r=0;n[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(l++,"%c"===e&&(r=l))})),n.splice(r,0,t)},n.save=function(e){try{e?n.storage.setItem("debug",e):n.storage.removeItem("debug")}catch(e){}},n.load=function(){let e;try{e=n.storage.getItem("debug")}catch(e){}!e&&void 0!==si&&"env"in si&&(e=si.env.DEBUG);return e},n.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},n.storage=function(){try{return localStorage}catch(e){}}(),n.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),n.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],n.log=console.debug||console.log||(()=>{}),e.exports=fh(n);const{formatters:t}=e.exports;t.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}(lh,lh.exports);var dh=lh.exports,ph=class e{constructor(e,n=new Map,t=0){this.prefix=e,this._existing=n,this.counter=t}clone(){const{prefix:n,_existing:t,counter:l}=this;return new e(n,new Map(t),l)}getId(e){const n=e&&this._existing.get(e);if(n)return n;const t=this.prefix+this.counter;return this.counter++,e&&this._existing.set(e,t),t}hasId(e){return this._existing.has(e)}getOldIds(){return[...this._existing.keys()]}};!function(e,n){if(!e.setImmediate){var t,l,r,i,u,o=1,s={},a=!1,c=e.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(e);h=h&&h.setTimeout?h:e,"[object process]"==={}.toString.call(e.process)?t=function(e){Jr((function(){d(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var n=!0,t=e.onmessage;return e.onmessage=function(){n=!1},e.postMessage("","*"),e.onmessage=t,n}}()?e.MessageChannel?((r=new MessageChannel).port1.onmessage=function(e){d(e.data)},t=function(e){r.port2.postMessage(e)}):c&&"onreadystatechange"in c.createElement("script")?(l=c.documentElement,t=function(e){var n=c.createElement("script");n.onreadystatechange=function(){d(e),n.onreadystatechange=null,l.removeChild(n),n=null},l.appendChild(n)}):t=function(e){setTimeout(d,0,e)}:(i="setImmediate$"+Math.random()+"$",u=function(n){n.source===e&&"string"==typeof n.data&&0===n.data.indexOf(i)&&d(+n.data.slice(i.length))},e.addEventListener?e.addEventListener("message",u,!1):e.attachEvent("onmessage",u),t=function(n){e.postMessage(i+n,"*")}),h.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var n=new Array(arguments.length-1),l=0;l<n.length;l++)n[l]=arguments[l+1];var r={callback:e,args:n};return s[o]=r,t(o),o++},h.clearImmediate=f}function f(e){delete s[e]}function d(e){if(a)setTimeout(d,0,e);else{var n=s[e];if(n){a=!0;try{!function(e){var n=e.callback,t=e.args;switch(t.length){case 0:n();break;case 1:n(t[0]);break;case 2:n(t[0],t[1]);break;case 3:n(t[0],t[1],t[2]);break;default:n.apply(void 0,t)}}(n)}finally{f(e),a=!1}}}}}("undefined"==typeof self?n:self);const yh=self.crypto||self.msCrypto;var gh=class{constructor(e){if(!yh||!yh.subtle)throw new Error("crypto.subtle not found.");if("sha256"===e)this.algorithm={name:"SHA-256"};else{if("sha1"!==e)throw new Error(`Unsupport algorithm "${e}".`);this.algorithm={name:"SHA-1"}}this._content=""}update(e){this._content+=e}async digest(){const e=(new TextEncoder).encode(this._content),n=new Uint8Array(await yh.subtle.digest(this.algorithm,e));let t="";for(let e=0;e<n.length;++e)t+=n[e].toString(16).padStart(2,"0");return t}},mh=class{constructor(e){this.current=e.sort(),this.done=!1,this.dir=new Map;for(let n=0;n<e.length;++n)this.dir.set(e[n],!0)}hasNext(){return!this.done}next(){const{current:e,dir:n}=this,t=e.slice();let l=null,r=0;const i=e.length;for(let t=0;t<i;++t){const u=e[t],o=n.get(u);(null===l||u>l)&&(o&&t>0&&u>e[t-1]||!o&&t<i-1&&u>e[t+1])&&(l=u,r=t)}if(null===l)this.done=!0;else{const t=n.get(l)?r-1:r+1;e[r]=e[t],e[t]=l;for(const t of e)t>l&&n.set(t,!n.get(t))}return t}};const vh="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",bh="http://www.w3.org/2001/XMLSchema#string",wh="NamedNode",_h="BlankNode",Eh="Literal",Sh="DefaultGraph",xh={eoln:/(?:\r\n)|(?:\n)|(?:\r)/g};xh.empty=new RegExp("^[ \\t]*$"),xh.quad=new RegExp('^[ \\t]*(?:(?:<([^:]+:[^>]*)>)|(_:(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9])(?:(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9-·̀-ͯ‿-⁀.])*(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9-·̀-ͯ‿-⁀]))?))[ \\t]+(?:<([^:]+:[^>]*)>)[ \\t]+(?:(?:<([^:]+:[^>]*)>)|(_:(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9])(?:(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9-·̀-ͯ‿-⁀.])*(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9-·̀-ͯ‿-⁀]))?)|(?:"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"(?:(?:\\^\\^(?:<([^:]+:[^>]*)>))|(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*)))?))[ \\t]*(?:\\.|(?:(?:(?:<([^:]+:[^>]*)>)|(_:(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9])(?:(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9-·̀-ͯ‿-⁀.])*(?:[A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_0-9-·̀-ͯ‿-⁀]))?))[ \\t]*\\.))[ \\t]*$');var kh=class e{static parse(e){const n=[],t={},l=e.split(xh.eoln);let r=0;for(const e of l){if(r++,xh.empty.test(e))continue;const l=e.match(xh.quad);if(null===l)throw new Error("N-Quads parse error on line "+r+".");const i={subject:null,predicate:null,object:null,graph:null};if(void 0!==l[1]?i.subject={termType:wh,value:l[1]}:i.subject={termType:_h,value:l[2]},i.predicate={termType:wh,value:l[3]},void 0!==l[4]?i.object={termType:wh,value:l[4]}:void 0!==l[5]?i.object={termType:_h,value:l[5]}:(i.object={termType:Eh,value:void 0,datatype:{termType:wh}},void 0!==l[7]?i.object.datatype.value=l[7]:void 0!==l[8]?(i.object.datatype.value=vh,i.object.language=l[8]):i.object.datatype.value=bh,i.object.value=Th(l[6])),void 0!==l[9]?i.graph={termType:wh,value:l[9]}:void 0!==l[10]?i.graph={termType:_h,value:l[10]}:i.graph={termType:Sh,value:""},i.graph.value in t){let e=!0;const l=t[i.graph.value];for(const n of l)if(Ih(n,i)){e=!1;break}e&&(l.push(i),n.push(i))}else t[i.graph.value]=[i],n.push(i)}return n}static serialize(n){Array.isArray(n)||(n=e.legacyDatasetToQuads(n));const t=[];for(const l of n)t.push(e.serializeQuad(l));return t.sort().join("")}static serializeQuad(e){const n=e.subject,t=e.predicate,l=e.object,r=e.graph;let i="";return n.termType===wh?i+=`<${n.value}>`:i+=`${n.value}`,i+=` <${t.value}> `,l.termType===wh?i+=`<${l.value}>`:l.termType===_h?i+=l.value:(i+=`"${function(e){return e.replace(Ph,(function(e){switch(e){case'"':return'\\"';case"\\":return"\\\\";case"\n":return"\\n";case"\r":return"\\r"}}))}(l.value)}"`,l.datatype.value===vh?l.language&&(i+=`@${l.language}`):l.datatype.value!==bh&&(i+=`^^<${l.datatype.value}>`)),r.termType===wh?i+=` <${r.value}>`:r.termType===_h&&(i+=` ${r.value}`),i+=" .\n",i}static legacyDatasetToQuads(e){const n=[],t={"blank node":_h,IRI:wh,literal:Eh};for(const l in e){e[l].forEach((e=>{const r={};for(const n in e){const l=e[n],i={termType:t[l.type],value:l.value};i.termType===Eh&&(i.datatype={termType:wh},"datatype"in l&&(i.datatype.value=l.datatype),"language"in l?("datatype"in l||(i.datatype.value=vh),i.language=l.language):"datatype"in l||(i.datatype.value=bh)),r[n]=i}r.graph="@default"===l?{termType:Sh,value:""}:{termType:l.startsWith("_:")?_h:wh,value:l},n.push(r)}))}return n}};function Ih(e,n){return e.subject.termType===n.subject.termType&&e.object.termType===n.object.termType&&(e.subject.value===n.subject.value&&e.predicate.value===n.predicate.value&&e.object.value===n.object.value&&(e.object.termType!==Eh||e.object.datatype.termType===n.object.datatype.termType&&e.object.language===n.object.language&&e.object.datatype.value===n.object.datatype.value))}const Ph=/["\\\n\r]/g;const Ah=/(?:\\([tbnrf"'\\]))|(?:\\u([0-9A-Fa-f]{4}))|(?:\\U([0-9A-Fa-f]{8}))/g;function Th(e){return e.replace(Ah,(function(e,n,t,l){if(n)switch(n){case"t":return"\t";case"b":return"\b";case"n":return"\n";case"r":return"\r";case"f":return"\f";case'"':return'"';case"'":return"'";case"\\":return"\\"}if(t)return String.fromCharCode(parseInt(t,16));if(l)throw new Error("Unsupported U escape")}))}const Oh=ph,Mh=gh,Rh=mh,Nh=kh;var Ch=class{constructor(){this.name="URDNA2015",this.blankNodeInfo=new Map,this.canonicalIssuer=new Oh("_:c14n"),this.hashAlgorithm="sha256",this.quads=null}async main(e){this.quads=e;for(const n of e)this._addBlankNodeQuadInfo({quad:n,component:n.subject}),this._addBlankNodeQuadInfo({quad:n,component:n.object}),this._addBlankNodeQuadInfo({quad:n,component:n.graph});const n=new Map,t=[...this.blankNodeInfo.keys()];let l=0;for(const e of t)++l%100==0&&await this._yield(),await this._hashAndTrackBlankNode({id:e,hashToBlankNodes:n});const r=[...n.keys()].sort(),i=[];for(const e of r){const t=n.get(e);if(t.length>1){i.push(t);continue}const l=t[0];this.canonicalIssuer.getId(l)}for(const e of i){const n=[];for(const t of e){if(this.canonicalIssuer.hasId(t))continue;const e=new Oh("_:b");e.getId(t);const l=await this.hashNDegreeQuads(t,e);n.push(l)}n.sort(Lh);for(const e of n){const n=e.issuer.getOldIds();for(const e of n)this.canonicalIssuer.getId(e)}}const u=[];for(const e of this.quads){const n={...e};n.subject=this._useCanonicalId({component:n.subject}),n.object=this._useCanonicalId({component:n.object}),n.graph=this._useCanonicalId({component:n.graph}),u.push(Nh.serializeQuad(n))}return u.sort(),u.join("")}async hashFirstDegreeQuads(e){const n=[],t=this.blankNodeInfo.get(e),l=t.quads;for(const t of l){const l={subject:null,predicate:t.predicate,object:null,graph:null};l.subject=this.modifyFirstDegreeComponent(e,t.subject,"subject"),l.object=this.modifyFirstDegreeComponent(e,t.object,"object"),l.graph=this.modifyFirstDegreeComponent(e,t.graph,"graph"),n.push(Nh.serializeQuad(l))}n.sort();const r=new Mh(this.hashAlgorithm);for(const e of n)r.update(e);return t.hash=await r.digest(),t.hash}async hashRelatedBlankNode(e,n,t,l){let r;r=this.canonicalIssuer.hasId(e)?this.canonicalIssuer.getId(e):t.hasId(e)?t.getId(e):this.blankNodeInfo.get(e).hash;const i=new Mh(this.hashAlgorithm);return i.update(l),"g"!==l&&i.update(this.getRelatedPredicate(n)),i.update(r),i.digest()}async hashNDegreeQuads(e,n){const t=new Mh(this.hashAlgorithm),l=await this.createHashToRelated(e,n),r=[...l.keys()].sort();for(const e of r){t.update(e);let r,i="";const u=new Rh(l.get(e));let o=0;for(;u.hasNext();){const e=u.next();++o%3==0&&await this._yield();let t=n.clone(),l="";const s=[];let a=!1;for(const n of e)if(this.canonicalIssuer.hasId(n)?l+=this.canonicalIssuer.getId(n):(t.hasId(n)||s.push(n),l+=t.getId(n)),0!==i.length&&l>i){a=!0;break}if(!a){for(const e of s){const n=await this.hashNDegreeQuads(e,t);if(l+=t.getId(e),l+=`<${n.hash}>`,t=n.issuer,0!==i.length&&l>i){a=!0;break}}a||(0===i.length||l<i)&&(i=l,r=t)}}t.update(i),n=r}return{hash:await t.digest(),issuer:n}}modifyFirstDegreeComponent(e,n){return"BlankNode"!==n.termType?n:{termType:"BlankNode",value:n.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return`<${e.predicate.value}>`}async createHashToRelated(e,n){const t=new Map,l=this.blankNodeInfo.get(e).quads;let r=0;for(const i of l)++r%100==0&&await this._yield(),await Promise.all([this._addRelatedBlankNodeHash({quad:i,component:i.subject,position:"s",id:e,issuer:n,hashToRelated:t}),this._addRelatedBlankNodeHash({quad:i,component:i.object,position:"o",id:e,issuer:n,hashToRelated:t}),this._addRelatedBlankNodeHash({quad:i,component:i.graph,position:"g",id:e,issuer:n,hashToRelated:t})]);return t}async _hashAndTrackBlankNode({id:e,hashToBlankNodes:n}){const t=await this.hashFirstDegreeQuads(e),l=n.get(t);l?l.push(e):n.set(t,[e])}_addBlankNodeQuadInfo({quad:e,component:n}){if("BlankNode"!==n.termType)return;const t=n.value,l=this.blankNodeInfo.get(t);l?l.quads.add(e):this.blankNodeInfo.set(t,{quads:new Set([e]),hash:null})}async _addRelatedBlankNodeHash({quad:e,component:n,position:t,id:l,issuer:r,hashToRelated:i}){if("BlankNode"!==n.termType||n.value===l)return;const u=n.value,o=await this.hashRelatedBlankNode(u,e,r,t),s=i.get(o);s?s.push(u):i.set(o,[u])}_useCanonicalId({component:e}){return"BlankNode"!==e.termType||e.value.startsWith(this.canonicalIssuer.prefix)?e:{termType:"BlankNode",value:this.canonicalIssuer.getId(e.value)}}async _yield(){return new Promise((e=>setImmediate(e)))}};function Lh(e,n){return e.hash<n.hash?-1:e.hash>n.hash?1:0}const jh=Ch;const Uh=ph,Dh=gh,Bh=mh,Kh=kh;var Fh=class{constructor(){this.name="URDNA2015",this.blankNodeInfo=new Map,this.canonicalIssuer=new Uh("_:c14n"),this.hashAlgorithm="sha256",this.quads=null}main(e){this.quads=e;for(const n of e)this._addBlankNodeQuadInfo({quad:n,component:n.subject}),this._addBlankNodeQuadInfo({quad:n,component:n.object}),this._addBlankNodeQuadInfo({quad:n,component:n.graph});const n=new Map,t=[...this.blankNodeInfo.keys()];for(const e of t)this._hashAndTrackBlankNode({id:e,hashToBlankNodes:n});const l=[...n.keys()].sort(),r=[];for(const e of l){const t=n.get(e);if(t.length>1){r.push(t);continue}const l=t[0];this.canonicalIssuer.getId(l)}for(const e of r){const n=[];for(const t of e){if(this.canonicalIssuer.hasId(t))continue;const e=new Uh("_:b");e.getId(t);const l=this.hashNDegreeQuads(t,e);n.push(l)}n.sort(Vh);for(const e of n){const n=e.issuer.getOldIds();for(const e of n)this.canonicalIssuer.getId(e)}}const i=[];for(const e of this.quads){const n={...e};n.subject=this._useCanonicalId({component:n.subject}),n.object=this._useCanonicalId({component:n.object}),n.graph=this._useCanonicalId({component:n.graph}),i.push(Kh.serializeQuad(n))}return i.sort(),i.join("")}hashFirstDegreeQuads(e){const n=[],t=this.blankNodeInfo.get(e),l=t.quads;for(const t of l){const l={subject:null,predicate:t.predicate,object:null,graph:null};l.subject=this.modifyFirstDegreeComponent(e,t.subject,"subject"),l.object=this.modifyFirstDegreeComponent(e,t.object,"object"),l.graph=this.modifyFirstDegreeComponent(e,t.graph,"graph"),n.push(Kh.serializeQuad(l))}n.sort();const r=new Dh(this.hashAlgorithm);for(const e of n)r.update(e);return t.hash=r.digest(),t.hash}hashRelatedBlankNode(e,n,t,l){let r;r=this.canonicalIssuer.hasId(e)?this.canonicalIssuer.getId(e):t.hasId(e)?t.getId(e):this.blankNodeInfo.get(e).hash;const i=new Dh(this.hashAlgorithm);return i.update(l),"g"!==l&&i.update(this.getRelatedPredicate(n)),i.update(r),i.digest()}hashNDegreeQuads(e,n){const t=new Dh(this.hashAlgorithm),l=this.createHashToRelated(e,n),r=[...l.keys()].sort();for(const e of r){t.update(e);let r,i="";const u=new Bh(l.get(e));for(;u.hasNext();){const e=u.next();let t=n.clone(),l="";const o=[];let s=!1;for(const n of e)if(this.canonicalIssuer.hasId(n)?l+=this.canonicalIssuer.getId(n):(t.hasId(n)||o.push(n),l+=t.getId(n)),0!==i.length&&l>i){s=!0;break}if(!s){for(const e of o){const n=this.hashNDegreeQuads(e,t);if(l+=t.getId(e),l+=`<${n.hash}>`,t=n.issuer,0!==i.length&&l>i){s=!0;break}}s||(0===i.length||l<i)&&(i=l,r=t)}}t.update(i),n=r}return{hash:t.digest(),issuer:n}}modifyFirstDegreeComponent(e,n){return"BlankNode"!==n.termType?n:{termType:"BlankNode",value:n.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return`<${e.predicate.value}>`}createHashToRelated(e,n){const t=new Map,l=this.blankNodeInfo.get(e).quads;for(const r of l)this._addRelatedBlankNodeHash({quad:r,component:r.subject,position:"s",id:e,issuer:n,hashToRelated:t}),this._addRelatedBlankNodeHash({quad:r,component:r.object,position:"o",id:e,issuer:n,hashToRelated:t}),this._addRelatedBlankNodeHash({quad:r,component:r.graph,position:"g",id:e,issuer:n,hashToRelated:t});return t}_hashAndTrackBlankNode({id:e,hashToBlankNodes:n}){const t=this.hashFirstDegreeQuads(e),l=n.get(t);l?l.push(e):n.set(t,[e])}_addBlankNodeQuadInfo({quad:e,component:n}){if("BlankNode"!==n.termType)return;const t=n.value,l=this.blankNodeInfo.get(t);l?l.quads.add(e):this.blankNodeInfo.set(t,{quads:new Set([e]),hash:null})}_addRelatedBlankNodeHash({quad:e,component:n,position:t,id:l,issuer:r,hashToRelated:i}){if("BlankNode"!==n.termType||n.value===l)return;const u=n.value,o=this.hashRelatedBlankNode(u,e,r,t),s=i.get(o);s?s.push(u):i.set(o,[u])}_useCanonicalId({component:e}){return"BlankNode"!==e.termType||e.value.startsWith(this.canonicalIssuer.prefix)?e:{termType:"BlankNode",value:this.canonicalIssuer.getId(e.value)}}};function Vh(e,n){return e.hash<n.hash?-1:e.hash>n.hash?1:0}const Hh=Fh;const qh=Ch,zh=class extends jh{constructor(){super(),this.name="URGNA2012",this.hashAlgorithm="sha1"}modifyFirstDegreeComponent(e,n,t){return"BlankNode"!==n.termType?n:"graph"===t?{termType:"BlankNode",value:"_:g"}:{termType:"BlankNode",value:n.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return e.predicate.value}async createHashToRelated(e,n){const t=new Map,l=this.blankNodeInfo.get(e).quads;let r=0;for(const i of l){let l,u;if("BlankNode"===i.subject.termType&&i.subject.value!==e)u=i.subject.value,l="p";else{if("BlankNode"!==i.object.termType||i.object.value===e)continue;u=i.object.value,l="r"}++r%100==0&&await this._yield();const o=await this.hashRelatedBlankNode(u,i,n,l),s=t.get(o);s?s.push(u):t.set(o,[u])}return t}},$h=Fh,Gh=class extends Hh{constructor(){super(),this.name="URGNA2012",this.hashAlgorithm="sha1"}modifyFirstDegreeComponent(e,n,t){return"BlankNode"!==n.termType?n:"graph"===t?{termType:"BlankNode",value:"_:g"}:{termType:"BlankNode",value:n.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return e.predicate.value}createHashToRelated(e,n){const t=new Map,l=this.blankNodeInfo.get(e).quads;for(const r of l){let l,i;if("BlankNode"===r.subject.termType&&r.subject.value!==e)i=r.subject.value,l="p";else{if("BlankNode"!==r.object.termType||r.object.value===e)continue;i=r.object.value,l="r"}const u=this.hashRelatedBlankNode(i,r,n,l),o=t.get(u);o?o.push(i):t.set(u,[i])}return t}};let Wh;try{Wh=require("rdf-canonize-native")}catch(e){}const Jh={};var Xh=Jh;Jh.NQuads=kh,Jh.IdentifierIssuer=ph,Jh._rdfCanonizeNative=function(e){return e&&(Wh=e),Wh},Jh.canonize=async function(e,n){if(Array.isArray(e)||(e=Jh.NQuads.legacyDatasetToQuads(e)),n.useNative){if(!Wh)throw new Error("rdf-canonize-native not available");return new Promise(((t,l)=>Wh.canonize(e,n,((e,n)=>e?l(e):t(n)))))}if("URDNA2015"===n.algorithm)return new qh(n).main(e);if("URGNA2012"===n.algorithm)return new zh(n).main(e);if(!("algorithm"in n))throw new Error("No RDF Dataset Canonicalization algorithm specified.");throw new Error("Invalid RDF Dataset Canonicalization algorithm: "+n.algorithm)},Jh._canonizeSync=function(e,n){if(Array.isArray(e)||(e=Jh.NQuads.legacyDatasetToQuads(e)),n.useNative){if(Wh)return Wh.canonizeSync(e,n);throw new Error("rdf-canonize-native not available")}if("URDNA2015"===n.algorithm)return new $h(n).main(e);if("URGNA2012"===n.algorithm)return new Gh(n).main(e);if(!("algorithm"in n))throw new Error("No RDF Dataset Canonicalization algorithm specified.");throw new Error("Invalid RDF Dataset Canonicalization algorithm: "+n.algorithm)};var Yh=Xh;const Qh={};var Zh=Qh;Qh.isArray=Array.isArray,Qh.isBoolean=e=>"boolean"==typeof e||"[object Boolean]"===Object.prototype.toString.call(e),Qh.isDouble=e=>Qh.isNumber(e)&&(-1!==String(e).indexOf(".")||Math.abs(e)>=1e21),Qh.isEmptyObject=e=>Qh.isObject(e)&&0===Object.keys(e).length,Qh.isNumber=e=>"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e),Qh.isNumeric=e=>!isNaN(parseFloat(e))&&isFinite(e),Qh.isObject=e=>"[object Object]"===Object.prototype.toString.call(e),Qh.isString=e=>"string"==typeof e||"[object String]"===Object.prototype.toString.call(e),Qh.isUndefined=e=>void 0===e;const ef=Zh,nf={};var tf=nf;nf.isSubject=e=>{if(ef.isObject(e)&&!("@value"in e||"@set"in e||"@list"in e)){return Object.keys(e).length>1||!("@id"in e)}return!1},nf.isSubjectReference=e=>ef.isObject(e)&&1===Object.keys(e).length&&"@id"in e,nf.isValue=e=>ef.isObject(e)&&"@value"in e,nf.isList=e=>ef.isObject(e)&&"@list"in e,nf.isGraph=e=>ef.isObject(e)&&"@graph"in e&&1===Object.keys(e).filter((e=>"@id"!==e&&"@index"!==e)).length,nf.isSimpleGraph=e=>nf.isGraph(e)&&!("@id"in e),nf.isBlankNode=e=>!!ef.isObject(e)&&("@id"in e?0===e["@id"].indexOf("_:"):0===Object.keys(e).length||!("@value"in e||"@set"in e||"@list"in e));var lf=class extends Error{constructor(e="An unspecified JSON-LD error occurred.",n="jsonld.Error",t={}){super(e),this.name=n,this.message=e,this.details=t}};const rf=tf,uf=Zh,of=Yh.IdentifierIssuer,sf=lf,af=/(?:<[^>]*?>|"[^"]*?"|[^,])+/g,cf=/\s*<([^>]*?)>\s*(?:;\s*(.*))?/,hf=/(.*?)=(?:(?:"([^"]*?)")|([^"]*?))\s*(?:(?:;\s*)|$)/g,ff={accept:"application/ld+json, application/json"},df={};var pf=df;function yf(e,n){if(uf.isArray(n))for(let t=0;t<n.length;++t)n[t]=yf(e,n[t]);else if(rf.isList(n))n["@list"]=yf(e,n["@list"]);else if(uf.isObject(n)){rf.isBlankNode(n)&&(n["@id"]=e.getId(n["@id"]));const t=Object.keys(n).sort();for(let l=0;l<t.length;++l){const r=t[l];"@id"!==r&&(n[r]=yf(e,n[r]))}}return n}df.IdentifierIssuer=of,df.clone=function(e){if(e&&"object"==typeof e){let n;if(uf.isArray(e)){n=[];for(let t=0;t<e.length;++t)n[t]=df.clone(e[t])}else if(e instanceof Map){n=new Map;for(const[t,l]of e)n.set(t,df.clone(l))}else if(e instanceof Set){n=new Set;for(const t of e)n.add(df.clone(t))}else if(uf.isObject(e)){n={};for(const t in e)n[t]=df.clone(e[t])}else n=e.toString();return n}return e},df.asArray=function(e){return Array.isArray(e)?e:[e]},df.buildHeaders=(e={})=>{const n=Object.keys(e).some((e=>"accept"===e.toLowerCase()));if(n)throw new RangeError('Accept header may not be specified; only "'+ff.accept+'" is supported.');return Object.assign({Accept:ff.accept},e)},df.parseLinkHeader=e=>{const n={},t=e.match(af);for(let e=0;e<t.length;++e){let l=t[e].match(cf);if(!l)continue;const r={target:l[1]},i=l[2];for(;l=hf.exec(i);)r[l[1]]=void 0===l[2]?l[3]:l[2];const u=r.rel||"";Array.isArray(n[u])?n[u].push(r):n.hasOwnProperty(u)?n[u]=[n[u],r]:n[u]=r}return n},df.validateTypeValue=(e,n)=>{if(!(uf.isString(e)||uf.isArray(e)&&e.every((e=>uf.isString(e))))){if(n&&uf.isObject(e))switch(Object.keys(e).length){case 0:return;case 1:if("@default"in e&&df.asArray(e["@default"]).every((e=>uf.isString(e))))return}throw new sf('Invalid JSON-LD syntax; "@type" value must a string, an array of strings, an empty object, or a default object.',"jsonld.SyntaxError",{code:"invalid type value",value:e})}},df.hasProperty=(e,n)=>{if(e.hasOwnProperty(n)){const t=e[n];return!uf.isArray(t)||t.length>0}return!1},df.hasValue=(e,n,t)=>{if(df.hasProperty(e,n)){let l=e[n];const r=rf.isList(l);if(uf.isArray(l)||r){r&&(l=l["@list"]);for(let e=0;e<l.length;++e)if(df.compareValues(t,l[e]))return!0}else if(!uf.isArray(t))return df.compareValues(t,l)}return!1},df.addValue=(e,n,t,l)=>{if("propertyIsArray"in(l=l||{})||(l.propertyIsArray=!1),"valueIsArray"in l||(l.valueIsArray=!1),"allowDuplicate"in l||(l.allowDuplicate=!0),"prependValue"in l||(l.prependValue=!1),l.valueIsArray)e[n]=t;else if(uf.isArray(t)){0===t.length&&l.propertyIsArray&&!e.hasOwnProperty(n)&&(e[n]=[]),l.prependValue&&(t=t.concat(e[n]),e[n]=[]);for(let r=0;r<t.length;++r)df.addValue(e,n,t[r],l)}else if(e.hasOwnProperty(n)){const r=!l.allowDuplicate&&df.hasValue(e,n,t);uf.isArray(e[n])||r&&!l.propertyIsArray||(e[n]=[e[n]]),r||(l.prependValue?e[n].unshift(t):e[n].push(t))}else e[n]=l.propertyIsArray?[t]:t},df.getValues=(e,n)=>[].concat(e[n]||[]),df.removeProperty=(e,n)=>{delete e[n]},df.removeValue=(e,n,t,l)=>{"propertyIsArray"in(l=l||{})||(l.propertyIsArray=!1);const r=df.getValues(e,n).filter((e=>!df.compareValues(e,t)));0===r.length?df.removeProperty(e,n):1!==r.length||l.propertyIsArray?e[n]=r:e[n]=r[0]},df.relabelBlankNodes=(e,n)=>yf((n=n||{}).issuer||new of("_:b"),e),df.compareValues=(e,n)=>e===n||(!(!rf.isValue(e)||!rf.isValue(n)||e["@value"]!==n["@value"]||e["@type"]!==n["@type"]||e["@language"]!==n["@language"]||e["@index"]!==n["@index"])||!!(uf.isObject(e)&&"@id"in e&&uf.isObject(n)&&"@id"in n)&&e["@id"]===n["@id"]),df.compareShortestLeast=(e,n)=>e.length<n.length?-1:n.length<e.length?1:e===n?0:e<n?-1:1;const gf="http://www.w3.org/1999/02/22-rdf-syntax-ns#",mf="http://www.w3.org/2001/XMLSchema#";var vf={LINK_HEADER_REL:"http://www.w3.org/ns/json-ld#context",LINK_HEADER_CONTEXT:"http://www.w3.org/ns/json-ld#context",RDF:gf,RDF_LIST:gf+"List",RDF_FIRST:gf+"first",RDF_REST:gf+"rest",RDF_NIL:gf+"nil",RDF_TYPE:gf+"type",RDF_PLAIN_LITERAL:gf+"PlainLiteral",RDF_XML_LITERAL:gf+"XMLLiteral",RDF_JSON_LITERAL:gf+"JSON",RDF_OBJECT:gf+"object",RDF_LANGSTRING:gf+"langString",XSD:mf,XSD_BOOLEAN:mf+"boolean",XSD_DOUBLE:mf+"double",XSD_INTEGER:mf+"integer",XSD_STRING:mf+"string"},bf=class{constructor(){this._requests={}}wrapLoader(e){const n=this;return n._loader=e,function(){return n.add.apply(n,arguments)}}async add(e){let n=this._requests[e];if(n)return Promise.resolve(n);n=this._requests[e]=this._loader(e);try{return await n}finally{delete this._requests[e]}}};const wf=Zh,_f={};var Ef=_f;_f.parsers={simple:{keys:["href","scheme","authority","path","query","fragment"],regex:/^(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/},full:{keys:["href","protocol","scheme","authority","auth","user","password","hostname","port","path","directory","file","query","fragment"],regex:/^(([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?(?:(((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/}},_f.parse=(e,n)=>{const t={},l=_f.parsers[n||"full"],r=l.regex.exec(e);let i=l.keys.length;for(;i--;)t[l.keys[i]]=void 0===r[i]?null:r[i];return("https"===t.scheme&&"443"===t.port||"http"===t.scheme&&"80"===t.port)&&(t.href=t.href.replace(":"+t.port,""),t.authority=t.authority.replace(":"+t.port,""),t.port=null),t.normalizedPath=_f.removeDotSegments(t.path),t},_f.prependBase=(e,n)=>{if(null===e)return n;if(_f.isAbsolute(n))return n;e&&!wf.isString(e)||(e=_f.parse(e||""));const t=_f.parse(n),l={protocol:e.protocol||""};if(null!==t.authority)l.authority=t.authority,l.path=t.path,l.query=t.query;else if(l.authority=e.authority,""===t.path)l.path=e.path,null!==t.query?l.query=t.query:l.query=e.query;else{if(0===t.path.indexOf("/"))l.path=t.path;else{let n=e.path;n=n.substr(0,n.lastIndexOf("/")+1),(n.length>0||e.authority)&&"/"!==n.substr(-1)&&(n+="/"),n+=t.path,l.path=n}l.query=t.query}""!==t.path&&(l.path=_f.removeDotSegments(l.path));let r=l.protocol;return null!==l.authority&&(r+="//"+l.authority),r+=l.path,null!==l.query&&(r+="?"+l.query),null!==t.fragment&&(r+="#"+t.fragment),""===r&&(r="./"),r},_f.removeBase=(e,n)=>{if(null===e)return n;e&&!wf.isString(e)||(e=_f.parse(e||""));let t="";if(""!==e.href?t+=(e.protocol||"")+"//"+(e.authority||""):n.indexOf("//")&&(t+="//"),0!==n.indexOf(t))return n;const l=_f.parse(n.substr(t.length)),r=e.normalizedPath.split("/"),i=l.normalizedPath.split("/"),u=l.fragment||l.query?0:1;for(;r.length>0&&i.length>u&&r[0]===i[0];)r.shift(),i.shift();let o="";if(r.length>0){r.pop();for(let e=0;e<r.length;++e)o+="../"}return o+=i.join("/"),null!==l.query&&(o+="?"+l.query),null!==l.fragment&&(o+="#"+l.fragment),""===o&&(o="./"),o},_f.removeDotSegments=e=>{if(0===e.length)return"";const n=e.split("/"),t=[];for(;n.length>0;){const e=n.shift(),l=0===n.length;"."!==e?".."!==e?t.push(e):(t.pop(),l&&t.push("")):l&&t.push("")}return"/"===e[0]&&t.length>0&&""!==t[0]&&t.unshift(""),1===t.length&&""===t[0]?"/":t.join("/")};const Sf=/^([A-Za-z][A-Za-z0-9+-.]*|_):[^\s]*$/;_f.isAbsolute=e=>wf.isString(e)&&Sf.test(e),_f.isRelative=e=>wf.isString(e);const{parseLinkHeader:xf,buildHeaders:kf}=pf,{LINK_HEADER_CONTEXT:If}=vf,Pf=lf,Af=bf,{prependBase:Tf}=Ef,Of=/(^|(\r\n))link:/i;const Mf=({secure:e,headers:n={},xhr:t}={headers:{}})=>{n=kf(n);return(new Af).wrapLoader((async function l(r){if(0!==r.indexOf("http:")&&0!==r.indexOf("https:"))throw new Pf('URL could not be dereferenced; only "http" and "https" URLs are supported.',"jsonld.InvalidUrl",{code:"loading document failed",url:r});if(e&&0!==r.indexOf("https"))throw new Pf('URL could not be dereferenced; secure mode is enabled and the URL\'s scheme is not "https".',"jsonld.InvalidUrl",{code:"loading document failed",url:r});let i;try{i=await function(e,n,t){const l=new(e=e||XMLHttpRequest);return new Promise(((e,r)=>{l.onload=()=>e(l),l.onerror=e=>r(e),l.open("GET",n,!0);for(const e in t)l.setRequestHeader(e,t[e]);l.send()}))}(t,r,n)}catch(e){throw new Pf("URL could not be dereferenced, an error occurred.","jsonld.LoadDocumentError",{code:"loading document failed",url:r,cause:e})}if(i.status>=400)throw new Pf("URL could not be dereferenced: "+i.statusText,"jsonld.LoadDocumentError",{code:"loading document failed",url:r,httpStatusCode:i.status});let u={contextUrl:null,documentUrl:r,document:i.response},o=null;const s=i.getResponseHeader("Content-Type");let a;Of.test(i.getAllResponseHeaders())&&(a=i.getResponseHeader("Link"));if(a&&"application/ld+json"!==s){const e=xf(a),n=e[If];if(Array.isArray(n))throw new Pf("URL could not be dereferenced, it has more than one associated HTTP Link Header.","jsonld.InvalidUrl",{code:"multiple context link headers",url:r});n&&(u.contextUrl=n.target),o=e.alternate,o&&"application/ld+json"==o.type&&!(s||"").match(/^application\/(\w*\+)?json$/)&&(u=await l(Tf(r,o.target)))}return u}))},Rf={};var Nf=Rf;Rf.setupDocumentLoaders=function(e){"undefined"!=typeof XMLHttpRequest&&(e.documentLoaders.xhr=Mf,e.useDocumentLoader("xhr"))},Rf.setupGlobals=function(e){void 0===globalThis.JsonLdProcessor&&Object.defineProperty(globalThis,"JsonLdProcessor",{writable:!0,enumerable:!1,configurable:!0,value:e.JsonLdProcessor})};const Cf=Fc;const{isArray:Lf,isObject:jf,isString:Uf}=Zh,{asArray:Df}=pf,{prependBase:Bf}=Ef,Kf=lf,Ff=class{constructor({document:e}){this.document=e,this.cache=new Cf({max:10})}getProcessed(e){return this.cache.get(e)}setProcessed(e,n){this.cache.set(e,n)}};function Vf(e){throw new Kf("Invalid JSON-LD syntax; @context must be an object.","jsonld.SyntaxError",{code:"invalid local context",context:e})}function Hf({context:e,base:n}){if(!e)return;const t=e["@context"];if(Uf(t))e["@context"]=Bf(n,t);else if(Lf(t))for(let e=0;e<t.length;++e){const l=t[e];Uf(l)?t[e]=Bf(n,l):jf(l)&&Hf({context:{"@context":l},base:n})}else if(jf(t))for(const e in t)Hf({context:t[e],base:n})}var qf=Yh.NQuads;const zf=pf,$f=lf,{isArray:Gf,isObject:Wf,isString:Jf,isUndefined:Xf}=Zh,{isAbsolute:Yf,isRelative:Qf,prependBase:Zf}=Ef,{asArray:ed,compareShortestLeast:nd}=pf,td=new Map,ld=/^@[a-zA-Z]+$/,rd={};var id=rd;function ud(e,n,t,l,r,i){if(null===n||!Jf(n)||rd.isKeyword(n))return n;if(n.match(ld))return null;if(l&&l.hasOwnProperty(n)&&!0!==r.get(n)&&rd.createTermDefinition({activeCtx:e,localCtx:l,term:n,defined:r,options:i}),(t=t||{}).vocab){const t=e.mappings.get(n);if(null===t)return null;if(Wf(t)&&"@id"in t)return t["@id"]}const u=n.indexOf(":");if(u>0){const t=n.substr(0,u),o=n.substr(u+1);if("_"===t||0===o.indexOf("//"))return n;l&&l.hasOwnProperty(t)&&rd.createTermDefinition({activeCtx:e,localCtx:l,term:t,defined:r,options:i});const s=e.mappings.get(t);if(s&&s._prefix)return s["@id"]+o;if(Yf(n))return n}if(t.vocab&&"@vocab"in e)return e["@vocab"]+n;if(t.base&&"@base"in e){if(e["@base"])return Zf(Zf(i.base,e["@base"]),n)}else if(t.base)return Zf(i.base,n);return n}function od(e,n){if(!e||"object"!=typeof e||!n||"object"!=typeof n)return e===n;const t=Array.isArray(e);if(t!==Array.isArray(n))return!1;if(t){if(e.length!==n.length)return!1;for(let t=0;t<e.length;++t)if(!od(e[t],n[t]))return!1;return!0}const l=Object.keys(e),r=Object.keys(n);if(l.length!==r.length)return!1;for(const t in e){let l=e[t],r=n[t];if("@container"===t&&Array.isArray(l)&&Array.isArray(r)&&(l=l.slice().sort(),r=r.slice().sort()),!od(l,r))return!1}return!0}rd.process=async({activeCtx:e,localCtx:n,options:t,propagate:l=!0,overrideProtected:r=!1,cycles:i=new Set})=>{Wf(n)&&"@context"in n&&Gf(n["@context"])&&(n=n["@context"]);if(0===ed(n).length)return e;const u=await t.contextResolver.resolve({activeCtx:e,context:n,documentLoader:t.documentLoader,base:t.base});Wf(u[0].document)&&"boolean"==typeof u[0].document["@propagate"]&&(l=u[0].document["@propagate"]);let o=e;l||o.previousContext||(o=o.clone(),o.previousContext=e);for(const l of u){let{document:u}=l;if(e=o,null===u){if(!r&&0!==Object.keys(e.protected).length){const r=t&&t.protectedMode||"error";if("error"===r)throw new $f("Tried to nullify a context with protected terms outside of a term definition.","jsonld.SyntaxError",{code:"invalid context nullification"});if("warn"===r){console.warn("WARNING: invalid context nullification");const n=l.getProcessed(e);if(n){o=e=n;continue}const r=e;o=e=rd.getInitialContext(t).clone();for(const[n,t]of Object.entries(r.protected))t&&(e.mappings[n]=zf.clone(r.mappings[n]));e.protected=zf.clone(r.protected),l.setProcessed(r,o);continue}throw new $f("Invalid protectedMode.","jsonld.SyntaxError",{code:"invalid protected mode",context:n,protectedMode:r})}o=e=rd.getInitialContext(t).clone();continue}const s=l.getProcessed(e);if(s){o=e=s;continue}if(Wf(u)&&"@context"in u&&(u=u["@context"]),!Wf(u))throw new $f("Invalid JSON-LD syntax; @context must be an object.","jsonld.SyntaxError",{code:"invalid local context",context:u});o=o.clone();const a=new Map;if("@version"in u){if(1.1!==u["@version"])throw new $f("Unsupported JSON-LD version: "+u["@version"],"jsonld.UnsupportedVersion",{code:"invalid @version value",context:u});if(e.processingMode&&"json-ld-1.0"===e.processingMode)throw new $f("@version: "+u["@version"]+" not compatible with "+e.processingMode,"jsonld.ProcessingModeConflict",{code:"processing mode conflict",context:u});o.processingMode="json-ld-1.1",o["@version"]=u["@version"],a.set("@version",!0)}if(o.processingMode=o.processingMode||e.processingMode,"@base"in u){let e=u["@base"];if(null===e||Yf(e));else{if(!Qf(e))throw new $f('Invalid JSON-LD syntax; the value of "@base" in a @context must be an absolute IRI, a relative IRI, or null.',"jsonld.SyntaxError",{code:"invalid base IRI",context:u});e=Zf(o["@base"],e)}o["@base"]=e,a.set("@base",!0)}if("@vocab"in u){const e=u["@vocab"];if(null===e)delete o["@vocab"];else{if(!Jf(e))throw new $f('Invalid JSON-LD syntax; the value of "@vocab" in a @context must be a string or null.',"jsonld.SyntaxError",{code:"invalid vocab mapping",context:u});if(!Yf(e)&&rd.processingMode(o,1))throw new $f('Invalid JSON-LD syntax; the value of "@vocab" in a @context must be an absolute IRI.',"jsonld.SyntaxError",{code:"invalid vocab mapping",context:u});o["@vocab"]=ud(o,e,{vocab:!0,base:!0},void 0,void 0,t)}a.set("@vocab",!0)}if("@language"in u){const e=u["@language"];if(null===e)delete o["@language"];else{if(!Jf(e))throw new $f('Invalid JSON-LD syntax; the value of "@language" in a @context must be a string or null.',"jsonld.SyntaxError",{code:"invalid default language",context:u});o["@language"]=e.toLowerCase()}a.set("@language",!0)}if("@direction"in u){const n=u["@direction"];if("json-ld-1.0"===e.processingMode)throw new $f("Invalid JSON-LD syntax; @direction not compatible with "+e.processingMode,"jsonld.SyntaxError",{code:"invalid context member",context:u});if(null===n)delete o["@direction"];else{if("ltr"!==n&&"rtl"!==n)throw new $f('Invalid JSON-LD syntax; the value of "@direction" in a @context must be null, "ltr", or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",context:u});o["@direction"]=n}a.set("@direction",!0)}if("@propagate"in u){const t=u["@propagate"];if("json-ld-1.0"===e.processingMode)throw new $f("Invalid JSON-LD syntax; @propagate not compatible with "+e.processingMode,"jsonld.SyntaxError",{code:"invalid context entry",context:u});if("boolean"!=typeof t)throw new $f("Invalid JSON-LD syntax; @propagate value must be a boolean.","jsonld.SyntaxError",{code:"invalid @propagate value",context:n});a.set("@propagate",!0)}if("@import"in u){const l=u["@import"];if("json-ld-1.0"===e.processingMode)throw new $f("Invalid JSON-LD syntax; @import not compatible with "+e.processingMode,"jsonld.SyntaxError",{code:"invalid context entry",context:u});if(!Jf(l))throw new $f("Invalid JSON-LD syntax; @import must be a string.","jsonld.SyntaxError",{code:"invalid @import value",context:n});const r=await t.contextResolver.resolve({activeCtx:e,context:l,documentLoader:t.documentLoader,base:t.base});if(1!==r.length)throw new $f("Invalid JSON-LD syntax; @import must reference a single context.","jsonld.SyntaxError",{code:"invalid remote context",context:n});const i=r[0].getProcessed(e);if(i)u=i;else{const t=r[0].document;if("@import"in t)throw new $f("Invalid JSON-LD syntax: imported context must not include @import.","jsonld.SyntaxError",{code:"invalid context entry",context:n});for(const e in t)u.hasOwnProperty(e)||(u[e]=t[e]);r[0].setProcessed(e,u)}a.set("@import",!0)}a.set("@protected",u["@protected"]||!1);for(const e in u)if(rd.createTermDefinition({activeCtx:o,localCtx:u,term:e,defined:a,options:t,overrideProtected:r}),Wf(u[e])&&"@context"in u[e]){const n=u[e]["@context"];let l=!0;if(Jf(n)){const e=Zf(t.base,n);i.has(e)?l=!1:i.add(e)}if(l)try{await rd.process({activeCtx:o.clone(),localCtx:u[e]["@context"],overrideProtected:!0,options:t,cycles:i})}catch(n){throw new $f("Invalid JSON-LD syntax; invalid scoped context.","jsonld.SyntaxError",{code:"invalid scoped context",context:u[e]["@context"],term:e})}}l.setProcessed(e,o)}return o},rd.createTermDefinition=({activeCtx:e,localCtx:n,term:t,defined:l,options:r,overrideProtected:i=!1})=>{if(l.has(t)){if(l.get(t))return;throw new $f("Cyclical context definition detected.","jsonld.CyclicalContext",{code:"cyclic IRI mapping",context:n,term:t})}let u;if(l.set(t,!1),n.hasOwnProperty(t)&&(u=n[t]),"@type"===t&&Wf(u)&&"@set"===(u["@container"]||"@set")&&rd.processingMode(e,1.1)){const e=["@container","@id","@protected"],l=Object.keys(u);if(0===l.length||l.some((n=>!e.includes(n))))throw new $f("Invalid JSON-LD syntax; keywords cannot be overridden.","jsonld.SyntaxError",{code:"keyword redefinition",context:n,term:t})}else{if(rd.isKeyword(t))throw new $f("Invalid JSON-LD syntax; keywords cannot be overridden.","jsonld.SyntaxError",{code:"keyword redefinition",context:n,term:t});if(t.match(ld))return void console.warn('WARNING: terms beginning with "@" are reserved for future use and ignored',{term:t});if(""===t)throw new $f("Invalid JSON-LD syntax; a term cannot be an empty string.","jsonld.SyntaxError",{code:"invalid term definition",context:n})}const o=e.mappings.get(t);e.mappings.has(t)&&e.mappings.delete(t);let s=!1;if((Jf(u)||null===u)&&(s=!0,u={"@id":u}),!Wf(u))throw new $f("Invalid JSON-LD syntax; @context term values must be strings or objects.","jsonld.SyntaxError",{code:"invalid term definition",context:n});const a={};e.mappings.set(t,a),a.reverse=!1;const c=["@container","@id","@language","@reverse","@type"];rd.processingMode(e,1.1)&&c.push("@context","@direction","@index","@nest","@prefix","@protected");for(const e in u)if(!c.includes(e))throw new $f("Invalid JSON-LD syntax; a term definition must not contain "+e,"jsonld.SyntaxError",{code:"invalid term definition",context:n});const h=t.indexOf(":");if(a._termHasColon=h>0,"@reverse"in u){if("@id"in u)throw new $f("Invalid JSON-LD syntax; a @reverse term definition must not contain @id.","jsonld.SyntaxError",{code:"invalid reverse property",context:n});if("@nest"in u)throw new $f("Invalid JSON-LD syntax; a @reverse term definition must not contain @nest.","jsonld.SyntaxError",{code:"invalid reverse property",context:n});const i=u["@reverse"];if(!Jf(i))throw new $f("Invalid JSON-LD syntax; a @context @reverse value must be a string.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:n});if(!rd.isKeyword(i)&&i.match(ld))return console.warn('WARNING: values beginning with "@" are reserved for future use and ignored',{reverse:i}),void(o?e.mappings.set(t,o):e.mappings.delete(t));const s=ud(e,i,{vocab:!0,base:!1},n,l,r);if(!Yf(s))throw new $f("Invalid JSON-LD syntax; a @context @reverse value must be an absolute IRI or a blank node identifier.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:n});a["@id"]=s,a.reverse=!0}else if("@id"in u){let i=u["@id"];if(i&&!Jf(i))throw new $f("Invalid JSON-LD syntax; a @context @id value must be an array of strings or a string.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:n});if(null===i)a["@id"]=null;else{if(!rd.isKeyword(i)&&i.match(ld))return console.warn('WARNING: values beginning with "@" are reserved for future use and ignored',{id:i}),void(o?e.mappings.set(t,o):e.mappings.delete(t));if(i!==t){if(i=ud(e,i,{vocab:!0,base:!1},n,l,r),!Yf(i)&&!rd.isKeyword(i))throw new $f("Invalid JSON-LD syntax; a @context @id value must be an absolute IRI, a blank node identifier, or a keyword.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:n});if(t.match(/(?::[^:])|\//)){if(ud(e,t,{vocab:!0,base:!1},n,new Map(l).set(t,!0),r)!==i)throw new $f("Invalid JSON-LD syntax; term in form of IRI must expand to definition.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:n})}a["@id"]=i,a._prefix=s&&!a._termHasColon&&i.match(/[:\/\?#\[\]@]$/)}}}if(!("@id"in a))if(a._termHasColon){const i=t.substr(0,h);if(n.hasOwnProperty(i)&&rd.createTermDefinition({activeCtx:e,localCtx:n,term:i,defined:l,options:r}),e.mappings.has(i)){const n=t.substr(h+1);a["@id"]=e.mappings.get(i)["@id"]+n}else a["@id"]=t}else if("@type"===t)a["@id"]=t;else{if(!("@vocab"in e))throw new $f("Invalid JSON-LD syntax; @context terms must define an @id.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:n,term:t});a["@id"]=e["@vocab"]+t}if((!0===u["@protected"]||!0===l.get("@protected")&&!1!==u["@protected"])&&(e.protected[t]=!0,a.protected=!0),l.set(t,!0),"@type"in u){let t=u["@type"];if(!Jf(t))throw new $f("Invalid JSON-LD syntax; an @context @type value must be a string.","jsonld.SyntaxError",{code:"invalid type mapping",context:n});if("@json"===t||"@none"===t){if(rd.processingMode(e,1))throw new $f(`Invalid JSON-LD syntax; an @context @type value must not be "${t}" in JSON-LD 1.0 mode.`,"jsonld.SyntaxError",{code:"invalid type mapping",context:n})}else if("@id"!==t&&"@vocab"!==t){if(t=ud(e,t,{vocab:!0,base:!1},n,l,r),!Yf(t))throw new $f("Invalid JSON-LD syntax; an @context @type value must be an absolute IRI.","jsonld.SyntaxError",{code:"invalid type mapping",context:n});if(0===t.indexOf("_:"))throw new $f("Invalid JSON-LD syntax; an @context @type value must be an IRI, not a blank node identifier.","jsonld.SyntaxError",{code:"invalid type mapping",context:n})}a["@type"]=t}if("@container"in u){const t=Jf(u["@container"])?[u["@container"]]:u["@container"]||[],l=["@list","@set","@index","@language"];let r=!0;const i=t.includes("@set");if(rd.processingMode(e,1.1)){if(l.push("@graph","@id","@type"),t.includes("@list")){if(1!==t.length)throw new $f("Invalid JSON-LD syntax; @context @container with @list must have no other values","jsonld.SyntaxError",{code:"invalid container mapping",context:n})}else if(t.includes("@graph")){if(t.some((e=>"@graph"!==e&&"@id"!==e&&"@index"!==e&&"@set"!==e)))throw new $f("Invalid JSON-LD syntax; @context @container with @graph must have no other values other than @id, @index, and @set","jsonld.SyntaxError",{code:"invalid container mapping",context:n})}else r&=t.length<=(i?2:1);if(t.includes("@type")&&(a["@type"]=a["@type"]||"@id",!["@id","@vocab"].includes(a["@type"])))throw new $f("Invalid JSON-LD syntax; container: @type requires @type to be @id or @vocab.","jsonld.SyntaxError",{code:"invalid type mapping",context:n})}else r&=!Gf(u["@container"]),r&=t.length<=1;if(r&=t.every((e=>l.includes(e))),r&=!(i&&t.includes("@list")),!r)throw new $f("Invalid JSON-LD syntax; @context @container value must be one of the following: "+l.join(", "),"jsonld.SyntaxError",{code:"invalid container mapping",context:n});if(a.reverse&&!t.every((e=>["@index","@set"].includes(e))))throw new $f("Invalid JSON-LD syntax; @context @container value for a @reverse type definition must be @index or @set.","jsonld.SyntaxError",{code:"invalid reverse property",context:n});a["@container"]=t}if("@index"in u){if(!("@container"in u)||!a["@container"].includes("@index"))throw new $f(`Invalid JSON-LD syntax; @index without @index in @container: "${u["@index"]}" on term "${t}".`,"jsonld.SyntaxError",{code:"invalid term definition",context:n});if(!Jf(u["@index"])||0===u["@index"].indexOf("@"))throw new $f(`Invalid JSON-LD syntax; @index must expand to an IRI: "${u["@index"]}" on term "${t}".`,"jsonld.SyntaxError",{code:"invalid term definition",context:n});a["@index"]=u["@index"]}if("@context"in u&&(a["@context"]=u["@context"]),"@language"in u&&!("@type"in u)){let e=u["@language"];if(null!==e&&!Jf(e))throw new $f("Invalid JSON-LD syntax; @context @language value must be a string or null.","jsonld.SyntaxError",{code:"invalid language mapping",context:n});null!==e&&(e=e.toLowerCase()),a["@language"]=e}if("@prefix"in u){if(t.match(/:|\//))throw new $f("Invalid JSON-LD syntax; @context @prefix used on a compact IRI term","jsonld.SyntaxError",{code:"invalid term definition",context:n});if(rd.isKeyword(a["@id"]))throw new $f("Invalid JSON-LD syntax; keywords may not be used as prefixes","jsonld.SyntaxError",{code:"invalid term definition",context:n});if("boolean"!=typeof u["@prefix"])throw new $f("Invalid JSON-LD syntax; @context value for @prefix must be boolean","jsonld.SyntaxError",{code:"invalid @prefix value",context:n});a._prefix=!0===u["@prefix"]}if("@direction"in u){const e=u["@direction"];if(null!==e&&"ltr"!==e&&"rtl"!==e)throw new $f('Invalid JSON-LD syntax; @direction value must be null, "ltr", or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",context:n});a["@direction"]=e}if("@nest"in u){const e=u["@nest"];if(!Jf(e)||"@nest"!==e&&0===e.indexOf("@"))throw new $f("Invalid JSON-LD syntax; @context @nest value must be a string which is not a keyword other than @nest.","jsonld.SyntaxError",{code:"invalid @nest value",context:n});a["@nest"]=e}
// disallow aliasing @context and @preserve
const f=a["@id"];if("@context"===f||"@preserve"===f)throw new $f("Invalid JSON-LD syntax; @context and @preserve cannot be aliased.","jsonld.SyntaxError",{code:"invalid keyword alias",context:n});if(o&&o.protected&&!i&&(e.protected[t]=!0,a.protected=!0,!od(o,a))){const e=r&&r.protectedMode||"error";if("error"===e)throw new $f(`Invalid JSON-LD syntax; tried to redefine "${t}" which is a protected term.`,"jsonld.SyntaxError",{code:"protected term redefinition",context:n,term:t});if("warn"===e)return void console.warn("WARNING: protected term redefinition",{term:t});throw new $f("Invalid protectedMode.","jsonld.SyntaxError",{code:"invalid protected mode",context:n,term:t,protectedMode:e})}},rd.expandIri=(e,n,t,l)=>ud(e,n,t,void 0,void 0,l),rd.getInitialContext=e=>{const n=JSON.stringify({processingMode:e.processingMode}),t=td.get(n);if(t)return t;const l={processingMode:e.processingMode,mappings:new Map,inverse:null,getInverse:function(){const e=this;if(e.inverse)return e.inverse;const n=e.inverse={},t=e.fastCurieMap={},l={},u=(e["@language"]||"@none").toLowerCase(),o=e["@direction"],s=e.mappings,a=[...s.keys()].sort(nd);for(const e of a){const r=s.get(e);if(null===r)continue;let a=r["@container"]||"@none";if(a=[].concat(a).sort().join(""),null===r["@id"])continue;const c=ed(r["@id"]);for(const s of c){let c=n[s];const h=rd.isKeyword(s);if(c)h||r._termHasColon||l[s].push(e);else if(n[s]=c={},!h&&!r._termHasColon){l[s]=[e];const n={iri:s,terms:l[s]};s[0]in t?t[s[0]].push(n):t[s[0]]=[n]}if(c[a]||(c[a]={"@language":{},"@type":{},"@any":{}}),c=c[a],i(e,c["@any"],"@none"),r.reverse)i(e,c["@type"],"@reverse");else if("@none"===r["@type"])i(e,c["@any"],"@none"),i(e,c["@language"],"@none"),i(e,c["@type"],"@none");else if("@type"in r)i(e,c["@type"],r["@type"]);else if("@language"in r&&"@direction"in r){const n=r["@language"],t=r["@direction"];i(e,c["@language"],n&&t?`${n}_${t}`.toLowerCase():n?n.toLowerCase():t?`_${t}`:"@null")}else"@language"in r?i(e,c["@language"],(r["@language"]||"@null").toLowerCase()):"@direction"in r?r["@direction"]?i(e,c["@language"],`_${r["@direction"]}`):i(e,c["@language"],"@none"):o?(i(e,c["@language"],`_${o}`),i(e,c["@language"],"@none"),i(e,c["@type"],"@none")):(i(e,c["@language"],u),i(e,c["@language"],"@none"),i(e,c["@type"],"@none"))}}for(const e in t)r(t,e,1);return n},clone:function(){const e={};e.mappings=zf.clone(this.mappings),e.clone=this.clone,e.inverse=null,e.getInverse=this.getInverse,e.protected=zf.clone(this.protected),this.previousContext&&(e.previousContext=this.previousContext.clone());e.revertToPreviousContext=this.revertToPreviousContext,"@base"in this&&(e["@base"]=this["@base"]);"@language"in this&&(e["@language"]=this["@language"]);"@vocab"in this&&(e["@vocab"]=this["@vocab"]);return e},revertToPreviousContext:function(){if(!this.previousContext)return this;return this.previousContext.clone()},protected:{}};return 1e4===td.size&&td.clear(),td.set(n,l),l;function r(e,n,t){const l=e[n],i=e[n]={};let u,o;for(const e of l)u=e.iri,o=t>=u.length?"":u[t],o in i?i[o].push(e):i[o]=[e];for(const e in i)""!==e&&r(i,e,t+1)}function i(e,n,t){n.hasOwnProperty(t)||(n[t]=e)}},rd.getContextValue=(e,n,t)=>{if(null===n){if("@context"===t)return;return null}if(e.mappings.has(n)){const l=e.mappings.get(n);if(Xf(t))return l;if(l.hasOwnProperty(t))return l[t]}return"@language"===t&&t in e||"@direction"===t&&t in e?e[t]:"@context"!==t?null:void 0},rd.processingMode=(e,n)=>n.toString()>="1.1"?!e.processingMode||e.processingMode>="json-ld-"+n.toString():"json-ld-1.0"===e.processingMode,rd.isKeyword=e=>{if(!Jf(e)||"@"!==e[0])return!1;switch(e){case"@base":case"@container":case"@context":case"@default":case"@direction":case"@embed":case"@explicit":case"@graph":case"@id":case"@included":case"@index":case"@json":case"@language":case"@list":case"@nest":case"@none":case"@omitDefault":case"@prefix":case"@preserve":case"@protected":case"@requireAll":case"@reverse":case"@set":case"@type":case"@value":case"@version":case"@vocab":return!0}return!1};const sd=lf,{isArray:ad,isObject:cd,isEmptyObject:hd,isString:fd,isUndefined:dd}=Zh,{isList:pd,isValue:yd,isGraph:gd,isSubject:md}=tf,{expandIri:vd,getContextValue:bd,isKeyword:wd,process:_d,processingMode:Ed}=id,{isAbsolute:Sd}=Ef,{addValue:xd,asArray:kd,getValues:Id,validateTypeValue:Pd}=pf,Ad={};var Td=Ad;const Od=/^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;async function Md({activeCtx:e,activeProperty:n,expandedActiveProperty:t,element:l,expandedParent:r,options:i={},insideList:u,typeKey:o,typeScopedContext:s,expansionMap:a}){const c=Object.keys(l).sort(),h=[];let f;const d=l[o]&&"@json"===vd(e,ad(l[o])?l[o][0]:l[o],{vocab:!0},i);for(const o of c){let c,p=l[o];if("@context"===o)continue;let y=vd(e,o,{vocab:!0},i);if((null===y||!Sd(y)&&!wd(y))&&(y=a({unmappedProperty:o,activeCtx:e,activeProperty:n,parent:l,options:i,insideList:u,value:p,expandedParent:r}),void 0===y))continue;if(wd(y)){if("@reverse"===t)throw new sd("Invalid JSON-LD syntax; a keyword cannot be used as a @reverse property.","jsonld.SyntaxError",{code:"invalid reverse property map",value:p});if(y in r&&"@included"!==y&&"@type"!==y)throw new sd("Invalid JSON-LD syntax; colliding keywords detected.","jsonld.SyntaxError",{code:"colliding keywords",keyword:y})}if("@id"===y){if(!fd(p)){if(!i.isFrame)throw new sd('Invalid JSON-LD syntax; "@id" value must a string.',"jsonld.SyntaxError",{code:"invalid @id value",value:p});if(cd(p)){if(!hd(p))throw new sd('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:p})}else{if(!ad(p))throw new sd('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:p});if(!p.every((e=>fd(e))))throw new sd('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:p})}}xd(r,"@id",kd(p).map((n=>fd(n)?vd(e,n,{base:!0},i):n)),{propertyIsArray:i.isFrame});continue}if("@type"===y){cd(p)&&(p=Object.fromEntries(Object.entries(p).map((([e,n])=>[vd(s,e,{vocab:!0}),kd(n).map((e=>vd(s,e,{base:!0,vocab:!0})))])))),Pd(p,i.isFrame),xd(r,"@type",kd(p).map((e=>fd(e)?vd(s,e,{base:!0,vocab:!0},i):e)),{propertyIsArray:i.isFrame});continue}if("@included"===y&&Ed(e,1.1)){const t=kd(await Ad.expand({activeCtx:e,activeProperty:n,element:p,options:i,expansionMap:a}));if(!t.every((e=>md(e))))throw new sd("Invalid JSON-LD syntax; values of @included must expand to node objects.","jsonld.SyntaxError",{code:"invalid @included value",value:p});xd(r,"@included",t,{propertyIsArray:!0});continue}if("@graph"===y&&!cd(p)&&!ad(p))throw new sd('Invalid JSON-LD syntax; "@graph" value must not be an object or an array.',"jsonld.SyntaxError",{code:"invalid @graph value",value:p});if("@value"===y){f=p,d&&Ed(e,1.1)?r["@value"]=p:xd(r,"@value",p,{propertyIsArray:i.isFrame});continue}if("@language"===y){if(null===p)continue;if(!fd(p)&&!i.isFrame)throw new sd('Invalid JSON-LD syntax; "@language" value must be a string.',"jsonld.SyntaxError",{code:"invalid language-tagged string",value:p});p=kd(p).map((e=>fd(e)?e.toLowerCase():e));for(const e of p)fd(e)&&!e.match(Od)&&console.warn(`@language must be valid BCP47: ${e}`);xd(r,"@language",p,{propertyIsArray:i.isFrame});continue}if("@direction"===y){if(!fd(p)&&!i.isFrame)throw new sd('Invalid JSON-LD syntax; "@direction" value must be a string.',"jsonld.SyntaxError",{code:"invalid base direction",value:p});p=kd(p);for(const e of p)if(fd(e)&&"ltr"!==e&&"rtl"!==e)throw new sd('Invalid JSON-LD syntax; "@direction" must be "ltr" or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",value:p});xd(r,"@direction",p,{propertyIsArray:i.isFrame});continue}if("@index"===y){if(!fd(p))throw new sd('Invalid JSON-LD syntax; "@index" value must be a string.',"jsonld.SyntaxError",{code:"invalid @index value",value:p});xd(r,"@index",p);continue}if("@reverse"===y){if(!cd(p))throw new sd('Invalid JSON-LD syntax; "@reverse" value must be an object.',"jsonld.SyntaxError",{code:"invalid @reverse value",value:p});if(c=await Ad.expand({activeCtx:e,activeProperty:"@reverse",element:p,options:i,expansionMap:a}),"@reverse"in c)for(const e in c["@reverse"])xd(r,e,c["@reverse"][e],{propertyIsArray:!0});let n=r["@reverse"]||null;for(const e in c){if("@reverse"===e)continue;null===n&&(n=r["@reverse"]={}),xd(n,e,[],{propertyIsArray:!0});const t=c[e];for(let l=0;l<t.length;++l){const r=t[l];if(yd(r)||pd(r))throw new sd('Invalid JSON-LD syntax; "@reverse" value must not be a @value or an @list.',"jsonld.SyntaxError",{code:"invalid reverse property value",value:c});xd(n,e,r,{propertyIsArray:!0})}}continue}if("@nest"===y){h.push(o);continue}let g=e;const m=bd(e,o,"@context");dd(m)||(g=await _d({activeCtx:e,localCtx:m,propagate:!0,overrideProtected:!0,options:i}));const v=bd(g,o,"@container")||[];if(v.includes("@language")&&cd(p)){c=Nd(g,p,bd(g,o,"@direction"),i)}else if(v.includes("@index")&&cd(p)){const n=v.includes("@graph"),t=bd(g,o,"@index")||"@index",l="@index"!==t&&vd(e,t,{vocab:!0},i);c=await Cd({activeCtx:g,options:i,activeProperty:o,value:p,expansionMap:a,asGraph:n,indexKey:t,propertyIndex:l})}else if(v.includes("@id")&&cd(p)){const e=v.includes("@graph");c=await Cd({activeCtx:g,options:i,activeProperty:o,value:p,expansionMap:a,asGraph:e,indexKey:"@id"})}else if(v.includes("@type")&&cd(p))c=await Cd({activeCtx:g.revertToPreviousContext(),options:i,activeProperty:o,value:p,expansionMap:a,asGraph:!1,indexKey:"@type"});else{const l="@list"===y;if(l||"@set"===y){let e=n;l&&"@graph"===t&&(e=null),c=await Ad.expand({activeCtx:g,activeProperty:e,element:p,options:i,insideList:l,expansionMap:a})}else c="@json"===bd(e,o,"@type")?{"@type":"@json","@value":p}:await Ad.expand({activeCtx:g,activeProperty:o,element:p,options:i,insideList:!1,expansionMap:a})}if(null!==c||"@value"===y||(c=a({unmappedValue:p,expandedProperty:y,activeCtx:g,activeProperty:n,parent:l,options:i,insideList:u,key:o,expandedParent:r}),void 0!==c))if("@list"!==y&&!pd(c)&&v.includes("@list")&&(c={"@list":kd(c)}),v.includes("@graph")&&!v.some((e=>"@id"===e||"@index"===e))&&(c=kd(c).map((e=>({"@graph":kd(e)})))),g.mappings.has(o)&&g.mappings.get(o).reverse){const e=r["@reverse"]=r["@reverse"]||{};c=kd(c);for(let n=0;n<c.length;++n){const t=c[n];if(yd(t)||pd(t))throw new sd('Invalid JSON-LD syntax; "@reverse" value must not be a @value or an @list.',"jsonld.SyntaxError",{code:"invalid reverse property value",value:c});xd(e,y,t,{propertyIsArray:!0})}}else xd(r,y,c,{propertyIsArray:!0})}if("@value"in r)if("@json"===r["@type"]&&Ed(e,1.1));else if((cd(f)||ad(f))&&!i.isFrame)throw new sd('Invalid JSON-LD syntax; "@value" value must not be an object or an array.',"jsonld.SyntaxError",{code:"invalid value object value",value:f});for(const c of h){const h=ad(l[c])?l[c]:[l[c]];for(const l of h){if(!cd(l)||Object.keys(l).some((n=>"@value"===vd(e,n,{vocab:!0},i))))throw new sd("Invalid JSON-LD syntax; nested value must be a node object.","jsonld.SyntaxError",{code:"invalid @nest value",value:l});await Md({activeCtx:e,activeProperty:n,expandedActiveProperty:t,element:l,expandedParent:r,options:i,insideList:u,typeScopedContext:s,typeKey:o,expansionMap:a})}}}function Rd({activeCtx:e,activeProperty:n,value:t,options:l}){if(null==t)return null;const r=vd(e,n,{vocab:!0},l);if("@id"===r)return vd(e,t,{base:!0},l);if("@type"===r)return vd(e,t,{vocab:!0,base:!0},l);const i=bd(e,n,"@type");if(("@id"===i||"@graph"===r)&&fd(t))return{"@id":vd(e,t,{base:!0},l)};if("@vocab"===i&&fd(t))return{"@id":vd(e,t,{vocab:!0,base:!0},l)};if(wd(r))return t;const u={};if(i&&!["@id","@vocab","@none"].includes(i))u["@type"]=i;else if(fd(t)){const t=bd(e,n,"@language");null!==t&&(u["@language"]=t);const l=bd(e,n,"@direction");null!==l&&(u["@direction"]=l)}return["boolean","number","string"].includes(typeof t)||(t=t.toString()),u["@value"]=t,u}function Nd(e,n,t,l){const r=[],i=Object.keys(n).sort();for(const u of i){const i=vd(e,u,{vocab:!0},l);let o=n[u];ad(o)||(o=[o]);for(const e of o){if(null===e)continue;if(!fd(e))throw new sd("Invalid JSON-LD syntax; language map values must be strings.","jsonld.SyntaxError",{code:"invalid language map value",languageMap:n});const l={"@value":e};"@none"!==i&&(l["@language"]=u.toLowerCase()),t&&(l["@direction"]=t),r.push(l)}}return r}async function Cd({activeCtx:e,options:n,activeProperty:t,value:l,expansionMap:r,asGraph:i,indexKey:u,propertyIndex:o}){const s=[],a=Object.keys(l).sort(),c="@type"===u;for(let h of a){if(c){const t=bd(e,h,"@context");dd(t)||(e=await _d({activeCtx:e,localCtx:t,propagate:!1,options:n}))}let a,f=l[h];ad(f)||(f=[f]),f=await Ad.expand({activeCtx:e,activeProperty:t,element:f,options:n,insideList:!1,insideIndex:!0,expansionMap:r}),a=o?"@none"===h?"@none":Rd({activeCtx:e,activeProperty:u,value:h,options:n}):vd(e,h,{vocab:!0},n),"@id"===u?h=vd(e,h,{base:!0},n):c&&(h=a);for(let e of f){if(i&&!gd(e)&&(e={"@graph":[e]}),"@type"===u)"@none"===a||(e["@type"]?e["@type"]=[h].concat(e["@type"]):e["@type"]=[h]);else{if(yd(e)&&!["@language","@type","@index"].includes(u))throw new sd(`Invalid JSON-LD syntax; Attempt to add illegal key to value object: "${u}".`,"jsonld.SyntaxError",{code:"invalid value object",value:e});o?"@none"!==a&&xd(e,o,a,{propertyIsArray:!0,prependValue:!0}):"@none"===a||u in e||(e[u]=h)}s.push(e)}}return s}Ad.expand=async({activeCtx:e,activeProperty:n=null,element:t,options:l={},insideList:r=!1,insideIndex:i=!1,typeScopedContext:u=null,expansionMap:o=(()=>{})})=>{if(null==t)return null;if("@default"===n&&(l=Object.assign({},l,{isFrame:!1})),!ad(t)&&!cd(t)){if(!r&&(null===n||"@graph"===vd(e,n,{vocab:!0},l))){const i=await o({unmappedValue:t,activeCtx:e,activeProperty:n,options:l,insideList:r});return void 0===i?null:i}return Rd({activeCtx:e,activeProperty:n,value:t,options:l})}if(ad(t)){let s=[];const a=bd(e,n,"@container")||[];r=r||a.includes("@list");for(let a=0;a<t.length;++a){let c=await Ad.expand({activeCtx:e,activeProperty:n,element:t[a],options:l,expansionMap:o,insideIndex:i,typeScopedContext:u});r&&ad(c)&&(c={"@list":c}),null===c&&(c=await o({unmappedValue:t[a],activeCtx:e,activeProperty:n,parent:t,index:a,options:l,expandedParent:s,insideList:r}),void 0===c)||(ad(c)?s=s.concat(c):s.push(c))}return s}const s=vd(e,n,{vocab:!0},l),a=bd(e,n,"@context");u=u||(e.previousContext?e:null);let c=Object.keys(t).sort(),h=!i;if(h&&u&&c.length<=2&&!c.includes("@context"))for(const n of c){const t=vd(u,n,{vocab:!0},l);if("@value"===t){h=!1,e=u;break}if("@id"===t&&1===c.length){h=!1;break}}h&&(e=e.revertToPreviousContext()),dd(a)||(e=await _d({activeCtx:e,localCtx:a,propagate:!0,overrideProtected:!0,options:l})),"@context"in t&&(e=await _d({activeCtx:e,localCtx:t["@context"],options:l})),u=e;let f=null;for(const n of c){if("@type"===vd(e,n,{vocab:!0},l)){f=f||n;const r=t[n],i=Array.isArray(r)?r.length>1?r.slice().sort():r:[r];for(const n of i){const t=bd(u,n,"@context");dd(t)||(e=await _d({activeCtx:e,localCtx:t,options:l,propagate:!1}))}}}let d={};await Md({activeCtx:e,activeProperty:n,expandedActiveProperty:s,element:t,expandedParent:d,options:l,insideList:r,typeKey:f,typeScopedContext:u,expansionMap:o}),c=Object.keys(d);let p=c.length;if("@value"in d){if("@type"in d&&("@language"in d||"@direction"in d))throw new sd('Invalid JSON-LD syntax; an element containing "@value" may not contain both "@type" and either "@language" or "@direction".',"jsonld.SyntaxError",{code:"invalid value object",element:d});let i=p-1;if("@type"in d&&(i-=1),"@index"in d&&(i-=1),"@language"in d&&(i-=1),"@direction"in d&&(i-=1),0!==i)throw new sd('Invalid JSON-LD syntax; an element containing "@value" may only have an "@index" property and either "@type" or either or both "@language" or "@direction".',"jsonld.SyntaxError",{code:"invalid value object",element:d});const u=null===d["@value"]?[]:kd(d["@value"]),s=Id(d,"@type");if(Ed(e,1.1)&&s.includes("@json")&&1===s.length);else if(0===u.length){const i=await o({unmappedValue:d,activeCtx:e,activeProperty:n,element:t,options:l,insideList:r});d=void 0!==i?i:null}else{if(!u.every((e=>fd(e)||hd(e)))&&"@language"in d)throw new sd("Invalid JSON-LD syntax; only strings may be language-tagged.","jsonld.SyntaxError",{code:"invalid language-tagged value",element:d});if(!s.every((e=>Sd(e)&&!(fd(e)&&0===e.indexOf("_:"))||hd(e))))throw new sd('Invalid JSON-LD syntax; an element containing "@value" and "@type" must have an absolute IRI for the value of "@type".',"jsonld.SyntaxError",{code:"invalid typed value",element:d})}}else if("@type"in d&&!ad(d["@type"]))d["@type"]=[d["@type"]];else if("@set"in d||"@list"in d){if(p>1&&(2!==p||!("@index"in d)))throw new sd('Invalid JSON-LD syntax; if an element has the property "@set" or "@list", then it can have at most one other property that is "@index".',"jsonld.SyntaxError",{code:"invalid set or list object",element:d});"@set"in d&&(d=d["@set"],c=Object.keys(d),p=c.length)}else if(1===p&&"@language"in d){const i=await o(d,{unmappedValue:d,activeCtx:e,activeProperty:n,element:t,options:l,insideList:r});d=void 0!==i?i:null}if(cd(d)&&!l.keepFreeFloatingNodes&&!r&&(null===n||"@graph"===s)&&(0===p||"@value"in d||"@list"in d||1===p&&"@id"in d)){const i=await o({unmappedValue:d,activeCtx:e,activeProperty:n,element:t,options:l,insideList:r});d=void 0!==i?i:null}return d};const{isKeyword:Ld}=id,jd=tf,Ud=Zh,Dd=pf,Bd=lf,Kd={};var Fd=Kd;Kd.createMergedNodeMap=(e,n)=>{const t=(n=n||{}).issuer||new Dd.IdentifierIssuer("_:b"),l={"@default":{}};return Kd.createNodeMap(e,l,"@default",t),Kd.mergeNodeMaps(l)},Kd.createNodeMap=(e,n,t,l,r,i)=>{if(Ud.isArray(e)){for(const r of e)Kd.createNodeMap(r,n,t,l,void 0,i);return}if(!Ud.isObject(e))return void(i&&i.push(e));if(jd.isValue(e)){if("@type"in e){let n=e["@type"];0===n.indexOf("_:")&&(e["@type"]=n=l.getId(n))}return void(i&&i.push(e))}if(i&&jd.isList(e)){const u=[];return Kd.createNodeMap(e["@list"],n,t,l,r,u),void i.push({"@list":u})}if("@type"in e){const n=e["@type"];for(const e of n)0===e.indexOf("_:")&&l.getId(e)}Ud.isUndefined(r)&&(r=jd.isBlankNode(e)?l.getId(e["@id"]):e["@id"]),i&&i.push({"@id":r});const u=n[t],o=u[r]=u[r]||{};o["@id"]=r;const s=Object.keys(e).sort();for(let i of s){if("@id"===i)continue;if("@reverse"===i){const i={"@id":r},o=e["@reverse"];for(const e in o){const r=o[e];for(const o of r){let r=o["@id"];jd.isBlankNode(o)&&(r=l.getId(r)),Kd.createNodeMap(o,n,t,l,r),Dd.addValue(u[r],e,i,{propertyIsArray:!0,allowDuplicate:!1})}}continue}if("@graph"===i){r in n||(n[r]={}),Kd.createNodeMap(e[i],n,r,l);continue}if("@included"===i){Kd.createNodeMap(e[i],n,t,l);continue}if("@type"!==i&&Ld(i)){if("@index"===i&&i in o&&(e[i]!==o[i]||e[i]["@id"]!==o[i]["@id"]))throw new Bd("Invalid JSON-LD syntax; conflicting @index property detected.","jsonld.SyntaxError",{code:"conflicting indexes",subject:o});o[i]=e[i];continue}const s=e[i];if(0===i.indexOf("_:")&&(i=l.getId(i)),0!==s.length)for(let e of s)if("@type"===i&&(e=0===e.indexOf("_:")?l.getId(e):e),jd.isSubject(e)||jd.isSubjectReference(e)){if("@id"in e&&!e["@id"])continue;const r=jd.isBlankNode(e)?l.getId(e["@id"]):e["@id"];Dd.addValue(o,i,{"@id":r},{propertyIsArray:!0,allowDuplicate:!1}),Kd.createNodeMap(e,n,t,l,r)}else if(jd.isValue(e))Dd.addValue(o,i,e,{propertyIsArray:!0,allowDuplicate:!1});else if(jd.isList(e)){const u=[];Kd.createNodeMap(e["@list"],n,t,l,r,u),e={"@list":u},Dd.addValue(o,i,e,{propertyIsArray:!0,allowDuplicate:!1})}else Kd.createNodeMap(e,n,t,l,r),Dd.addValue(o,i,e,{propertyIsArray:!0,allowDuplicate:!1});else Dd.addValue(o,i,[],{propertyIsArray:!0})}},Kd.mergeNodeMapGraphs=e=>{const n={};for(const t of Object.keys(e).sort())for(const l of Object.keys(e[t]).sort()){const r=e[t][l];l in n||(n[l]={"@id":l});const i=n[l];for(const e of Object.keys(r).sort())if(Ld(e)&&"@type"!==e)i[e]=Dd.clone(r[e]);else for(const n of r[e])Dd.addValue(i,e,Dd.clone(n),{propertyIsArray:!0,allowDuplicate:!1})}return n},Kd.mergeNodeMaps=e=>{const n=e["@default"],t=Object.keys(e).sort();for(const l of t){if("@default"===l)continue;const t=e[l];let r=n[l];r?"@graph"in r||(r["@graph"]=[]):n[l]=r={"@id":l,"@graph":[]};const i=r["@graph"];for(const e of Object.keys(t).sort()){const n=t[e];jd.isSubjectReference(n)||i.push(n)}}return n};const{isSubjectReference:Vd}=tf,{createMergedNodeMap:Hd}=Fd,qd={};var zd=qd;qd.flatten=e=>{const n=Hd(e),t=[],l=Object.keys(n).sort();for(let e=0;e<l.length;++e){const r=n[l[e]];Vd(r)||t.push(r)}return t};const $d=lf,Gd=tf,Wd=Zh,Jd=pf,{RDF_LIST:Xd,RDF_FIRST:Yd,RDF_REST:Qd,RDF_NIL:Zd,RDF_TYPE:ep,RDF_JSON_LITERAL:np,XSD_BOOLEAN:tp,XSD_DOUBLE:lp,XSD_INTEGER:rp,XSD_STRING:ip}=vf,up=/^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/,op={};var sp=op;function ap(e,n,t){if(e.termType.endsWith("Node"))return{"@id":e.value};const l={"@value":e.value};if(e.language)l["@language"]=e.language;else{let r=e.datatype.value;if(r||(r=ip),r===np){r="@json";try{l["@value"]=JSON.parse(l["@value"])}catch(e){throw new $d("JSON literal could not be parsed.","jsonld.InvalidJsonLiteral",{code:"invalid JSON literal",value:l["@value"],cause:e})}}if(n){if(r===tp)"true"===l["@value"]?l["@value"]=!0:"false"===l["@value"]&&(l["@value"]=!1);else if(Wd.isNumeric(l["@value"]))if(r===rp){const e=parseInt(l["@value"],10);e.toFixed(0)===l["@value"]&&(l["@value"]=e)}else r===lp&&(l["@value"]=parseFloat(l["@value"]));[tp,rp,lp,ip].includes(r)||(l["@type"]=r)}else if("i18n-datatype"===t&&r.startsWith("https://www.w3.org/ns/i18n#")){const[,e,n]=r.split(/[#_]/);e.length>0&&(l["@language"]=e,e.match(up)||console.warn(`@language must be valid BCP47: ${e}`)),l["@direction"]=n}else r!==ip&&(l["@type"]=r)}return l}op.fromRDF=async(e,{useRdfType:n=!1,useNativeTypes:t=!1,rdfDirection:l=null})=>{const r={},i={"@default":r},u={};for(const o of e){const e="DefaultGraph"===o.graph.termType?"@default":o.graph.value;e in i||(i[e]={}),"@default"===e||e in r||(r[e]={"@id":e});const s=i[e],a=o.subject.value,c=o.predicate.value,h=o.object;a in s||(s[a]={"@id":a});const f=s[a],d=h.termType.endsWith("Node");if(d&&!(h.value in s)&&(s[h.value]={"@id":h.value}),c===ep&&!n&&d){Jd.addValue(f,"@type",h.value,{propertyIsArray:!0});continue}const p=ap(h,t,l);if(Jd.addValue(f,c,p,{propertyIsArray:!0}),d)if(h.value===Zd){const e=s[h.value];"usages"in e||(e.usages=[]),e.usages.push({node:f,property:c,value:p})}else h.value in u?u[h.value]=!1:u[h.value]={node:f,property:c,value:p}}for(const e in i){const n=i[e];if(!(Zd in n))continue;const t=n[Zd];if(t.usages){for(let e of t.usages){let t=e.node,l=e.property,r=e.value;const i=[],o=[];let s=Object.keys(t).length;for(;l===Qd&&Wd.isObject(u[t["@id"]])&&Wd.isArray(t[Yd])&&1===t[Yd].length&&Wd.isArray(t[Qd])&&1===t[Qd].length&&(3===s||4===s&&Wd.isArray(t["@type"])&&1===t["@type"].length&&t["@type"][0]===Xd)&&(i.push(t[Yd][0]),o.push(t["@id"]),e=u[t["@id"]],t=e.node,l=e.property,r=e.value,s=Object.keys(t).length,Gd.isBlankNode(t)););delete r["@id"],r["@list"]=i.reverse();for(const e of o)delete n[e]}delete t.usages}}const o=[],s=Object.keys(r).sort();for(const e of s){const n=r[e];if(e in i){const t=n["@graph"]=[],l=i[e],r=Object.keys(l).sort();for(const e of r){const n=l[e];Gd.isSubjectReference(n)||t.push(n)}}Gd.isSubjectReference(n)||o.push(n)}return o};const{createNodeMap:cp}=Fd,{isKeyword:hp}=id,fp=tf,dp=function e(n){return null===n||"object"!=typeof n||null!=n.toJSON?JSON.stringify(n):Array.isArray(n)?"["+n.reduce(((n,t,l)=>n+(0===l?"":",")+e(void 0===t||"symbol"==typeof t?null:t)),"")+"]":"{"+Object.keys(n).sort().reduce(((t,l,r)=>{if(void 0===n[l]||"symbol"==typeof n[l])return t;return t+(0===t.length?"":",")+e(l)+":"+e(n[l])}),"")+"}"},pp=Zh,yp=pf,{RDF_FIRST:gp,RDF_REST:mp,RDF_NIL:vp,RDF_TYPE:bp,RDF_JSON_LITERAL:wp,RDF_LANGSTRING:_p,XSD_BOOLEAN:Ep,XSD_DOUBLE:Sp,XSD_INTEGER:xp,XSD_STRING:kp}=vf,{isAbsolute:Ip}=Ef,Pp={};var Ap=Pp;function Tp(e,n,t,l,r){const i=Object.keys(n).sort();for(const u of i){const i=n[u],o=Object.keys(i).sort();for(let n of o){const o=i[n];if("@type"===n)n=bp;else if(hp(n))continue;for(const i of o){const o={termType:u.startsWith("_:")?"BlankNode":"NamedNode",value:u};if(!Ip(u))continue;const s={termType:n.startsWith("_:")?"BlankNode":"NamedNode",value:n};if(!Ip(n))continue;if("BlankNode"===s.termType&&!r.produceGeneralizedRdf)continue;const a=Op(i,l,e,t,r.rdfDirection);a&&e.push({subject:o,predicate:s,object:a,graph:t})}}}}function Op(e,n,t,l,r){const i={};if(fp.isValue(e)){i.termType="Literal",i.value=void 0,i.datatype={termType:"NamedNode"};let n=e["@value"];const t=e["@type"]||null;if("@json"===t)i.value=dp(n),i.datatype.value=wp;else if(pp.isBoolean(n))i.value=n.toString(),i.datatype.value=t||Ep;else if(pp.isDouble(n)||t===Sp)pp.isDouble(n)||(n=parseFloat(n)),i.value=n.toExponential(15).replace(/(\d)0*e\+?/,"$1E"),i.datatype.value=t||Sp;else if(pp.isNumber(n))i.value=n.toFixed(0),i.datatype.value=t||xp;else if("i18n-datatype"===r&&"@direction"in e){const t="https://www.w3.org/ns/i18n#"+(e["@language"]||"")+`_${e["@direction"]}`;i.datatype.value=t,i.value=n}else"@language"in e?(i.value=n,i.datatype.value=t||_p,i.language=e["@language"]):(i.value=n,i.datatype.value=t||kp)}else if(fp.isList(e)){const u=function(e,n,t,l,r){const i={termType:"NamedNode",value:gp},u={termType:"NamedNode",value:mp},o={termType:"NamedNode",value:vp},s=e.pop(),a=s?{termType:"BlankNode",value:n.getId()}:o;let c=a;for(const o of e){const e=Op(o,n,t,l,r),s={termType:"BlankNode",value:n.getId()};t.push({subject:c,predicate:i,object:e,graph:l}),t.push({subject:c,predicate:u,object:s,graph:l}),c=s}if(s){const e=Op(s,n,t,l,r);t.push({subject:c,predicate:i,object:e,graph:l}),t.push({subject:c,predicate:u,object:o,graph:l})}return a}(e["@list"],n,t,l,r);i.termType=u.termType,i.value=u.value}else{const n=pp.isObject(e)?e["@id"]:e;i.termType=n.startsWith("_:")?"BlankNode":"NamedNode",i.value=n}return"NamedNode"!==i.termType||Ip(i.value)?i:null}Pp.toRDF=(e,n)=>{const t=new yp.IdentifierIssuer("_:b"),l={"@default":{}};cp(e,l,"@default",t);const r=[],i=Object.keys(l).sort();for(const e of i){let i;if("@default"===e)i={termType:"DefaultGraph",value:""};else{if(!Ip(e))continue;i=e.startsWith("_:")?{termType:"BlankNode"}:{termType:"NamedNode"},i.value=e}Tp(r,l[e],i,t,n)}return r};const{isKeyword:Mp}=id,Rp=tf,Np=Zh,Cp=pf,Lp=Ef,jp=lf,{createNodeMap:Up,mergeNodeMapGraphs:Dp}=Fd,Bp={};var Kp=Bp;function Fp(e){const n={};for(const t in e)void 0!==e[t]&&(n["@"+t]=[e[t]]);return[n]}function Vp(e,n,t){for(let l=t.length-1;l>=0;--l){const r=t[l];if(r.graph===n&&r.subject["@id"]===e["@id"])return!0}return!1}function Hp(e,n,t){const l="@"+t;let r=l in e?e[l][0]:n[t];if("embed"===t)if(!0===r)r="@once";else if(!1===r)r="@never";else if("@always"!==r&&"@never"!==r&&"@link"!==r&&"@first"!==r&&"@last"!==r&&"@once"!==r)throw new jp("Invalid JSON-LD syntax; invalid value of @embed.","jsonld.SyntaxError",{code:"invalid @embed value",frame:e});return r}function qp(e){if(!Np.isArray(e)||1!==e.length||!Np.isObject(e[0]))throw new jp("Invalid JSON-LD syntax; a JSON-LD frame must be a single object.","jsonld.SyntaxError",{frame:e});if("@id"in e[0])for(const n of Cp.asArray(e[0]["@id"]))if(!Np.isObject(n)&&!Lp.isAbsolute(n)||Np.isString(n)&&0===n.indexOf("_:"))throw new jp("Invalid JSON-LD syntax; invalid @id in frame.","jsonld.SyntaxError",{code:"invalid frame",frame:e});if("@type"in e[0])for(const n of Cp.asArray(e[0]["@type"]))if(!Np.isObject(n)&&!Lp.isAbsolute(n)||Np.isString(n)&&0===n.indexOf("_:"))throw new jp("Invalid JSON-LD syntax; invalid @type in frame.","jsonld.SyntaxError",{code:"invalid frame",frame:e})}function zp(e,n,t,l){let r=!0,i=!1;for(const u in t){let o=!1;const s=Cp.getValues(n,u),a=0===Cp.getValues(t,u).length;if("@id"===u){if(Np.isEmptyObject(t["@id"][0]||{})?o=!0:t["@id"].length>=0&&(o=t["@id"].includes(s[0])),!l.requireAll)return o}else if("@type"===u){if(r=!1,a){if(s.length>0)return!1;o=!0}else if(1===t["@type"].length&&Np.isEmptyObject(t["@type"][0]))o=s.length>0;else for(const e of t["@type"])o=!(!Np.isObject(e)||!("@default"in e))||(o||s.some((n=>n===e)));if(!l.requireAll)return o}else{if(Mp(u))continue;{const n=Cp.getValues(t,u)[0];let i=!1;if(n&&(qp([n]),i="@default"in n),r=!1,0===s.length&&i)continue;if(s.length>0&&a)return!1;if(void 0===n){if(s.length>0)return!1;o=!0}else if(Rp.isList(n)){const t=n["@list"][0];if(Rp.isList(s[0])){const n=s[0]["@list"];Rp.isValue(t)?o=n.some((e=>Xp(t,e))):(Rp.isSubject(t)||Rp.isSubjectReference(t))&&(o=n.some((n=>Jp(e,t,n,l))))}}else o=Rp.isValue(n)?s.some((e=>Xp(n,e))):Rp.isSubjectReference(n)?s.some((t=>Jp(e,n,t,l))):!!Np.isObject(n)&&s.length>0}}if(!o&&l.requireAll)return!1;i=i||o}return r||i}function $p(e,n){const t=e.uniqueEmbeds[e.graph],l=t[n],r=l.parent,i=l.property,u={"@id":n};if(Np.isArray(r)){for(let e=0;e<r.length;++e)if(Cp.compareValues(r[e],u)){r[e]=u;break}}else{const e=Np.isArray(r[i]);Cp.removeValue(r,i,u,{propertyIsArray:e}),Cp.addValue(r,i,u,{propertyIsArray:e})}const o=e=>{const n=Object.keys(t);for(const l of n)l in t&&Np.isObject(t[l].parent)&&t[l].parent["@id"]===e&&(delete t[l],o(l))};o(n)}
/**
	 * Removes the @preserve keywords from expanded result of framing.
	 *
	 * @param input the framed, framed output.
	 * @param options the framing options used.
	 *
	 * @return the resulting output.
	 */function Gp(e,n){if(Np.isArray(e))return e.map((e=>Gp(e,n)));if(Np.isObject(e)){
// remove @preserve
if("@preserve"in e)return e["@preserve"][0];if(Rp.isValue(e))return e;if(Rp.isList(e))return e["@list"]=Gp(e["@list"],n),e;if("@id"in e){const t=e["@id"];if(n.link.hasOwnProperty(t)){const l=n.link[t].indexOf(e);if(-1!==l)return n.link[t][l];n.link[t].push(e)}else n.link[t]=[e]}for(const t in e)"@id"===t&&n.bnodesToClear.includes(e[t])?delete e["@id"]:e[t]=Gp(e[t],n)}return e}function Wp(e,n,t){Np.isObject(e)?Cp.addValue(e,n,t,{propertyIsArray:!0}):e.push(t)}function Jp(e,n,t,l){if(!("@id"in t))return!1;const r=e.subjects[t["@id"]];return r&&zp(e,r,n,l)}function Xp(e,n){const t=n["@value"],l=n["@type"],r=n["@language"],i=e["@value"]?Np.isArray(e["@value"])?e["@value"]:[e["@value"]]:[],u=e["@type"]?Np.isArray(e["@type"])?e["@type"]:[e["@type"]]:[],o=e["@language"]?Np.isArray(e["@language"])?e["@language"]:[e["@language"]]:[];return 0===i.length&&0===u.length&&0===o.length||!(!i.includes(t)&&!Np.isEmptyObject(i[0]))&&(!!(!l&&0===u.length||u.includes(l)||l&&Np.isEmptyObject(u[0]))&&!!(!r&&0===o.length||o.includes(r)||r&&Np.isEmptyObject(o[0])))}Bp.frameMergedOrDefault=(e,n,t)=>{const l={options:t,embedded:!1,graph:"@default",graphMap:{"@default":{}},subjectStack:[],link:{},bnodeMap:{}},r=new Cp.IdentifierIssuer("_:b");Up(e,l.graphMap,"@default",r),t.merged&&(l.graphMap["@merged"]=Dp(l.graphMap),l.graph="@merged"),l.subjects=l.graphMap[l.graph];const i=[];return Bp.frame(l,Object.keys(l.subjects).sort(),n,i),t.pruneBlankNodeIdentifiers&&(t.bnodesToClear=Object.keys(l.bnodeMap).filter((e=>1===l.bnodeMap[e].length))),
// remove @preserve from results
t.link={},Gp(i,t)},Bp.frame=(e,n,t,l,r=null)=>{qp(t),t=t[0];const i=e.options,u={embed:Hp(t,i,"embed"),explicit:Hp(t,i,"explicit"),requireAll:Hp(t,i,"requireAll")};e.link.hasOwnProperty(e.graph)||(e.link[e.graph]={});const o=e.link[e.graph],s=function(e,n,t,l){const r={};for(const i of n){const n=e.graphMap[e.graph][i];zp(e,n,t,l)&&(r[i]=n)}return r}(e,n,t,u),a=Object.keys(s).sort();for(const c of a){const a=s[c];if(null===r?e.uniqueEmbeds={[e.graph]:{}}:e.uniqueEmbeds[e.graph]=e.uniqueEmbeds[e.graph]||{},"@link"===u.embed&&c in o){Wp(l,r,o[c]);continue}const h={"@id":c};if(0===c.indexOf("_:")&&Cp.addValue(e.bnodeMap,c,h,{propertyIsArray:!0}),o[c]=h,("@first"===u.embed||"@last"===u.embed)&&e.is11)throw new jp("Invalid JSON-LD syntax; invalid value of @embed.","jsonld.SyntaxError",{code:"invalid @embed value",frame:t});if(e.embedded||!e.uniqueEmbeds[e.graph].hasOwnProperty(c))if(!e.embedded||"@never"!==u.embed&&!Vp(a,e.graph,e.subjectStack))if(!e.embedded||"@first"!=u.embed&&"@once"!=u.embed||!e.uniqueEmbeds[e.graph].hasOwnProperty(c)){if("@last"===u.embed&&c in e.uniqueEmbeds[e.graph]&&$p(e,c),e.uniqueEmbeds[e.graph][c]={parent:l,property:r},e.subjectStack.push({subject:a,graph:e.graph}),c in e.graphMap){let n=!1,l=null;"@graph"in t?(l=t["@graph"][0],n=!("@merged"===c||"@default"===c),Np.isObject(l)||(l={})):(n="@merged"!==e.graph,l={}),n&&Bp.frame({...e,graph:c,embedded:!1},Object.keys(e.graphMap[c]).sort(),[l],h,"@graph")}"@included"in t&&Bp.frame({...e,embedded:!1},n,t["@included"],h,"@included");for(const n of Object.keys(a).sort())if(Mp(n)){if(h[n]=Cp.clone(a[n]),"@type"===n)for(const n of a["@type"])0===n.indexOf("_:")&&Cp.addValue(e.bnodeMap,n,h,{propertyIsArray:!0})}else if(!u.explicit||n in t)for(const l of a[n]){const r=n in t?t[n]:Fp(u);if(Rp.isList(l)){const r=t[n]&&t[n][0]&&t[n][0]["@list"]?t[n][0]["@list"]:Fp(u),i={"@list":[]};Wp(h,n,i);const o=l["@list"];for(const n of o)Rp.isSubjectReference(n)?Bp.frame({...e,embedded:!0},[n["@id"]],r,i,"@list"):Wp(i,"@list",Cp.clone(n))}else Rp.isSubjectReference(l)?Bp.frame({...e,embedded:!0},[l["@id"]],r,h,n):Xp(r[0],l)&&Wp(h,n,Cp.clone(l))}for(const e of Object.keys(t).sort()){if("@type"===e){if(!Np.isObject(t[e][0])||!("@default"in t[e][0]))continue}else if(Mp(e))continue;const n=t[e][0]||{};if(!Hp(n,i,"omitDefault")&&!(e in h)){let t="@null";"@default"in n&&(t=Cp.clone(n["@default"])),Np.isArray(t)||(t=[t]),h[e]=[{"@preserve":t}]}}for(const n of Object.keys(t["@reverse"]||{}).sort()){const l=t["@reverse"][n];for(const t of Object.keys(e.subjects)){Cp.getValues(e.subjects[t],n).some((e=>e["@id"]===c))&&(h["@reverse"]=h["@reverse"]||{},Cp.addValue(h["@reverse"],n,[],{propertyIsArray:!0}),Bp.frame({...e,embedded:!0},[t],l,h["@reverse"][n],r))}}Wp(l,r,h),e.subjectStack.pop()}else Wp(l,r,h);else Wp(l,r,h)}},Bp.cleanupNull=(e,n)=>{if(Np.isArray(e)){const t=e.map((e=>Bp.cleanupNull(e,n)));return t.filter((e=>e))}if("@null"===e)return null;if(Np.isObject(e)){if("@id"in e){const t=e["@id"];if(n.link.hasOwnProperty(t)){const l=n.link[t].indexOf(e);if(-1!==l)return n.link[t][l];n.link[t].push(e)}else n.link[t]=[e]}for(const t in e)e[t]=Bp.cleanupNull(e[t],n)}return e};const Yp=lf,{isArray:Qp,isObject:Zp,isString:ey,isUndefined:ny}=Zh,{isList:ty,isValue:ly,isGraph:ry,isSimpleGraph:iy,isSubjectReference:uy}=tf,{expandIri:oy,getContextValue:sy,isKeyword:ay,process:cy,processingMode:hy}=id,{removeBase:fy,prependBase:dy}=Ef,{addValue:py,asArray:yy,compareShortestLeast:gy}=pf,my={};var vy=my;function by(e,n,t){if("@nest"!==oy(e,n,{vocab:!0},t))throw new Yp("JSON-LD compact error; nested property must have an @nest value resolving to @nest.","jsonld.SyntaxError",{code:"invalid @nest value"})}my.compact=async({activeCtx:e,activeProperty:n=null,element:t,options:l={},compactionMap:r=(()=>{})})=>{if(Qp(t)){let i=[];for(let u=0;u<t.length;++u){let o=await my.compact({activeCtx:e,activeProperty:n,element:t[u],options:l,compactionMap:r});null===o&&(o=await r({unmappedValue:t[u],activeCtx:e,activeProperty:n,parent:t,index:u,options:l}),void 0===o)||i.push(o)}if(l.compactArrays&&1===i.length){0===(sy(e,n,"@container")||[]).length&&(i=i[0])}return i}const i=sy(e,n,"@context");if(ny(i)||(e=await cy({activeCtx:e,localCtx:i,propagate:!0,overrideProtected:!0,options:l})),Zp(t)){if(l.link&&"@id"in t&&l.link.hasOwnProperty(t["@id"])){const e=l.link[t["@id"]];for(let n=0;n<e.length;++n)if(e[n].expanded===t)return e[n].compacted}if(ly(t)||uy(t)){const r=my.compactValue({activeCtx:e,activeProperty:n,value:t,options:l});return l.link&&uy(t)&&(l.link.hasOwnProperty(t["@id"])||(l.link[t["@id"]]=[]),l.link[t["@id"]].push({expanded:t,compacted:r})),r}if(ty(t)){if((sy(e,n,"@container")||[]).includes("@list"))return my.compact({activeCtx:e,activeProperty:n,element:t["@list"],options:l,compactionMap:r})}const i="@reverse"===n,u={},o=e;ly(t)||uy(t)||(e=e.revertToPreviousContext());const s=sy(o,n,"@context");ny(s)||(e=await cy({activeCtx:e,localCtx:s,propagate:!0,overrideProtected:!0,options:l})),l.link&&"@id"in t&&(l.link.hasOwnProperty(t["@id"])||(l.link[t["@id"]]=[]),l.link[t["@id"]].push({expanded:t,compacted:u}));let a=t["@type"]||[];a.length>1&&(a=Array.from(a).sort());const c=e;for(const n of a){const t=my.compactIri({activeCtx:c,iri:n,relativeTo:{vocab:!0}}),r=sy(o,t,"@context");ny(r)||(e=await cy({activeCtx:e,localCtx:r,options:l,propagate:!1}))}const h=Object.keys(t).sort();for(const s of h){const a=t[s];if("@id"!==s)if("@type"!==s)if("@reverse"!==s)if("@preserve"!==s)if("@index"!==s)if("@graph"!==s&&"@list"!==s&&"@included"!==s&&ay(s)){const n=my.compactIri({activeCtx:e,iri:s,relativeTo:{vocab:!0}});py(u,n,a)}else{if(!Qp(a))throw new Yp("JSON-LD expansion error; expanded value must be an array.","jsonld.SyntaxError");if(0===a.length){const n=my.compactIri({activeCtx:e,iri:s,value:a,relativeTo:{vocab:!0},reverse:i}),t=e.mappings.has(n)?e.mappings.get(n)["@nest"]:null;let r=u;t&&(by(e,t,l),Zp(u[t])||(u[t]={}),r=u[t]),py(r,n,a,{propertyIsArray:!0})}for(const n of a){const t=my.compactIri({activeCtx:e,iri:s,value:n,relativeTo:{vocab:!0},reverse:i}),o=e.mappings.has(t)?e.mappings.get(t)["@nest"]:null;let a=u;o&&(by(e,o,l),Zp(u[o])||(u[o]={}),a=u[o]);const c=sy(e,t,"@container")||[],h=ry(n),f=ty(n);let d;f?d=n["@list"]:h&&(d=n["@graph"]);let p=await my.compact({activeCtx:e,activeProperty:t,element:f||h?d:n,options:l,compactionMap:r});if(f){if(Qp(p)||(p=[p]),c.includes("@list")){py(a,t,p,{valueIsArray:!0,allowDuplicate:!0});continue}p={[my.compactIri({activeCtx:e,iri:"@list",relativeTo:{vocab:!0}})]:p},"@index"in n&&(p[my.compactIri({activeCtx:e,iri:"@index",relativeTo:{vocab:!0}})]=n["@index"])}if(h)if(c.includes("@graph")&&(c.includes("@id")||c.includes("@index")&&iy(n))){let r;a.hasOwnProperty(t)?r=a[t]:a[t]=r={};const i=(c.includes("@id")?n["@id"]:n["@index"])||my.compactIri({activeCtx:e,iri:"@none",relativeTo:{vocab:!0}});py(r,i,p,{propertyIsArray:!l.compactArrays||c.includes("@set")})}else c.includes("@graph")&&iy(n)?(Qp(p)&&p.length>1&&(p={"@included":p}),py(a,t,p,{propertyIsArray:!l.compactArrays||c.includes("@set")})):(Qp(p)&&1===p.length&&l.compactArrays&&(p=p[0]),p={[my.compactIri({activeCtx:e,iri:"@graph",relativeTo:{vocab:!0}})]:p},"@id"in n&&(p[my.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}})]=n["@id"]),"@index"in n&&(p[my.compactIri({activeCtx:e,iri:"@index",relativeTo:{vocab:!0}})]=n["@index"]),py(a,t,p,{propertyIsArray:!l.compactArrays||c.includes("@set")}));else if(c.includes("@language")||c.includes("@index")||c.includes("@id")||c.includes("@type")){let i,u;if(a.hasOwnProperty(t)?i=a[t]:a[t]=i={},c.includes("@language"))ly(p)&&(p=p["@value"]),u=n["@language"];else if(c.includes("@index")){const l=sy(e,t,"@index")||"@index",r=my.compactIri({activeCtx:e,iri:l,relativeTo:{vocab:!0}});if("@index"===l)u=n["@index"],delete p[r];else{let e;if([u,...e]=yy(p[l]||[]),ey(u))switch(e.length){case 0:delete p[l];break;case 1:p[l]=e[0];break;default:p[l]=e}else u=null}}else if(c.includes("@id")){const n=my.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}});u=p[n],delete p[n]}else if(c.includes("@type")){const i=my.compactIri({activeCtx:e,iri:"@type",relativeTo:{vocab:!0}});let o;switch([u,...o]=yy(p[i]||[]),o.length){case 0:delete p[i];break;case 1:p[i]=o[0];break;default:p[i]=o}1===Object.keys(p).length&&"@id"in n&&(p=await my.compact({activeCtx:e,activeProperty:t,element:{"@id":n["@id"]},options:l,compactionMap:r}))}u||(u=my.compactIri({activeCtx:e,iri:"@none",relativeTo:{vocab:!0}})),py(i,u,p,{propertyIsArray:c.includes("@set")})}else{const e=!l.compactArrays||c.includes("@set")||c.includes("@list")||Qp(p)&&0===p.length||"@list"===s||"@graph"===s;py(a,t,p,{propertyIsArray:e})}}}else{if((sy(e,n,"@container")||[]).includes("@index"))continue;const t=my.compactIri({activeCtx:e,iri:s,relativeTo:{vocab:!0}});py(u,t,a)}else{const t=await my.compact({activeCtx:e,activeProperty:n,element:a,options:l,compactionMap:r});Qp(t)&&0===t.length||py(u,s,t)}else{const n=await my.compact({activeCtx:e,activeProperty:"@reverse",element:a,options:l,compactionMap:r});for(const t in n)if(e.mappings.has(t)&&e.mappings.get(t).reverse){const r=n[t],i=(sy(e,t,"@container")||[]).includes("@set")||!l.compactArrays;py(u,t,r,{propertyIsArray:i}),delete n[t]}if(Object.keys(n).length>0){const t=my.compactIri({activeCtx:e,iri:s,relativeTo:{vocab:!0}});py(u,t,n)}}else{let n=yy(a).map((e=>my.compactIri({activeCtx:o,iri:e,relativeTo:{vocab:!0}})));1===n.length&&(n=n[0]);const t=my.compactIri({activeCtx:e,iri:"@type",relativeTo:{vocab:!0}}),l=(sy(e,t,"@container")||[]).includes("@set")&&hy(e,1.1)||Qp(n)&&0===a.length;py(u,t,n,{propertyIsArray:l})}else{let n=yy(a).map((n=>my.compactIri({activeCtx:e,iri:n,relativeTo:{vocab:!1},base:l.base})));1===n.length&&(n=n[0]);u[my.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}})]=n}}return u}return t},my.compactIri=({activeCtx:e,iri:n,value:t=null,relativeTo:l={vocab:!1},reverse:r=!1,base:i=null})=>{if(null===n)return n;e.isPropertyTermScoped&&e.previousContext&&(e=e.previousContext);const u=e.getInverse();if(ay(n)&&n in u&&"@none"in u[n]&&"@type"in u[n]["@none"]&&"@none"in u[n]["@none"]["@type"])return u[n]["@none"]["@type"]["@none"];if(l.vocab&&n in u){const l=e["@language"]||"@none",i=[];Zp(t)&&"@index"in t&&!("@graph"in t)&&i.push("@index","@index@set"),Zp(t)&&"@preserve"in t&&(t=t["@preserve"][0]),ry(t)?("@index"in t&&i.push("@graph@index","@graph@index@set","@index","@index@set"),"@id"in t&&i.push("@graph@id","@graph@id@set"),i.push("@graph","@graph@set","@set"),"@index"in t||i.push("@graph@index","@graph@index@set","@index","@index@set"),"@id"in t||i.push("@graph@id","@graph@id@set")):Zp(t)&&!ly(t)&&i.push("@id","@id@set","@type","@set@type");let u="@language",o="@null";if(r)u="@type",o="@reverse",i.push("@set");else if(ty(t)){"@index"in t||i.push("@list");const e=t["@list"];if(0===e.length)u="@any",o="@none";else{let n=0===e.length?l:null,t=null;for(let l=0;l<e.length;++l){const r=e[l];let i="@none",u="@none";if(ly(r))if("@direction"in r){i=`${(r["@language"]||"").toLowerCase()}_${r["@direction"]}`}else"@language"in r?i=r["@language"].toLowerCase():"@type"in r?u=r["@type"]:i="@null";else u="@id";if(null===n?n=i:i!==n&&ly(r)&&(n="@none"),null===t?t=u:u!==t&&(t="@none"),"@none"===n&&"@none"===t)break}n=n||"@none",t=t||"@none","@none"!==t?(u="@type",o=t):o=n}}else{if(ly(t))if("@language"in t&&!("@index"in t)){i.push("@language","@language@set"),o=t["@language"];const e=t["@direction"];e&&(o=`${o}_${e}`)}else"@direction"in t&&!("@index"in t)?o=`_${t["@direction"]}`:"@type"in t&&(u="@type",o=t["@type"]);else u="@type",o="@id";i.push("@set")}i.push("@none"),Zp(t)&&!("@index"in t)&&i.push("@index","@index@set"),ly(t)&&1===Object.keys(t).length&&i.push("@language","@language@set");const s=function(e,n,t,l,r,i){null===i&&(i="@null");const u=[];if(("@id"===i||"@reverse"===i)&&Zp(t)&&"@id"in t){"@reverse"===i&&u.push("@reverse");const n=my.compactIri({activeCtx:e,iri:t["@id"],relativeTo:{vocab:!0}});e.mappings.has(n)&&e.mappings.get(n)&&e.mappings.get(n)["@id"]===t["@id"]?u.push.apply(u,["@vocab","@id"]):u.push.apply(u,["@id","@vocab"])}else{u.push(i);const e=u.find((e=>e.includes("_")));e&&u.push(e.replace(/^[^_]+_/,"_"))}u.push("@none");const o=e.inverse[n];for(const e of l){if(!(e in o))continue;const n=o[e][r];for(const e of u)if(e in n)return n[e]}return null}(e,n,t,i,u,o);if(null!==s)return s}if(l.vocab&&"@vocab"in e){const t=e["@vocab"];if(0===n.indexOf(t)&&n!==t){const l=n.substr(t.length);if(!e.mappings.has(l))return l}}let o=null;const s=[];let a=e.fastCurieMap;const c=n.length-1;for(let e=0;e<c&&n[e]in a;++e)a=a[n[e]],""in a&&s.push(a[""][0]);for(let l=s.length-1;l>=0;--l){const r=s[l],i=r.terms;for(const l of i){const i=l+":"+n.substr(r.iri.length);e.mappings.get(l)._prefix&&(!e.mappings.has(i)||null===t&&e.mappings.get(i)["@id"]===n)&&(null===o||gy(i,o)<0)&&(o=i)}}if(null!==o)return o;for(const[t,l]of e.mappings)if(l&&l._prefix&&n.startsWith(t+":"))throw new Yp(`Absolute IRI "${n}" confused with prefix "${t}".`,"jsonld.SyntaxError",{code:"IRI confused with prefix",context:e});return l.vocab?n:"@base"in e?e["@base"]?fy(dy(i,e["@base"]),n):n:fy(i,n)},my.compactValue=({activeCtx:e,activeProperty:n,value:t,options:l})=>{if(ly(t)){const l=sy(e,n,"@type"),r=sy(e,n,"@language"),i=sy(e,n,"@direction"),u=sy(e,n,"@container")||[],o="@index"in t&&!u.includes("@index");if(!o&&"@none"!==l){if(t["@type"]===l)return t["@value"];if("@language"in t&&t["@language"]===r&&"@direction"in t&&t["@direction"]===i)return t["@value"];if("@language"in t&&t["@language"]===r)return t["@value"];if("@direction"in t&&t["@direction"]===i)return t["@value"]}const s=Object.keys(t).length,a=1===s||2===s&&"@index"in t&&!o,c="@language"in e,h=ey(t["@value"]),f=e.mappings.has(n)&&null===e.mappings.get(n)["@language"];if(a&&"@none"!==l&&(!c||!h||f))return t["@value"];const d={};return o&&(d[my.compactIri({activeCtx:e,iri:"@index",relativeTo:{vocab:!0}})]=t["@index"]),"@type"in t?d[my.compactIri({activeCtx:e,iri:"@type",relativeTo:{vocab:!0}})]=my.compactIri({activeCtx:e,iri:t["@type"],relativeTo:{vocab:!0}}):"@language"in t&&(d[my.compactIri({activeCtx:e,iri:"@language",relativeTo:{vocab:!0}})]=t["@language"]),"@direction"in t&&(d[my.compactIri({activeCtx:e,iri:"@direction",relativeTo:{vocab:!0}})]=t["@direction"]),d[my.compactIri({activeCtx:e,iri:"@value",relativeTo:{vocab:!0}})]=t["@value"],d}const r=oy(e,n,{vocab:!0},l),i=sy(e,n,"@type"),u=my.compactIri({activeCtx:e,iri:t["@id"],relativeTo:{vocab:"@vocab"===i},base:l.base});return"@id"===i||"@vocab"===i||"@graph"===r?u:{[my.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}})]:u}};
/**
	 * A JavaScript implementation of the JSON-LD API.
	 *
	 * @author Dave Longley
	 *
	 * @license BSD 3-Clause License
	 * Copyright (c) 2011-2019 Digital Bazaar, Inc.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *
	 * Redistributions of source code must retain the above copyright notice,
	 * this list of conditions and the following disclaimer.
	 *
	 * Redistributions in binary form must reproduce the above copyright
	 * notice, this list of conditions and the following disclaimer in the
	 * documentation and/or other materials provided with the distribution.
	 *
	 * Neither the name of the Digital Bazaar, Inc. nor the names of its
	 * contributors may be used to endorse or promote products derived from
	 * this software without specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
	 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
	 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
	 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
	 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
	 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
	 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
	 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
	 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
	 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
const wy=Yh,_y=Nf,Ey=pf,Sy=class{constructor({sharedCache:e}){this.perOpCache=new Map,this.sharedCache=e}async resolve({activeCtx:e,context:n,documentLoader:t,base:l,cycles:r=new Set}){n&&jf(n)&&n["@context"]&&(n=n["@context"]),n=Df(n);const i=[];for(const u of n){if(Uf(u)){let n=this._get(u);n||(n=await this._resolveRemoteContext({activeCtx:e,url:u,documentLoader:t,base:l,cycles:r})),Lf(n)?i.push(...n):i.push(n);continue}if(null===u){i.push(new Ff({document:null}));continue}jf(u)||Vf(n);const o=JSON.stringify(u);let s=this._get(o);s||(s=new Ff({document:u}),this._cacheResolvedContext({key:o,resolved:s,tag:"static"})),i.push(s)}return i}_get(e){let n=this.perOpCache.get(e);if(!n){const t=this.sharedCache.get(e);t&&(n=t.get("static"),n&&this.perOpCache.set(e,n))}return n}_cacheResolvedContext({key:e,resolved:n,tag:t}){if(this.perOpCache.set(e,n),void 0!==t){let l=this.sharedCache.get(e);l||(l=new Map,this.sharedCache.set(e,l)),l.set(t,n)}return n}async _resolveRemoteContext({activeCtx:e,url:n,documentLoader:t,base:l,cycles:r}){n=Bf(l,n);const{context:i,remoteDoc:u}=await this._fetchContext({activeCtx:e,url:n,documentLoader:t,cycles:r});Hf({context:i,base:l=u.documentUrl||n});const o=await this.resolve({activeCtx:e,context:i,documentLoader:t,base:l,cycles:r});return this._cacheResolvedContext({key:n,resolved:o,tag:u.tag}),o}async _fetchContext({activeCtx:e,url:n,documentLoader:t,cycles:l}){if(l.size>10)throw new Kf("Maximum number of @context URLs exceeded.","jsonld.ContextUrlError",{code:"json-ld-1.0"===e.processingMode?"loading remote context failed":"context overflow",max:10});if(l.has(n))throw new Kf("Cyclical @context URLs detected.","jsonld.ContextUrlError",{code:"json-ld-1.0"===e.processingMode?"recursive context inclusion":"context overflow",url:n});let r,i;l.add(n);try{i=await t(n),r=i.document||null,Uf(r)&&(r=JSON.parse(r))}catch(e){throw new Kf("Dereferencing a URL did not result in a valid JSON-LD object. Possible causes are an inaccessible URL perhaps due to a same-origin policy (ensure the server uses CORS if you are using client-side JavaScript), too many redirects, a non-JSON response, or more than one HTTP Link Header was provided for a remote context.","jsonld.InvalidUrl",{code:"loading remote context failed",url:n,cause:e})}if(!jf(r))throw new Kf("Dereferencing a URL did not result in a JSON object. The response was valid JSON, but it was not a JSON object.","jsonld.InvalidUrl",{code:"invalid remote context",url:n});return r="@context"in r?{"@context":r["@context"]}:{"@context":{}},i.contextUrl&&(Lf(r["@context"])||(r["@context"]=[r["@context"]]),r["@context"].push(i.contextUrl)),{context:r,remoteDoc:i}}},xy=Ey.IdentifierIssuer,ky=lf,Iy=Fc,Py=qf,{expand:Ay}=Td,{flatten:Ty}=zd,{fromRDF:Oy}=sp,{toRDF:My}=Ap,{frameMergedOrDefault:Ry,cleanupNull:Ny}=Kp,{isArray:Cy,isObject:Ly,isString:jy}=Zh,{isSubjectReference:Uy}=tf,{expandIri:Dy,getInitialContext:By,process:Ky,processingMode:Fy}=id,{compact:Vy,compactIri:Hy}=vy,{createNodeMap:qy,createMergedNodeMap:zy,mergeNodeMaps:$y}=Fd,Gy=function(e){const n={},t=new Iy({max:100});function l(n,{documentLoader:t=e.documentLoader,...l}){return Object.assign({},{documentLoader:t},l,n)}return e.compact=async function(n,r,i){if(arguments.length<2)throw new TypeError("Could not compact, too few arguments.");if(null===r)throw new ky("The compaction context must not be null.","jsonld.CompactError",{code:"invalid local context"});if(null===n)return null;let u;(i=l(i,{base:jy(n)?n:"",compactArrays:!0,compactToRelative:!0,graph:!1,skipExpansion:!1,link:!1,issuer:new xy("_:b"),contextResolver:new Sy({sharedCache:t})})).link&&(i.skipExpansion=!0),i.compactToRelative||delete i.base,u=i.skipExpansion?n:await e.expand(n,i);const o=await e.processContext(By(i),r,i);let s=await Vy({activeCtx:o,element:u,options:i,compactionMap:i.compactionMap});i.compactArrays&&!i.graph&&Cy(s)?1===s.length?s=s[0]:0===s.length&&(s={}):i.graph&&Ly(s)&&(s=[s]),Ly(r)&&"@context"in r&&(r=r["@context"]),r=Ey.clone(r),Cy(r)||(r=[r]);const a=r;r=[];for(let e=0;e<a.length;++e)(!Ly(a[e])||Object.keys(a[e]).length>0)&&r.push(a[e]);const c=r.length>0;if(1===r.length&&(r=r[0]),Cy(s)){const e=Hy({activeCtx:o,iri:"@graph",relativeTo:{vocab:!0}}),n=s;s={},c&&(s["@context"]=r),s[e]=n}else if(Ly(s)&&c){const e=s;s={"@context":r};for(const n in e)s[n]=e[n]}return s},e.expand=async function(n,r){if(arguments.length<1)throw new TypeError("Could not expand, too few arguments.");!1===(r=l(r,{keepFreeFloatingNodes:!1,contextResolver:new Sy({sharedCache:t})})).expansionMap&&(r.expansionMap=void 0);const i={},u=[];if("expandContext"in r){const e=Ey.clone(r.expandContext);Ly(e)&&"@context"in e?i.expandContext=e:i.expandContext={"@context":e},u.push(i.expandContext)}let o;if(jy(n)){const t=await e.get(n,r);o=t.documentUrl,i.input=t.document,t.contextUrl&&(i.remoteContext={"@context":t.contextUrl},u.push(i.remoteContext))}else i.input=Ey.clone(n);"base"in r||(r.base=o||"");let s=By(r);for(const e of u)s=await Ky({activeCtx:s,localCtx:e,options:r});let a=await Ay({activeCtx:s,element:i.input,options:r,expansionMap:r.expansionMap});return Ly(a)&&"@graph"in a&&1===Object.keys(a).length?a=a["@graph"]:null===a&&(a=[]),Cy(a)||(a=[a]),a},e.flatten=async function(n,r,i){if(arguments.length<1)return new TypeError("Could not flatten, too few arguments.");r="function"==typeof r?null:r||null,i=l(i,{base:jy(n)?n:"",contextResolver:new Sy({sharedCache:t})});const u=await e.expand(n,i),o=Ty(u);if(null===r)return o;i.graph=!0,i.skipExpansion=!0;const s=await e.compact(o,r,i);return s},e.frame=async function(n,r,i){if(arguments.length<2)throw new TypeError("Could not frame, too few arguments.");if(i=l(i,{base:jy(n)?n:"",embed:"@once",explicit:!1,requireAll:!1,omitDefault:!1,bnodesToClear:[],contextResolver:new Sy({sharedCache:t})}),jy(r)){const n=await e.get(r,i);if(r=n.document,n.contextUrl){let e=r["@context"];e?Cy(e)?e.push(n.contextUrl):e=[e,n.contextUrl]:e=n.contextUrl,r["@context"]=e}}const u=r&&r["@context"]||{},o=await e.processContext(By(i),u,i);i.hasOwnProperty("omitGraph")||(i.omitGraph=Fy(o,1.1)),i.hasOwnProperty("pruneBlankNodeIdentifiers")||(i.pruneBlankNodeIdentifiers=Fy(o,1.1));const s=await e.expand(n,i),a={...i};a.isFrame=!0,a.keepFreeFloatingNodes=!0;const c=await e.expand(r,a),h=Object.keys(r).map((e=>Dy(o,e,{vocab:!0})));a.merged=!h.includes("@graph"),a.is11=Fy(o,1.1);const f=Ry(s,c,a);a.graph=!i.omitGraph,a.skipExpansion=!0,a.link={},a.framing=!0;let d=await e.compact(f,u,a);return a.link={},d=Ny(d,a),d},e.link=async function(n,t,l){const r={};return t&&(r["@context"]=t),r["@embed"]="@link",e.frame(n,r,l)},e.normalize=e.canonize=async function(n,r){if(arguments.length<1)throw new TypeError("Could not canonize, too few arguments.");if("inputFormat"in(r=l(r,{base:jy(n)?n:"",algorithm:"URDNA2015",skipExpansion:!1,contextResolver:new Sy({sharedCache:t})}))){if("application/n-quads"!==r.inputFormat&&"application/nquads"!==r.inputFormat)throw new ky("Unknown canonicalization input format.","jsonld.CanonizeError");const e=Py.parse(n);return wy.canonize(e,r)}const i={...r};delete i.format,i.produceGeneralizedRdf=!1;const u=await e.toRDF(n,i);return wy.canonize(u,r)},e.fromRDF=async function(e,t){if(arguments.length<1)throw new TypeError("Could not convert from RDF, too few arguments.");t=l(t,{format:jy(e)?"application/n-quads":void 0});const{format:r}=t;let{rdfParser:i}=t;if(r){if(i=i||n[r],!i)throw new ky("Unknown input format.","jsonld.UnknownFormat",{format:r})}else i=()=>e;const u=await i(e);return Oy(u,t)},e.toRDF=async function(n,r){if(arguments.length<1)throw new TypeError("Could not convert to RDF, too few arguments.");let i;i=(r=l(r,{base:jy(n)?n:"",skipExpansion:!1,contextResolver:new Sy({sharedCache:t})})).skipExpansion?n:await e.expand(n,r);const u=My(i,r);if(r.format){if("application/n-quads"===r.format||"application/nquads"===r.format)return Py.serialize(u);throw new ky("Unknown output format.","jsonld.UnknownFormat",{format:r.format})}return u},e.createNodeMap=async function(n,r){if(arguments.length<1)throw new TypeError("Could not create node map, too few arguments.");r=l(r,{base:jy(n)?n:"",contextResolver:new Sy({sharedCache:t})});const i=await e.expand(n,r);return zy(i,r)},e.merge=async function(n,r,i){if(arguments.length<1)throw new TypeError("Could not merge, too few arguments.");if(!Cy(n))throw new TypeError('Could not merge, "docs" must be an array.');r="function"==typeof r?null:r||null,i=l(i,{contextResolver:new Sy({sharedCache:t})});const u=await Promise.all(n.map((n=>{const t={...i};return e.expand(n,t)})));let o=!0;"mergeNodes"in i&&(o=i.mergeNodes);const s=i.issuer||new xy("_:b"),a={"@default":{}};for(let e=0;e<u.length;++e){const n=Ey.relabelBlankNodes(u[e],{issuer:new xy("_:b"+e+"-")}),t=o||0===e?a:{"@default":{}};if(qy(n,t,"@default",s),t!==a)for(const e in t){const n=t[e];if(!(e in a)){a[e]=n;continue}const l=a[e];for(const e in n)e in l||(l[e]=n[e])}}const c=$y(a),h=[],f=Object.keys(c).sort();for(let e=0;e<f.length;++e){const n=c[f[e]];Uy(n)||h.push(n)}if(null===r)return h;i.graph=!0,i.skipExpansion=!0;const d=await e.compact(h,r,i);return d},Object.defineProperty(e,"documentLoader",{get:()=>e._documentLoader,set:n=>e._documentLoader=n}),e.documentLoader=async e=>{throw new ky("Could not retrieve a JSON-LD document from the URL. URL dereferencing not implemented.","jsonld.LoadDocumentError",{code:"loading document failed",url:e})},e.get=async function(n,t){let l;l="function"==typeof t.documentLoader?t.documentLoader:e.documentLoader;const r=await l(n);try{if(!r.document)throw new ky("No remote document found at the given URL.","jsonld.NullRemoteDocument");jy(r.document)&&(r.document=JSON.parse(r.document))}catch(e){throw new ky("Could not retrieve a JSON-LD document from the URL.","jsonld.LoadDocumentError",{code:"loading document failed",cause:e,remoteDoc:r})}return r},e.processContext=async function(e,n,r){return r=l(r,{base:"",contextResolver:new Sy({sharedCache:t})}),null===n?By(r):(n=Ey.clone(n),Ly(n)&&"@context"in n||(n={"@context":n}),Ky({activeCtx:e,localCtx:n,options:r}))},e.getContextValue=id.getContextValue,e.documentLoaders={},e.useDocumentLoader=function(n){if(!(n in e.documentLoaders))throw new ky('Unknown document loader type: "'+n+'"',"jsonld.UnknownDocumentLoader",{type:n});e.documentLoader=e.documentLoaders[n].apply(e,Array.prototype.slice.call(arguments,1))},e.registerRDFParser=function(e,t){n[e]=t},e.unregisterRDFParser=function(e){delete n[e]},e.registerRDFParser("application/n-quads",Py.parse),e.registerRDFParser("application/nquads",Py.parse),e.url=Ef,e.util=Ey,Object.assign(e,Ey),e.promises=e,e.RequestQueue=bf,e.JsonLdProcessor=(e=>{class n{toString(){return"[object JsonLdProcessor]"}}return Object.defineProperty(n,"prototype",{writable:!1,enumerable:!1}),Object.defineProperty(n.prototype,"constructor",{writable:!0,enumerable:!1,configurable:!0,value:n}),n.compact=function(n,t){return arguments.length<2?Promise.reject(new TypeError("Could not compact, too few arguments.")):e.compact(n,t)},n.expand=function(n){return arguments.length<1?Promise.reject(new TypeError("Could not expand, too few arguments.")):e.expand(n)},n.flatten=function(n){return arguments.length<1?Promise.reject(new TypeError("Could not flatten, too few arguments.")):e.flatten(n)},n})(e),_y.setupGlobals(e),_y.setupDocumentLoaders(e),e},Wy=function(){return Gy((function(){return Wy()}))};Gy(Wy);var Jy=Wy,Xy={exports:{}},Yy={exports:{}};!function(e){!function(n){var t={bytesToHex:function(e){return function(e){return e.map((function(e){return n=e.toString(16),t=2,n.length>t?n:Array(t-n.length+1).join("0")+n;var n,t})).join("")}(e)},hexToBytes:function(e){if(e.length%2==1)throw new Error("hexToBytes can't have a string with an odd number of characters.");return 0===e.indexOf("0x")&&(e=e.slice(2)),e.match(/../g).map((function(e){return parseInt(e,16)}))}};e.exports?e.exports=t:n.convertHex=t}(n)}(Yy);var Qy={exports:{}};!function(e){!function(n){var t={bytesToString:function(e){return e.map((function(e){return String.fromCharCode(e)})).join("")},stringToBytes:function(e){return e.split("").map((function(e){return e.charCodeAt(0)}))}};t.UTF8={bytesToString:function(e){return decodeURIComponent(escape(t.bytesToString(e)))},stringToBytes:function(e){return t.stringToBytes(unescape(encodeURIComponent(e)))}},e.exports?e.exports=t:n.convertString=t}(n)}(Qy),function(e){!function(n){var t={};e.exports?(t.bytesToHex=Yy.exports.bytesToHex,t.convertString=Qy.exports,e.exports=u):(t.bytesToHex=n.convertHex.bytesToHex,t.convertString=n.convertString,n.sha256=u);var l=[];!function(){function e(e){for(var n=Math.sqrt(e),t=2;t<=n;t++)if(!(e%t))return!1;return!0}function n(e){return 4294967296*(e-(0|e))|0}for(var t=2,r=0;r<64;)e(t)&&(l[r]=n(Math.pow(t,1/3)),r++),t++}();var r=[],i=function(e,n,t){for(var i=e[0],u=e[1],o=e[2],s=e[3],a=e[4],c=e[5],h=e[6],f=e[7],d=0;d<64;d++){if(d<16)r[d]=0|n[t+d];else{var p=r[d-15],y=(p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3,g=r[d-2],m=(g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10;r[d]=y+r[d-7]+m+r[d-16]}var v=i&u^i&o^u&o,b=(i<<30|i>>>2)^(i<<19|i>>>13)^(i<<10|i>>>22),w=f+((a<<26|a>>>6)^(a<<21|a>>>11)^(a<<7|a>>>25))+(a&c^~a&h)+l[d]+r[d];f=h,h=c,c=a,a=s+w|0,s=o,o=u,u=i,i=w+(b+v)|0}e[0]=e[0]+i|0,e[1]=e[1]+u|0,e[2]=e[2]+o|0,e[3]=e[3]+s|0,e[4]=e[4]+a|0,e[5]=e[5]+c|0,e[6]=e[6]+h|0,e[7]=e[7]+f|0};function u(e,n){e.constructor===String&&(e=t.convertString.UTF8.stringToBytes(e));var l=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],r=function(e){for(var n=[],t=0,l=0;t<e.length;t++,l+=8)n[l>>>5]|=e[t]<<24-l%32;return n}(e),u=8*e.length;r[u>>5]|=128<<24-u%32,r[15+(u+64>>9<<4)]=u;for(var o=0;o<r.length;o+=16)i(l,r,o);var s=function(e){for(var n=[],t=0;t<32*e.length;t+=8)n.push(e[t>>>5]>>>24-t%32&255);return n}(l);return n&&n.asBytes?s:n&&n.asString?t.convertString.bytesToString(s):t.bytesToHex(s)}u.x2=function(e,n){return u(u(e,{asBytes:!0}),n)}}(n)}(Xy);var Zy=Xy.exports;function eg(e){e=e.trim();const n=[];for(let t=0;t<e.length;t+=2)n.push(parseInt(e.substring(t,t+2),16));return n}var ng={exports:{}};!function(e,t){var l="__lodash_hash_undefined__",r=9007199254740991,i="[object Arguments]",u="[object Boolean]",o="[object Date]",s="[object Function]",a="[object GeneratorFunction]",c="[object Map]",h="[object Number]",f="[object Object]",d="[object Promise]",p="[object RegExp]",y="[object Set]",g="[object String]",m="[object Symbol]",v="[object WeakMap]",b="[object ArrayBuffer]",w="[object DataView]",_="[object Float32Array]",E="[object Float64Array]",S="[object Int8Array]",x="[object Int16Array]",k="[object Int32Array]",I="[object Uint8Array]",P="[object Uint8ClampedArray]",A="[object Uint16Array]",T="[object Uint32Array]",O=/\w*$/,M=/^\[object .+?Constructor\]$/,R=/^(?:0|[1-9]\d*)$/,N={};N[i]=N["[object Array]"]=N[b]=N[w]=N[u]=N[o]=N[_]=N[E]=N[S]=N[x]=N[k]=N[c]=N[h]=N[f]=N[p]=N[y]=N[g]=N[m]=N[I]=N[P]=N[A]=N[T]=!0,N["[object Error]"]=N[s]=N[v]=!1;var C="object"==typeof n&&n&&n.Object===Object&&n,L="object"==typeof self&&self&&self.Object===Object&&self,j=C||L||Function("return this")(),U=t&&!t.nodeType&&t,D=U&&e&&!e.nodeType&&e,B=D&&D.exports===U;function K(e,n){return e.set(n[0],n[1]),e}function F(e,n){return e.add(n),e}function V(e,n,t,l){var r=-1,i=e?e.length:0;for(l&&i&&(t=e[++r]);++r<i;)t=n(t,e[r],r,e);return t}function H(e){var n=!1;if(null!=e&&"function"!=typeof e.toString)try{n=!!(e+"")}catch(e){}return n}function q(e){var n=-1,t=Array(e.size);return e.forEach((function(e,l){t[++n]=[l,e]})),t}function z(e,n){return function(t){return e(n(t))}}function $(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}var G,W=Array.prototype,J=Function.prototype,X=Object.prototype,Y=j["__core-js_shared__"],Q=(G=/[^.]+$/.exec(Y&&Y.keys&&Y.keys.IE_PROTO||""))?"Symbol(src)_1."+G:"",Z=J.toString,ee=X.hasOwnProperty,ne=X.toString,te=RegExp("^"+Z.call(ee).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),le=B?j.Buffer:void 0,re=j.Symbol,ie=j.Uint8Array,ue=z(Object.getPrototypeOf,Object),oe=Object.create,se=X.propertyIsEnumerable,ae=W.splice,ce=Object.getOwnPropertySymbols,he=le?le.isBuffer:void 0,fe=z(Object.keys,Object),de=De(j,"DataView"),pe=De(j,"Map"),ye=De(j,"Promise"),ge=De(j,"Set"),me=De(j,"WeakMap"),ve=De(Object,"create"),be=He(de),we=He(pe),_e=He(ye),Ee=He(ge),Se=He(me),xe=re?re.prototype:void 0,ke=xe?xe.valueOf:void 0;function Ie(e){var n=-1,t=e?e.length:0;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function Pe(e){var n=-1,t=e?e.length:0;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function Ae(e){var n=-1,t=e?e.length:0;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function Te(e){this.__data__=new Pe(e)}function Oe(e,n){var t=ze(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&$e(e)}(e)&&ee.call(e,"callee")&&(!se.call(e,"callee")||ne.call(e)==i)}(e)?function(e,n){for(var t=-1,l=Array(e);++t<e;)l[t]=n(t);return l}(e.length,String):[],l=t.length,r=!!l;for(var u in e)!n&&!ee.call(e,u)||r&&("length"==u||Fe(u,l))||t.push(u);return t}function Me(e,n,t){var l=e[n];ee.call(e,n)&&qe(l,t)&&(void 0!==t||n in e)||(e[n]=t)}function Re(e,n){for(var t=e.length;t--;)if(qe(e[t][0],n))return t;return-1}function Ne(e,n,t,l,r,d,v){var M;if(l&&(M=d?l(e,r,d,v):l(e)),void 0!==M)return M;if(!Je(e))return e;var R=ze(e);if(R){if(M=function(e){var n=e.length,t=e.constructor(n);n&&"string"==typeof e[0]&&ee.call(e,"index")&&(t.index=e.index,t.input=e.input);return t}(e),!n)return function(e,n){var t=-1,l=e.length;n||(n=Array(l));for(;++t<l;)n[t]=e[t];return n}(e,M)}else{var C=Ke(e),L=C==s||C==a;if(Ge(e))return function(e,n){if(n)return e.slice();var t=new e.constructor(e.length);return e.copy(t),t}(e,n);if(C==f||C==i||L&&!d){if(H(e))return d?e:{};if(M=function(e){return"function"!=typeof e.constructor||Ve(e)?{}:(n=ue(e),Je(n)?oe(n):{});var n}(L?{}:e),!n)return function(e,n){return je(e,Be(e),n)}(e,function(e,n){return e&&je(n,Xe(n),e)}(M,e))}else{if(!N[C])return d?e:{};M=function(e,n,t,l){var r=e.constructor;switch(n){case b:return Le(e);case u:case o:return new r(+e);case w:return function(e,n){var t=n?Le(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}(e,l);case _:case E:case S:case x:case k:case I:case P:case A:case T:return function(e,n){var t=n?Le(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}(e,l);case c:return function(e,n,t){return V(n?t(q(e),!0):q(e),K,new e.constructor)}(e,l,t);case h:case g:return new r(e);case p:return function(e){var n=new e.constructor(e.source,O.exec(e));return n.lastIndex=e.lastIndex,n}(e);case y:return function(e,n,t){return V(n?t($(e),!0):$(e),F,new e.constructor)}(e,l,t);case m:return i=e,ke?Object(ke.call(i)):{}}var i}(e,C,Ne,n)}}v||(v=new Te);var j=v.get(e);if(j)return j;if(v.set(e,M),!R)var U=t?function(e){return function(e,n,t){var l=n(e);return ze(e)?l:function(e,n){for(var t=-1,l=n.length,r=e.length;++t<l;)e[r+t]=n[t];return e}(l,t(e))}(e,Xe,Be)}(e):Xe(e);return function(e,n){for(var t=-1,l=e?e.length:0;++t<l&&!1!==n(e[t],t,e););}(U||e,(function(r,i){U&&(r=e[i=r]),Me(M,i,Ne(r,n,t,l,i,e,v))})),M}function Ce(e){return!(!Je(e)||(n=e,Q&&Q in n))&&(We(e)||H(e)?te:M).test(He(e));var n}function Le(e){var n=new e.constructor(e.byteLength);return new ie(n).set(new ie(e)),n}function je(e,n,t,l){t||(t={});for(var r=-1,i=n.length;++r<i;){var u=n[r],o=l?l(t[u],e[u],u,t,e):void 0;Me(t,u,void 0===o?e[u]:o)}return t}function Ue(e,n){var t=e.__data__;return function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}(n)?t["string"==typeof n?"string":"hash"]:t.map}function De(e,n){var t=function(e,n){return null==e?void 0:e[n]}(e,n);return Ce(t)?t:void 0}Ie.prototype.clear=function(){this.__data__=ve?ve(null):{}},Ie.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ie.prototype.get=function(e){var n=this.__data__;if(ve){var t=n[e];return t===l?void 0:t}return ee.call(n,e)?n[e]:void 0},Ie.prototype.has=function(e){var n=this.__data__;return ve?void 0!==n[e]:ee.call(n,e)},Ie.prototype.set=function(e,n){return this.__data__[e]=ve&&void 0===n?l:n,this},Pe.prototype.clear=function(){this.__data__=[]},Pe.prototype.delete=function(e){var n=this.__data__,t=Re(n,e);return!(t<0)&&(t==n.length-1?n.pop():ae.call(n,t,1),!0)},Pe.prototype.get=function(e){var n=this.__data__,t=Re(n,e);return t<0?void 0:n[t][1]},Pe.prototype.has=function(e){return Re(this.__data__,e)>-1},Pe.prototype.set=function(e,n){var t=this.__data__,l=Re(t,e);return l<0?t.push([e,n]):t[l][1]=n,this},Ae.prototype.clear=function(){this.__data__={hash:new Ie,map:new(pe||Pe),string:new Ie}},Ae.prototype.delete=function(e){return Ue(this,e).delete(e)},Ae.prototype.get=function(e){return Ue(this,e).get(e)},Ae.prototype.has=function(e){return Ue(this,e).has(e)},Ae.prototype.set=function(e,n){return Ue(this,e).set(e,n),this},Te.prototype.clear=function(){this.__data__=new Pe},Te.prototype.delete=function(e){return this.__data__.delete(e)},Te.prototype.get=function(e){return this.__data__.get(e)},Te.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.set=function(e,n){var t=this.__data__;if(t instanceof Pe){var l=t.__data__;if(!pe||l.length<199)return l.push([e,n]),this;t=this.__data__=new Ae(l)}return t.set(e,n),this};var Be=ce?z(ce,Object):function(){return[]},Ke=function(e){return ne.call(e)};function Fe(e,n){return!!(n=null==n?r:n)&&("number"==typeof e||R.test(e))&&e>-1&&e%1==0&&e<n}function Ve(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||X)}function He(e){if(null!=e){try{return Z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function qe(e,n){return e===n||e!=e&&n!=n}(de&&Ke(new de(new ArrayBuffer(1)))!=w||pe&&Ke(new pe)!=c||ye&&Ke(ye.resolve())!=d||ge&&Ke(new ge)!=y||me&&Ke(new me)!=v)&&(Ke=function(e){var n=ne.call(e),t=n==f?e.constructor:void 0,l=t?He(t):void 0;if(l)switch(l){case be:return w;case we:return c;case _e:return d;case Ee:return y;case Se:return v}return n});var ze=Array.isArray;function $e(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}(e.length)&&!We(e)}var Ge=he||function(){return!1};function We(e){var n=Je(e)?ne.call(e):"";return n==s||n==a}function Je(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function Xe(e){return $e(e)?Oe(e):function(e){if(!Ve(e))return fe(e);var n=[];for(var t in Object(e))ee.call(e,t)&&"constructor"!=t&&n.push(t);return n}(e)}e.exports=function(e){return Ne(e,!0,!0)}}(ng,ng.exports);var tg=ng.exports;function lg(e){return tg(e)}function rg(e){const n=lg(e);return"proof"in n?function(e){const n=lg(e);if(!Array.isArray(e.proof))return delete n.proof,n;const t=e.proof.find((e=>"ChainedProof2021"!==e.type));return n.proof=t,n}(n):("signature"in n&&delete n.signature,n)}async function ig(e){e["@context"].find((e=>{return(n=e)===Object(n)&&"@vocab"in e;var n}))||e["@context"].push({"@vocab":"http://fallback.org/"});const n=rg(e),t={algorithm:"URDNA2015",format:"application/nquads",documentLoader:function(e){return e in nr?{contextUrl:null,document:nr[e],documentUrl:e}:Jy.documentLoader(e)}};let l;try{l=await Jy.normalize(n,t)}catch(e){throw console.error(e),new mr("computeLocalHash",cr("errors","failedJsonLdNormalization"))}const r=function(e){const n=e.split("\n"),t=/<http:\/\/fallback\.org\/(.*)>/,l=n.map((e=>t.exec(e))).filter((e=>null!=e));if(l.length>0){const e=l.map((e=>e[1])).sort();return Array.from(new Set(e))}return null}(l);if(r)throw new mr("computeLocalHash",`${cr("errors","foundUnmappedFields")}: ${r.join(", ")}`);return Zy(function(e){const n=[];for(let t=0;t<e.length;t++){let l=e.charCodeAt(t);l<128?n.push(l):l<2048?n.push(192|l>>6,128|63&l):l<55296||l>=57344?n.push(224|l>>12,128|l>>6&63,128|63&l):(t++,l=65536+((1023&l)<<10|1023&e.charCodeAt(t)),n.push(240|l>>18,128|l>>12&63,128|l>>6&63,128|63&l))}return n}(l))}const ug=Zc.i18n.getText("errors","identityErrorBaseMessage");class og extends Error{constructor(e){super(e||"This operation is not supported for this key type")}}var sg=og;class ag extends Error{constructor(){super("This has not been implemented yet")}}var cg=ag;var hg=class{constructor(){this.registry=[],this.classes={}}find(e){return this.registry.find(e)}define(e,n){e.forEach((e=>{let{kty:t}=e;if(!t)throw new Error("Invalid type definition");this.classes[t]||(this.classes[t]=n),this.registry.push(e)}))}normalize(e,n,t){let l=this.classes[e],r=this.find((e=>e[n]===t));if(!l||!r)throw new Error("Invalid type");return new l(r)}};const fg=cg;var dg=class{constructor(e){this.params=e}fromPrivatePKCS1(e){throw new fg}fromPrivatePKCS8(e){throw new fg}fromPublicPKCS1(e){throw new fg}fromPublicPKCS8(e){throw new fg}fromPrivateBlk(e){throw new fg}fromPublicBlk(e){throw new fg}fromJwk(e){throw new fg}toPrivatePKCS1(e){throw new fg}toPrivatePKCS8(e){throw new fg}toPublicPKCS1(e){throw new fg}toPublicPKCS8(e){throw new fg}toPrivateBlk(e){throw new fg}toPublicBlk(e){throw new fg}toPrivateJwk(e){throw new fg}toPublicJwk(e){throw new fg}static formatPem(e,n){return`-----BEGIN ${n} KEY-----\n`+e.match(/.{1,64}/g).join("\n")+`\n-----END ${n} KEY-----`}},pg={},yg={exports:{}};!function(e){!function(e,n){function t(e,n){if(!e)throw new Error(n||"Assertion failed")}function l(e,n){e.super_=n;var t=function(){};t.prototype=n.prototype,e.prototype=new t,e.prototype.constructor=e}function r(e,n,t){if(r.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==n&&"be"!==n||(t=n,n=10),this._init(e||0,n||10,t||"be"))}var i;"object"==typeof e?e.exports=r:n.BN=r,r.BN=r,r.wordSize=26;try{i="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:require("buffer").Buffer}catch(e){}function u(e,n){var t=e.charCodeAt(n);return t>=65&&t<=70?t-55:t>=97&&t<=102?t-87:t-48&15}function o(e,n,t){var l=u(e,t);return t-1>=n&&(l|=u(e,t-1)<<4),l}function s(e,n,t,l){for(var r=0,i=Math.min(e.length,t),u=n;u<i;u++){var o=e.charCodeAt(u)-48;r*=l,r+=o>=49?o-49+10:o>=17?o-17+10:o}return r}r.isBN=function(e){return e instanceof r||null!==e&&"object"==typeof e&&e.constructor.wordSize===r.wordSize&&Array.isArray(e.words)},r.max=function(e,n){return e.cmp(n)>0?e:n},r.min=function(e,n){return e.cmp(n)<0?e:n},r.prototype._init=function(e,n,l){if("number"==typeof e)return this._initNumber(e,n,l);if("object"==typeof e)return this._initArray(e,n,l);"hex"===n&&(n=16),t(n===(0|n)&&n>=2&&n<=36);var r=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(r++,this.negative=1),r<e.length&&(16===n?this._parseHex(e,r,l):(this._parseBase(e,n,r),"le"===l&&this._initArray(this.toArray(),n,l)))},r.prototype._initNumber=function(e,n,l){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(t(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===l&&this._initArray(this.toArray(),n,l)},r.prototype._initArray=function(e,n,l){if(t("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var i,u,o=0;if("be"===l)for(r=e.length-1,i=0;r>=0;r-=3)u=e[r]|e[r-1]<<8|e[r-2]<<16,this.words[i]|=u<<o&67108863,this.words[i+1]=u>>>26-o&67108863,(o+=24)>=26&&(o-=26,i++);else if("le"===l)for(r=0,i=0;r<e.length;r+=3)u=e[r]|e[r+1]<<8|e[r+2]<<16,this.words[i]|=u<<o&67108863,this.words[i+1]=u>>>26-o&67108863,(o+=24)>=26&&(o-=26,i++);return this.strip()},r.prototype._parseHex=function(e,n,t){this.length=Math.ceil((e.length-n)/6),this.words=new Array(this.length);for(var l=0;l<this.length;l++)this.words[l]=0;var r,i=0,u=0;if("be"===t)for(l=e.length-1;l>=n;l-=2)r=o(e,n,l)<<i,this.words[u]|=67108863&r,i>=18?(i-=18,u+=1,this.words[u]|=r>>>26):i+=8;else for(l=(e.length-n)%2==0?n+1:n;l<e.length;l+=2)r=o(e,n,l)<<i,this.words[u]|=67108863&r,i>=18?(i-=18,u+=1,this.words[u]|=r>>>26):i+=8;this.strip()},r.prototype._parseBase=function(e,n,t){this.words=[0],this.length=1;for(var l=0,r=1;r<=67108863;r*=n)l++;l--,r=r/n|0;for(var i=e.length-t,u=i%l,o=Math.min(i,i-u)+t,a=0,c=t;c<o;c+=l)a=s(e,c,c+l,n),this.imuln(r),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a);if(0!==u){var h=1;for(a=s(e,c,e.length,n),c=0;c<u;c++)h*=n;this.imuln(h),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a)}this.strip()},r.prototype.copy=function(e){e.words=new Array(this.length);for(var n=0;n<this.length;n++)e.words[n]=this.words[n];e.length=this.length,e.negative=this.negative,e.red=this.red},r.prototype.clone=function(){var e=new r(null);return this.copy(e),e},r.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},r.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},r.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},r.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var a=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],c=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],h=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(e,n,t){t.negative=n.negative^e.negative;var l=e.length+n.length|0;t.length=l,l=l-1|0;var r=0|e.words[0],i=0|n.words[0],u=r*i,o=67108863&u,s=u/67108864|0;t.words[0]=o;for(var a=1;a<l;a++){for(var c=s>>>26,h=67108863&s,f=Math.min(a,n.length-1),d=Math.max(0,a-e.length+1);d<=f;d++){var p=a-d|0;c+=(u=(r=0|e.words[p])*(i=0|n.words[d])+h)/67108864|0,h=67108863&u}t.words[a]=0|h,s=0|c}return 0!==s?t.words[a]=0|s:t.length--,t.strip()}r.prototype.toString=function(e,n){var l;if(n=0|n||1,16===(e=e||10)||"hex"===e){l="";for(var r=0,i=0,u=0;u<this.length;u++){var o=this.words[u],s=(16777215&(o<<r|i)).toString(16);l=0!==(i=o>>>24-r&16777215)||u!==this.length-1?a[6-s.length]+s+l:s+l,(r+=2)>=26&&(r-=26,u--)}for(0!==i&&(l=i.toString(16)+l);l.length%n!=0;)l="0"+l;return 0!==this.negative&&(l="-"+l),l}if(e===(0|e)&&e>=2&&e<=36){var f=c[e],d=h[e];l="";var p=this.clone();for(p.negative=0;!p.isZero();){var y=p.modn(d).toString(e);l=(p=p.idivn(d)).isZero()?y+l:a[f-y.length]+y+l}for(this.isZero()&&(l="0"+l);l.length%n!=0;)l="0"+l;return 0!==this.negative&&(l="-"+l),l}t(!1,"Base should be between 2 and 36")},r.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&t(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},r.prototype.toJSON=function(){return this.toString(16)},r.prototype.toBuffer=function(e,n){return t(void 0!==i),this.toArrayLike(i,e,n)},r.prototype.toArray=function(e,n){return this.toArrayLike(Array,e,n)},r.prototype.toArrayLike=function(e,n,l){var r=this.byteLength(),i=l||Math.max(1,r);t(r<=i,"byte array longer than desired length"),t(i>0,"Requested array length <= 0"),this.strip();var u,o,s="le"===n,a=new e(i),c=this.clone();if(s){for(o=0;!c.isZero();o++)u=c.andln(255),c.iushrn(8),a[o]=u;for(;o<i;o++)a[o]=0}else{for(o=0;o<i-r;o++)a[o]=0;for(o=0;!c.isZero();o++)u=c.andln(255),c.iushrn(8),a[i-o-1]=u}return a},Math.clz32?r.prototype._countBits=function(e){return 32-Math.clz32(e)}:r.prototype._countBits=function(e){var n=e,t=0;return n>=4096&&(t+=13,n>>>=13),n>=64&&(t+=7,n>>>=7),n>=8&&(t+=4,n>>>=4),n>=2&&(t+=2,n>>>=2),t+n},r.prototype._zeroBits=function(e){if(0===e)return 26;var n=e,t=0;return 0==(8191&n)&&(t+=13,n>>>=13),0==(127&n)&&(t+=7,n>>>=7),0==(15&n)&&(t+=4,n>>>=4),0==(3&n)&&(t+=2,n>>>=2),0==(1&n)&&t++,t},r.prototype.bitLength=function(){var e=this.words[this.length-1],n=this._countBits(e);return 26*(this.length-1)+n},r.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,n=0;n<this.length;n++){var t=this._zeroBits(this.words[n]);if(e+=t,26!==t)break}return e},r.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},r.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},r.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},r.prototype.isNeg=function(){return 0!==this.negative},r.prototype.neg=function(){return this.clone().ineg()},r.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},r.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var n=0;n<e.length;n++)this.words[n]=this.words[n]|e.words[n];return this.strip()},r.prototype.ior=function(e){return t(0==(this.negative|e.negative)),this.iuor(e)},r.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},r.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},r.prototype.iuand=function(e){var n;n=this.length>e.length?e:this;for(var t=0;t<n.length;t++)this.words[t]=this.words[t]&e.words[t];return this.length=n.length,this.strip()},r.prototype.iand=function(e){return t(0==(this.negative|e.negative)),this.iuand(e)},r.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},r.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},r.prototype.iuxor=function(e){var n,t;this.length>e.length?(n=this,t=e):(n=e,t=this);for(var l=0;l<t.length;l++)this.words[l]=n.words[l]^t.words[l];if(this!==n)for(;l<n.length;l++)this.words[l]=n.words[l];return this.length=n.length,this.strip()},r.prototype.ixor=function(e){return t(0==(this.negative|e.negative)),this.iuxor(e)},r.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},r.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},r.prototype.inotn=function(e){t("number"==typeof e&&e>=0);var n=0|Math.ceil(e/26),l=e%26;this._expand(n),l>0&&n--;for(var r=0;r<n;r++)this.words[r]=67108863&~this.words[r];return l>0&&(this.words[r]=~this.words[r]&67108863>>26-l),this.strip()},r.prototype.notn=function(e){return this.clone().inotn(e)},r.prototype.setn=function(e,n){t("number"==typeof e&&e>=0);var l=e/26|0,r=e%26;return this._expand(l+1),this.words[l]=n?this.words[l]|1<<r:this.words[l]&~(1<<r),this.strip()},r.prototype.iadd=function(e){var n,t,l;if(0!==this.negative&&0===e.negative)return this.negative=0,n=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,n=this.isub(e),e.negative=1,n._normSign();this.length>e.length?(t=this,l=e):(t=e,l=this);for(var r=0,i=0;i<l.length;i++)n=(0|t.words[i])+(0|l.words[i])+r,this.words[i]=67108863&n,r=n>>>26;for(;0!==r&&i<t.length;i++)n=(0|t.words[i])+r,this.words[i]=67108863&n,r=n>>>26;if(this.length=t.length,0!==r)this.words[this.length]=r,this.length++;else if(t!==this)for(;i<t.length;i++)this.words[i]=t.words[i];return this},r.prototype.add=function(e){var n;return 0!==e.negative&&0===this.negative?(e.negative=0,n=this.sub(e),e.negative^=1,n):0===e.negative&&0!==this.negative?(this.negative=0,n=e.sub(this),this.negative=1,n):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},r.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var n=this.iadd(e);return e.negative=1,n._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var t,l,r=this.cmp(e);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;r>0?(t=this,l=e):(t=e,l=this);for(var i=0,u=0;u<l.length;u++)i=(n=(0|t.words[u])-(0|l.words[u])+i)>>26,this.words[u]=67108863&n;for(;0!==i&&u<t.length;u++)i=(n=(0|t.words[u])+i)>>26,this.words[u]=67108863&n;if(0===i&&u<t.length&&t!==this)for(;u<t.length;u++)this.words[u]=t.words[u];return this.length=Math.max(this.length,u),t!==this&&(this.negative=1),this.strip()},r.prototype.sub=function(e){return this.clone().isub(e)};var d=function(e,n,t){var l,r,i,u=e.words,o=n.words,s=t.words,a=0,c=0|u[0],h=8191&c,f=c>>>13,d=0|u[1],p=8191&d,y=d>>>13,g=0|u[2],m=8191&g,v=g>>>13,b=0|u[3],w=8191&b,_=b>>>13,E=0|u[4],S=8191&E,x=E>>>13,k=0|u[5],I=8191&k,P=k>>>13,A=0|u[6],T=8191&A,O=A>>>13,M=0|u[7],R=8191&M,N=M>>>13,C=0|u[8],L=8191&C,j=C>>>13,U=0|u[9],D=8191&U,B=U>>>13,K=0|o[0],F=8191&K,V=K>>>13,H=0|o[1],q=8191&H,z=H>>>13,$=0|o[2],G=8191&$,W=$>>>13,J=0|o[3],X=8191&J,Y=J>>>13,Q=0|o[4],Z=8191&Q,ee=Q>>>13,ne=0|o[5],te=8191&ne,le=ne>>>13,re=0|o[6],ie=8191&re,ue=re>>>13,oe=0|o[7],se=8191&oe,ae=oe>>>13,ce=0|o[8],he=8191&ce,fe=ce>>>13,de=0|o[9],pe=8191&de,ye=de>>>13;t.negative=e.negative^n.negative,t.length=19;var ge=(a+(l=Math.imul(h,F))|0)+((8191&(r=(r=Math.imul(h,V))+Math.imul(f,F)|0))<<13)|0;a=((i=Math.imul(f,V))+(r>>>13)|0)+(ge>>>26)|0,ge&=67108863,l=Math.imul(p,F),r=(r=Math.imul(p,V))+Math.imul(y,F)|0,i=Math.imul(y,V);var me=(a+(l=l+Math.imul(h,q)|0)|0)+((8191&(r=(r=r+Math.imul(h,z)|0)+Math.imul(f,q)|0))<<13)|0;a=((i=i+Math.imul(f,z)|0)+(r>>>13)|0)+(me>>>26)|0,me&=67108863,l=Math.imul(m,F),r=(r=Math.imul(m,V))+Math.imul(v,F)|0,i=Math.imul(v,V),l=l+Math.imul(p,q)|0,r=(r=r+Math.imul(p,z)|0)+Math.imul(y,q)|0,i=i+Math.imul(y,z)|0;var ve=(a+(l=l+Math.imul(h,G)|0)|0)+((8191&(r=(r=r+Math.imul(h,W)|0)+Math.imul(f,G)|0))<<13)|0;a=((i=i+Math.imul(f,W)|0)+(r>>>13)|0)+(ve>>>26)|0,ve&=67108863,l=Math.imul(w,F),r=(r=Math.imul(w,V))+Math.imul(_,F)|0,i=Math.imul(_,V),l=l+Math.imul(m,q)|0,r=(r=r+Math.imul(m,z)|0)+Math.imul(v,q)|0,i=i+Math.imul(v,z)|0,l=l+Math.imul(p,G)|0,r=(r=r+Math.imul(p,W)|0)+Math.imul(y,G)|0,i=i+Math.imul(y,W)|0;var be=(a+(l=l+Math.imul(h,X)|0)|0)+((8191&(r=(r=r+Math.imul(h,Y)|0)+Math.imul(f,X)|0))<<13)|0;a=((i=i+Math.imul(f,Y)|0)+(r>>>13)|0)+(be>>>26)|0,be&=67108863,l=Math.imul(S,F),r=(r=Math.imul(S,V))+Math.imul(x,F)|0,i=Math.imul(x,V),l=l+Math.imul(w,q)|0,r=(r=r+Math.imul(w,z)|0)+Math.imul(_,q)|0,i=i+Math.imul(_,z)|0,l=l+Math.imul(m,G)|0,r=(r=r+Math.imul(m,W)|0)+Math.imul(v,G)|0,i=i+Math.imul(v,W)|0,l=l+Math.imul(p,X)|0,r=(r=r+Math.imul(p,Y)|0)+Math.imul(y,X)|0,i=i+Math.imul(y,Y)|0;var we=(a+(l=l+Math.imul(h,Z)|0)|0)+((8191&(r=(r=r+Math.imul(h,ee)|0)+Math.imul(f,Z)|0))<<13)|0;a=((i=i+Math.imul(f,ee)|0)+(r>>>13)|0)+(we>>>26)|0,we&=67108863,l=Math.imul(I,F),r=(r=Math.imul(I,V))+Math.imul(P,F)|0,i=Math.imul(P,V),l=l+Math.imul(S,q)|0,r=(r=r+Math.imul(S,z)|0)+Math.imul(x,q)|0,i=i+Math.imul(x,z)|0,l=l+Math.imul(w,G)|0,r=(r=r+Math.imul(w,W)|0)+Math.imul(_,G)|0,i=i+Math.imul(_,W)|0,l=l+Math.imul(m,X)|0,r=(r=r+Math.imul(m,Y)|0)+Math.imul(v,X)|0,i=i+Math.imul(v,Y)|0,l=l+Math.imul(p,Z)|0,r=(r=r+Math.imul(p,ee)|0)+Math.imul(y,Z)|0,i=i+Math.imul(y,ee)|0;var _e=(a+(l=l+Math.imul(h,te)|0)|0)+((8191&(r=(r=r+Math.imul(h,le)|0)+Math.imul(f,te)|0))<<13)|0;a=((i=i+Math.imul(f,le)|0)+(r>>>13)|0)+(_e>>>26)|0,_e&=67108863,l=Math.imul(T,F),r=(r=Math.imul(T,V))+Math.imul(O,F)|0,i=Math.imul(O,V),l=l+Math.imul(I,q)|0,r=(r=r+Math.imul(I,z)|0)+Math.imul(P,q)|0,i=i+Math.imul(P,z)|0,l=l+Math.imul(S,G)|0,r=(r=r+Math.imul(S,W)|0)+Math.imul(x,G)|0,i=i+Math.imul(x,W)|0,l=l+Math.imul(w,X)|0,r=(r=r+Math.imul(w,Y)|0)+Math.imul(_,X)|0,i=i+Math.imul(_,Y)|0,l=l+Math.imul(m,Z)|0,r=(r=r+Math.imul(m,ee)|0)+Math.imul(v,Z)|0,i=i+Math.imul(v,ee)|0,l=l+Math.imul(p,te)|0,r=(r=r+Math.imul(p,le)|0)+Math.imul(y,te)|0,i=i+Math.imul(y,le)|0;var Ee=(a+(l=l+Math.imul(h,ie)|0)|0)+((8191&(r=(r=r+Math.imul(h,ue)|0)+Math.imul(f,ie)|0))<<13)|0;a=((i=i+Math.imul(f,ue)|0)+(r>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,l=Math.imul(R,F),r=(r=Math.imul(R,V))+Math.imul(N,F)|0,i=Math.imul(N,V),l=l+Math.imul(T,q)|0,r=(r=r+Math.imul(T,z)|0)+Math.imul(O,q)|0,i=i+Math.imul(O,z)|0,l=l+Math.imul(I,G)|0,r=(r=r+Math.imul(I,W)|0)+Math.imul(P,G)|0,i=i+Math.imul(P,W)|0,l=l+Math.imul(S,X)|0,r=(r=r+Math.imul(S,Y)|0)+Math.imul(x,X)|0,i=i+Math.imul(x,Y)|0,l=l+Math.imul(w,Z)|0,r=(r=r+Math.imul(w,ee)|0)+Math.imul(_,Z)|0,i=i+Math.imul(_,ee)|0,l=l+Math.imul(m,te)|0,r=(r=r+Math.imul(m,le)|0)+Math.imul(v,te)|0,i=i+Math.imul(v,le)|0,l=l+Math.imul(p,ie)|0,r=(r=r+Math.imul(p,ue)|0)+Math.imul(y,ie)|0,i=i+Math.imul(y,ue)|0;var Se=(a+(l=l+Math.imul(h,se)|0)|0)+((8191&(r=(r=r+Math.imul(h,ae)|0)+Math.imul(f,se)|0))<<13)|0;a=((i=i+Math.imul(f,ae)|0)+(r>>>13)|0)+(Se>>>26)|0,Se&=67108863,l=Math.imul(L,F),r=(r=Math.imul(L,V))+Math.imul(j,F)|0,i=Math.imul(j,V),l=l+Math.imul(R,q)|0,r=(r=r+Math.imul(R,z)|0)+Math.imul(N,q)|0,i=i+Math.imul(N,z)|0,l=l+Math.imul(T,G)|0,r=(r=r+Math.imul(T,W)|0)+Math.imul(O,G)|0,i=i+Math.imul(O,W)|0,l=l+Math.imul(I,X)|0,r=(r=r+Math.imul(I,Y)|0)+Math.imul(P,X)|0,i=i+Math.imul(P,Y)|0,l=l+Math.imul(S,Z)|0,r=(r=r+Math.imul(S,ee)|0)+Math.imul(x,Z)|0,i=i+Math.imul(x,ee)|0,l=l+Math.imul(w,te)|0,r=(r=r+Math.imul(w,le)|0)+Math.imul(_,te)|0,i=i+Math.imul(_,le)|0,l=l+Math.imul(m,ie)|0,r=(r=r+Math.imul(m,ue)|0)+Math.imul(v,ie)|0,i=i+Math.imul(v,ue)|0,l=l+Math.imul(p,se)|0,r=(r=r+Math.imul(p,ae)|0)+Math.imul(y,se)|0,i=i+Math.imul(y,ae)|0;var xe=(a+(l=l+Math.imul(h,he)|0)|0)+((8191&(r=(r=r+Math.imul(h,fe)|0)+Math.imul(f,he)|0))<<13)|0;a=((i=i+Math.imul(f,fe)|0)+(r>>>13)|0)+(xe>>>26)|0,xe&=67108863,l=Math.imul(D,F),r=(r=Math.imul(D,V))+Math.imul(B,F)|0,i=Math.imul(B,V),l=l+Math.imul(L,q)|0,r=(r=r+Math.imul(L,z)|0)+Math.imul(j,q)|0,i=i+Math.imul(j,z)|0,l=l+Math.imul(R,G)|0,r=(r=r+Math.imul(R,W)|0)+Math.imul(N,G)|0,i=i+Math.imul(N,W)|0,l=l+Math.imul(T,X)|0,r=(r=r+Math.imul(T,Y)|0)+Math.imul(O,X)|0,i=i+Math.imul(O,Y)|0,l=l+Math.imul(I,Z)|0,r=(r=r+Math.imul(I,ee)|0)+Math.imul(P,Z)|0,i=i+Math.imul(P,ee)|0,l=l+Math.imul(S,te)|0,r=(r=r+Math.imul(S,le)|0)+Math.imul(x,te)|0,i=i+Math.imul(x,le)|0,l=l+Math.imul(w,ie)|0,r=(r=r+Math.imul(w,ue)|0)+Math.imul(_,ie)|0,i=i+Math.imul(_,ue)|0,l=l+Math.imul(m,se)|0,r=(r=r+Math.imul(m,ae)|0)+Math.imul(v,se)|0,i=i+Math.imul(v,ae)|0,l=l+Math.imul(p,he)|0,r=(r=r+Math.imul(p,fe)|0)+Math.imul(y,he)|0,i=i+Math.imul(y,fe)|0;var ke=(a+(l=l+Math.imul(h,pe)|0)|0)+((8191&(r=(r=r+Math.imul(h,ye)|0)+Math.imul(f,pe)|0))<<13)|0;a=((i=i+Math.imul(f,ye)|0)+(r>>>13)|0)+(ke>>>26)|0,ke&=67108863,l=Math.imul(D,q),r=(r=Math.imul(D,z))+Math.imul(B,q)|0,i=Math.imul(B,z),l=l+Math.imul(L,G)|0,r=(r=r+Math.imul(L,W)|0)+Math.imul(j,G)|0,i=i+Math.imul(j,W)|0,l=l+Math.imul(R,X)|0,r=(r=r+Math.imul(R,Y)|0)+Math.imul(N,X)|0,i=i+Math.imul(N,Y)|0,l=l+Math.imul(T,Z)|0,r=(r=r+Math.imul(T,ee)|0)+Math.imul(O,Z)|0,i=i+Math.imul(O,ee)|0,l=l+Math.imul(I,te)|0,r=(r=r+Math.imul(I,le)|0)+Math.imul(P,te)|0,i=i+Math.imul(P,le)|0,l=l+Math.imul(S,ie)|0,r=(r=r+Math.imul(S,ue)|0)+Math.imul(x,ie)|0,i=i+Math.imul(x,ue)|0,l=l+Math.imul(w,se)|0,r=(r=r+Math.imul(w,ae)|0)+Math.imul(_,se)|0,i=i+Math.imul(_,ae)|0,l=l+Math.imul(m,he)|0,r=(r=r+Math.imul(m,fe)|0)+Math.imul(v,he)|0,i=i+Math.imul(v,fe)|0;var Ie=(a+(l=l+Math.imul(p,pe)|0)|0)+((8191&(r=(r=r+Math.imul(p,ye)|0)+Math.imul(y,pe)|0))<<13)|0;a=((i=i+Math.imul(y,ye)|0)+(r>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,l=Math.imul(D,G),r=(r=Math.imul(D,W))+Math.imul(B,G)|0,i=Math.imul(B,W),l=l+Math.imul(L,X)|0,r=(r=r+Math.imul(L,Y)|0)+Math.imul(j,X)|0,i=i+Math.imul(j,Y)|0,l=l+Math.imul(R,Z)|0,r=(r=r+Math.imul(R,ee)|0)+Math.imul(N,Z)|0,i=i+Math.imul(N,ee)|0,l=l+Math.imul(T,te)|0,r=(r=r+Math.imul(T,le)|0)+Math.imul(O,te)|0,i=i+Math.imul(O,le)|0,l=l+Math.imul(I,ie)|0,r=(r=r+Math.imul(I,ue)|0)+Math.imul(P,ie)|0,i=i+Math.imul(P,ue)|0,l=l+Math.imul(S,se)|0,r=(r=r+Math.imul(S,ae)|0)+Math.imul(x,se)|0,i=i+Math.imul(x,ae)|0,l=l+Math.imul(w,he)|0,r=(r=r+Math.imul(w,fe)|0)+Math.imul(_,he)|0,i=i+Math.imul(_,fe)|0;var Pe=(a+(l=l+Math.imul(m,pe)|0)|0)+((8191&(r=(r=r+Math.imul(m,ye)|0)+Math.imul(v,pe)|0))<<13)|0;a=((i=i+Math.imul(v,ye)|0)+(r>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,l=Math.imul(D,X),r=(r=Math.imul(D,Y))+Math.imul(B,X)|0,i=Math.imul(B,Y),l=l+Math.imul(L,Z)|0,r=(r=r+Math.imul(L,ee)|0)+Math.imul(j,Z)|0,i=i+Math.imul(j,ee)|0,l=l+Math.imul(R,te)|0,r=(r=r+Math.imul(R,le)|0)+Math.imul(N,te)|0,i=i+Math.imul(N,le)|0,l=l+Math.imul(T,ie)|0,r=(r=r+Math.imul(T,ue)|0)+Math.imul(O,ie)|0,i=i+Math.imul(O,ue)|0,l=l+Math.imul(I,se)|0,r=(r=r+Math.imul(I,ae)|0)+Math.imul(P,se)|0,i=i+Math.imul(P,ae)|0,l=l+Math.imul(S,he)|0,r=(r=r+Math.imul(S,fe)|0)+Math.imul(x,he)|0,i=i+Math.imul(x,fe)|0;var Ae=(a+(l=l+Math.imul(w,pe)|0)|0)+((8191&(r=(r=r+Math.imul(w,ye)|0)+Math.imul(_,pe)|0))<<13)|0;a=((i=i+Math.imul(_,ye)|0)+(r>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,l=Math.imul(D,Z),r=(r=Math.imul(D,ee))+Math.imul(B,Z)|0,i=Math.imul(B,ee),l=l+Math.imul(L,te)|0,r=(r=r+Math.imul(L,le)|0)+Math.imul(j,te)|0,i=i+Math.imul(j,le)|0,l=l+Math.imul(R,ie)|0,r=(r=r+Math.imul(R,ue)|0)+Math.imul(N,ie)|0,i=i+Math.imul(N,ue)|0,l=l+Math.imul(T,se)|0,r=(r=r+Math.imul(T,ae)|0)+Math.imul(O,se)|0,i=i+Math.imul(O,ae)|0,l=l+Math.imul(I,he)|0,r=(r=r+Math.imul(I,fe)|0)+Math.imul(P,he)|0,i=i+Math.imul(P,fe)|0;var Te=(a+(l=l+Math.imul(S,pe)|0)|0)+((8191&(r=(r=r+Math.imul(S,ye)|0)+Math.imul(x,pe)|0))<<13)|0;a=((i=i+Math.imul(x,ye)|0)+(r>>>13)|0)+(Te>>>26)|0,Te&=67108863,l=Math.imul(D,te),r=(r=Math.imul(D,le))+Math.imul(B,te)|0,i=Math.imul(B,le),l=l+Math.imul(L,ie)|0,r=(r=r+Math.imul(L,ue)|0)+Math.imul(j,ie)|0,i=i+Math.imul(j,ue)|0,l=l+Math.imul(R,se)|0,r=(r=r+Math.imul(R,ae)|0)+Math.imul(N,se)|0,i=i+Math.imul(N,ae)|0,l=l+Math.imul(T,he)|0,r=(r=r+Math.imul(T,fe)|0)+Math.imul(O,he)|0,i=i+Math.imul(O,fe)|0;var Oe=(a+(l=l+Math.imul(I,pe)|0)|0)+((8191&(r=(r=r+Math.imul(I,ye)|0)+Math.imul(P,pe)|0))<<13)|0;a=((i=i+Math.imul(P,ye)|0)+(r>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,l=Math.imul(D,ie),r=(r=Math.imul(D,ue))+Math.imul(B,ie)|0,i=Math.imul(B,ue),l=l+Math.imul(L,se)|0,r=(r=r+Math.imul(L,ae)|0)+Math.imul(j,se)|0,i=i+Math.imul(j,ae)|0,l=l+Math.imul(R,he)|0,r=(r=r+Math.imul(R,fe)|0)+Math.imul(N,he)|0,i=i+Math.imul(N,fe)|0;var Me=(a+(l=l+Math.imul(T,pe)|0)|0)+((8191&(r=(r=r+Math.imul(T,ye)|0)+Math.imul(O,pe)|0))<<13)|0;a=((i=i+Math.imul(O,ye)|0)+(r>>>13)|0)+(Me>>>26)|0,Me&=67108863,l=Math.imul(D,se),r=(r=Math.imul(D,ae))+Math.imul(B,se)|0,i=Math.imul(B,ae),l=l+Math.imul(L,he)|0,r=(r=r+Math.imul(L,fe)|0)+Math.imul(j,he)|0,i=i+Math.imul(j,fe)|0;var Re=(a+(l=l+Math.imul(R,pe)|0)|0)+((8191&(r=(r=r+Math.imul(R,ye)|0)+Math.imul(N,pe)|0))<<13)|0;a=((i=i+Math.imul(N,ye)|0)+(r>>>13)|0)+(Re>>>26)|0,Re&=67108863,l=Math.imul(D,he),r=(r=Math.imul(D,fe))+Math.imul(B,he)|0,i=Math.imul(B,fe);var Ne=(a+(l=l+Math.imul(L,pe)|0)|0)+((8191&(r=(r=r+Math.imul(L,ye)|0)+Math.imul(j,pe)|0))<<13)|0;a=((i=i+Math.imul(j,ye)|0)+(r>>>13)|0)+(Ne>>>26)|0,Ne&=67108863;var Ce=(a+(l=Math.imul(D,pe))|0)+((8191&(r=(r=Math.imul(D,ye))+Math.imul(B,pe)|0))<<13)|0;return a=((i=Math.imul(B,ye))+(r>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,s[0]=ge,s[1]=me,s[2]=ve,s[3]=be,s[4]=we,s[5]=_e,s[6]=Ee,s[7]=Se,s[8]=xe,s[9]=ke,s[10]=Ie,s[11]=Pe,s[12]=Ae,s[13]=Te,s[14]=Oe,s[15]=Me,s[16]=Re,s[17]=Ne,s[18]=Ce,0!==a&&(s[19]=a,t.length++),t};function p(e,n,t){return(new y).mulp(e,n,t)}function y(e,n){this.x=e,this.y=n}Math.imul||(d=f),r.prototype.mulTo=function(e,n){var t,l=this.length+e.length;return t=10===this.length&&10===e.length?d(this,e,n):l<63?f(this,e,n):l<1024?function(e,n,t){t.negative=n.negative^e.negative,t.length=e.length+n.length;for(var l=0,r=0,i=0;i<t.length-1;i++){var u=r;r=0;for(var o=67108863&l,s=Math.min(i,n.length-1),a=Math.max(0,i-e.length+1);a<=s;a++){var c=i-a,h=(0|e.words[c])*(0|n.words[a]),f=67108863&h;o=67108863&(f=f+o|0),r+=(u=(u=u+(h/67108864|0)|0)+(f>>>26)|0)>>>26,u&=67108863}t.words[i]=o,l=u,u=r}return 0!==l?t.words[i]=l:t.length--,t.strip()}(this,e,n):p(this,e,n),t},y.prototype.makeRBT=function(e){for(var n=new Array(e),t=r.prototype._countBits(e)-1,l=0;l<e;l++)n[l]=this.revBin(l,t,e);return n},y.prototype.revBin=function(e,n,t){if(0===e||e===t-1)return e;for(var l=0,r=0;r<n;r++)l|=(1&e)<<n-r-1,e>>=1;return l},y.prototype.permute=function(e,n,t,l,r,i){for(var u=0;u<i;u++)l[u]=n[e[u]],r[u]=t[e[u]]},y.prototype.transform=function(e,n,t,l,r,i){this.permute(i,e,n,t,l,r);for(var u=1;u<r;u<<=1)for(var o=u<<1,s=Math.cos(2*Math.PI/o),a=Math.sin(2*Math.PI/o),c=0;c<r;c+=o)for(var h=s,f=a,d=0;d<u;d++){var p=t[c+d],y=l[c+d],g=t[c+d+u],m=l[c+d+u],v=h*g-f*m;m=h*m+f*g,g=v,t[c+d]=p+g,l[c+d]=y+m,t[c+d+u]=p-g,l[c+d+u]=y-m,d!==o&&(v=s*h-a*f,f=s*f+a*h,h=v)}},y.prototype.guessLen13b=function(e,n){var t=1|Math.max(n,e),l=1&t,r=0;for(t=t/2|0;t;t>>>=1)r++;return 1<<r+1+l},y.prototype.conjugate=function(e,n,t){if(!(t<=1))for(var l=0;l<t/2;l++){var r=e[l];e[l]=e[t-l-1],e[t-l-1]=r,r=n[l],n[l]=-n[t-l-1],n[t-l-1]=-r}},y.prototype.normalize13b=function(e,n){for(var t=0,l=0;l<n/2;l++){var r=8192*Math.round(e[2*l+1]/n)+Math.round(e[2*l]/n)+t;e[l]=67108863&r,t=r<67108864?0:r/67108864|0}return e},y.prototype.convert13b=function(e,n,l,r){for(var i=0,u=0;u<n;u++)i+=0|e[u],l[2*u]=8191&i,i>>>=13,l[2*u+1]=8191&i,i>>>=13;for(u=2*n;u<r;++u)l[u]=0;t(0===i),t(0==(-8192&i))},y.prototype.stub=function(e){for(var n=new Array(e),t=0;t<e;t++)n[t]=0;return n},y.prototype.mulp=function(e,n,t){var l=2*this.guessLen13b(e.length,n.length),r=this.makeRBT(l),i=this.stub(l),u=new Array(l),o=new Array(l),s=new Array(l),a=new Array(l),c=new Array(l),h=new Array(l),f=t.words;f.length=l,this.convert13b(e.words,e.length,u,l),this.convert13b(n.words,n.length,a,l),this.transform(u,i,o,s,l,r),this.transform(a,i,c,h,l,r);for(var d=0;d<l;d++){var p=o[d]*c[d]-s[d]*h[d];s[d]=o[d]*h[d]+s[d]*c[d],o[d]=p}return this.conjugate(o,s,l),this.transform(o,s,f,i,l,r),this.conjugate(f,i,l),this.normalize13b(f,l),t.negative=e.negative^n.negative,t.length=e.length+n.length,t.strip()},r.prototype.mul=function(e){var n=new r(null);return n.words=new Array(this.length+e.length),this.mulTo(e,n)},r.prototype.mulf=function(e){var n=new r(null);return n.words=new Array(this.length+e.length),p(this,e,n)},r.prototype.imul=function(e){return this.clone().mulTo(e,this)},r.prototype.imuln=function(e){t("number"==typeof e),t(e<67108864);for(var n=0,l=0;l<this.length;l++){var r=(0|this.words[l])*e,i=(67108863&r)+(67108863&n);n>>=26,n+=r/67108864|0,n+=i>>>26,this.words[l]=67108863&i}return 0!==n&&(this.words[l]=n,this.length++),this},r.prototype.muln=function(e){return this.clone().imuln(e)},r.prototype.sqr=function(){return this.mul(this)},r.prototype.isqr=function(){return this.imul(this.clone())},r.prototype.pow=function(e){var n=function(e){for(var n=new Array(e.bitLength()),t=0;t<n.length;t++){var l=t/26|0,r=t%26;n[t]=(e.words[l]&1<<r)>>>r}return n}(e);if(0===n.length)return new r(1);for(var t=this,l=0;l<n.length&&0===n[l];l++,t=t.sqr());if(++l<n.length)for(var i=t.sqr();l<n.length;l++,i=i.sqr())0!==n[l]&&(t=t.mul(i));return t},r.prototype.iushln=function(e){t("number"==typeof e&&e>=0);var n,l=e%26,r=(e-l)/26,i=67108863>>>26-l<<26-l;if(0!==l){var u=0;for(n=0;n<this.length;n++){var o=this.words[n]&i,s=(0|this.words[n])-o<<l;this.words[n]=s|u,u=o>>>26-l}u&&(this.words[n]=u,this.length++)}if(0!==r){for(n=this.length-1;n>=0;n--)this.words[n+r]=this.words[n];for(n=0;n<r;n++)this.words[n]=0;this.length+=r}return this.strip()},r.prototype.ishln=function(e){return t(0===this.negative),this.iushln(e)},r.prototype.iushrn=function(e,n,l){var r;t("number"==typeof e&&e>=0),r=n?(n-n%26)/26:0;var i=e%26,u=Math.min((e-i)/26,this.length),o=67108863^67108863>>>i<<i,s=l;if(r-=u,r=Math.max(0,r),s){for(var a=0;a<u;a++)s.words[a]=this.words[a];s.length=u}if(0===u);else if(this.length>u)for(this.length-=u,a=0;a<this.length;a++)this.words[a]=this.words[a+u];else this.words[0]=0,this.length=1;var c=0;for(a=this.length-1;a>=0&&(0!==c||a>=r);a--){var h=0|this.words[a];this.words[a]=c<<26-i|h>>>i,c=h&o}return s&&0!==c&&(s.words[s.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},r.prototype.ishrn=function(e,n,l){return t(0===this.negative),this.iushrn(e,n,l)},r.prototype.shln=function(e){return this.clone().ishln(e)},r.prototype.ushln=function(e){return this.clone().iushln(e)},r.prototype.shrn=function(e){return this.clone().ishrn(e)},r.prototype.ushrn=function(e){return this.clone().iushrn(e)},r.prototype.testn=function(e){t("number"==typeof e&&e>=0);var n=e%26,l=(e-n)/26,r=1<<n;return!(this.length<=l)&&!!(this.words[l]&r)},r.prototype.imaskn=function(e){t("number"==typeof e&&e>=0);var n=e%26,l=(e-n)/26;if(t(0===this.negative,"imaskn works only with positive numbers"),this.length<=l)return this;if(0!==n&&l++,this.length=Math.min(l,this.length),0!==n){var r=67108863^67108863>>>n<<n;this.words[this.length-1]&=r}return this.strip()},r.prototype.maskn=function(e){return this.clone().imaskn(e)},r.prototype.iaddn=function(e){return t("number"==typeof e),t(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},r.prototype._iaddn=function(e){this.words[0]+=e;for(var n=0;n<this.length&&this.words[n]>=67108864;n++)this.words[n]-=67108864,n===this.length-1?this.words[n+1]=1:this.words[n+1]++;return this.length=Math.max(this.length,n+1),this},r.prototype.isubn=function(e){if(t("number"==typeof e),t(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var n=0;n<this.length&&this.words[n]<0;n++)this.words[n]+=67108864,this.words[n+1]-=1;return this.strip()},r.prototype.addn=function(e){return this.clone().iaddn(e)},r.prototype.subn=function(e){return this.clone().isubn(e)},r.prototype.iabs=function(){return this.negative=0,this},r.prototype.abs=function(){return this.clone().iabs()},r.prototype._ishlnsubmul=function(e,n,l){var r,i,u=e.length+l;this._expand(u);var o=0;for(r=0;r<e.length;r++){i=(0|this.words[r+l])+o;var s=(0|e.words[r])*n;o=((i-=67108863&s)>>26)-(s/67108864|0),this.words[r+l]=67108863&i}for(;r<this.length-l;r++)o=(i=(0|this.words[r+l])+o)>>26,this.words[r+l]=67108863&i;if(0===o)return this.strip();for(t(-1===o),o=0,r=0;r<this.length;r++)o=(i=-(0|this.words[r])+o)>>26,this.words[r]=67108863&i;return this.negative=1,this.strip()},r.prototype._wordDiv=function(e,n){var t=(this.length,e.length),l=this.clone(),i=e,u=0|i.words[i.length-1];0!==(t=26-this._countBits(u))&&(i=i.ushln(t),l.iushln(t),u=0|i.words[i.length-1]);var o,s=l.length-i.length;if("mod"!==n){(o=new r(null)).length=s+1,o.words=new Array(o.length);for(var a=0;a<o.length;a++)o.words[a]=0}var c=l.clone()._ishlnsubmul(i,1,s);0===c.negative&&(l=c,o&&(o.words[s]=1));for(var h=s-1;h>=0;h--){var f=67108864*(0|l.words[i.length+h])+(0|l.words[i.length+h-1]);for(f=Math.min(f/u|0,67108863),l._ishlnsubmul(i,f,h);0!==l.negative;)f--,l.negative=0,l._ishlnsubmul(i,1,h),l.isZero()||(l.negative^=1);o&&(o.words[h]=f)}return o&&o.strip(),l.strip(),"div"!==n&&0!==t&&l.iushrn(t),{div:o||null,mod:l}},r.prototype.divmod=function(e,n,l){return t(!e.isZero()),this.isZero()?{div:new r(0),mod:new r(0)}:0!==this.negative&&0===e.negative?(o=this.neg().divmod(e,n),"mod"!==n&&(i=o.div.neg()),"div"!==n&&(u=o.mod.neg(),l&&0!==u.negative&&u.iadd(e)),{div:i,mod:u}):0===this.negative&&0!==e.negative?(o=this.divmod(e.neg(),n),"mod"!==n&&(i=o.div.neg()),{div:i,mod:o.mod}):0!=(this.negative&e.negative)?(o=this.neg().divmod(e.neg(),n),"div"!==n&&(u=o.mod.neg(),l&&0!==u.negative&&u.isub(e)),{div:o.div,mod:u}):e.length>this.length||this.cmp(e)<0?{div:new r(0),mod:this}:1===e.length?"div"===n?{div:this.divn(e.words[0]),mod:null}:"mod"===n?{div:null,mod:new r(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new r(this.modn(e.words[0]))}:this._wordDiv(e,n);var i,u,o},r.prototype.div=function(e){return this.divmod(e,"div",!1).div},r.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},r.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},r.prototype.divRound=function(e){var n=this.divmod(e);if(n.mod.isZero())return n.div;var t=0!==n.div.negative?n.mod.isub(e):n.mod,l=e.ushrn(1),r=e.andln(1),i=t.cmp(l);return i<0||1===r&&0===i?n.div:0!==n.div.negative?n.div.isubn(1):n.div.iaddn(1)},r.prototype.modn=function(e){t(e<=67108863);for(var n=(1<<26)%e,l=0,r=this.length-1;r>=0;r--)l=(n*l+(0|this.words[r]))%e;return l},r.prototype.idivn=function(e){t(e<=67108863);for(var n=0,l=this.length-1;l>=0;l--){var r=(0|this.words[l])+67108864*n;this.words[l]=r/e|0,n=r%e}return this.strip()},r.prototype.divn=function(e){return this.clone().idivn(e)},r.prototype.egcd=function(e){t(0===e.negative),t(!e.isZero());var n=this,l=e.clone();n=0!==n.negative?n.umod(e):n.clone();for(var i=new r(1),u=new r(0),o=new r(0),s=new r(1),a=0;n.isEven()&&l.isEven();)n.iushrn(1),l.iushrn(1),++a;for(var c=l.clone(),h=n.clone();!n.isZero();){for(var f=0,d=1;0==(n.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(n.iushrn(f);f-- >0;)(i.isOdd()||u.isOdd())&&(i.iadd(c),u.isub(h)),i.iushrn(1),u.iushrn(1);for(var p=0,y=1;0==(l.words[0]&y)&&p<26;++p,y<<=1);if(p>0)for(l.iushrn(p);p-- >0;)(o.isOdd()||s.isOdd())&&(o.iadd(c),s.isub(h)),o.iushrn(1),s.iushrn(1);n.cmp(l)>=0?(n.isub(l),i.isub(o),u.isub(s)):(l.isub(n),o.isub(i),s.isub(u))}return{a:o,b:s,gcd:l.iushln(a)}},r.prototype._invmp=function(e){t(0===e.negative),t(!e.isZero());var n=this,l=e.clone();n=0!==n.negative?n.umod(e):n.clone();for(var i,u=new r(1),o=new r(0),s=l.clone();n.cmpn(1)>0&&l.cmpn(1)>0;){for(var a=0,c=1;0==(n.words[0]&c)&&a<26;++a,c<<=1);if(a>0)for(n.iushrn(a);a-- >0;)u.isOdd()&&u.iadd(s),u.iushrn(1);for(var h=0,f=1;0==(l.words[0]&f)&&h<26;++h,f<<=1);if(h>0)for(l.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(s),o.iushrn(1);n.cmp(l)>=0?(n.isub(l),u.isub(o)):(l.isub(n),o.isub(u))}return(i=0===n.cmpn(1)?u:o).cmpn(0)<0&&i.iadd(e),i},r.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var n=this.clone(),t=e.clone();n.negative=0,t.negative=0;for(var l=0;n.isEven()&&t.isEven();l++)n.iushrn(1),t.iushrn(1);for(;;){for(;n.isEven();)n.iushrn(1);for(;t.isEven();)t.iushrn(1);var r=n.cmp(t);if(r<0){var i=n;n=t,t=i}else if(0===r||0===t.cmpn(1))break;n.isub(t)}return t.iushln(l)},r.prototype.invm=function(e){return this.egcd(e).a.umod(e)},r.prototype.isEven=function(){return 0==(1&this.words[0])},r.prototype.isOdd=function(){return 1==(1&this.words[0])},r.prototype.andln=function(e){return this.words[0]&e},r.prototype.bincn=function(e){t("number"==typeof e);var n=e%26,l=(e-n)/26,r=1<<n;if(this.length<=l)return this._expand(l+1),this.words[l]|=r,this;for(var i=r,u=l;0!==i&&u<this.length;u++){var o=0|this.words[u];i=(o+=i)>>>26,o&=67108863,this.words[u]=o}return 0!==i&&(this.words[u]=i,this.length++),this},r.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},r.prototype.cmpn=function(e){var n,l=e<0;if(0!==this.negative&&!l)return-1;if(0===this.negative&&l)return 1;if(this.strip(),this.length>1)n=1;else{l&&(e=-e),t(e<=67108863,"Number is too big");var r=0|this.words[0];n=r===e?0:r<e?-1:1}return 0!==this.negative?0|-n:n},r.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var n=this.ucmp(e);return 0!==this.negative?0|-n:n},r.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var n=0,t=this.length-1;t>=0;t--){var l=0|this.words[t],r=0|e.words[t];if(l!==r){l<r?n=-1:l>r&&(n=1);break}}return n},r.prototype.gtn=function(e){return 1===this.cmpn(e)},r.prototype.gt=function(e){return 1===this.cmp(e)},r.prototype.gten=function(e){return this.cmpn(e)>=0},r.prototype.gte=function(e){return this.cmp(e)>=0},r.prototype.ltn=function(e){return-1===this.cmpn(e)},r.prototype.lt=function(e){return-1===this.cmp(e)},r.prototype.lten=function(e){return this.cmpn(e)<=0},r.prototype.lte=function(e){return this.cmp(e)<=0},r.prototype.eqn=function(e){return 0===this.cmpn(e)},r.prototype.eq=function(e){return 0===this.cmp(e)},r.red=function(e){return new E(e)},r.prototype.toRed=function(e){return t(!this.red,"Already a number in reduction context"),t(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},r.prototype.fromRed=function(){return t(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},r.prototype._forceRed=function(e){return this.red=e,this},r.prototype.forceRed=function(e){return t(!this.red,"Already a number in reduction context"),this._forceRed(e)},r.prototype.redAdd=function(e){return t(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},r.prototype.redIAdd=function(e){return t(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},r.prototype.redSub=function(e){return t(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},r.prototype.redISub=function(e){return t(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},r.prototype.redShl=function(e){return t(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},r.prototype.redMul=function(e){return t(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},r.prototype.redIMul=function(e){return t(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},r.prototype.redSqr=function(){return t(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},r.prototype.redISqr=function(){return t(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},r.prototype.redSqrt=function(){return t(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},r.prototype.redInvm=function(){return t(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},r.prototype.redNeg=function(){return t(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},r.prototype.redPow=function(e){return t(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var g={k256:null,p224:null,p192:null,p25519:null};function m(e,n){this.name=e,this.p=new r(n,16),this.n=this.p.bitLength(),this.k=new r(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){m.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function b(){m.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){m.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){m.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function E(e){if("string"==typeof e){var n=r._prime(e);this.m=n.p,this.prime=n}else t(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function S(e){E.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new r(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}m.prototype._tmp=function(){var e=new r(null);return e.words=new Array(Math.ceil(this.n/13)),e},m.prototype.ireduce=function(e){var n,t=e;do{this.split(t,this.tmp),n=(t=(t=this.imulK(t)).iadd(this.tmp)).bitLength()}while(n>this.n);var l=n<this.n?-1:t.ucmp(this.p);return 0===l?(t.words[0]=0,t.length=1):l>0?t.isub(this.p):void 0!==t.strip?t.strip():t._strip(),t},m.prototype.split=function(e,n){e.iushrn(this.n,0,n)},m.prototype.imulK=function(e){return e.imul(this.k)},l(v,m),v.prototype.split=function(e,n){for(var t=4194303,l=Math.min(e.length,9),r=0;r<l;r++)n.words[r]=e.words[r];if(n.length=l,e.length<=9)return e.words[0]=0,void(e.length=1);var i=e.words[9];for(n.words[n.length++]=i&t,r=10;r<e.length;r++){var u=0|e.words[r];e.words[r-10]=(u&t)<<4|i>>>22,i=u}i>>>=22,e.words[r-10]=i,0===i&&e.length>10?e.length-=10:e.length-=9},v.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var n=0,t=0;t<e.length;t++){var l=0|e.words[t];n+=977*l,e.words[t]=67108863&n,n=64*l+(n/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},l(b,m),l(w,m),l(_,m),_.prototype.imulK=function(e){for(var n=0,t=0;t<e.length;t++){var l=19*(0|e.words[t])+n,r=67108863&l;l>>>=26,e.words[t]=r,n=l}return 0!==n&&(e.words[e.length++]=n),e},r._prime=function(e){if(g[e])return g[e];var n;if("k256"===e)n=new v;else if("p224"===e)n=new b;else if("p192"===e)n=new w;else{if("p25519"!==e)throw new Error("Unknown prime "+e);n=new _}return g[e]=n,n},E.prototype._verify1=function(e){t(0===e.negative,"red works only with positives"),t(e.red,"red works only with red numbers")},E.prototype._verify2=function(e,n){t(0==(e.negative|n.negative),"red works only with positives"),t(e.red&&e.red===n.red,"red works only with red numbers")},E.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},E.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},E.prototype.add=function(e,n){this._verify2(e,n);var t=e.add(n);return t.cmp(this.m)>=0&&t.isub(this.m),t._forceRed(this)},E.prototype.iadd=function(e,n){this._verify2(e,n);var t=e.iadd(n);return t.cmp(this.m)>=0&&t.isub(this.m),t},E.prototype.sub=function(e,n){this._verify2(e,n);var t=e.sub(n);return t.cmpn(0)<0&&t.iadd(this.m),t._forceRed(this)},E.prototype.isub=function(e,n){this._verify2(e,n);var t=e.isub(n);return t.cmpn(0)<0&&t.iadd(this.m),t},E.prototype.shl=function(e,n){return this._verify1(e),this.imod(e.ushln(n))},E.prototype.imul=function(e,n){return this._verify2(e,n),this.imod(e.imul(n))},E.prototype.mul=function(e,n){return this._verify2(e,n),this.imod(e.mul(n))},E.prototype.isqr=function(e){return this.imul(e,e.clone())},E.prototype.sqr=function(e){return this.mul(e,e)},E.prototype.sqrt=function(e){if(e.isZero())return e.clone();var n=this.m.andln(3);if(t(n%2==1),3===n){var l=this.m.add(new r(1)).iushrn(2);return this.pow(e,l)}for(var i=this.m.subn(1),u=0;!i.isZero()&&0===i.andln(1);)u++,i.iushrn(1);t(!i.isZero());var o=new r(1).toRed(this),s=o.redNeg(),a=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new r(2*c*c).toRed(this);0!==this.pow(c,a).cmp(s);)c.redIAdd(s);for(var h=this.pow(c,i),f=this.pow(e,i.addn(1).iushrn(1)),d=this.pow(e,i),p=u;0!==d.cmp(o);){for(var y=d,g=0;0!==y.cmp(o);g++)y=y.redSqr();t(g<p);var m=this.pow(h,new r(1).iushln(p-g-1));f=f.redMul(m),h=m.redSqr(),d=d.redMul(h),p=g}return f},E.prototype.invm=function(e){var n=e._invmp(this.m);return 0!==n.negative?(n.negative=0,this.imod(n).redNeg()):this.imod(n)},E.prototype.pow=function(e,n){if(n.isZero())return new r(1).toRed(this);if(0===n.cmpn(1))return e.clone();var t=new Array(16);t[0]=new r(1).toRed(this),t[1]=e;for(var l=2;l<t.length;l++)t[l]=this.mul(t[l-1],e);var i=t[0],u=0,o=0,s=n.bitLength()%26;for(0===s&&(s=26),l=n.length-1;l>=0;l--){for(var a=n.words[l],c=s-1;c>=0;c--){var h=a>>c&1;i!==t[0]&&(i=this.sqr(i)),0!==h||0!==u?(u<<=1,u|=h,(4===++o||0===l&&0===c)&&(i=this.mul(i,t[u]),o=0,u=0)):o=0}s=26}return i},E.prototype.convertTo=function(e){var n=e.umod(this.m);return n===e?n.clone():n},E.prototype.convertFrom=function(e){var n=e.clone();return n.red=null,n},r.mont=function(e){return new S(e)},l(S,E),S.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},S.prototype.convertFrom=function(e){var n=this.imod(e.mul(this.rinv));return n.red=null,n},S.prototype.imul=function(e,n){if(e.isZero()||n.isZero())return e.words[0]=0,e.length=1,e;var t=e.imul(n),l=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=t.isub(l).iushrn(this.shift),i=r;return r.cmp(this.m)>=0?i=r.isub(this.m):r.cmpn(0)<0&&(i=r.iadd(this.m)),i._forceRed(this)},S.prototype.mul=function(e,n){if(e.isZero()||n.isZero())return new r(0)._forceRed(this);var t=e.mul(n),l=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=t.isub(l).iushrn(this.shift),u=i;return i.cmp(this.m)>=0?u=i.isub(this.m):i.cmpn(0)<0&&(u=i.iadd(this.m)),u._forceRed(this)},S.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e,n)}(yg);var gg={},mg={},vg={exports:{}};"function"==typeof Object.create?vg.exports=function(e,n){n&&(e.super_=n,e.prototype=Object.create(n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:vg.exports=function(e,n){if(n){e.super_=n;var t=function(){};t.prototype=n.prototype,e.prototype=new t,e.prototype.constructor=e}};var bg,wg=se,_g=wg.Buffer,Eg={};for(bg in wg)wg.hasOwnProperty(bg)&&"SlowBuffer"!==bg&&"Buffer"!==bg&&(Eg[bg]=wg[bg]);var Sg=Eg.Buffer={};for(bg in _g)_g.hasOwnProperty(bg)&&"allocUnsafe"!==bg&&"allocUnsafeSlow"!==bg&&(Sg[bg]=_g[bg]);if(Eg.Buffer.prototype=_g.prototype,Sg.from&&Sg.from!==Uint8Array.from||(Sg.from=function(e,n,t){if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);return _g(e,n,t)}),Sg.alloc||(Sg.alloc=function(e,n,t){if("number"!=typeof e)throw new TypeError('The "size" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value "'+e+'" is invalid for option "size"');var l=_g(e);return n&&0!==n.length?"string"==typeof t?l.fill(n,t):l.fill(n):l.fill(0),l}),!Eg.kStringMaxLength)try{Eg.kStringMaxLength=si.binding("buffer").kStringMaxLength}catch(e){}Eg.constants||(Eg.constants={MAX_LENGTH:Eg.kMaxLength},Eg.kStringMaxLength&&(Eg.constants.MAX_STRING_LENGTH=Eg.kStringMaxLength));var xg=Eg,kg={};const Ig=vg.exports;function Pg(e){this._reporterState={obj:null,path:[],options:e||{},errors:[]}}function Ag(e,n){this.path=e,this.rethrow(n)}kg.Reporter=Pg,Pg.prototype.isError=function(e){return e instanceof Ag},Pg.prototype.save=function(){const e=this._reporterState;return{obj:e.obj,pathLen:e.path.length}},Pg.prototype.restore=function(e){const n=this._reporterState;n.obj=e.obj,n.path=n.path.slice(0,e.pathLen)},Pg.prototype.enterKey=function(e){return this._reporterState.path.push(e)},Pg.prototype.exitKey=function(e){const n=this._reporterState;n.path=n.path.slice(0,e-1)},Pg.prototype.leaveKey=function(e,n,t){const l=this._reporterState;this.exitKey(e),null!==l.obj&&(l.obj[n]=t)},Pg.prototype.path=function(){return this._reporterState.path.join("/")},Pg.prototype.enterObject=function(){const e=this._reporterState,n=e.obj;return e.obj={},n},Pg.prototype.leaveObject=function(e){const n=this._reporterState,t=n.obj;return n.obj=e,t},Pg.prototype.error=function(e){let n;const t=this._reporterState,l=e instanceof Ag;if(n=l?e:new Ag(t.path.map((function(e){return"["+JSON.stringify(e)+"]"})).join(""),e.message||e,e.stack),!t.options.partial)throw n;return l||t.errors.push(n),n},Pg.prototype.wrapResult=function(e){const n=this._reporterState;return n.options.partial?{result:this.isError(e)?null:e,errors:n.errors}:e},Ig(Ag,Error),Ag.prototype.rethrow=function(e){if(this.message=e+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,Ag),!this.stack)try{throw new Error(this.message)}catch(e){this.stack=e.stack}return this};var Tg={};const Og=vg.exports,Mg=kg.Reporter,Rg=xg.Buffer;function Ng(e,n){Mg.call(this,n),Rg.isBuffer(e)?(this.base=e,this.offset=0,this.length=e.length):this.error("Input not Buffer")}function Cg(e,n){if(Array.isArray(e))this.length=0,this.value=e.map((function(e){return Cg.isEncoderBuffer(e)||(e=new Cg(e,n)),this.length+=e.length,e}),this);else if("number"==typeof e){if(!(0<=e&&e<=255))return n.error("non-byte EncoderBuffer value");this.value=e,this.length=1}else if("string"==typeof e)this.value=e,this.length=Rg.byteLength(e);else{if(!Rg.isBuffer(e))return n.error("Unsupported type: "+typeof e);this.value=e,this.length=e.length}}Og(Ng,Mg),Tg.DecoderBuffer=Ng,Ng.isDecoderBuffer=function(e){if(e instanceof Ng)return!0;return"object"==typeof e&&Rg.isBuffer(e.base)&&"DecoderBuffer"===e.constructor.name&&"number"==typeof e.offset&&"number"==typeof e.length&&"function"==typeof e.save&&"function"==typeof e.restore&&"function"==typeof e.isEmpty&&"function"==typeof e.readUInt8&&"function"==typeof e.skip&&"function"==typeof e.raw},Ng.prototype.save=function(){return{offset:this.offset,reporter:Mg.prototype.save.call(this)}},Ng.prototype.restore=function(e){const n=new Ng(this.base);return n.offset=e.offset,n.length=this.offset,this.offset=e.offset,Mg.prototype.restore.call(this,e.reporter),n},Ng.prototype.isEmpty=function(){return this.offset===this.length},Ng.prototype.readUInt8=function(e){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(e||"DecoderBuffer overrun")},Ng.prototype.skip=function(e,n){if(!(this.offset+e<=this.length))return this.error(n||"DecoderBuffer overrun");const t=new Ng(this.base);return t._reporterState=this._reporterState,t.offset=this.offset,t.length=this.offset+e,this.offset+=e,t},Ng.prototype.raw=function(e){return this.base.slice(e?e.offset:this.offset,this.length)},Tg.EncoderBuffer=Cg,Cg.isEncoderBuffer=function(e){if(e instanceof Cg)return!0;return"object"==typeof e&&"EncoderBuffer"===e.constructor.name&&"number"==typeof e.length&&"function"==typeof e.join},Cg.prototype.join=function(e,n){return e||(e=Rg.alloc(this.length)),n||(n=0),0===this.length||(Array.isArray(this.value)?this.value.forEach((function(t){t.join(e,n),n+=t.length})):("number"==typeof this.value?e[n]=this.value:"string"==typeof this.value?e.write(this.value,n):Rg.isBuffer(this.value)&&this.value.copy(e,n),n+=this.length)),e};var Lg=jg;function jg(e,n){if(!e)throw new Error(n||"Assertion failed")}jg.equal=function(e,n,t){if(e!=n)throw new Error(t||"Assertion failed: "+e+" != "+n)};const Ug=kg.Reporter,Dg=Tg.EncoderBuffer,Bg=Tg.DecoderBuffer,Kg=Lg,Fg=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],Vg=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(Fg);function Hg(e,n,t){const l={};this._baseState=l,l.name=t,l.enc=e,l.parent=n||null,l.children=null,l.tag=null,l.args=null,l.reverseArgs=null,l.choice=null,l.optional=!1,l.any=!1,l.obj=!1,l.use=null,l.useDecoder=null,l.key=null,l.default=null,l.explicit=null,l.implicit=null,l.contains=null,l.parent||(l.children=[],this._wrap())}var qg=Hg;const zg=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];Hg.prototype.clone=function(){const e=this._baseState,n={};zg.forEach((function(t){n[t]=e[t]}));const t=new this.constructor(n.parent);return t._baseState=n,t},Hg.prototype._wrap=function(){const e=this._baseState;Vg.forEach((function(n){this[n]=function(){const t=new this.constructor(this);return e.children.push(t),t[n].apply(t,arguments)}}),this)},Hg.prototype._init=function(e){const n=this._baseState;Kg(null===n.parent),e.call(this),n.children=n.children.filter((function(e){return e._baseState.parent===this}),this),Kg.equal(n.children.length,1,"Root node can have only one child")},Hg.prototype._useArgs=function(e){const n=this._baseState,t=e.filter((function(e){return e instanceof this.constructor}),this);e=e.filter((function(e){return!(e instanceof this.constructor)}),this),0!==t.length&&(Kg(null===n.children),n.children=t,t.forEach((function(e){e._baseState.parent=this}),this)),0!==e.length&&(Kg(null===n.args),n.args=e,n.reverseArgs=e.map((function(e){if("object"!=typeof e||e.constructor!==Object)return e;const n={};return Object.keys(e).forEach((function(t){t==(0|t)&&(t|=0);const l=e[t];n[l]=t})),n})))},["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"].forEach((function(e){Hg.prototype[e]=function(){const n=this._baseState;throw new Error(e+" not implemented for encoding: "+n.enc)}})),Fg.forEach((function(e){Hg.prototype[e]=function(){const n=this._baseState,t=Array.prototype.slice.call(arguments);return Kg(null===n.tag),n.tag=e,this._useArgs(t),this}})),Hg.prototype.use=function(e){Kg(e);const n=this._baseState;return Kg(null===n.use),n.use=e,this},Hg.prototype.optional=function(){return this._baseState.optional=!0,this},Hg.prototype.def=function(e){const n=this._baseState;return Kg(null===n.default),n.default=e,n.optional=!0,this},Hg.prototype.explicit=function(e){const n=this._baseState;return Kg(null===n.explicit&&null===n.implicit),n.explicit=e,this},Hg.prototype.implicit=function(e){const n=this._baseState;return Kg(null===n.explicit&&null===n.implicit),n.implicit=e,this},Hg.prototype.obj=function(){const e=this._baseState,n=Array.prototype.slice.call(arguments);return e.obj=!0,0!==n.length&&this._useArgs(n),this},Hg.prototype.key=function(e){const n=this._baseState;return Kg(null===n.key),n.key=e,this},Hg.prototype.any=function(){return this._baseState.any=!0,this},Hg.prototype.choice=function(e){const n=this._baseState;return Kg(null===n.choice),n.choice=e,this._useArgs(Object.keys(e).map((function(n){return e[n]}))),this},Hg.prototype.contains=function(e){const n=this._baseState;return Kg(null===n.use),n.contains=e,this},Hg.prototype._decode=function(e,n){const t=this._baseState;if(null===t.parent)return e.wrapResult(t.children[0]._decode(e,n));let l,r=t.default,i=!0,u=null;if(null!==t.key&&(u=e.enterKey(t.key)),t.optional){let l=null;if(null!==t.explicit?l=t.explicit:null!==t.implicit?l=t.implicit:null!==t.tag&&(l=t.tag),null!==l||t.any){if(i=this._peekTag(e,l,t.any),e.isError(i))return i}else{const l=e.save();try{null===t.choice?this._decodeGeneric(t.tag,e,n):this._decodeChoice(e,n),i=!0}catch(e){i=!1}e.restore(l)}}if(t.obj&&i&&(l=e.enterObject()),i){if(null!==t.explicit){const n=this._decodeTag(e,t.explicit);if(e.isError(n))return n;e=n}const l=e.offset;if(null===t.use&&null===t.choice){let n;t.any&&(n=e.save());const l=this._decodeTag(e,null!==t.implicit?t.implicit:t.tag,t.any);if(e.isError(l))return l;t.any?r=e.raw(n):e=l}if(n&&n.track&&null!==t.tag&&n.track(e.path(),l,e.length,"tagged"),n&&n.track&&null!==t.tag&&n.track(e.path(),e.offset,e.length,"content"),t.any||(r=null===t.choice?this._decodeGeneric(t.tag,e,n):this._decodeChoice(e,n)),e.isError(r))return r;if(t.any||null!==t.choice||null===t.children||t.children.forEach((function(t){t._decode(e,n)})),t.contains&&("octstr"===t.tag||"bitstr"===t.tag)){const l=new Bg(r);r=this._getUse(t.contains,e._reporterState.obj)._decode(l,n)}}return t.obj&&i&&(r=e.leaveObject(l)),null===t.key||null===r&&!0!==i?null!==u&&e.exitKey(u):e.leaveKey(u,t.key,r),r},Hg.prototype._decodeGeneric=function(e,n,t){const l=this._baseState;return"seq"===e||"set"===e?null:"seqof"===e||"setof"===e?this._decodeList(n,e,l.args[0],t):/str$/.test(e)?this._decodeStr(n,e,t):"objid"===e&&l.args?this._decodeObjid(n,l.args[0],l.args[1],t):"objid"===e?this._decodeObjid(n,null,null,t):"gentime"===e||"utctime"===e?this._decodeTime(n,e,t):"null_"===e?this._decodeNull(n,t):"bool"===e?this._decodeBool(n,t):"objDesc"===e?this._decodeStr(n,e,t):"int"===e||"enum"===e?this._decodeInt(n,l.args&&l.args[0],t):null!==l.use?this._getUse(l.use,n._reporterState.obj)._decode(n,t):n.error("unknown tag: "+e)},Hg.prototype._getUse=function(e,n){const t=this._baseState;return t.useDecoder=this._use(e,n),Kg(null===t.useDecoder._baseState.parent),t.useDecoder=t.useDecoder._baseState.children[0],t.implicit!==t.useDecoder._baseState.implicit&&(t.useDecoder=t.useDecoder.clone(),t.useDecoder._baseState.implicit=t.implicit),t.useDecoder},Hg.prototype._decodeChoice=function(e,n){const t=this._baseState;let l=null,r=!1;return Object.keys(t.choice).some((function(i){const u=e.save(),o=t.choice[i];try{const t=o._decode(e,n);if(e.isError(t))return!1;l={type:i,value:t},r=!0}catch(n){return e.restore(u),!1}return!0}),this),r?l:e.error("Choice not matched")},Hg.prototype._createEncoderBuffer=function(e){return new Dg(e,this.reporter)},Hg.prototype._encode=function(e,n,t){const l=this._baseState;if(null!==l.default&&l.default===e)return;const r=this._encodeValue(e,n,t);return void 0===r||this._skipDefault(r,n,t)?void 0:r},Hg.prototype._encodeValue=function(e,n,t){const l=this._baseState;if(null===l.parent)return l.children[0]._encode(e,n||new Ug);let r=null;if(this.reporter=n,l.optional&&void 0===e){if(null===l.default)return;e=l.default}let i=null,u=!1;if(l.any)r=this._createEncoderBuffer(e);else if(l.choice)r=this._encodeChoice(e,n);else if(l.contains)i=this._getUse(l.contains,t)._encode(e,n),u=!0;else if(l.children)i=l.children.map((function(t){if("null_"===t._baseState.tag)return t._encode(null,n,e);if(null===t._baseState.key)return n.error("Child should have a key");const l=n.enterKey(t._baseState.key);if("object"!=typeof e)return n.error("Child expected, but input is not object");const r=t._encode(e[t._baseState.key],n,e);return n.leaveKey(l),r}),this).filter((function(e){return e})),i=this._createEncoderBuffer(i);else if("seqof"===l.tag||"setof"===l.tag){if(!l.args||1!==l.args.length)return n.error("Too many args for : "+l.tag);if(!Array.isArray(e))return n.error("seqof/setof, but data is not Array");const t=this.clone();t._baseState.implicit=null,i=this._createEncoderBuffer(e.map((function(t){const l=this._baseState;return this._getUse(l.args[0],e)._encode(t,n)}),t))}else null!==l.use?r=this._getUse(l.use,t)._encode(e,n):(i=this._encodePrimitive(l.tag,e),u=!0);if(!l.any&&null===l.choice){const e=null!==l.implicit?l.implicit:l.tag,t=null===l.implicit?"universal":"context";null===e?null===l.use&&n.error("Tag could be omitted only for .use()"):null===l.use&&(r=this._encodeComposite(e,u,t,i))}return null!==l.explicit&&(r=this._encodeComposite(l.explicit,!1,"context",r)),r},Hg.prototype._encodeChoice=function(e,n){const t=this._baseState,l=t.choice[e.type];return l||Kg(!1,e.type+" not found in "+JSON.stringify(Object.keys(t.choice))),l._encode(e.value,n)},Hg.prototype._encodePrimitive=function(e,n){const t=this._baseState;if(/str$/.test(e))return this._encodeStr(n,e);if("objid"===e&&t.args)return this._encodeObjid(n,t.reverseArgs[0],t.args[1]);if("objid"===e)return this._encodeObjid(n,null,null);if("gentime"===e||"utctime"===e)return this._encodeTime(n,e);if("null_"===e)return this._encodeNull();if("int"===e||"enum"===e)return this._encodeInt(n,t.args&&t.reverseArgs[0]);if("bool"===e)return this._encodeBool(n);if("objDesc"===e)return this._encodeStr(n,e);throw new Error("Unsupported tag: "+e)},Hg.prototype._isNumstr=function(e){return/^[0-9 ]*$/.test(e)},Hg.prototype._isPrintstr=function(e){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(e)};var $g={};!function(e){function n(e){const n={};return Object.keys(e).forEach((function(t){(0|t)==t&&(t|=0);const l=e[t];n[l]=t})),n}e.tagClass={0:"universal",1:"application",2:"context",3:"private"},e.tagClassByName=n(e.tagClass),e.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},e.tagByName=n(e.tag)}($g);const Gg=vg.exports,Wg=xg.Buffer,Jg=qg,Xg=$g;function Yg(e){this.enc="der",this.name=e.name,this.entity=e,this.tree=new Zg,this.tree._init(e.body)}var Qg=Yg;function Zg(e){Jg.call(this,"der",e)}function em(e){return e<10?"0"+e:e}Yg.prototype.encode=function(e,n){return this.tree._encode(e,n).join()},Gg(Zg,Jg),Zg.prototype._encodeComposite=function(e,n,t,l){const r=function(e,n,t,l){let r;"seqof"===e?e="seq":"setof"===e&&(e="set");if(Xg.tagByName.hasOwnProperty(e))r=Xg.tagByName[e];else{if("number"!=typeof e||(0|e)!==e)return l.error("Unknown tag: "+e);r=e}if(r>=31)return l.error("Multi-octet tag encoding unsupported");n||(r|=32);return r|=Xg.tagClassByName[t||"universal"]<<6,r}(e,n,t,this.reporter);if(l.length<128){const e=Wg.alloc(2);return e[0]=r,e[1]=l.length,this._createEncoderBuffer([e,l])}let i=1;for(let e=l.length;e>=256;e>>=8)i++;const u=Wg.alloc(2+i);u[0]=r,u[1]=128|i;for(let e=1+i,n=l.length;n>0;e--,n>>=8)u[e]=255&n;return this._createEncoderBuffer([u,l])},Zg.prototype._encodeStr=function(e,n){if("bitstr"===n)return this._createEncoderBuffer([0|e.unused,e.data]);if("bmpstr"===n){const n=Wg.alloc(2*e.length);for(let t=0;t<e.length;t++)n.writeUInt16BE(e.charCodeAt(t),2*t);return this._createEncoderBuffer(n)}return"numstr"===n?this._isNumstr(e)?this._createEncoderBuffer(e):this.reporter.error("Encoding of string type: numstr supports only digits and space"):"printstr"===n?this._isPrintstr(e)?this._createEncoderBuffer(e):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(n)||"objDesc"===n?this._createEncoderBuffer(e):this.reporter.error("Encoding of string type: "+n+" unsupported")},Zg.prototype._encodeObjid=function(e,n,t){if("string"==typeof e){if(!n)return this.reporter.error("string objid given, but no values map found");if(!n.hasOwnProperty(e))return this.reporter.error("objid not found in values map");e=n[e].split(/[\s.]+/g);for(let n=0;n<e.length;n++)e[n]|=0}else if(Array.isArray(e)){e=e.slice();for(let n=0;n<e.length;n++)e[n]|=0}if(!Array.isArray(e))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(e));if(!t){if(e[1]>=40)return this.reporter.error("Second objid identifier OOB");e.splice(0,2,40*e[0]+e[1])}let l=0;for(let n=0;n<e.length;n++){let t=e[n];for(l++;t>=128;t>>=7)l++}const r=Wg.alloc(l);let i=r.length-1;for(let n=e.length-1;n>=0;n--){let t=e[n];for(r[i--]=127&t;(t>>=7)>0;)r[i--]=128|127&t}return this._createEncoderBuffer(r)},Zg.prototype._encodeTime=function(e,n){let t;const l=new Date(e);return"gentime"===n?t=[em(l.getUTCFullYear()),em(l.getUTCMonth()+1),em(l.getUTCDate()),em(l.getUTCHours()),em(l.getUTCMinutes()),em(l.getUTCSeconds()),"Z"].join(""):"utctime"===n?t=[em(l.getUTCFullYear()%100),em(l.getUTCMonth()+1),em(l.getUTCDate()),em(l.getUTCHours()),em(l.getUTCMinutes()),em(l.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+n+" time is not supported yet"),this._encodeStr(t,"octstr")},Zg.prototype._encodeNull=function(){return this._createEncoderBuffer("")},Zg.prototype._encodeInt=function(e,n){if("string"==typeof e){if(!n)return this.reporter.error("String int or enum given, but no values map");if(!n.hasOwnProperty(e))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(e));e=n[e]}if("number"!=typeof e&&!Wg.isBuffer(e)){const n=e.toArray();!e.sign&&128&n[0]&&n.unshift(0),e=Wg.from(n)}if(Wg.isBuffer(e)){let n=e.length;0===e.length&&n++;const t=Wg.alloc(n);return e.copy(t),0===e.length&&(t[0]=0),this._createEncoderBuffer(t)}if(e<128)return this._createEncoderBuffer(e);if(e<256)return this._createEncoderBuffer([0,e]);let t=1;for(let n=e;n>=256;n>>=8)t++;const l=new Array(t);for(let n=l.length-1;n>=0;n--)l[n]=255&e,e>>=8;return 128&l[0]&&l.unshift(0),this._createEncoderBuffer(Wg.from(l))},Zg.prototype._encodeBool=function(e){return this._createEncoderBuffer(e?255:0)},Zg.prototype._use=function(e,n){return"function"==typeof e&&(e=e(n)),e._getEncoder("der").tree},Zg.prototype._skipDefault=function(e,n,t){const l=this._baseState;let r;if(null===l.default)return!1;const i=e.join();if(void 0===l.defaultBuffer&&(l.defaultBuffer=this._encodeValue(l.default,n,t).join()),i.length!==l.defaultBuffer.length)return!1;for(r=0;r<i.length;r++)if(i[r]!==l.defaultBuffer[r])return!1;return!0};const nm=vg.exports,tm=Qg;function lm(e){tm.call(this,e),this.enc="pem"}nm(lm,tm);var rm=lm;lm.prototype.encode=function(e,n){const t=tm.prototype.encode.call(this,e).toString("base64"),l=["-----BEGIN "+n.label+"-----"];for(let e=0;e<t.length;e+=64)l.push(t.slice(e,e+64));return l.push("-----END "+n.label+"-----"),l.join("\n")},function(e){const n=e;n.der=Qg,n.pem=rm}(mg);var im={};const um=vg.exports,om=yg.exports,sm=Tg.DecoderBuffer,am=qg,cm=$g;function hm(e){this.enc="der",this.name=e.name,this.entity=e,this.tree=new dm,this.tree._init(e.body)}var fm=hm;function dm(e){am.call(this,"der",e)}function pm(e,n){let t=e.readUInt8(n);if(e.isError(t))return t;const l=cm.tagClass[t>>6],r=0==(32&t);if(31==(31&t)){let l=t;for(t=0;128==(128&l);){if(l=e.readUInt8(n),e.isError(l))return l;t<<=7,t|=127&l}}else t&=31;return{cls:l,primitive:r,tag:t,tagStr:cm.tag[t]}}function ym(e,n,t){let l=e.readUInt8(t);if(e.isError(l))return l;if(!n&&128===l)return null;if(0==(128&l))return l;const r=127&l;if(r>4)return e.error("length octect is too long");l=0;for(let n=0;n<r;n++){l<<=8;const n=e.readUInt8(t);if(e.isError(n))return n;l|=n}return l}hm.prototype.decode=function(e,n){return sm.isDecoderBuffer(e)||(e=new sm(e,n)),this.tree._decode(e,n)},um(dm,am),dm.prototype._peekTag=function(e,n,t){if(e.isEmpty())return!1;const l=e.save(),r=pm(e,'Failed to peek tag: "'+n+'"');return e.isError(r)?r:(e.restore(l),r.tag===n||r.tagStr===n||r.tagStr+"of"===n||t)},dm.prototype._decodeTag=function(e,n,t){const l=pm(e,'Failed to decode tag of "'+n+'"');if(e.isError(l))return l;let r=ym(e,l.primitive,'Failed to get length of "'+n+'"');if(e.isError(r))return r;if(!t&&l.tag!==n&&l.tagStr!==n&&l.tagStr+"of"!==n)return e.error('Failed to match tag: "'+n+'"');if(l.primitive||null!==r)return e.skip(r,'Failed to match body of: "'+n+'"');const i=e.save(),u=this._skipUntilEnd(e,'Failed to skip indefinite length body: "'+this.tag+'"');return e.isError(u)?u:(r=e.offset-i.offset,e.restore(i),e.skip(r,'Failed to match body of: "'+n+'"'))},dm.prototype._skipUntilEnd=function(e,n){for(;;){const t=pm(e,n);if(e.isError(t))return t;const l=ym(e,t.primitive,n);if(e.isError(l))return l;let r;if(r=t.primitive||null!==l?e.skip(l):this._skipUntilEnd(e,n),e.isError(r))return r;if("end"===t.tagStr)break}},dm.prototype._decodeList=function(e,n,t,l){const r=[];for(;!e.isEmpty();){const n=this._peekTag(e,"end");if(e.isError(n))return n;const i=t.decode(e,"der",l);if(e.isError(i)&&n)break;r.push(i)}return r},dm.prototype._decodeStr=function(e,n){if("bitstr"===n){const n=e.readUInt8();return e.isError(n)?n:{unused:n,data:e.raw()}}if("bmpstr"===n){const n=e.raw();if(n.length%2==1)return e.error("Decoding of string type: bmpstr length mismatch");let t="";for(let e=0;e<n.length/2;e++)t+=String.fromCharCode(n.readUInt16BE(2*e));return t}if("numstr"===n){const n=e.raw().toString("ascii");return this._isNumstr(n)?n:e.error("Decoding of string type: numstr unsupported characters")}if("octstr"===n)return e.raw();if("objDesc"===n)return e.raw();if("printstr"===n){const n=e.raw().toString("ascii");return this._isPrintstr(n)?n:e.error("Decoding of string type: printstr unsupported characters")}return/str$/.test(n)?e.raw().toString():e.error("Decoding of string type: "+n+" unsupported")},dm.prototype._decodeObjid=function(e,n,t){let l;const r=[];let i=0,u=0;for(;!e.isEmpty();)u=e.readUInt8(),i<<=7,i|=127&u,0==(128&u)&&(r.push(i),i=0);128&u&&r.push(i);const o=r[0]/40|0,s=r[0]%40;if(l=t?r:[o,s].concat(r.slice(1)),n){let e=n[l.join(" ")];void 0===e&&(e=n[l.join(".")]),void 0!==e&&(l=e)}return l},dm.prototype._decodeTime=function(e,n){const t=e.raw().toString();let l,r,i,u,o,s;if("gentime"===n)l=0|t.slice(0,4),r=0|t.slice(4,6),i=0|t.slice(6,8),u=0|t.slice(8,10),o=0|t.slice(10,12),s=0|t.slice(12,14);else{if("utctime"!==n)return e.error("Decoding "+n+" time is not supported yet");l=0|t.slice(0,2),r=0|t.slice(2,4),i=0|t.slice(4,6),u=0|t.slice(6,8),o=0|t.slice(8,10),s=0|t.slice(10,12),l=l<70?2e3+l:1900+l}return Date.UTC(l,r-1,i,u,o,s,0)},dm.prototype._decodeNull=function(){return null},dm.prototype._decodeBool=function(e){const n=e.readUInt8();return e.isError(n)?n:0!==n},dm.prototype._decodeInt=function(e,n){const t=e.raw();let l=new om(t);return n&&(l=n[l.toString(10)]||l),l},dm.prototype._use=function(e,n){return"function"==typeof e&&(e=e(n)),e._getDecoder("der").tree};const gm=vg.exports,mm=xg.Buffer,vm=fm;function bm(e){vm.call(this,e),this.enc="pem"}gm(bm,vm);var wm=bm;bm.prototype.decode=function(e,n){const t=e.toString().split(/[\r\n]+/g),l=n.label.toUpperCase(),r=/^-----(BEGIN|END) ([^-]+)-----$/;let i=-1,u=-1;for(let e=0;e<t.length;e++){const n=t[e].match(r);if(null!==n&&n[2]===l){if(-1!==i){if("END"!==n[1])break;u=e;break}if("BEGIN"!==n[1])break;i=e}}if(-1===i||-1===u)throw new Error("PEM section not found for: "+l);const o=t.slice(i+1,u).join("");o.replace(/[^a-z0-9+/=]+/gi,"");const s=mm.from(o,"base64");return vm.prototype.decode.call(this,s,n)},function(e){const n=e;n.der=fm,n.pem=wm}(im),function(e){const n=mg,t=im,l=vg.exports;function r(e,n){this.name=e,this.body=n,this.decoders={},this.encoders={}}e.define=function(e,n){return new r(e,n)},r.prototype._createNamed=function(e){const n=this.name;function t(e){this._initNamed(e,n)}return l(t,e),t.prototype._initNamed=function(n,t){e.call(this,n,t)},new t(this)},r.prototype._getDecoder=function(e){return e=e||"der",this.decoders.hasOwnProperty(e)||(this.decoders[e]=this._createNamed(t[e])),this.decoders[e]},r.prototype.decode=function(e,n,t){return this._getDecoder(n).decode(e,t)},r.prototype._getEncoder=function(e){return e=e||"der",this.encoders.hasOwnProperty(e)||(this.encoders[e]=this._createNamed(n[e])),this.encoders[e]},r.prototype.encode=function(e,n,t){return this._getEncoder(n).encode(e,t)}}(gg);var _m={};!function(e){const n=e;n.Reporter=kg.Reporter,n.DecoderBuffer=Tg.DecoderBuffer,n.EncoderBuffer=Tg.EncoderBuffer,n.Node=qg}(_m);var Em={};!function(e){const n=e;n._reverse=function(e){const n={};return Object.keys(e).forEach((function(t){(0|t)==t&&(t|=0);const l=e[t];n[l]=t})),n},n.der=$g}(Em),function(e){const n=e;n.bignum=yg.exports,n.define=gg.define,n.base=_m,n.constants=Em,n.decoders=im,n.encoders=mg}(pg);var Sm={exports:{}},xm={},km={};Object.defineProperty(km,"__esModule",{value:!0}),km.default=function(e){var n=e.length,t=n%4;if(!t)return e;var l=n,r=4-t,i=n+r,u=S.alloc(i);for(u.write(e);r--;)u.write("=",l++);return u.toString()},Object.defineProperty(xm,"__esModule",{value:!0});var Im=km;function Pm(e,n){return void 0===n&&(n="utf8"),ue(e)?Tm(e.toString("base64")):Tm(S.from(e,n).toString("base64"))}function Am(e){return e=e.toString(),Im.default(e).replace(/\-/g,"+").replace(/_/g,"/")}function Tm(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}var Om=Pm;Om.encode=Pm,Om.decode=function(e,n){return void 0===n&&(n="utf8"),S.from(Am(e),"base64").toString(n)},Om.toBase64=Am,Om.fromBase64=Tm,Om.toBuffer=function(e){return S.from(Am(e),"base64")},xm.default=Om,function(e){e.exports=xm.default,e.exports.default=e.exports}(Sm);const Mm=pg,Rm=Sm.exports;var Nm=class{static convert(e,n,t){if(!e)return;if(n===t)return e;let l;if("raw"===n||e instanceof S)l=e;else if("uint8_array"===n||Array.isArray(e))l=S.from(e);else if("hex"===n)l=S.from(e,"hex");else if("base64"===n)l=S.from(e,"base64");else if("base64url"===n)l=Rm.toBuffer(e);else{if("bn"!==n&&"bignum"!==n)throw new Error("Invalid fromType");l=S.from(this.pad(e.toString(16)),"hex")}if("raw"===t)return l;if("uint8_array"===t)return Array.from(l);if("hex"===t)return l.toString("hex");if("base64"===t)return l.toString("base64");if("base64url"===t)return Rm.fromBase64(l.toString("base64"));if("bn"===t||"bignum"===t)return new Mm.bignum(l);throw new Error("Invalid toType")}static pad(e){return e.length%2==1?`0${e}`:e}};const Cm=pg;var Lm=class{constructor(){Object.defineProperty(this,"_registry",{value:{}})}get registry(){return this._registry}define(e,n){this._registry[e]=Cm.define(e,n(this))}normalize(e){return this.registry[e]}};const jm=new Lm;jm.define("Version",(e=>function(){this.int({0:"two-prime",1:"multi"})})),jm.define("OtherPrimeInfos",(e=>function(){this.seq().obj(this.key("ri").int(),this.key("di").int(),this.key("ti").int())})),jm.define("AlgorithmIdentifier",(e=>function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional().any())})),jm.define("PrivateKeyInfo",(e=>{let n=e.normalize("Version"),t=e.normalize("AlgorithmIdentifier");return function(){this.seq().obj(this.key("version").use(n),this.key("algorithm").use(t),this.key("privateKey").octstr())}})),jm.define("PublicKeyInfo",(e=>{let n=e.normalize("AlgorithmIdentifier");return function(){this.seq().obj(this.key("algorithm").use(n),this.key("publicKey").bitstr())}})),jm.define("RSAPrivateKey",(e=>{let n=e.normalize("Version"),t=e.normalize("OtherPrimeInfos");return function(){this.seq().obj(this.key("version").use(n),this.key("n").int(),this.key("e").int(),this.key("d").int(),this.key("p").int(),this.key("q").int(),this.key("dp").int(),this.key("dq").int(),this.key("qi").int(),this.key("other").optional().use(t))}})),jm.define("RSAPublicKey",(e=>function(){this.seq().obj(this.key("n").int(),this.key("e").int())})),jm.define("ECPrivateKey",(e=>function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").explicit(0).optional().choice({namedCurve:this.objid()}),this.key("publicKey").explicit(1).optional().bitstr())}));var Um=jm;const Dm=dg,Bm=Nm,Km=Um;class Fm extends Dm{fromPrivatePKCS1(e){let n=Km.normalize("RSAPrivateKey"),{n:t,e:l,d:r,p:i,q:u,dp:o,dq:s,qi:a}=n.decode(e,"der");return{n:Bm.convert(t,"bn","raw"),e:Bm.convert(l,"bn","raw"),d:Bm.convert(r,"bn","raw"),p:Bm.convert(i,"bn","raw"),q:Bm.convert(u,"bn","raw"),dp:Bm.convert(o,"bn","raw"),dq:Bm.convert(s,"bn","raw"),qi:Bm.convert(a,"bn","raw")}}fromPrivatePKCS8(e){let n=Km.normalize("PrivateKeyInfo"),t=Km.normalize("RSAPrivateKey"),l=n.decode(e,"der"),{n:r,e:i,d:u,p:o,q:s,dp:a,dq:c,qi:h}=t.decode(l.privateKey,"der");return{n:Bm.convert(r,"bn","raw"),e:Bm.convert(i,"bn","raw"),d:Bm.convert(u,"bn","raw"),p:Bm.convert(o,"bn","raw"),q:Bm.convert(s,"bn","raw"),dp:Bm.convert(a,"bn","raw"),dq:Bm.convert(c,"bn","raw"),qi:Bm.convert(h,"bn","raw")}}fromPublicPKCS1(e){let n=Km.normalize("RSAPublicKey"),{n:t,e:l}=n.decode(e,"der");return{n:Bm.convert(t,"bn","raw"),e:Bm.convert(l,"bn","raw")}}fromPublicPKCS8(e){let n=Km.normalize("PublicKeyInfo"),t=Km.normalize("RSAPublicKey"),l=n.decode(e,"der"),{n:r,e:i}=t.decode(l.publicKey.data,"der");return{n:Bm.convert(r,"bn","raw"),e:Bm.convert(i,"bn","raw")}}fromJwk(e){let{n:n,e:t,d:l,p:r,q:i,dp:u,dq:o,qi:s,alg:a}=e;return{n:Bm.convert(n,"base64url","raw"),e:Bm.convert(t,"base64url","raw"),d:Bm.convert(l,"base64url","raw"),p:Bm.convert(r,"base64url","raw"),q:Bm.convert(i,"base64url","raw"),dp:Bm.convert(u,"base64url","raw"),dq:Bm.convert(o,"base64url","raw"),qi:Bm.convert(s,"base64url","raw")}}toPrivatePKCS1(e){let{n:n,e:t,d:l,p:r,q:i,dp:u,dq:o,qi:s}=e,{version:a}=this.params,c=Km.normalize("RSAPrivateKey").encode({version:a,n:Bm.convert(n,"raw","bn"),e:Bm.convert(t,"raw","bn"),d:Bm.convert(l,"raw","bn"),p:Bm.convert(r,"raw","bn"),q:Bm.convert(i,"raw","bn"),dp:Bm.convert(u,"raw","bn"),dq:Bm.convert(o,"raw","bn"),qi:Bm.convert(s,"raw","bn")},"der").toString("base64");return Fm.formatPem(c,"RSA PRIVATE")}toPrivatePKCS8(e){let{n:n,e:t,d:l,p:r,q:i,dp:u,dq:o,qi:s}=e,{oid:a,algParameters:c,version:h}=this.params,f=Km.normalize("PrivateKeyInfo"),d=Km.normalize("RSAPrivateKey").encode({version:h,n:Bm.convert(n,"raw","bn"),e:Bm.convert(t,"raw","bn"),d:Bm.convert(l,"raw","bn"),p:Bm.convert(r,"raw","bn"),q:Bm.convert(i,"raw","bn"),dp:Bm.convert(u,"raw","bn"),dq:Bm.convert(o,"raw","bn"),qi:Bm.convert(s,"raw","bn")},"der"),p=f.encode({version:h,algorithm:{algorithm:a.split("."),parameters:S.from(c,"hex")},privateKey:d},"der").toString("base64");return Fm.formatPem(p,"PRIVATE")}toPublicPKCS1(e){let{n:n,e:t}=e,{version:l}=this.params,r=Km.normalize("RSAPublicKey").encode({version:l,n:Bm.convert(n,"raw","bn"),e:Bm.convert(t,"raw","bn")},"der").toString("base64");return Fm.formatPem(r,"RSA PUBLIC")}toPublicPKCS8(e){let{n:n,e:t}=e,{oid:l,algParameters:r}=this.params,i=Km.normalize("PublicKeyInfo"),u=Km.normalize("RSAPublicKey").encode({n:Bm.convert(n,"raw","bn"),e:Bm.convert(t,"raw","bn")},"der"),o=i.encode({algorithm:{algorithm:l.split("."),parameters:S.from(r,"hex")},publicKey:{unused:0,data:u}},"der").toString("base64");return Fm.formatPem(o,"PUBLIC")}toPrivateJwk(e){let{n:n,e:t,d:l,p:r,q:i,dp:u,dq:o,qi:s}=e,{kty:a}=this.params;return{kty:a,n:Bm.convert(n,"raw","base64url"),e:Bm.convert(t,"raw","base64url"),d:Bm.convert(l,"raw","base64url"),p:Bm.convert(r,"raw","base64url"),q:Bm.convert(i,"raw","base64url"),dp:Bm.convert(u,"raw","base64url"),dq:Bm.convert(o,"raw","base64url"),qi:Bm.convert(s,"raw","base64url")}}toPublicJwk(e){let{n:n,e:t}=e,{kty:l}=this.params;return{kty:l,n:Bm.convert(n,"raw","base64url"),e:Bm.convert(t,"raw","base64url")}}}var Vm=Fm,Hm={},qm="6.5.4",zm={},$m={};!function(e){var n=e;function t(e){return 1===e.length?"0"+e:e}function l(e){for(var n="",l=0;l<e.length;l++)n+=t(e[l].toString(16));return n}n.toArray=function(e,n){if(Array.isArray(e))return e.slice();if(!e)return[];var t=[];if("string"!=typeof e){for(var l=0;l<e.length;l++)t[l]=0|e[l];return t}if("hex"===n){(e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e);for(l=0;l<e.length;l+=2)t.push(parseInt(e[l]+e[l+1],16))}else for(l=0;l<e.length;l++){var r=e.charCodeAt(l),i=r>>8,u=255&r;i?t.push(i,u):t.push(u)}return t},n.zero2=t,n.toHex=l,n.encode=function(e,n){return"hex"===n?l(e):e}}($m),function(e){var n=e,t=yg.exports,l=Lg,r=$m;n.assert=l,n.toArray=r.toArray,n.zero2=r.zero2,n.toHex=r.toHex,n.encode=r.encode,n.getNAF=function(e,n,t){var l=new Array(Math.max(e.bitLength(),t)+1);l.fill(0);for(var r=1<<n+1,i=e.clone(),u=0;u<l.length;u++){var o,s=i.andln(r-1);i.isOdd()?(o=s>(r>>1)-1?(r>>1)-s:s,i.isubn(o)):o=0,l[u]=o,i.iushrn(1)}return l},n.getJSF=function(e,n){var t=[[],[]];e=e.clone(),n=n.clone();for(var l,r=0,i=0;e.cmpn(-r)>0||n.cmpn(-i)>0;){var u,o,s=e.andln(3)+r&3,a=n.andln(3)+i&3;3===s&&(s=-1),3===a&&(a=-1),u=0==(1&s)?0:3!==(l=e.andln(7)+r&7)&&5!==l||2!==a?s:-s,t[0].push(u),o=0==(1&a)?0:3!==(l=n.andln(7)+i&7)&&5!==l||2!==s?a:-a,t[1].push(o),2*r===u+1&&(r=1-r),2*i===o+1&&(i=1-i),e.iushrn(1),n.iushrn(1)}return t},n.cachedProperty=function(e,n,t){var l="_"+n;e.prototype[n]=function(){return void 0!==this[l]?this[l]:this[l]=t.call(this)}},n.parseBytes=function(e){return"string"==typeof e?n.toArray(e,"hex"):e},n.intFromLE=function(e){return new t(e,"hex","le")}}(zm);var Gm,Wm={exports:{}};function Jm(e){this.rand=e}if(Wm.exports=function(e){return Gm||(Gm=new Jm(null)),Gm.generate(e)},Wm.exports.Rand=Jm,Jm.prototype.generate=function(e){return this._rand(e)},Jm.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var n=new Uint8Array(e),t=0;t<n.length;t++)n[t]=this.rand.getByte();return n},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?Jm.prototype._rand=function(e){var n=new Uint8Array(e);return self.crypto.getRandomValues(n),n}:self.msCrypto&&self.msCrypto.getRandomValues?Jm.prototype._rand=function(e){var n=new Uint8Array(e);return self.msCrypto.getRandomValues(n),n}:"object"==typeof window&&(Jm.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var Xm=require("crypto");if("function"!=typeof Xm.randomBytes)throw new Error("Not supported");Jm.prototype._rand=function(e){return Xm.randomBytes(e)}}catch(e){}var Ym={},Qm=yg.exports,Zm=zm,ev=Zm.getNAF,nv=Zm.getJSF,tv=Zm.assert;function lv(e,n){this.type=e,this.p=new Qm(n.p,16),this.red=n.prime?Qm.red(n.prime):Qm.mont(this.p),this.zero=new Qm(0).toRed(this.red),this.one=new Qm(1).toRed(this.red),this.two=new Qm(2).toRed(this.red),this.n=n.n&&new Qm(n.n,16),this.g=n.g&&this.pointFromJSON(n.g,n.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var t=this.n&&this.p.div(this.n);!t||t.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var rv=lv;function iv(e,n){this.curve=e,this.type=n,this.precomputed=null}lv.prototype.point=function(){throw new Error("Not implemented")},lv.prototype.validate=function(){throw new Error("Not implemented")},lv.prototype._fixedNafMul=function(e,n){tv(e.precomputed);var t=e._getDoubles(),l=ev(n,1,this._bitLength),r=(1<<t.step+1)-(t.step%2==0?2:1);r/=3;var i,u,o=[];for(i=0;i<l.length;i+=t.step){u=0;for(var s=i+t.step-1;s>=i;s--)u=(u<<1)+l[s];o.push(u)}for(var a=this.jpoint(null,null,null),c=this.jpoint(null,null,null),h=r;h>0;h--){for(i=0;i<o.length;i++)(u=o[i])===h?c=c.mixedAdd(t.points[i]):u===-h&&(c=c.mixedAdd(t.points[i].neg()));a=a.add(c)}return a.toP()},lv.prototype._wnafMul=function(e,n){var t=4,l=e._getNAFPoints(t);t=l.wnd;for(var r=l.points,i=ev(n,t,this._bitLength),u=this.jpoint(null,null,null),o=i.length-1;o>=0;o--){for(var s=0;o>=0&&0===i[o];o--)s++;if(o>=0&&s++,u=u.dblp(s),o<0)break;var a=i[o];tv(0!==a),u="affine"===e.type?a>0?u.mixedAdd(r[a-1>>1]):u.mixedAdd(r[-a-1>>1].neg()):a>0?u.add(r[a-1>>1]):u.add(r[-a-1>>1].neg())}return"affine"===e.type?u.toP():u},lv.prototype._wnafMulAdd=function(e,n,t,l,r){var i,u,o,s=this._wnafT1,a=this._wnafT2,c=this._wnafT3,h=0;for(i=0;i<l;i++){var f=(o=n[i])._getNAFPoints(e);s[i]=f.wnd,a[i]=f.points}for(i=l-1;i>=1;i-=2){var d=i-1,p=i;if(1===s[d]&&1===s[p]){var y=[n[d],null,null,n[p]];0===n[d].y.cmp(n[p].y)?(y[1]=n[d].add(n[p]),y[2]=n[d].toJ().mixedAdd(n[p].neg())):0===n[d].y.cmp(n[p].y.redNeg())?(y[1]=n[d].toJ().mixedAdd(n[p]),y[2]=n[d].add(n[p].neg())):(y[1]=n[d].toJ().mixedAdd(n[p]),y[2]=n[d].toJ().mixedAdd(n[p].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],m=nv(t[d],t[p]);for(h=Math.max(m[0].length,h),c[d]=new Array(h),c[p]=new Array(h),u=0;u<h;u++){var v=0|m[0][u],b=0|m[1][u];c[d][u]=g[3*(v+1)+(b+1)],c[p][u]=0,a[d]=y}}else c[d]=ev(t[d],s[d],this._bitLength),c[p]=ev(t[p],s[p],this._bitLength),h=Math.max(c[d].length,h),h=Math.max(c[p].length,h)}var w=this.jpoint(null,null,null),_=this._wnafT4;for(i=h;i>=0;i--){for(var E=0;i>=0;){var S=!0;for(u=0;u<l;u++)_[u]=0|c[u][i],0!==_[u]&&(S=!1);if(!S)break;E++,i--}if(i>=0&&E++,w=w.dblp(E),i<0)break;for(u=0;u<l;u++){var x=_[u];0!==x&&(x>0?o=a[u][x-1>>1]:x<0&&(o=a[u][-x-1>>1].neg()),w="affine"===o.type?w.mixedAdd(o):w.add(o))}}for(i=0;i<l;i++)a[i]=null;return r?w:w.toP()},lv.BasePoint=iv,iv.prototype.eq=function(){throw new Error("Not implemented")},iv.prototype.validate=function(){return this.curve.validate(this)},lv.prototype.decodePoint=function(e,n){e=Zm.toArray(e,n);var t=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*t)return 6===e[0]?tv(e[e.length-1]%2==0):7===e[0]&&tv(e[e.length-1]%2==1),this.point(e.slice(1,1+t),e.slice(1+t,1+2*t));if((2===e[0]||3===e[0])&&e.length-1===t)return this.pointFromX(e.slice(1,1+t),3===e[0]);throw new Error("Unknown point format")},iv.prototype.encodeCompressed=function(e){return this.encode(e,!0)},iv.prototype._encode=function(e){var n=this.curve.p.byteLength(),t=this.getX().toArray("be",n);return e?[this.getY().isEven()?2:3].concat(t):[4].concat(t,this.getY().toArray("be",n))},iv.prototype.encode=function(e,n){return Zm.encode(this._encode(n),e)},iv.prototype.precompute=function(e){if(this.precomputed)return this;var n={doubles:null,naf:null,beta:null};return n.naf=this._getNAFPoints(8),n.doubles=this._getDoubles(4,e),n.beta=this._getBeta(),this.precomputed=n,this},iv.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var n=this.precomputed.doubles;return!!n&&n.points.length>=Math.ceil((e.bitLength()+1)/n.step)},iv.prototype._getDoubles=function(e,n){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var t=[this],l=this,r=0;r<n;r+=e){for(var i=0;i<e;i++)l=l.dbl();t.push(l)}return{step:e,points:t}},iv.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var n=[this],t=(1<<e)-1,l=1===t?null:this.dbl(),r=1;r<t;r++)n[r]=n[r-1].add(l);return{wnd:e,points:n}},iv.prototype._getBeta=function(){return null},iv.prototype.dblp=function(e){for(var n=this,t=0;t<e;t++)n=n.dbl();return n};var uv=zm,ov=yg.exports,sv=vg.exports,av=rv,cv=uv.assert;function hv(e){av.call(this,"short",e),this.a=new ov(e.a,16).toRed(this.red),this.b=new ov(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}sv(hv,av);var fv=hv;function dv(e,n,t,l){av.BasePoint.call(this,e,"affine"),null===n&&null===t?(this.x=null,this.y=null,this.inf=!0):(this.x=new ov(n,16),this.y=new ov(t,16),l&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function pv(e,n,t,l){av.BasePoint.call(this,e,"jacobian"),null===n&&null===t&&null===l?(this.x=this.curve.one,this.y=this.curve.one,this.z=new ov(0)):(this.x=new ov(n,16),this.y=new ov(t,16),this.z=new ov(l,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}hv.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var n,t;if(e.beta)n=new ov(e.beta,16).toRed(this.red);else{var l=this._getEndoRoots(this.p);n=(n=l[0].cmp(l[1])<0?l[0]:l[1]).toRed(this.red)}if(e.lambda)t=new ov(e.lambda,16);else{var r=this._getEndoRoots(this.n);0===this.g.mul(r[0]).x.cmp(this.g.x.redMul(n))?t=r[0]:(t=r[1],cv(0===this.g.mul(t).x.cmp(this.g.x.redMul(n))))}return{beta:n,lambda:t,basis:e.basis?e.basis.map((function(e){return{a:new ov(e.a,16),b:new ov(e.b,16)}})):this._getEndoBasis(t)}}},hv.prototype._getEndoRoots=function(e){var n=e===this.p?this.red:ov.mont(e),t=new ov(2).toRed(n).redInvm(),l=t.redNeg(),r=new ov(3).toRed(n).redNeg().redSqrt().redMul(t);return[l.redAdd(r).fromRed(),l.redSub(r).fromRed()]},hv.prototype._getEndoBasis=function(e){for(var n,t,l,r,i,u,o,s,a,c=this.n.ushrn(Math.floor(this.n.bitLength()/2)),h=e,f=this.n.clone(),d=new ov(1),p=new ov(0),y=new ov(0),g=new ov(1),m=0;0!==h.cmpn(0);){var v=f.div(h);s=f.sub(v.mul(h)),a=y.sub(v.mul(d));var b=g.sub(v.mul(p));if(!l&&s.cmp(c)<0)n=o.neg(),t=d,l=s.neg(),r=a;else if(l&&2==++m)break;o=s,f=h,h=s,y=d,d=a,g=p,p=b}i=s.neg(),u=a;var w=l.sqr().add(r.sqr());return i.sqr().add(u.sqr()).cmp(w)>=0&&(i=n,u=t),l.negative&&(l=l.neg(),r=r.neg()),i.negative&&(i=i.neg(),u=u.neg()),[{a:l,b:r},{a:i,b:u}]},hv.prototype._endoSplit=function(e){var n=this.endo.basis,t=n[0],l=n[1],r=l.b.mul(e).divRound(this.n),i=t.b.neg().mul(e).divRound(this.n),u=r.mul(t.a),o=i.mul(l.a),s=r.mul(t.b),a=i.mul(l.b);return{k1:e.sub(u).sub(o),k2:s.add(a).neg()}},hv.prototype.pointFromX=function(e,n){(e=new ov(e,16)).red||(e=e.toRed(this.red));var t=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),l=t.redSqrt();if(0!==l.redSqr().redSub(t).cmp(this.zero))throw new Error("invalid point");var r=l.fromRed().isOdd();return(n&&!r||!n&&r)&&(l=l.redNeg()),this.point(e,l)},hv.prototype.validate=function(e){if(e.inf)return!0;var n=e.x,t=e.y,l=this.a.redMul(n),r=n.redSqr().redMul(n).redIAdd(l).redIAdd(this.b);return 0===t.redSqr().redISub(r).cmpn(0)},hv.prototype._endoWnafMulAdd=function(e,n,t){for(var l=this._endoWnafT1,r=this._endoWnafT2,i=0;i<e.length;i++){var u=this._endoSplit(n[i]),o=e[i],s=o._getBeta();u.k1.negative&&(u.k1.ineg(),o=o.neg(!0)),u.k2.negative&&(u.k2.ineg(),s=s.neg(!0)),l[2*i]=o,l[2*i+1]=s,r[2*i]=u.k1,r[2*i+1]=u.k2}for(var a=this._wnafMulAdd(1,l,r,2*i,t),c=0;c<2*i;c++)l[c]=null,r[c]=null;return a},sv(dv,av.BasePoint),hv.prototype.point=function(e,n,t){return new dv(this,e,n,t)},hv.prototype.pointFromJSON=function(e,n){return dv.fromJSON(this,e,n)},dv.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var n=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var t=this.curve,l=function(e){return t.point(e.x.redMul(t.endo.beta),e.y)};e.beta=n,n.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(l)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(l)}}}return n}},dv.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},dv.fromJSON=function(e,n,t){"string"==typeof n&&(n=JSON.parse(n));var l=e.point(n[0],n[1],t);if(!n[2])return l;function r(n){return e.point(n[0],n[1],t)}var i=n[2];return l.precomputed={beta:null,doubles:i.doubles&&{step:i.doubles.step,points:[l].concat(i.doubles.points.map(r))},naf:i.naf&&{wnd:i.naf.wnd,points:[l].concat(i.naf.points.map(r))}},l},dv.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},dv.prototype.isInfinity=function(){return this.inf},dv.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var n=this.y.redSub(e.y);0!==n.cmpn(0)&&(n=n.redMul(this.x.redSub(e.x).redInvm()));var t=n.redSqr().redISub(this.x).redISub(e.x),l=n.redMul(this.x.redSub(t)).redISub(this.y);return this.curve.point(t,l)},dv.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var n=this.curve.a,t=this.x.redSqr(),l=e.redInvm(),r=t.redAdd(t).redIAdd(t).redIAdd(n).redMul(l),i=r.redSqr().redISub(this.x.redAdd(this.x)),u=r.redMul(this.x.redSub(i)).redISub(this.y);return this.curve.point(i,u)},dv.prototype.getX=function(){return this.x.fromRed()},dv.prototype.getY=function(){return this.y.fromRed()},dv.prototype.mul=function(e){return e=new ov(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},dv.prototype.mulAdd=function(e,n,t){var l=[this,n],r=[e,t];return this.curve.endo?this.curve._endoWnafMulAdd(l,r):this.curve._wnafMulAdd(1,l,r,2)},dv.prototype.jmulAdd=function(e,n,t){var l=[this,n],r=[e,t];return this.curve.endo?this.curve._endoWnafMulAdd(l,r,!0):this.curve._wnafMulAdd(1,l,r,2,!0)},dv.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},dv.prototype.neg=function(e){if(this.inf)return this;var n=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var t=this.precomputed,l=function(e){return e.neg()};n.precomputed={naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(l)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(l)}}}return n},dv.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},sv(pv,av.BasePoint),hv.prototype.jpoint=function(e,n,t){return new pv(this,e,n,t)},pv.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),n=e.redSqr(),t=this.x.redMul(n),l=this.y.redMul(n).redMul(e);return this.curve.point(t,l)},pv.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},pv.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var n=e.z.redSqr(),t=this.z.redSqr(),l=this.x.redMul(n),r=e.x.redMul(t),i=this.y.redMul(n.redMul(e.z)),u=e.y.redMul(t.redMul(this.z)),o=l.redSub(r),s=i.redSub(u);if(0===o.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var a=o.redSqr(),c=a.redMul(o),h=l.redMul(a),f=s.redSqr().redIAdd(c).redISub(h).redISub(h),d=s.redMul(h.redISub(f)).redISub(i.redMul(c)),p=this.z.redMul(e.z).redMul(o);return this.curve.jpoint(f,d,p)},pv.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var n=this.z.redSqr(),t=this.x,l=e.x.redMul(n),r=this.y,i=e.y.redMul(n).redMul(this.z),u=t.redSub(l),o=r.redSub(i);if(0===u.cmpn(0))return 0!==o.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var s=u.redSqr(),a=s.redMul(u),c=t.redMul(s),h=o.redSqr().redIAdd(a).redISub(c).redISub(c),f=o.redMul(c.redISub(h)).redISub(r.redMul(a)),d=this.z.redMul(u);return this.curve.jpoint(h,f,d)},pv.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var n;if(this.curve.zeroA||this.curve.threeA){var t=this;for(n=0;n<e;n++)t=t.dbl();return t}var l=this.curve.a,r=this.curve.tinv,i=this.x,u=this.y,o=this.z,s=o.redSqr().redSqr(),a=u.redAdd(u);for(n=0;n<e;n++){var c=i.redSqr(),h=a.redSqr(),f=h.redSqr(),d=c.redAdd(c).redIAdd(c).redIAdd(l.redMul(s)),p=i.redMul(h),y=d.redSqr().redISub(p.redAdd(p)),g=p.redISub(y),m=d.redMul(g);m=m.redIAdd(m).redISub(f);var v=a.redMul(o);n+1<e&&(s=s.redMul(f)),i=y,o=v,a=m}return this.curve.jpoint(i,a.redMul(r),o)},pv.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},pv.prototype._zeroDbl=function(){var e,n,t;if(this.zOne){var l=this.x.redSqr(),r=this.y.redSqr(),i=r.redSqr(),u=this.x.redAdd(r).redSqr().redISub(l).redISub(i);u=u.redIAdd(u);var o=l.redAdd(l).redIAdd(l),s=o.redSqr().redISub(u).redISub(u),a=i.redIAdd(i);a=(a=a.redIAdd(a)).redIAdd(a),e=s,n=o.redMul(u.redISub(s)).redISub(a),t=this.y.redAdd(this.y)}else{var c=this.x.redSqr(),h=this.y.redSqr(),f=h.redSqr(),d=this.x.redAdd(h).redSqr().redISub(c).redISub(f);d=d.redIAdd(d);var p=c.redAdd(c).redIAdd(c),y=p.redSqr(),g=f.redIAdd(f);g=(g=g.redIAdd(g)).redIAdd(g),e=y.redISub(d).redISub(d),n=p.redMul(d.redISub(e)).redISub(g),t=(t=this.y.redMul(this.z)).redIAdd(t)}return this.curve.jpoint(e,n,t)},pv.prototype._threeDbl=function(){var e,n,t;if(this.zOne){var l=this.x.redSqr(),r=this.y.redSqr(),i=r.redSqr(),u=this.x.redAdd(r).redSqr().redISub(l).redISub(i);u=u.redIAdd(u);var o=l.redAdd(l).redIAdd(l).redIAdd(this.curve.a),s=o.redSqr().redISub(u).redISub(u);e=s;var a=i.redIAdd(i);a=(a=a.redIAdd(a)).redIAdd(a),n=o.redMul(u.redISub(s)).redISub(a),t=this.y.redAdd(this.y)}else{var c=this.z.redSqr(),h=this.y.redSqr(),f=this.x.redMul(h),d=this.x.redSub(c).redMul(this.x.redAdd(c));d=d.redAdd(d).redIAdd(d);var p=f.redIAdd(f),y=(p=p.redIAdd(p)).redAdd(p);e=d.redSqr().redISub(y),t=this.y.redAdd(this.z).redSqr().redISub(h).redISub(c);var g=h.redSqr();g=(g=(g=g.redIAdd(g)).redIAdd(g)).redIAdd(g),n=d.redMul(p.redISub(e)).redISub(g)}return this.curve.jpoint(e,n,t)},pv.prototype._dbl=function(){var e=this.curve.a,n=this.x,t=this.y,l=this.z,r=l.redSqr().redSqr(),i=n.redSqr(),u=t.redSqr(),o=i.redAdd(i).redIAdd(i).redIAdd(e.redMul(r)),s=n.redAdd(n),a=(s=s.redIAdd(s)).redMul(u),c=o.redSqr().redISub(a.redAdd(a)),h=a.redISub(c),f=u.redSqr();f=(f=(f=f.redIAdd(f)).redIAdd(f)).redIAdd(f);var d=o.redMul(h).redISub(f),p=t.redAdd(t).redMul(l);return this.curve.jpoint(c,d,p)},pv.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),n=this.y.redSqr(),t=this.z.redSqr(),l=n.redSqr(),r=e.redAdd(e).redIAdd(e),i=r.redSqr(),u=this.x.redAdd(n).redSqr().redISub(e).redISub(l),o=(u=(u=(u=u.redIAdd(u)).redAdd(u).redIAdd(u)).redISub(i)).redSqr(),s=l.redIAdd(l);s=(s=(s=s.redIAdd(s)).redIAdd(s)).redIAdd(s);var a=r.redIAdd(u).redSqr().redISub(i).redISub(o).redISub(s),c=n.redMul(a);c=(c=c.redIAdd(c)).redIAdd(c);var h=this.x.redMul(o).redISub(c);h=(h=h.redIAdd(h)).redIAdd(h);var f=this.y.redMul(a.redMul(s.redISub(a)).redISub(u.redMul(o)));f=(f=(f=f.redIAdd(f)).redIAdd(f)).redIAdd(f);var d=this.z.redAdd(u).redSqr().redISub(t).redISub(o);return this.curve.jpoint(h,f,d)},pv.prototype.mul=function(e,n){return e=new ov(e,n),this.curve._wnafMul(this,e)},pv.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var n=this.z.redSqr(),t=e.z.redSqr();if(0!==this.x.redMul(t).redISub(e.x.redMul(n)).cmpn(0))return!1;var l=n.redMul(this.z),r=t.redMul(e.z);return 0===this.y.redMul(r).redISub(e.y.redMul(l)).cmpn(0)},pv.prototype.eqXToP=function(e){var n=this.z.redSqr(),t=e.toRed(this.curve.red).redMul(n);if(0===this.x.cmp(t))return!0;for(var l=e.clone(),r=this.curve.redN.redMul(n);;){if(l.iadd(this.curve.n),l.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(r),0===this.x.cmp(t))return!0}},pv.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},pv.prototype.isInfinity=function(){return 0===this.z.cmpn(0)};var yv=yg.exports,gv=vg.exports,mv=rv,vv=zm;function bv(e){mv.call(this,"mont",e),this.a=new yv(e.a,16).toRed(this.red),this.b=new yv(e.b,16).toRed(this.red),this.i4=new yv(4).toRed(this.red).redInvm(),this.two=new yv(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}gv(bv,mv);var wv=bv;function _v(e,n,t){mv.BasePoint.call(this,e,"projective"),null===n&&null===t?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new yv(n,16),this.z=new yv(t,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}bv.prototype.validate=function(e){var n=e.normalize().x,t=n.redSqr(),l=t.redMul(n).redAdd(t.redMul(this.a)).redAdd(n);return 0===l.redSqrt().redSqr().cmp(l)},gv(_v,mv.BasePoint),bv.prototype.decodePoint=function(e,n){return this.point(vv.toArray(e,n),1)},bv.prototype.point=function(e,n){return new _v(this,e,n)},bv.prototype.pointFromJSON=function(e){return _v.fromJSON(this,e)},_v.prototype.precompute=function(){},_v.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},_v.fromJSON=function(e,n){return new _v(e,n[0],n[1]||e.one)},_v.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},_v.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},_v.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),n=this.x.redSub(this.z).redSqr(),t=e.redSub(n),l=e.redMul(n),r=t.redMul(n.redAdd(this.curve.a24.redMul(t)));return this.curve.point(l,r)},_v.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},_v.prototype.diffAdd=function(e,n){var t=this.x.redAdd(this.z),l=this.x.redSub(this.z),r=e.x.redAdd(e.z),i=e.x.redSub(e.z).redMul(t),u=r.redMul(l),o=n.z.redMul(i.redAdd(u).redSqr()),s=n.x.redMul(i.redISub(u).redSqr());return this.curve.point(o,s)},_v.prototype.mul=function(e){for(var n=e.clone(),t=this,l=this.curve.point(null,null),r=[];0!==n.cmpn(0);n.iushrn(1))r.push(n.andln(1));for(var i=r.length-1;i>=0;i--)0===r[i]?(t=t.diffAdd(l,this),l=l.dbl()):(l=t.diffAdd(l,this),t=t.dbl());return l},_v.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},_v.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},_v.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},_v.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},_v.prototype.getX=function(){return this.normalize(),this.x.fromRed()};var Ev=zm,Sv=yg.exports,xv=vg.exports,kv=rv,Iv=Ev.assert;function Pv(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,kv.call(this,"edwards",e),this.a=new Sv(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new Sv(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new Sv(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),Iv(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}xv(Pv,kv);var Av=Pv;function Tv(e,n,t,l,r){kv.BasePoint.call(this,e,"projective"),null===n&&null===t&&null===l?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new Sv(n,16),this.y=new Sv(t,16),this.z=l?new Sv(l,16):this.curve.one,this.t=r&&new Sv(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}Pv.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},Pv.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},Pv.prototype.jpoint=function(e,n,t,l){return this.point(e,n,t,l)},Pv.prototype.pointFromX=function(e,n){(e=new Sv(e,16)).red||(e=e.toRed(this.red));var t=e.redSqr(),l=this.c2.redSub(this.a.redMul(t)),r=this.one.redSub(this.c2.redMul(this.d).redMul(t)),i=l.redMul(r.redInvm()),u=i.redSqrt();if(0!==u.redSqr().redSub(i).cmp(this.zero))throw new Error("invalid point");var o=u.fromRed().isOdd();return(n&&!o||!n&&o)&&(u=u.redNeg()),this.point(e,u)},Pv.prototype.pointFromY=function(e,n){(e=new Sv(e,16)).red||(e=e.toRed(this.red));var t=e.redSqr(),l=t.redSub(this.c2),r=t.redMul(this.d).redMul(this.c2).redSub(this.a),i=l.redMul(r.redInvm());if(0===i.cmp(this.zero)){if(n)throw new Error("invalid point");return this.point(this.zero,e)}var u=i.redSqrt();if(0!==u.redSqr().redSub(i).cmp(this.zero))throw new Error("invalid point");return u.fromRed().isOdd()!==n&&(u=u.redNeg()),this.point(u,e)},Pv.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var n=e.x.redSqr(),t=e.y.redSqr(),l=n.redMul(this.a).redAdd(t),r=this.c2.redMul(this.one.redAdd(this.d.redMul(n).redMul(t)));return 0===l.cmp(r)},xv(Tv,kv.BasePoint),Pv.prototype.pointFromJSON=function(e){return Tv.fromJSON(this,e)},Pv.prototype.point=function(e,n,t,l){return new Tv(this,e,n,t,l)},Tv.fromJSON=function(e,n){return new Tv(e,n[0],n[1],n[2])},Tv.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},Tv.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},Tv.prototype._extDbl=function(){var e=this.x.redSqr(),n=this.y.redSqr(),t=this.z.redSqr();t=t.redIAdd(t);var l=this.curve._mulA(e),r=this.x.redAdd(this.y).redSqr().redISub(e).redISub(n),i=l.redAdd(n),u=i.redSub(t),o=l.redSub(n),s=r.redMul(u),a=i.redMul(o),c=r.redMul(o),h=u.redMul(i);return this.curve.point(s,a,h,c)},Tv.prototype._projDbl=function(){var e,n,t,l,r,i,u=this.x.redAdd(this.y).redSqr(),o=this.x.redSqr(),s=this.y.redSqr();if(this.curve.twisted){var a=(l=this.curve._mulA(o)).redAdd(s);this.zOne?(e=u.redSub(o).redSub(s).redMul(a.redSub(this.curve.two)),n=a.redMul(l.redSub(s)),t=a.redSqr().redSub(a).redSub(a)):(r=this.z.redSqr(),i=a.redSub(r).redISub(r),e=u.redSub(o).redISub(s).redMul(i),n=a.redMul(l.redSub(s)),t=a.redMul(i))}else l=o.redAdd(s),r=this.curve._mulC(this.z).redSqr(),i=l.redSub(r).redSub(r),e=this.curve._mulC(u.redISub(l)).redMul(i),n=this.curve._mulC(l).redMul(o.redISub(s)),t=l.redMul(i);return this.curve.point(e,n,t)},Tv.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},Tv.prototype._extAdd=function(e){var n=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),t=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),l=this.t.redMul(this.curve.dd).redMul(e.t),r=this.z.redMul(e.z.redAdd(e.z)),i=t.redSub(n),u=r.redSub(l),o=r.redAdd(l),s=t.redAdd(n),a=i.redMul(u),c=o.redMul(s),h=i.redMul(s),f=u.redMul(o);return this.curve.point(a,c,f,h)},Tv.prototype._projAdd=function(e){var n,t,l=this.z.redMul(e.z),r=l.redSqr(),i=this.x.redMul(e.x),u=this.y.redMul(e.y),o=this.curve.d.redMul(i).redMul(u),s=r.redSub(o),a=r.redAdd(o),c=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(i).redISub(u),h=l.redMul(s).redMul(c);return this.curve.twisted?(n=l.redMul(a).redMul(u.redSub(this.curve._mulA(i))),t=s.redMul(a)):(n=l.redMul(a).redMul(u.redSub(i)),t=this.curve._mulC(s).redMul(a)),this.curve.point(h,n,t)},Tv.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},Tv.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},Tv.prototype.mulAdd=function(e,n,t){return this.curve._wnafMulAdd(1,[this,n],[e,t],2,!1)},Tv.prototype.jmulAdd=function(e,n,t){return this.curve._wnafMulAdd(1,[this,n],[e,t],2,!0)},Tv.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},Tv.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},Tv.prototype.getX=function(){return this.normalize(),this.x.fromRed()},Tv.prototype.getY=function(){return this.normalize(),this.y.fromRed()},Tv.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},Tv.prototype.eqXToP=function(e){var n=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(n))return!0;for(var t=e.clone(),l=this.curve.redN.redMul(this.z);;){if(t.iadd(this.curve.n),t.cmp(this.curve.p)>=0)return!1;if(n.redIAdd(l),0===this.x.cmp(n))return!0}},Tv.prototype.toP=Tv.prototype.normalize,Tv.prototype.mixedAdd=Tv.prototype.add,function(e){var n=e;n.base=rv,n.short=fv,n.mont=wv,n.edwards=Av}(Ym);var Ov={},Mv={},Rv={},Nv=Lg,Cv=vg.exports;function Lv(e,n){return 55296==(64512&e.charCodeAt(n))&&(!(n<0||n+1>=e.length)&&56320==(64512&e.charCodeAt(n+1)))}function jv(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function Uv(e){return 1===e.length?"0"+e:e}function Dv(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}Rv.inherits=Cv,Rv.toArray=function(e,n){if(Array.isArray(e))return e.slice();if(!e)return[];var t=[];if("string"==typeof e)if(n){if("hex"===n)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),r=0;r<e.length;r+=2)t.push(parseInt(e[r]+e[r+1],16))}else for(var l=0,r=0;r<e.length;r++){var i=e.charCodeAt(r);i<128?t[l++]=i:i<2048?(t[l++]=i>>6|192,t[l++]=63&i|128):Lv(e,r)?(i=65536+((1023&i)<<10)+(1023&e.charCodeAt(++r)),t[l++]=i>>18|240,t[l++]=i>>12&63|128,t[l++]=i>>6&63|128,t[l++]=63&i|128):(t[l++]=i>>12|224,t[l++]=i>>6&63|128,t[l++]=63&i|128)}else for(r=0;r<e.length;r++)t[r]=0|e[r];return t},Rv.toHex=function(e){for(var n="",t=0;t<e.length;t++)n+=Uv(e[t].toString(16));return n},Rv.htonl=jv,Rv.toHex32=function(e,n){for(var t="",l=0;l<e.length;l++){var r=e[l];"little"===n&&(r=jv(r)),t+=Dv(r.toString(16))}return t},Rv.zero2=Uv,Rv.zero8=Dv,Rv.join32=function(e,n,t,l){var r=t-n;Nv(r%4==0);for(var i=new Array(r/4),u=0,o=n;u<i.length;u++,o+=4){var s;s="big"===l?e[o]<<24|e[o+1]<<16|e[o+2]<<8|e[o+3]:e[o+3]<<24|e[o+2]<<16|e[o+1]<<8|e[o],i[u]=s>>>0}return i},Rv.split32=function(e,n){for(var t=new Array(4*e.length),l=0,r=0;l<e.length;l++,r+=4){var i=e[l];"big"===n?(t[r]=i>>>24,t[r+1]=i>>>16&255,t[r+2]=i>>>8&255,t[r+3]=255&i):(t[r+3]=i>>>24,t[r+2]=i>>>16&255,t[r+1]=i>>>8&255,t[r]=255&i)}return t},Rv.rotr32=function(e,n){return e>>>n|e<<32-n},Rv.rotl32=function(e,n){return e<<n|e>>>32-n},Rv.sum32=function(e,n){return e+n>>>0},Rv.sum32_3=function(e,n,t){return e+n+t>>>0},Rv.sum32_4=function(e,n,t,l){return e+n+t+l>>>0},Rv.sum32_5=function(e,n,t,l,r){return e+n+t+l+r>>>0},Rv.sum64=function(e,n,t,l){var r=e[n],i=l+e[n+1]>>>0,u=(i<l?1:0)+t+r;e[n]=u>>>0,e[n+1]=i},Rv.sum64_hi=function(e,n,t,l){return(n+l>>>0<n?1:0)+e+t>>>0},Rv.sum64_lo=function(e,n,t,l){return n+l>>>0},Rv.sum64_4_hi=function(e,n,t,l,r,i,u,o){var s=0,a=n;return s+=(a=a+l>>>0)<n?1:0,s+=(a=a+i>>>0)<i?1:0,e+t+r+u+(s+=(a=a+o>>>0)<o?1:0)>>>0},Rv.sum64_4_lo=function(e,n,t,l,r,i,u,o){return n+l+i+o>>>0},Rv.sum64_5_hi=function(e,n,t,l,r,i,u,o,s,a){var c=0,h=n;return c+=(h=h+l>>>0)<n?1:0,c+=(h=h+i>>>0)<i?1:0,c+=(h=h+o>>>0)<o?1:0,e+t+r+u+s+(c+=(h=h+a>>>0)<a?1:0)>>>0},Rv.sum64_5_lo=function(e,n,t,l,r,i,u,o,s,a){return n+l+i+o+a>>>0},Rv.rotr64_hi=function(e,n,t){return(n<<32-t|e>>>t)>>>0},Rv.rotr64_lo=function(e,n,t){return(e<<32-t|n>>>t)>>>0},Rv.shr64_hi=function(e,n,t){return e>>>t},Rv.shr64_lo=function(e,n,t){return(e<<32-t|n>>>t)>>>0};var Bv={},Kv=Rv,Fv=Lg;function Vv(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}Bv.BlockHash=Vv,Vv.prototype.update=function(e,n){if(e=Kv.toArray(e,n),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var t=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-t,e.length),0===this.pending.length&&(this.pending=null),e=Kv.join32(e,0,e.length-t,this.endian);for(var l=0;l<e.length;l+=this._delta32)this._update(e,l,l+this._delta32)}return this},Vv.prototype.digest=function(e){return this.update(this._pad()),Fv(null===this.pending),this._digest(e)},Vv.prototype._pad=function(){var e=this.pendingTotal,n=this._delta8,t=n-(e+this.padLength)%n,l=new Array(t+this.padLength);l[0]=128;for(var r=1;r<t;r++)l[r]=0;if(e<<=3,"big"===this.endian){for(var i=8;i<this.padLength;i++)l[r++]=0;l[r++]=0,l[r++]=0,l[r++]=0,l[r++]=0,l[r++]=e>>>24&255,l[r++]=e>>>16&255,l[r++]=e>>>8&255,l[r++]=255&e}else for(l[r++]=255&e,l[r++]=e>>>8&255,l[r++]=e>>>16&255,l[r++]=e>>>24&255,l[r++]=0,l[r++]=0,l[r++]=0,l[r++]=0,i=8;i<this.padLength;i++)l[r++]=0;return l};var Hv={},qv={},zv=Rv.rotr32;function $v(e,n,t){return e&n^~e&t}function Gv(e,n,t){return e&n^e&t^n&t}function Wv(e,n,t){return e^n^t}qv.ft_1=function(e,n,t,l){return 0===e?$v(n,t,l):1===e||3===e?Wv(n,t,l):2===e?Gv(n,t,l):void 0},qv.ch32=$v,qv.maj32=Gv,qv.p32=Wv,qv.s0_256=function(e){return zv(e,2)^zv(e,13)^zv(e,22)},qv.s1_256=function(e){return zv(e,6)^zv(e,11)^zv(e,25)},qv.g0_256=function(e){return zv(e,7)^zv(e,18)^e>>>3},qv.g1_256=function(e){return zv(e,17)^zv(e,19)^e>>>10};var Jv=Rv,Xv=Bv,Yv=qv,Qv=Jv.rotl32,Zv=Jv.sum32,eb=Jv.sum32_5,nb=Yv.ft_1,tb=Xv.BlockHash,lb=[1518500249,1859775393,2400959708,3395469782];function rb(){if(!(this instanceof rb))return new rb;tb.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}Jv.inherits(rb,tb);var ib=rb;rb.blockSize=512,rb.outSize=160,rb.hmacStrength=80,rb.padLength=64,rb.prototype._update=function(e,n){for(var t=this.W,l=0;l<16;l++)t[l]=e[n+l];for(;l<t.length;l++)t[l]=Qv(t[l-3]^t[l-8]^t[l-14]^t[l-16],1);var r=this.h[0],i=this.h[1],u=this.h[2],o=this.h[3],s=this.h[4];for(l=0;l<t.length;l++){var a=~~(l/20),c=eb(Qv(r,5),nb(a,i,u,o),s,t[l],lb[a]);s=o,o=u,u=Qv(i,30),i=r,r=c}this.h[0]=Zv(this.h[0],r),this.h[1]=Zv(this.h[1],i),this.h[2]=Zv(this.h[2],u),this.h[3]=Zv(this.h[3],o),this.h[4]=Zv(this.h[4],s)},rb.prototype._digest=function(e){return"hex"===e?Jv.toHex32(this.h,"big"):Jv.split32(this.h,"big")};var ub=Rv,ob=Bv,sb=qv,ab=Lg,cb=ub.sum32,hb=ub.sum32_4,fb=ub.sum32_5,db=sb.ch32,pb=sb.maj32,yb=sb.s0_256,gb=sb.s1_256,mb=sb.g0_256,vb=sb.g1_256,bb=ob.BlockHash,wb=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function _b(){if(!(this instanceof _b))return new _b;bb.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=wb,this.W=new Array(64)}ub.inherits(_b,bb);var Eb=_b;_b.blockSize=512,_b.outSize=256,_b.hmacStrength=192,_b.padLength=64,_b.prototype._update=function(e,n){for(var t=this.W,l=0;l<16;l++)t[l]=e[n+l];for(;l<t.length;l++)t[l]=hb(vb(t[l-2]),t[l-7],mb(t[l-15]),t[l-16]);var r=this.h[0],i=this.h[1],u=this.h[2],o=this.h[3],s=this.h[4],a=this.h[5],c=this.h[6],h=this.h[7];for(ab(this.k.length===t.length),l=0;l<t.length;l++){var f=fb(h,gb(s),db(s,a,c),this.k[l],t[l]),d=cb(yb(r),pb(r,i,u));h=c,c=a,a=s,s=cb(o,f),o=u,u=i,i=r,r=cb(f,d)}this.h[0]=cb(this.h[0],r),this.h[1]=cb(this.h[1],i),this.h[2]=cb(this.h[2],u),this.h[3]=cb(this.h[3],o),this.h[4]=cb(this.h[4],s),this.h[5]=cb(this.h[5],a),this.h[6]=cb(this.h[6],c),this.h[7]=cb(this.h[7],h)},_b.prototype._digest=function(e){return"hex"===e?ub.toHex32(this.h,"big"):ub.split32(this.h,"big")};var Sb=Rv,xb=Eb;function kb(){if(!(this instanceof kb))return new kb;xb.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}Sb.inherits(kb,xb);var Ib=kb;kb.blockSize=512,kb.outSize=224,kb.hmacStrength=192,kb.padLength=64,kb.prototype._digest=function(e){return"hex"===e?Sb.toHex32(this.h.slice(0,7),"big"):Sb.split32(this.h.slice(0,7),"big")};var Pb=Rv,Ab=Bv,Tb=Lg,Ob=Pb.rotr64_hi,Mb=Pb.rotr64_lo,Rb=Pb.shr64_hi,Nb=Pb.shr64_lo,Cb=Pb.sum64,Lb=Pb.sum64_hi,jb=Pb.sum64_lo,Ub=Pb.sum64_4_hi,Db=Pb.sum64_4_lo,Bb=Pb.sum64_5_hi,Kb=Pb.sum64_5_lo,Fb=Ab.BlockHash,Vb=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Hb(){if(!(this instanceof Hb))return new Hb;Fb.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=Vb,this.W=new Array(160)}Pb.inherits(Hb,Fb);var qb=Hb;function zb(e,n,t,l,r){var i=e&t^~e&r;return i<0&&(i+=4294967296),i}function $b(e,n,t,l,r,i){var u=n&l^~n&i;return u<0&&(u+=4294967296),u}function Gb(e,n,t,l,r){var i=e&t^e&r^t&r;return i<0&&(i+=4294967296),i}function Wb(e,n,t,l,r,i){var u=n&l^n&i^l&i;return u<0&&(u+=4294967296),u}function Jb(e,n){var t=Ob(e,n,28)^Ob(n,e,2)^Ob(n,e,7);return t<0&&(t+=4294967296),t}function Xb(e,n){var t=Mb(e,n,28)^Mb(n,e,2)^Mb(n,e,7);return t<0&&(t+=4294967296),t}function Yb(e,n){var t=Ob(e,n,14)^Ob(e,n,18)^Ob(n,e,9);return t<0&&(t+=4294967296),t}function Qb(e,n){var t=Mb(e,n,14)^Mb(e,n,18)^Mb(n,e,9);return t<0&&(t+=4294967296),t}function Zb(e,n){var t=Ob(e,n,1)^Ob(e,n,8)^Rb(e,n,7);return t<0&&(t+=4294967296),t}function ew(e,n){var t=Mb(e,n,1)^Mb(e,n,8)^Nb(e,n,7);return t<0&&(t+=4294967296),t}function nw(e,n){var t=Ob(e,n,19)^Ob(n,e,29)^Rb(e,n,6);return t<0&&(t+=4294967296),t}function tw(e,n){var t=Mb(e,n,19)^Mb(n,e,29)^Nb(e,n,6);return t<0&&(t+=4294967296),t}Hb.blockSize=1024,Hb.outSize=512,Hb.hmacStrength=192,Hb.padLength=128,Hb.prototype._prepareBlock=function(e,n){for(var t=this.W,l=0;l<32;l++)t[l]=e[n+l];for(;l<t.length;l+=2){var r=nw(t[l-4],t[l-3]),i=tw(t[l-4],t[l-3]),u=t[l-14],o=t[l-13],s=Zb(t[l-30],t[l-29]),a=ew(t[l-30],t[l-29]),c=t[l-32],h=t[l-31];t[l]=Ub(r,i,u,o,s,a,c,h),t[l+1]=Db(r,i,u,o,s,a,c,h)}},Hb.prototype._update=function(e,n){this._prepareBlock(e,n);var t=this.W,l=this.h[0],r=this.h[1],i=this.h[2],u=this.h[3],o=this.h[4],s=this.h[5],a=this.h[6],c=this.h[7],h=this.h[8],f=this.h[9],d=this.h[10],p=this.h[11],y=this.h[12],g=this.h[13],m=this.h[14],v=this.h[15];Tb(this.k.length===t.length);for(var b=0;b<t.length;b+=2){var w=m,_=v,E=Yb(h,f),S=Qb(h,f),x=zb(h,f,d,p,y),k=$b(h,f,d,p,y,g),I=this.k[b],P=this.k[b+1],A=t[b],T=t[b+1],O=Bb(w,_,E,S,x,k,I,P,A,T),M=Kb(w,_,E,S,x,k,I,P,A,T);w=Jb(l,r),_=Xb(l,r),E=Gb(l,r,i,u,o),S=Wb(l,r,i,u,o,s);var R=Lb(w,_,E,S),N=jb(w,_,E,S);m=y,v=g,y=d,g=p,d=h,p=f,h=Lb(a,c,O,M),f=jb(c,c,O,M),a=o,c=s,o=i,s=u,i=l,u=r,l=Lb(O,M,R,N),r=jb(O,M,R,N)}Cb(this.h,0,l,r),Cb(this.h,2,i,u),Cb(this.h,4,o,s),Cb(this.h,6,a,c),Cb(this.h,8,h,f),Cb(this.h,10,d,p),Cb(this.h,12,y,g),Cb(this.h,14,m,v)},Hb.prototype._digest=function(e){return"hex"===e?Pb.toHex32(this.h,"big"):Pb.split32(this.h,"big")};var lw=Rv,rw=qb;function iw(){if(!(this instanceof iw))return new iw;rw.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}lw.inherits(iw,rw);var uw=iw;iw.blockSize=1024,iw.outSize=384,iw.hmacStrength=192,iw.padLength=128,iw.prototype._digest=function(e){return"hex"===e?lw.toHex32(this.h.slice(0,12),"big"):lw.split32(this.h.slice(0,12),"big")},Hv.sha1=ib,Hv.sha224=Ib,Hv.sha256=Eb,Hv.sha384=uw,Hv.sha512=qb;var ow={},sw=Rv,aw=Bv,cw=sw.rotl32,hw=sw.sum32,fw=sw.sum32_3,dw=sw.sum32_4,pw=aw.BlockHash;function yw(){if(!(this instanceof yw))return new yw;pw.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function gw(e,n,t,l){return e<=15?n^t^l:e<=31?n&t|~n&l:e<=47?(n|~t)^l:e<=63?n&l|t&~l:n^(t|~l)}function mw(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function vw(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}sw.inherits(yw,pw),ow.ripemd160=yw,yw.blockSize=512,yw.outSize=160,yw.hmacStrength=192,yw.padLength=64,yw.prototype._update=function(e,n){for(var t=this.h[0],l=this.h[1],r=this.h[2],i=this.h[3],u=this.h[4],o=t,s=l,a=r,c=i,h=u,f=0;f<80;f++){var d=hw(cw(dw(t,gw(f,l,r,i),e[bw[f]+n],mw(f)),_w[f]),u);t=u,u=i,i=cw(r,10),r=l,l=d,d=hw(cw(dw(o,gw(79-f,s,a,c),e[ww[f]+n],vw(f)),Ew[f]),h),o=h,h=c,c=cw(a,10),a=s,s=d}d=fw(this.h[1],r,c),this.h[1]=fw(this.h[2],i,h),this.h[2]=fw(this.h[3],u,o),this.h[3]=fw(this.h[4],t,s),this.h[4]=fw(this.h[0],l,a),this.h[0]=d},yw.prototype._digest=function(e){return"hex"===e?sw.toHex32(this.h,"little"):sw.split32(this.h,"little")};var bw=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],ww=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],_w=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],Ew=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],Sw=Rv,xw=Lg;function kw(e,n,t){if(!(this instanceof kw))return new kw(e,n,t);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(Sw.toArray(n,t))}var Iw=kw;kw.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),xw(e.length<=this.blockSize);for(var n=e.length;n<this.blockSize;n++)e.push(0);for(n=0;n<e.length;n++)e[n]^=54;for(this.inner=(new this.Hash).update(e),n=0;n<e.length;n++)e[n]^=106;this.outer=(new this.Hash).update(e)},kw.prototype.update=function(e,n){return this.inner.update(e,n),this},kw.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)},function(e){var n=e;n.utils=Rv,n.common=Bv,n.sha=Hv,n.ripemd=ow,n.hmac=Iw,n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160}(Mv),function(e){var n,t=e,l=Mv,r=Ym,i=zm.assert;function u(e){"short"===e.type?this.curve=new r.short(e):"edwards"===e.type?this.curve=new r.edwards(e):this.curve=new r.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function o(e,n){Object.defineProperty(t,e,{configurable:!0,enumerable:!0,get:function(){var l=new u(n);return Object.defineProperty(t,e,{configurable:!0,enumerable:!0,value:l}),l}})}t.PresetCurve=u,o("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:l.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),o("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:l.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),o("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:l.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),o("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:l.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),o("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:l.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),o("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:l.sha256,gRed:!1,g:["9"]}),o("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:l.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{n=require("./precomputed/secp256k1")}catch(e){n=void 0}o("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:l.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",n]})}(Ov);var Pw=Mv,Aw=$m,Tw=Lg;function Ow(e){if(!(this instanceof Ow))return new Ow(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var n=Aw.toArray(e.entropy,e.entropyEnc||"hex"),t=Aw.toArray(e.nonce,e.nonceEnc||"hex"),l=Aw.toArray(e.pers,e.persEnc||"hex");Tw(n.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(n,t,l)}var Mw=Ow;Ow.prototype._init=function(e,n,t){var l=e.concat(n).concat(t);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var r=0;r<this.V.length;r++)this.K[r]=0,this.V[r]=1;this._update(l),this._reseed=1,this.reseedInterval=281474976710656},Ow.prototype._hmac=function(){return new Pw.hmac(this.hash,this.K)},Ow.prototype._update=function(e){var n=this._hmac().update(this.V).update([0]);e&&(n=n.update(e)),this.K=n.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},Ow.prototype.reseed=function(e,n,t,l){"string"!=typeof n&&(l=t,t=n,n=null),e=Aw.toArray(e,n),t=Aw.toArray(t,l),Tw(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(t||[])),this._reseed=1},Ow.prototype.generate=function(e,n,t,l){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof n&&(l=t,t=n,n=null),t&&(t=Aw.toArray(t,l||"hex"),this._update(t));for(var r=[];r.length<e;)this.V=this._hmac().update(this.V).digest(),r=r.concat(this.V);var i=r.slice(0,e);return this._update(t),this._reseed++,Aw.encode(i,n)};var Rw=yg.exports,Nw=zm.assert;function Cw(e,n){this.ec=e,this.priv=null,this.pub=null,n.priv&&this._importPrivate(n.priv,n.privEnc),n.pub&&this._importPublic(n.pub,n.pubEnc)}var Lw=Cw;Cw.fromPublic=function(e,n,t){return n instanceof Cw?n:new Cw(e,{pub:n,pubEnc:t})},Cw.fromPrivate=function(e,n,t){return n instanceof Cw?n:new Cw(e,{priv:n,privEnc:t})},Cw.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},Cw.prototype.getPublic=function(e,n){return"string"==typeof e&&(n=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),n?this.pub.encode(n,e):this.pub},Cw.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},Cw.prototype._importPrivate=function(e,n){this.priv=new Rw(e,n||16),this.priv=this.priv.umod(this.ec.curve.n)},Cw.prototype._importPublic=function(e,n){if(e.x||e.y)return"mont"===this.ec.curve.type?Nw(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||Nw(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,n)},Cw.prototype.derive=function(e){return e.validate()||Nw(e.validate(),"public point not validated"),e.mul(this.priv).getX()},Cw.prototype.sign=function(e,n,t){return this.ec.sign(e,this,n,t)},Cw.prototype.verify=function(e,n){return this.ec.verify(e,n,this)},Cw.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var jw=yg.exports,Uw=zm,Dw=Uw.assert;function Bw(e,n){if(e instanceof Bw)return e;this._importDER(e,n)||(Dw(e.r&&e.s,"Signature without r or s"),this.r=new jw(e.r,16),this.s=new jw(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}var Kw=Bw;function Fw(){this.place=0}function Vw(e,n){var t=e[n.place++];if(!(128&t))return t;var l=15&t;if(0===l||l>4)return!1;for(var r=0,i=0,u=n.place;i<l;i++,u++)r<<=8,r|=e[u],r>>>=0;return!(r<=127)&&(n.place=u,r)}function Hw(e){for(var n=0,t=e.length-1;!e[n]&&!(128&e[n+1])&&n<t;)n++;return 0===n?e:e.slice(n)}function qw(e,n){if(n<128)e.push(n);else{var t=1+(Math.log(n)/Math.LN2>>>3);for(e.push(128|t);--t;)e.push(n>>>(t<<3)&255);e.push(n)}}Bw.prototype._importDER=function(e,n){e=Uw.toArray(e,n);var t=new Fw;if(48!==e[t.place++])return!1;var l=Vw(e,t);if(!1===l)return!1;if(l+t.place!==e.length)return!1;if(2!==e[t.place++])return!1;var r=Vw(e,t);if(!1===r)return!1;var i=e.slice(t.place,r+t.place);if(t.place+=r,2!==e[t.place++])return!1;var u=Vw(e,t);if(!1===u)return!1;if(e.length!==u+t.place)return!1;var o=e.slice(t.place,u+t.place);if(0===i[0]){if(!(128&i[1]))return!1;i=i.slice(1)}if(0===o[0]){if(!(128&o[1]))return!1;o=o.slice(1)}return this.r=new jw(i),this.s=new jw(o),this.recoveryParam=null,!0},Bw.prototype.toDER=function(e){var n=this.r.toArray(),t=this.s.toArray();for(128&n[0]&&(n=[0].concat(n)),128&t[0]&&(t=[0].concat(t)),n=Hw(n),t=Hw(t);!(t[0]||128&t[1]);)t=t.slice(1);var l=[2];qw(l,n.length),(l=l.concat(n)).push(2),qw(l,t.length);var r=l.concat(t),i=[48];return qw(i,r.length),i=i.concat(r),Uw.encode(i,e)};var zw=yg.exports,$w=Mw,Gw=zm,Ww=Ov,Jw=Wm.exports,Xw=Gw.assert,Yw=Lw,Qw=Kw;function Zw(e){if(!(this instanceof Zw))return new Zw(e);"string"==typeof e&&(Xw(Object.prototype.hasOwnProperty.call(Ww,e),"Unknown curve "+e),e=Ww[e]),e instanceof Ww.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}var e_=Zw;Zw.prototype.keyPair=function(e){return new Yw(this,e)},Zw.prototype.keyFromPrivate=function(e,n){return Yw.fromPrivate(this,e,n)},Zw.prototype.keyFromPublic=function(e,n){return Yw.fromPublic(this,e,n)},Zw.prototype.genKeyPair=function(e){e||(e={});for(var n=new $w({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||Jw(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),t=this.n.byteLength(),l=this.n.sub(new zw(2));;){var r=new zw(n.generate(t));if(!(r.cmp(l)>0))return r.iaddn(1),this.keyFromPrivate(r)}},Zw.prototype._truncateToN=function(e,n){var t=8*e.byteLength()-this.n.bitLength();return t>0&&(e=e.ushrn(t)),!n&&e.cmp(this.n)>=0?e.sub(this.n):e},Zw.prototype.sign=function(e,n,t,l){"object"==typeof t&&(l=t,t=null),l||(l={}),n=this.keyFromPrivate(n,t),e=this._truncateToN(new zw(e,16));for(var r=this.n.byteLength(),i=n.getPrivate().toArray("be",r),u=e.toArray("be",r),o=new $w({hash:this.hash,entropy:i,nonce:u,pers:l.pers,persEnc:l.persEnc||"utf8"}),s=this.n.sub(new zw(1)),a=0;;a++){var c=l.k?l.k(a):new zw(o.generate(this.n.byteLength()));if(!((c=this._truncateToN(c,!0)).cmpn(1)<=0||c.cmp(s)>=0)){var h=this.g.mul(c);if(!h.isInfinity()){var f=h.getX(),d=f.umod(this.n);if(0!==d.cmpn(0)){var p=c.invm(this.n).mul(d.mul(n.getPrivate()).iadd(e));if(0!==(p=p.umod(this.n)).cmpn(0)){var y=(h.getY().isOdd()?1:0)|(0!==f.cmp(d)?2:0);return l.canonical&&p.cmp(this.nh)>0&&(p=this.n.sub(p),y^=1),new Qw({r:d,s:p,recoveryParam:y})}}}}}},Zw.prototype.verify=function(e,n,t,l){e=this._truncateToN(new zw(e,16)),t=this.keyFromPublic(t,l);var r=(n=new Qw(n,"hex")).r,i=n.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return!1;if(i.cmpn(1)<0||i.cmp(this.n)>=0)return!1;var u,o=i.invm(this.n),s=o.mul(e).umod(this.n),a=o.mul(r).umod(this.n);return this.curve._maxwellTrick?!(u=this.g.jmulAdd(s,t.getPublic(),a)).isInfinity()&&u.eqXToP(r):!(u=this.g.mulAdd(s,t.getPublic(),a)).isInfinity()&&0===u.getX().umod(this.n).cmp(r)},Zw.prototype.recoverPubKey=function(e,n,t,l){Xw((3&t)===t,"The recovery param is more than two bits"),n=new Qw(n,l);var r=this.n,i=new zw(e),u=n.r,o=n.s,s=1&t,a=t>>1;if(u.cmp(this.curve.p.umod(this.curve.n))>=0&&a)throw new Error("Unable to find sencond key candinate");u=a?this.curve.pointFromX(u.add(this.curve.n),s):this.curve.pointFromX(u,s);var c=n.r.invm(r),h=r.sub(i).mul(c).umod(r),f=o.mul(c).umod(r);return this.g.mulAdd(h,u,f)},Zw.prototype.getKeyRecoveryParam=function(e,n,t,l){if(null!==(n=new Qw(n,l)).recoveryParam)return n.recoveryParam;for(var r=0;r<4;r++){var i;try{i=this.recoverPubKey(e,n,r)}catch(e){continue}if(i.eq(t))return r}throw new Error("Unable to find valid recovery factor")};var n_=zm,t_=n_.assert,l_=n_.parseBytes,r_=n_.cachedProperty;function i_(e,n){this.eddsa=e,this._secret=l_(n.secret),e.isPoint(n.pub)?this._pub=n.pub:this._pubBytes=l_(n.pub)}i_.fromPublic=function(e,n){return n instanceof i_?n:new i_(e,{pub:n})},i_.fromSecret=function(e,n){return n instanceof i_?n:new i_(e,{secret:n})},i_.prototype.secret=function(){return this._secret},r_(i_,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),r_(i_,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),r_(i_,"privBytes",(function(){var e=this.eddsa,n=this.hash(),t=e.encodingLength-1,l=n.slice(0,e.encodingLength);return l[0]&=248,l[t]&=127,l[t]|=64,l})),r_(i_,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),r_(i_,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),r_(i_,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),i_.prototype.sign=function(e){return t_(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},i_.prototype.verify=function(e,n){return this.eddsa.verify(e,n,this)},i_.prototype.getSecret=function(e){return t_(this._secret,"KeyPair is public only"),n_.encode(this.secret(),e)},i_.prototype.getPublic=function(e){return n_.encode(this.pubBytes(),e)};var u_=i_,o_=yg.exports,s_=zm,a_=s_.assert,c_=s_.cachedProperty,h_=s_.parseBytes;function f_(e,n){this.eddsa=e,"object"!=typeof n&&(n=h_(n)),Array.isArray(n)&&(n={R:n.slice(0,e.encodingLength),S:n.slice(e.encodingLength)}),a_(n.R&&n.S,"Signature without R or S"),e.isPoint(n.R)&&(this._R=n.R),n.S instanceof o_&&(this._S=n.S),this._Rencoded=Array.isArray(n.R)?n.R:n.Rencoded,this._Sencoded=Array.isArray(n.S)?n.S:n.Sencoded}c_(f_,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),c_(f_,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),c_(f_,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),c_(f_,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),f_.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},f_.prototype.toHex=function(){return s_.encode(this.toBytes(),"hex").toUpperCase()};var d_=f_,p_=Mv,y_=Ov,g_=zm,m_=g_.assert,v_=g_.parseBytes,b_=u_,w_=d_;function __(e){if(m_("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof __))return new __(e);e=y_[e].curve,this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=p_.sha512}var E_=__;__.prototype.sign=function(e,n){e=v_(e);var t=this.keyFromSecret(n),l=this.hashInt(t.messagePrefix(),e),r=this.g.mul(l),i=this.encodePoint(r),u=this.hashInt(i,t.pubBytes(),e).mul(t.priv()),o=l.add(u).umod(this.curve.n);return this.makeSignature({R:r,S:o,Rencoded:i})},__.prototype.verify=function(e,n,t){e=v_(e),n=this.makeSignature(n);var l=this.keyFromPublic(t),r=this.hashInt(n.Rencoded(),l.pubBytes(),e),i=this.g.mul(n.S());return n.R().add(l.pub().mul(r)).eq(i)},__.prototype.hashInt=function(){for(var e=this.hash(),n=0;n<arguments.length;n++)e.update(arguments[n]);return g_.intFromLE(e.digest()).umod(this.curve.n)},__.prototype.keyFromPublic=function(e){return b_.fromPublic(this,e)},__.prototype.keyFromSecret=function(e){return b_.fromSecret(this,e)},__.prototype.makeSignature=function(e){return e instanceof w_?e:new w_(this,e)},__.prototype.encodePoint=function(e){var n=e.getY().toArray("le",this.encodingLength);return n[this.encodingLength-1]|=e.getX().isOdd()?128:0,n},__.prototype.decodePoint=function(e){var n=(e=g_.parseBytes(e)).length-1,t=e.slice(0,n).concat(-129&e[n]),l=0!=(128&e[n]),r=g_.intFromLE(t);return this.curve.pointFromY(r,l)},__.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},__.prototype.decodeInt=function(e){return g_.intFromLE(e)},__.prototype.isPoint=function(e){return e instanceof this.pointClass},function(e){var n=e;n.version=qm,n.utils=zm,n.rand=Wm.exports,n.curve=Ym,n.curves=Ov,n.ec=e_,n.eddsa=E_}(Hm);const S_=new(0,Hm.ec)("secp256k1"),x_=dg,k_=Nm,I_=Um;class P_ extends x_{fromPrivatePKCS1(e){let n=I_.normalize("ECPrivateKey").decode(e,"der"),{privateKey:t,publicKey:{data:l}}=n,r=k_.convert(l,"raw","hex"),{x:i,y:u}=P_.getPoint(r);return{d:t,x:i,y:u}}fromPrivatePKCS8(e){let n=I_.normalize("PrivateKeyInfo"),t=I_.normalize("ECPrivateKey"),l=n.decode(e,"der"),r=t.decode(l.privateKey,"der"),{privateKey:i,publicKey:{data:u}}=r,o=k_.convert(u,"raw","hex"),{x:s,y:a}=P_.getPoint(o);return{d:i,x:s,y:a}}fromPublicPKCS8(e){let n=I_.normalize("PublicKeyInfo").decode(e,"der"),t=k_.convert(n.publicKey.data,"raw","hex");return P_.getPoint(t)}fromPrivateBlk(e){let n=S_.keyFromPrivate(e,"hex"),t=n.getPublic();return{d:k_.convert(n.priv,"bn","raw"),x:k_.convert(t.getX(),"bn","raw"),y:k_.convert(t.getY(),"bn","raw")}}fromPublicBlk(e){return P_.getPoint(e)}fromJwk(e){let{d:n,x:t,y:l}=e;return{d:k_.convert(n,"base64url","raw"),x:k_.convert(t,"base64url","raw"),y:k_.convert(l,"base64url","raw")}}toPrivatePKCS1(e){let{namedCurve:n,keyVersion:t}=this.params,{d:l,x:r,y:i}=e,u=I_.normalize("ECPrivateKey"),o=P_.makePoint(r,i),s=u.encode({version:t,privateKey:l,parameters:{type:"namedCurve",value:n.split(".")},publicKey:{unused:0,data:o}},"der").toString("base64");return P_.formatPem(s,"EC PRIVATE")}toPrivatePKCS8(e){let{oid:n,algParameters:t,keyVersion:l,infoVersion:r}=this.params,{d:i,x:u,y:o}=e,s=I_.normalize("PrivateKeyInfo"),a=I_.normalize("ECPrivateKey"),c=P_.makePoint(u,o),h=a.encode({version:l,privateKey:i,publicKey:{unused:0,data:c}},"der"),f=s.encode({version:r,algorithm:{algorithm:n.split("."),parameters:S.from(t,"hex")},privateKey:h},"der").toString("base64");return P_.formatPem(f,"PRIVATE")}toPublicPKCS8(e){let{oid:n,algParameters:t}=this.params,{x:l,y:r}=e,i=I_.normalize("PublicKeyInfo"),u=P_.makePoint(l,r),o=i.encode({algorithm:{algorithm:n.split("."),parameters:S.from(t,"hex")},publicKey:{unused:0,data:u}},"der").toString("base64");return P_.formatPem(o,"PUBLIC")}toPrivateBlk(e){return e.d.toString("hex")}toPublicBlk(e){return k_.convert(P_.makePoint(e.x,e.y),"raw","hex")}toPrivateJwk(e){let{crv:n,kty:t}=this.params,{d:l,x:r,y:i}=e;return{kty:t,crv:n,d:k_.convert(l,"raw","base64url"),x:k_.convert(r,"raw","base64url"),y:k_.convert(i,"raw","base64url")}}toPublicJwk(e){let{crv:n,kty:t}=this.params,{x:l,y:r}=e;return{kty:t,crv:n,x:k_.convert(l,"raw","base64url"),y:k_.convert(r,"raw","base64url")}}static getPoint(e){let n=e.slice(2,(e.length-2)/2+2),t=e.slice((e.length-2)/2+2);return{x:k_.convert(n,"hex","raw"),y:k_.convert(t,"hex","raw")}}static makePoint(e,n){let t=S.from("04","hex");return S.concat([t,e,n],t.length+e.length+n.length)}}var A_=P_;const T_=dg,O_=Nm,M_=Um;class R_ extends T_{fromPrivatePKCS8(e){const n=M_.normalize("PrivateKeyInfo").decode(e,"der").privateKey.slice(2);return{d:n,x:this.publicKeyFromPrivate(n)}}fromPublicPKCS8(e){const n=M_.normalize("PublicKeyInfo").decode(e,"der");return{x:O_.convert(n.publicKey.data,"hex","raw")}}fromJwk(e){let{d:n,x:t}=e;return{d:O_.convert(n,"base64url","raw"),x:O_.convert(t,"base64url","raw")}}toPrivatePKCS8(e){let{oid:n,infoVersion:t}=this.params,{d:l}=e;const r=M_.normalize("PrivateKeyInfo"),i=this.privateKeyPadding(l);let u=r.encode({version:t,algorithm:{algorithm:n.split(".")},privateKey:i},"der").toString("base64");return R_.formatPem(u,"PRIVATE")}toPublicPKCS8(e){let{oid:n}=this.params,{x:t}=e,l=M_.normalize("PublicKeyInfo").encode({algorithm:{algorithm:n.split(".")},publicKey:{unused:0,data:O_.convert(t,"hex","raw")}},"der").toString("base64");return R_.formatPem(l,"PUBLIC")}toPrivateJwk(e){let{crv:n,kty:t}=this.params,{d:l,x:r}=e;return{kty:t,crv:n,d:O_.convert(l,"raw","base64url"),x:O_.convert(r,"raw","base64url")}}toPublicJwk(e){let{crv:n,kty:t}=this.params,{x:l}=e;return{kty:t,crv:n,x:O_.convert(l,"raw","base64url")}}privateKeyPadding(e){let n;if("Ed25519"!==this.params.crv)throw new Error(`${this.params.crv} is an invalid curve for EdDSA`);return n=S.from("0420","hex"),S.concat([n,e],n.length+e.length)}publicKeyFromPrivate(e){if("Ed25519"===this.params.crv){const n=new(0,Hm.eddsa)("ed25519");return S.from(n.keyFromSecret(e).getPublic())}throw new Error(`${this.params.crv} is an invalid curve for EdDSA`)}}const N_=Vm,C_=A_,L_=R_,j_=new hg;j_.define([{kty:"RSA",oid:"1.2.840.113549.1.1.1",algParameters:"0500",version:"two-prime"}],N_),j_.define([{kty:"EC",crv:"K-256",oid:"1.2.840.10045.2.1",namedCurve:"1.3.132.0.10",algParameters:"06052b8104000a",keyVersion:1,infoVersion:"two-prime"},{kty:"EC",crv:"P-256",oid:"1.2.840.10045.2.1",namedCurve:"1.2.840.10045.3.1.7",algParameters:"06082a8648ce3d030107",keyVersion:1,infoVersion:"two-prime"},{kty:"EC",crv:"P-384",oid:"1.2.840.10045.2.1",namedCurve:"1.3.132.0.34",algParameters:"06052b81040022",keyVersion:1,infoVersion:"two-prime"},{kty:"EC",crv:"P-521",oid:"1.2.840.10045.2.1",namedCurve:"1.3.132.0.35",algParameters:"06052b81040023",keyVersion:1,infoVersion:"two-prime"}],C_),j_.define([{kty:"OKP",crv:"Ed25519",oid:"1.3.101.112",infoVersion:"two-prime"}],L_);const U_=sg,D_=cg,B_=j_,K_=Um,F_=RegExp("\r?\n","g");class V_{constructor(e,n){if(!e)throw new U_("key is required");if(!n)throw new U_("options are required");let{kty:t,format:l,selector:r,crv:i,oid:u}=n;if(!n.kty)throw new U_("options.kty is required");if(!n.format)throw new U_("options.format is required");if(!n.selector)throw new U_("options.selector is required");if(!n.crv&&!n.oid)throw new U_("options.crv or options.oid is required");this.kty=t,this.format=l,this.selector=r,this.crv=i,this.oid=u,this.key=this.parseKey(e)}static from(e,n){if(!e)throw new U_("key is required");if(!n)throw new U_("format is required");if("jwk"===n){let t;if("string"==typeof e)try{t=JSON.parse(e)}catch(e){throw new U_("key is not a valid JWK")}else"object"==typeof e&&(t=e);let l,{kty:r,crv:i}=t;if(!r)throw new U_("kty is required for JWK");if("EC"===r&&!i)throw new U_("crv is required for EC JWK");"RSA"===r&&(l=B_.find((e=>e.kty===r)).oid);let u=t.d?"private":"public";return new V_(t,{kty:r,crv:i,oid:l,format:n,selector:u})}if("pem"===n){if("string"!=typeof e)throw new U_("key is not a valid PEM string");let t=e.split(F_),l=t.splice(0,1);t.splice(t.length-1,1);let r,i,u=t.join(""),o=/^-----BEGIN ((RSA|EC) )?(PUBLIC|PRIVATE) KEY-----$/.exec(l),s=o?o[2]:void 0,a=o?o[3]:void 0,c=S.from(u,"base64");if(!a)throw new U_("key is not a valid PEM string");if(s){if("RSA"===s)a="PRIVATE"===a?"private_pkcs1":"public_pkcs1",r=B_.find((e=>e.kty===s)).oid;else if("EC"===s){let e;if("PRIVATE"===a){let n=K_.normalize(`${s}PrivateKey`);a="private_pkcs1",e=n.decode(c,"der")}else if("PUBLIC"===a){let n=K_.normalize(`${s}PrivateKey`);a="public_pkcs1",e=n.decode(c,"der")}let{parameters:{value:n}}=e;i=B_.find((e=>e.namedCurve===n.join("."))).crv}}else{let e,n=K_.normalize("PrivateKeyInfo"),t=K_.normalize("PublicKeyInfo");"PRIVATE"===a?(a="private_pkcs8",e=n.decode(c,"der")):"PUBLIC"===a&&(a="public_pkcs8",e=t.decode(c,"der"));let{algorithm:{algorithm:l,parameters:u}}=e;l=l.join("."),u=u?u.toString("hex"):void 0;const o=B_.find((e=>e.oid===l));if(s=o?o.kty:void 0,!s)throw new U_(`${l} is not supported`);"RSA"===s||"OKP"===s?r=l:"EC"===s&&(i=B_.find((e=>e.algParameters===u)).crv)}return new V_(c,{kty:s,oid:r,crv:i,format:n,selector:a})}if("blk"===n)return new V_(e,{kty:"EC",crv:"K-256",format:n,selector:e.length>64?"public":"private"});throw new U_(`Invalid format ${n}`)}get alg(){let{kty:e,crv:n,oid:t}=this;if(!this.algorithm){if(n)Object.defineProperty(this,"algorithm",{value:B_.normalize(e,"crv",n)});else{if(!t)throw new Error("Both crv and oid are undefined");Object.defineProperty(this,"algorithm",{value:B_.normalize(e,"oid",t)})}if(!this.algorithm)throw new Error(`${this.crv||this.oid} is not implemented yet`)}return this.algorithm}parseKey(e){let{alg:n,format:t,selector:l}=this;if("pem"===t)switch(l){case"public_pkcs1":return n.fromPublicPKCS1(e);case"public_pkcs8":return n.fromPublicPKCS8(e);case"private_pkcs1":return n.fromPrivatePKCS1(e);case"private_pkcs8":return n.fromPrivatePKCS8(e);default:throw new Error("Invalid selector value")}if("jwk"===t)return n.fromJwk(e,l);if("blk"===t)switch(l){case"public":return n.fromPublicBlk(e);case"private":return n.fromPrivateBlk(e)}}toJwk(e){let{key:n,alg:t,selector:l}=this;switch(e){case"public":return t.toPublicJwk(n);case"private":if(l.includes("public"))throw new U_("Cannot export a private key from a public key");return t.toPrivateJwk(n);default:throw new Error("Invalid key selector")}}toString(e="pem",n="public_pkcs8"){let{key:t,alg:l,selector:r}=this;if("pem"===e)switch(n){case"public_pkcs1":return l.toPublicPKCS1(t);case"public_pkcs8":return l.toPublicPKCS8(t);case"private_pkcs1":if(r.includes("public"))throw new U_("Cannot export a private key from a public key");return l.toPrivatePKCS1(t);case"private_pkcs8":if(r.includes("public"))throw new U_("Cannot export a private key from a public key");return l.toPrivatePKCS8(t);default:throw new Error("Invalid key selector")}else if("jwk"===e)switch(n){case"public":return JSON.stringify(l.toPublicJwk(t));case"private":if(r.includes("public"))throw new U_("Cannot export a private key from a public key");return JSON.stringify(l.toPrivateJwk(t));default:throw new Error("Invalid key selector")}else if("blk"===e)switch(n){case"private":if(r.includes("public"))throw new U_("Cannot export a private key from a public key");return l.toPrivateBlk(t);case"public":return l.toPublicBlk(t);default:throw new Error("Invalid key selector")}throw new D_}}var H_=V_,q_={exports:{}};
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
!function(e,n){var t=se,l=t.Buffer;function r(e,n){for(var t in e)n[t]=e[t]}function i(e,n,t){return l(e,n,t)}l.from&&l.alloc&&l.allocUnsafe&&l.allocUnsafeSlow?e.exports=t:(r(t,n),n.Buffer=i),i.prototype=Object.create(l.prototype),r(l,i),i.from=function(e,n,t){if("number"==typeof e)throw new TypeError("Argument must not be a number");return l(e,n,t)},i.alloc=function(e,n,t){if("number"!=typeof e)throw new TypeError("Argument must be a number");var r=l(e);return void 0!==n?"string"==typeof t?r.fill(n,t):r.fill(n):r.fill(0),r},i.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return l(e)},i.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return t.SlowBuffer(e)}}(q_,q_.exports);var z_=q_.exports.Buffer;var $_=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),t=0;t<n.length;t++)n[t]=255;for(var l=0;l<e.length;l++){var r=e.charAt(l),i=r.charCodeAt(0);if(255!==n[i])throw new TypeError(r+" is ambiguous");n[i]=l}var u=e.length,o=e.charAt(0),s=Math.log(u)/Math.log(256),a=Math.log(256)/Math.log(u);function c(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return z_.alloc(0);for(var t=0,l=0,r=0;e[t]===o;)l++,t++;for(var i=(e.length-t)*s+1>>>0,a=new Uint8Array(i);e[t];){var c=n[e.charCodeAt(t)];if(255===c)return;for(var h=0,f=i-1;(0!==c||h<r)&&-1!==f;f--,h++)c+=u*a[f]>>>0,a[f]=c%256>>>0,c=c/256>>>0;if(0!==c)throw new Error("Non-zero carry");r=h,t++}for(var d=i-r;d!==i&&0===a[d];)d++;var p=z_.allocUnsafe(l+(i-d));p.fill(0,0,l);for(var y=l;d!==i;)p[y++]=a[d++];return p}return{encode:function(n){if((Array.isArray(n)||n instanceof Uint8Array)&&(n=z_.from(n)),!z_.isBuffer(n))throw new TypeError("Expected Buffer");if(0===n.length)return"";for(var t=0,l=0,r=0,i=n.length;r!==i&&0===n[r];)r++,t++;for(var s=(i-r)*a+1>>>0,c=new Uint8Array(s);r!==i;){for(var h=n[r],f=0,d=s-1;(0!==h||f<l)&&-1!==d;d--,f++)h+=256*c[d]>>>0,c[d]=h%u>>>0,h=h/u>>>0;if(0!==h)throw new Error("Non-zero carry");l=f,r++}for(var p=s-l;p!==s&&0===c[p];)p++;for(var y=o.repeat(t);p<s;++p)y+=e.charAt(c[p]);return y},decodeUnsafe:c,decode:function(e){var n=c(e);if(n)return n;throw new Error("Non-base"+u+" character")}}},G_=$_("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");const W_="Impossible case. Please create issue.",J_="The tweak was out of range or the resulted private key is invalid",X_="The tweak was out of range or equal to zero",Y_="Unknow error on context randomization",Q_="Private Key is invalid",Z_="Public Key could not be parsed",eE="Public Key serialization error",nE="The sum of the public keys is not valid",tE="Signature could not be parsed",lE="The nonce generation function failed, or the private key was invalid",rE="Public key could not be recover",iE="Scalar was invalid (zero or overflow)";function uE(e,n){if(!e)throw new Error(n)}function oE(e,n,t){if(uE(n instanceof Uint8Array,`Expected ${e} to be an Uint8Array`),void 0!==t)if(Array.isArray(t)){const l=`Expected ${e} to be an Uint8Array with length [${t.join(", ")}]`;uE(t.includes(n.length),l)}else{const l=`Expected ${e} to be an Uint8Array with length ${t}`;uE(n.length===t,l)}}function sE(e){uE("Boolean"===cE(e),"Expected compressed to be a Boolean")}function aE(e=(e=>new Uint8Array(e)),n){return"function"==typeof e&&(e=e(n)),oE("output",e,n),e}function cE(e){return Object.prototype.toString.call(e).slice(8,-1)}const hE=new(0,Hm.ec)("secp256k1"),fE=hE.curve,dE=fE.n.constructor;function pE(e){const n=e[0];switch(n){case 2:case 3:return 33!==e.length?null:function(e,n){let t=new dE(n);if(t.cmp(fE.p)>=0)return null;t=t.toRed(fE.red);let l=t.redSqr().redIMul(t).redIAdd(fE.b).redSqrt();return 3===e!==l.isOdd()&&(l=l.redNeg()),hE.keyPair({pub:{x:t,y:l}})}(n,e.subarray(1,33));case 4:case 6:case 7:return 65!==e.length?null:function(e,n,t){let l=new dE(n),r=new dE(t);if(l.cmp(fE.p)>=0||r.cmp(fE.p)>=0)return null;if(l=l.toRed(fE.red),r=r.toRed(fE.red),(6===e||7===e)&&r.isOdd()!==(7===e))return null;const i=l.redSqr().redIMul(l);return r.redSqr().redISub(i.redIAdd(fE.b)).isZero()?hE.keyPair({pub:{x:l,y:r}}):null}(n,e.subarray(1,33),e.subarray(33,65));default:return null}}function yE(e,n){const t=n.encode(null,33===e.length);for(let n=0;n<e.length;++n)e[n]=t[n]}var gE={contextRandomize:()=>0,privateKeyVerify(e){const n=new dE(e);return n.cmp(fE.n)<0&&!n.isZero()?0:1},privateKeyNegate(e){const n=new dE(e),t=fE.n.sub(n).umod(fE.n).toArrayLike(Uint8Array,"be",32);return e.set(t),0},privateKeyTweakAdd(e,n){const t=new dE(n);if(t.cmp(fE.n)>=0)return 1;if(t.iadd(new dE(e)),t.cmp(fE.n)>=0&&t.isub(fE.n),t.isZero())return 1;const l=t.toArrayLike(Uint8Array,"be",32);return e.set(l),0},privateKeyTweakMul(e,n){let t=new dE(n);if(t.cmp(fE.n)>=0||t.isZero())return 1;t.imul(new dE(e)),t.cmp(fE.n)>=0&&(t=t.umod(fE.n));const l=t.toArrayLike(Uint8Array,"be",32);return e.set(l),0},publicKeyVerify:e=>null===pE(e)?1:0,publicKeyCreate(e,n){const t=new dE(n);if(t.cmp(fE.n)>=0||t.isZero())return 1;return yE(e,hE.keyFromPrivate(n).getPublic()),0},publicKeyConvert(e,n){const t=pE(n);if(null===t)return 1;return yE(e,t.getPublic()),0},publicKeyNegate(e,n){const t=pE(n);if(null===t)return 1;const l=t.getPublic();return l.y=l.y.redNeg(),yE(e,l),0},publicKeyCombine(e,n){const t=new Array(n.length);for(let e=0;e<n.length;++e)if(t[e]=pE(n[e]),null===t[e])return 1;let l=t[0].getPublic();for(let e=1;e<t.length;++e)l=l.add(t[e].pub);return l.isInfinity()?2:(yE(e,l),0)},publicKeyTweakAdd(e,n,t){const l=pE(n);if(null===l)return 1;if((t=new dE(t)).cmp(fE.n)>=0)return 2;const r=l.getPublic().add(fE.g.mul(t));return r.isInfinity()?2:(yE(e,r),0)},publicKeyTweakMul(e,n,t){const l=pE(n);if(null===l)return 1;if((t=new dE(t)).cmp(fE.n)>=0||t.isZero())return 2;return yE(e,l.getPublic().mul(t)),0},signatureNormalize(e){const n=new dE(e.subarray(0,32)),t=new dE(e.subarray(32,64));return n.cmp(fE.n)>=0||t.cmp(fE.n)>=0?1:(1===t.cmp(hE.nh)&&e.set(fE.n.sub(t).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(e,n){const t=n.subarray(0,32),l=n.subarray(32,64);if(new dE(t).cmp(fE.n)>=0)return 1;if(new dE(l).cmp(fE.n)>=0)return 1;const{output:r}=e;let i=r.subarray(4,37);i[0]=0,i.set(t,1);let u=33,o=0;for(;u>1&&0===i[o]&&!(128&i[o+1]);--u,++o);if(i=i.subarray(o),128&i[0])return 1;if(u>1&&0===i[0]&&!(128&i[1]))return 1;let s=r.subarray(39,72);s[0]=0,s.set(l,1);let a=33,c=0;for(;a>1&&0===s[c]&&!(128&s[c+1]);--a,++c);return s=s.subarray(c),128&s[0]||a>1&&0===s[0]&&!(128&s[1])?1:(e.outputlen=6+u+a,r[0]=48,r[1]=e.outputlen-2,r[2]=2,r[3]=i.length,r.set(i,4),r[4+u]=2,r[5+u]=s.length,r.set(s,6+u),0)},signatureImport(e,n){if(n.length<8)return 1;if(n.length>72)return 1;if(48!==n[0])return 1;if(n[1]!==n.length-2)return 1;if(2!==n[2])return 1;const t=n[3];if(0===t)return 1;if(5+t>=n.length)return 1;if(2!==n[4+t])return 1;const l=n[5+t];if(0===l)return 1;if(6+t+l!==n.length)return 1;if(128&n[4])return 1;if(t>1&&0===n[4]&&!(128&n[5]))return 1;if(128&n[t+6])return 1;if(l>1&&0===n[t+6]&&!(128&n[t+7]))return 1;let r=n.subarray(4,4+t);if(33===r.length&&0===r[0]&&(r=r.subarray(1)),r.length>32)return 1;let i=n.subarray(6+t);if(33===i.length&&0===i[0]&&(i=i.slice(1)),i.length>32)throw new Error("S length is too long");let u=new dE(r);u.cmp(fE.n)>=0&&(u=new dE(0));let o=new dE(n.subarray(6+t));return o.cmp(fE.n)>=0&&(o=new dE(0)),e.set(u.toArrayLike(Uint8Array,"be",32),0),e.set(o.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(e,n,t,l,r){if(r){const e=r;r=r=>{const i=e(n,t,null,l,r);if(!(i instanceof Uint8Array&&32===i.length))throw new Error("This is the way");return new dE(i)}}const i=new dE(t);if(i.cmp(fE.n)>=0||i.isZero())return 1;let u;try{u=hE.sign(n,t,{canonical:!0,k:r,pers:l})}catch(e){return 1}return e.signature.set(u.r.toArrayLike(Uint8Array,"be",32),0),e.signature.set(u.s.toArrayLike(Uint8Array,"be",32),32),e.recid=u.recoveryParam,0},ecdsaVerify(e,n,t){const l={r:e.subarray(0,32),s:e.subarray(32,64)},r=new dE(l.r),i=new dE(l.s);if(r.cmp(fE.n)>=0||i.cmp(fE.n)>=0)return 1;if(1===i.cmp(hE.nh)||r.isZero()||i.isZero())return 3;const u=pE(t);if(null===u)return 2;const o=u.getPublic();return hE.verify(n,l,o)?0:3},ecdsaRecover(e,n,t,l){const r={r:n.slice(0,32),s:n.slice(32,64)},i=new dE(r.r),u=new dE(r.s);if(i.cmp(fE.n)>=0||u.cmp(fE.n)>=0)return 1;if(i.isZero()||u.isZero())return 2;let o;try{o=hE.recoverPubKey(l,r,t)}catch(e){return 2}return yE(e,o),0},ecdh(e,n,t,l,r,i,u){const o=pE(n);if(null===o)return 1;const s=new dE(t);if(s.cmp(fE.n)>=0||s.isZero())return 2;const a=o.getPublic().mul(s);if(void 0===r){const n=a.encode(null,!0),t=hE.hash().update(n).digest();for(let n=0;n<32;++n)e[n]=t[n]}else{i||(i=new Uint8Array(32));const n=a.getX().toArray("be",32);for(let e=0;e<32;++e)i[e]=n[e];u||(u=new Uint8Array(32));const t=a.getY().toArray("be",32);for(let e=0;e<32;++e)u[e]=t[e];const o=r(i,u,l);if(!(o instanceof Uint8Array&&o.length===e.length))return 2;e.set(o)}return 0}},mE=(e=>({contextRandomize(n){if(uE(null===n||n instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),null!==n&&oE("seed",n,32),1===e.contextRandomize(n))throw new Error(Y_)},privateKeyVerify:n=>(oE("private key",n,32),0===e.privateKeyVerify(n)),privateKeyNegate(n){switch(oE("private key",n,32),e.privateKeyNegate(n)){case 0:return n;case 1:throw new Error(W_)}},privateKeyTweakAdd(n,t){switch(oE("private key",n,32),oE("tweak",t,32),e.privateKeyTweakAdd(n,t)){case 0:return n;case 1:throw new Error(J_)}},privateKeyTweakMul(n,t){switch(oE("private key",n,32),oE("tweak",t,32),e.privateKeyTweakMul(n,t)){case 0:return n;case 1:throw new Error(X_)}},publicKeyVerify:n=>(oE("public key",n,[33,65]),0===e.publicKeyVerify(n)),publicKeyCreate(n,t=!0,l){switch(oE("private key",n,32),sE(t),l=aE(l,t?33:65),e.publicKeyCreate(l,n)){case 0:return l;case 1:throw new Error(Q_);case 2:throw new Error(eE)}},publicKeyConvert(n,t=!0,l){switch(oE("public key",n,[33,65]),sE(t),l=aE(l,t?33:65),e.publicKeyConvert(l,n)){case 0:return l;case 1:throw new Error(Z_);case 2:throw new Error(eE)}},publicKeyNegate(n,t=!0,l){switch(oE("public key",n,[33,65]),sE(t),l=aE(l,t?33:65),e.publicKeyNegate(l,n)){case 0:return l;case 1:throw new Error(Z_);case 2:throw new Error(W_);case 3:throw new Error(eE)}},publicKeyCombine(n,t=!0,l){uE(Array.isArray(n),"Expected public keys to be an Array"),uE(n.length>0,"Expected public keys array will have more than zero items");for(const e of n)oE("public key",e,[33,65]);switch(sE(t),l=aE(l,t?33:65),e.publicKeyCombine(l,n)){case 0:return l;case 1:throw new Error(Z_);case 2:throw new Error(nE);case 3:throw new Error(eE)}},publicKeyTweakAdd(n,t,l=!0,r){switch(oE("public key",n,[33,65]),oE("tweak",t,32),sE(l),r=aE(r,l?33:65),e.publicKeyTweakAdd(r,n,t)){case 0:return r;case 1:throw new Error(Z_);case 2:throw new Error(J_)}},publicKeyTweakMul(n,t,l=!0,r){switch(oE("public key",n,[33,65]),oE("tweak",t,32),sE(l),r=aE(r,l?33:65),e.publicKeyTweakMul(r,n,t)){case 0:return r;case 1:throw new Error(Z_);case 2:throw new Error(X_)}},signatureNormalize(n){switch(oE("signature",n,64),e.signatureNormalize(n)){case 0:return n;case 1:throw new Error(tE)}},signatureExport(n,t){oE("signature",n,64);const l={output:t=aE(t,72),outputlen:72};switch(e.signatureExport(l,n)){case 0:return t.slice(0,l.outputlen);case 1:throw new Error(tE);case 2:throw new Error(W_)}},signatureImport(n,t){switch(oE("signature",n),t=aE(t,64),e.signatureImport(t,n)){case 0:return t;case 1:throw new Error(tE);case 2:throw new Error(W_)}},ecdsaSign(n,t,l={},r){oE("message",n,32),oE("private key",t,32),uE("Object"===cE(l),"Expected options to be an Object"),void 0!==l.data&&oE("options.data",l.data),void 0!==l.noncefn&&uE("Function"===cE(l.noncefn),"Expected options.noncefn to be a Function");const i={signature:r=aE(r,64),recid:null};switch(e.ecdsaSign(i,n,t,l.data,l.noncefn)){case 0:return i;case 1:throw new Error(lE);case 2:throw new Error(W_)}},ecdsaVerify(n,t,l){switch(oE("signature",n,64),oE("message",t,32),oE("public key",l,[33,65]),e.ecdsaVerify(n,t,l)){case 0:return!0;case 3:return!1;case 1:throw new Error(tE);case 2:throw new Error(Z_)}},ecdsaRecover(n,t,l,r=!0,i){switch(oE("signature",n,64),uE("Number"===cE(t)&&t>=0&&t<=3,"Expected recovery id to be a Number within interval [0, 3]"),oE("message",l,32),sE(r),i=aE(i,r?33:65),e.ecdsaRecover(i,n,t,l)){case 0:return i;case 1:throw new Error(tE);case 2:throw new Error(rE);case 3:throw new Error(W_)}},ecdh(n,t,l={},r){switch(oE("public key",n,[33,65]),oE("private key",t,32),uE("Object"===cE(l),"Expected options to be an Object"),void 0!==l.data&&oE("options.data",l.data),void 0!==l.hashfn?(uE("Function"===cE(l.hashfn),"Expected options.hashfn to be a Function"),void 0!==l.xbuf&&oE("options.xbuf",l.xbuf,32),void 0!==l.ybuf&&oE("options.ybuf",l.ybuf,32),oE("output",r)):r=aE(r,32),e.ecdh(r,n,t,l.data,l.hashfn,l.xbuf,l.ybuf)){case 0:return r;case 1:throw new Error(Z_);case 2:throw new Error(iE)}}}))(gE);const vE="undefined"==typeof Buffer?S:Buffer,bE=e=>{const n=(e=>{const n=H_.from({...e,crv:"K-256"},"jwk").toString("blk","public"),t=mE.publicKeyConvert(vE.from(n,"hex"),!0);return vE.from(t).toString("hex")})(e);let t=vE.from(n,"hex"),l=32-t.length;for(;l>0;)t=vE.concat([vE.from("00","hex"),t]),l--;return t};var wE={},_E={},EE={},SE={},xE={exports:{}},kE={},IE=t(eo),PE=IE.EventEmitter;function AE(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function TE(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function OE(e,n){for(var t=0;t<n.length;t++){var l=n[t];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}var ME=se.Buffer,RE=Xa.inspect,NE=RE&&RE.custom||"inspect";function CE(e,n,t){ME.prototype.copy.call(e,n,t)}var LE=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var n,t,l;return n=e,t=[{key:"push",value:function(e){var n={data:e,next:null};this.length>0?this.tail.next=n:this.head=n,this.tail=n,++this.length}},{key:"unshift",value:function(e){var n={data:e,next:this.head};0===this.length&&(this.tail=n),this.head=n,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var n=this.head,t=""+n.data;n=n.next;)t+=e+n.data;return t}},{key:"concat",value:function(e){if(0===this.length)return ME.alloc(0);for(var n=ME.allocUnsafe(e>>>0),t=this.head,l=0;t;)CE(t.data,n,l),l+=t.data.length,t=t.next;return n}},{key:"consume",value:function(e,n){var t;return e<this.head.data.length?(t=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):t=e===this.head.data.length?this.shift():n?this._getString(e):this._getBuffer(e),t}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var n=this.head,t=1,l=n.data;for(e-=l.length;n=n.next;){var r=n.data,i=e>r.length?r.length:e;if(i===r.length?l+=r:l+=r.slice(0,e),0==(e-=i)){i===r.length?(++t,n.next?this.head=n.next:this.head=this.tail=null):(this.head=n,n.data=r.slice(i));break}++t}return this.length-=t,l}},{key:"_getBuffer",value:function(e){var n=ME.allocUnsafe(e),t=this.head,l=1;for(t.data.copy(n),e-=t.data.length;t=t.next;){var r=t.data,i=e>r.length?r.length:e;if(r.copy(n,n.length-e,0,i),0==(e-=i)){i===r.length?(++l,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=r.slice(i));break}++l}return this.length-=l,n}},{key:NE,value:function(e,n){return RE(this,function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?AE(Object(t),!0).forEach((function(n){TE(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):AE(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},n,{depth:0,customInspect:!1}))}}],t&&OE(n.prototype,t),l&&OE(n,l),e}();function jE(e,n){DE(e,n),UE(e)}function UE(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function DE(e,n){e.emit("error",n)}var BE={destroy:function(e,n){var t=this,l=this._readableState&&this._readableState.destroyed,r=this._writableState&&this._writableState.destroyed;return l||r?(n?n(e):e&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,Jr(DE,this,e)):Jr(DE,this,e)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,(function(e){!n&&e?t._writableState?t._writableState.errorEmitted?Jr(UE,t):(t._writableState.errorEmitted=!0,Jr(jE,t,e)):Jr(jE,t,e):n?(Jr(UE,t),n(e)):Jr(UE,t)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,n){var t=e._readableState,l=e._writableState;t&&t.autoDestroy||l&&l.autoDestroy?e.destroy(n):e.emit("error",n)}},KE={};var FE={};function VE(e,n,t){t||(t=Error);var l=function(e){var t,l;function r(t,l,r){return e.call(this,function(e,t,l){return"string"==typeof n?n:n(e,t,l)}(t,l,r))||this}return l=e,(t=r).prototype=Object.create(l.prototype),t.prototype.constructor=t,t.__proto__=l,r}(t);l.prototype.name=t.name,l.prototype.code=e,FE[e]=l}function HE(e,n){if(Array.isArray(e)){var t=e.length;return e=e.map((function(e){return String(e)})),t>2?"one of ".concat(n," ").concat(e.slice(0,t-1).join(", "),", or ")+e[t-1]:2===t?"one of ".concat(n," ").concat(e[0]," or ").concat(e[1]):"of ".concat(n," ").concat(e[0])}return"of ".concat(n," ").concat(String(e))}VE("ERR_INVALID_OPT_VALUE",(function(e,n){return'The value "'+n+'" is invalid for option "'+e+'"'}),TypeError),VE("ERR_INVALID_ARG_TYPE",(function(e,n,t){var l,r,i,u;if("string"==typeof n&&(r="not ",n.substr(!i||i<0?0:+i,r.length)===r)?(l="must not be",n=n.replace(/^not /,"")):l="must be",function(e,n,t){return(void 0===t||t>e.length)&&(t=e.length),e.substring(t-n.length,t)===n}(e," argument"))u="The ".concat(e," ").concat(l," ").concat(HE(n,"type"));else{var o=function(e,n,t){return"number"!=typeof t&&(t=0),!(t+n.length>e.length)&&-1!==e.indexOf(n,t)}(e,".")?"property":"argument";u='The "'.concat(e,'" ').concat(o," ").concat(l," ").concat(HE(n,"type"))}return u+=". Received type ".concat(typeof t)}),TypeError),VE("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),VE("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),VE("ERR_STREAM_PREMATURE_CLOSE","Premature close"),VE("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),VE("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),VE("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),VE("ERR_STREAM_WRITE_AFTER_END","write after end"),VE("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),VE("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),VE("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),KE.codes=FE;var qE=KE.codes.ERR_INVALID_OPT_VALUE;var zE={getHighWaterMark:function(e,n,t,l){var r=function(e,n,t){return null!=e.highWaterMark?e.highWaterMark:n?e[t]:null}(n,l,t);if(null!=r){if(!isFinite(r)||Math.floor(r)!==r||r<0)throw new qE(l?t:"highWaterMark",r);return Math.floor(r)}return e.objectMode?16:16384}},$E={},GE=q_.exports.Buffer,WE=GE.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function JE(e){var n;switch(this.encoding=function(e){var n=function(e){if(!e)return"utf8";for(var n;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(n)return;e=(""+e).toLowerCase(),n=!0}}(e);if("string"!=typeof n&&(GE.isEncoding===WE||!WE(e)))throw new Error("Unknown encoding: "+e);return n||e}(e),this.encoding){case"utf16le":this.text=QE,this.end=ZE,n=4;break;case"utf8":this.fillLast=YE,n=4;break;case"base64":this.text=eS,this.end=nS,n=3;break;default:return this.write=tS,void(this.end=lS)}this.lastNeed=0,this.lastTotal=0,this.lastChar=GE.allocUnsafe(n)}function XE(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function YE(e){var n=this.lastTotal-this.lastNeed,t=function(e,n,t){if(128!=(192&n[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&n.length>1){if(128!=(192&n[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&n.length>2&&128!=(192&n[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==t?t:this.lastNeed<=e.length?(e.copy(this.lastChar,n,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,n,0,e.length),void(this.lastNeed-=e.length))}function QE(e,n){if((e.length-n)%2==0){var t=e.toString("utf16le",n);if(t){var l=t.charCodeAt(t.length-1);if(l>=55296&&l<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],t.slice(0,-1)}return t}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",n,e.length-1)}function ZE(e){var n=e&&e.length?this.write(e):"";if(this.lastNeed){var t=this.lastTotal-this.lastNeed;return n+this.lastChar.toString("utf16le",0,t)}return n}function eS(e,n){var t=(e.length-n)%3;return 0===t?e.toString("base64",n):(this.lastNeed=3-t,this.lastTotal=3,1===t?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",n,e.length-t))}function nS(e){var n=e&&e.length?this.write(e):"";return this.lastNeed?n+this.lastChar.toString("base64",0,3-this.lastNeed):n}function tS(e){return e.toString(this.encoding)}function lS(e){return e&&e.length?this.write(e):""}$E.StringDecoder=JE,JE.prototype.write=function(e){if(0===e.length)return"";var n,t;if(this.lastNeed){if(void 0===(n=this.fillLast(e)))return"";t=this.lastNeed,this.lastNeed=0}else t=0;return t<e.length?n?n+this.text(e,t):this.text(e,t):n||""},JE.prototype.end=function(e){var n=e&&e.length?this.write(e):"";return this.lastNeed?n+"�":n},JE.prototype.text=function(e,n){var t=function(e,n,t){var l=n.length-1;if(l<t)return 0;var r=XE(n[l]);if(r>=0)return r>0&&(e.lastNeed=r-1),r;if(--l<t||-2===r)return 0;if((r=XE(n[l]))>=0)return r>0&&(e.lastNeed=r-2),r;if(--l<t||-2===r)return 0;if((r=XE(n[l]))>=0)return r>0&&(2===r?r=0:e.lastNeed=r-3),r;return 0}(this,e,n);if(!this.lastNeed)return e.toString("utf8",n);this.lastTotal=t;var l=e.length-(t-this.lastNeed);return e.copy(this.lastChar,0,l),e.toString("utf8",n,l)},JE.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length};var rS=KE.codes.ERR_STREAM_PREMATURE_CLOSE;function iS(){}var uS,oS=function e(n,t,l){if("function"==typeof t)return e(n,null,t);t||(t={}),l=function(e){var n=!1;return function(){if(!n){n=!0;for(var t=arguments.length,l=new Array(t),r=0;r<t;r++)l[r]=arguments[r];e.apply(this,l)}}}(l||iS);var r=t.readable||!1!==t.readable&&n.readable,i=t.writable||!1!==t.writable&&n.writable,u=function(){n.writable||s()},o=n._writableState&&n._writableState.finished,s=function(){i=!1,o=!0,r||l.call(n)},a=n._readableState&&n._readableState.endEmitted,c=function(){r=!1,a=!0,i||l.call(n)},h=function(e){l.call(n,e)},f=function(){var e;return r&&!a?(n._readableState&&n._readableState.ended||(e=new rS),l.call(n,e)):i&&!o?(n._writableState&&n._writableState.ended||(e=new rS),l.call(n,e)):void 0},d=function(){n.req.on("finish",s)};return!function(e){return e.setHeader&&"function"==typeof e.abort}(n)?i&&!n._writableState&&(n.on("end",u),n.on("close",u)):(n.on("complete",s),n.on("abort",f),n.req?d():n.on("request",d)),n.on("end",c),n.on("finish",s),!1!==t.error&&n.on("error",h),n.on("close",f),function(){n.removeListener("complete",s),n.removeListener("abort",f),n.removeListener("request",d),n.req&&n.req.removeListener("finish",s),n.removeListener("end",u),n.removeListener("close",u),n.removeListener("finish",s),n.removeListener("end",c),n.removeListener("error",h),n.removeListener("close",f)}};function sS(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var aS=oS,cS=Symbol("lastResolve"),hS=Symbol("lastReject"),fS=Symbol("error"),dS=Symbol("ended"),pS=Symbol("lastPromise"),yS=Symbol("handlePromise"),gS=Symbol("stream");function mS(e,n){return{value:e,done:n}}function vS(e){var n=e[cS];if(null!==n){var t=e[gS].read();null!==t&&(e[pS]=null,e[cS]=null,e[hS]=null,n(mS(t,!1)))}}function bS(e){Jr(vS,e)}var wS=Object.getPrototypeOf((function(){})),_S=Object.setPrototypeOf((uS={get stream(){return this[gS]},next:function(){var e=this,n=this[fS];if(null!==n)return Promise.reject(n);if(this[dS])return Promise.resolve(mS(void 0,!0));if(this[gS].destroyed)return new Promise((function(n,t){Jr((function(){e[fS]?t(e[fS]):n(mS(void 0,!0))}))}));var t,l=this[pS];if(l)t=new Promise(function(e,n){return function(t,l){e.then((function(){n[dS]?t(mS(void 0,!0)):n[yS](t,l)}),l)}}(l,this));else{var r=this[gS].read();if(null!==r)return Promise.resolve(mS(r,!1));t=new Promise(this[yS])}return this[pS]=t,t}},sS(uS,Symbol.asyncIterator,(function(){return this})),sS(uS,"return",(function(){var e=this;return new Promise((function(n,t){e[gS].destroy(null,(function(e){e?t(e):n(mS(void 0,!0))}))}))})),uS),wS),ES=function(e){var n,t=Object.create(_S,(sS(n={},gS,{value:e,writable:!0}),sS(n,cS,{value:null,writable:!0}),sS(n,hS,{value:null,writable:!0}),sS(n,fS,{value:null,writable:!0}),sS(n,dS,{value:e._readableState.endEmitted,writable:!0}),sS(n,yS,{value:function(e,n){var l=t[gS].read();l?(t[pS]=null,t[cS]=null,t[hS]=null,e(mS(l,!1))):(t[cS]=e,t[hS]=n)},writable:!0}),n));return t[pS]=null,aS(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var n=t[hS];return null!==n&&(t[pS]=null,t[cS]=null,t[hS]=null,n(e)),void(t[fS]=e)}var l=t[cS];null!==l&&(t[pS]=null,t[cS]=null,t[hS]=null,l(mS(void 0,!0))),t[dS]=!0})),e.on("readable",bS.bind(null,t)),t},SS=function(){throw new Error("Readable.from is not available in the browser")};const xS=kE;xS.Readable=zS,zS.ReadableState=qS,IE.EventEmitter;var kS=function(e,n){return e.listeners(n).length},IS=PE,PS=se.Buffer,AS=n.Uint8Array||function(){};var TS,OS=Xa;TS=OS&&OS.debuglog?OS.debuglog("stream"):function(){};var MS,RS,NS,CS=LE,LS=BE,jS=zE.getHighWaterMark,US=KE.codes,DS=US.ERR_INVALID_ARG_TYPE,BS=US.ERR_STREAM_PUSH_AFTER_EOF,KS=US.ERR_METHOD_NOT_IMPLEMENTED,FS=US.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;vg.exports(zS,IS);var VS=LS.errorOrDestroy,HS=["error","close","destroy","pause","resume"];function qS(e,n,t){e=e||{},"boolean"!=typeof t&&(t=n instanceof xS.Duplex),this.objectMode=!!e.objectMode,t&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=jS(this,e,"readableHighWaterMark",t),this.buffer=new CS,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(MS||(MS=$E.StringDecoder),this.decoder=new MS(e.encoding),this.encoding=e.encoding)}function zS(e){if(!(this instanceof zS))return new zS(e);var n=this instanceof xS.Duplex;this._readableState=new qS(e,this,n),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),IS.call(this)}function $S(e,n,t,l,r){TS("readableAddChunk",n);var i,u=e._readableState;if(null===n)u.reading=!1,function(e,n){if(TS("onEofChunk"),n.ended)return;if(n.decoder){var t=n.decoder.end();t&&t.length&&(n.buffer.push(t),n.length+=n.objectMode?1:t.length)}n.ended=!0,n.sync?XS(e):(n.needReadable=!1,n.emittedReadable||(n.emittedReadable=!0,YS(e)))}(e,u);else if(r||(i=function(e,n){var t;l=n,PS.isBuffer(l)||l instanceof AS||"string"==typeof n||void 0===n||e.objectMode||(t=new DS("chunk",["string","Buffer","Uint8Array"],n));var l;return t}(u,n)),i)VS(e,i);else if(u.objectMode||n&&n.length>0)if("string"==typeof n||u.objectMode||Object.getPrototypeOf(n)===PS.prototype||(n=function(e){return PS.from(e)}(n)),l)u.endEmitted?VS(e,new FS):GS(e,u,n,!0);else if(u.ended)VS(e,new BS);else{if(u.destroyed)return!1;u.reading=!1,u.decoder&&!t?(n=u.decoder.write(n),u.objectMode||0!==n.length?GS(e,u,n,!1):QS(e,u)):GS(e,u,n,!1)}else l||(u.reading=!1,QS(e,u));return!u.ended&&(u.length<u.highWaterMark||0===u.length)}function GS(e,n,t,l){n.flowing&&0===n.length&&!n.sync?(n.awaitDrain=0,e.emit("data",t)):(n.length+=n.objectMode?1:t.length,l?n.buffer.unshift(t):n.buffer.push(t),n.needReadable&&XS(e)),QS(e,n)}Object.defineProperty(zS.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),zS.prototype.destroy=LS.destroy,zS.prototype._undestroy=LS.undestroy,zS.prototype._destroy=function(e,n){n(e)},zS.prototype.push=function(e,n){var t,l=this._readableState;return l.objectMode?t=!0:"string"==typeof e&&((n=n||l.defaultEncoding)!==l.encoding&&(e=PS.from(e,n),n=""),t=!0),$S(this,e,n,!1,t)},zS.prototype.unshift=function(e){return $S(this,e,null,!0,!1)},zS.prototype.isPaused=function(){return!1===this._readableState.flowing},zS.prototype.setEncoding=function(e){MS||(MS=$E.StringDecoder);var n=new MS(e);this._readableState.decoder=n,this._readableState.encoding=this._readableState.decoder.encoding;for(var t=this._readableState.buffer.head,l="";null!==t;)l+=n.write(t.data),t=t.next;return this._readableState.buffer.clear(),""!==l&&this._readableState.buffer.push(l),this._readableState.length=l.length,this};var WS=1073741824;function JS(e,n){return e<=0||0===n.length&&n.ended?0:n.objectMode?1:e!=e?n.flowing&&n.length?n.buffer.head.data.length:n.length:(e>n.highWaterMark&&(n.highWaterMark=function(e){return e>=WS?e=WS:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=n.length?e:n.ended?n.length:(n.needReadable=!0,0))}function XS(e){var n=e._readableState;TS("emitReadable",n.needReadable,n.emittedReadable),n.needReadable=!1,n.emittedReadable||(TS("emitReadable",n.flowing),n.emittedReadable=!0,Jr(YS,e))}function YS(e){var n=e._readableState;TS("emitReadable_",n.destroyed,n.length,n.ended),n.destroyed||!n.length&&!n.ended||(e.emit("readable"),n.emittedReadable=!1),n.needReadable=!n.flowing&&!n.ended&&n.length<=n.highWaterMark,lx(e)}function QS(e,n){n.readingMore||(n.readingMore=!0,Jr(ZS,e,n))}function ZS(e,n){for(;!n.reading&&!n.ended&&(n.length<n.highWaterMark||n.flowing&&0===n.length);){var t=n.length;if(TS("maybeReadMore read 0"),e.read(0),t===n.length)break}n.readingMore=!1}function ex(e){var n=e._readableState;n.readableListening=e.listenerCount("readable")>0,n.resumeScheduled&&!n.paused?n.flowing=!0:e.listenerCount("data")>0&&e.resume()}function nx(e){TS("readable nexttick read 0"),e.read(0)}function tx(e,n){TS("resume",n.reading),n.reading||e.read(0),n.resumeScheduled=!1,e.emit("resume"),lx(e),n.flowing&&!n.reading&&e.read(0)}function lx(e){var n=e._readableState;for(TS("flow",n.flowing);n.flowing&&null!==e.read(););}function rx(e,n){return 0===n.length?null:(n.objectMode?t=n.buffer.shift():!e||e>=n.length?(t=n.decoder?n.buffer.join(""):1===n.buffer.length?n.buffer.first():n.buffer.concat(n.length),n.buffer.clear()):t=n.buffer.consume(e,n.decoder),t);var t}function ix(e){var n=e._readableState;TS("endReadable",n.endEmitted),n.endEmitted||(n.ended=!0,Jr(ux,n,e))}function ux(e,n){if(TS("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,n.readable=!1,n.emit("end"),e.autoDestroy)){var t=n._writableState;(!t||t.autoDestroy&&t.finished)&&n.destroy()}}function ox(e,n){for(var t=0,l=e.length;t<l;t++)if(e[t]===n)return t;return-1}zS.prototype.read=function(e){TS("read",e),e=parseInt(e,10);var n=this._readableState,t=e;if(0!==e&&(n.emittedReadable=!1),0===e&&n.needReadable&&((0!==n.highWaterMark?n.length>=n.highWaterMark:n.length>0)||n.ended))return TS("read: emitReadable",n.length,n.ended),0===n.length&&n.ended?ix(this):XS(this),null;if(0===(e=JS(e,n))&&n.ended)return 0===n.length&&ix(this),null;var l,r=n.needReadable;return TS("need readable",r),(0===n.length||n.length-e<n.highWaterMark)&&TS("length less than watermark",r=!0),n.ended||n.reading?TS("reading or ended",r=!1):r&&(TS("do read"),n.reading=!0,n.sync=!0,0===n.length&&(n.needReadable=!0),this._read(n.highWaterMark),n.sync=!1,n.reading||(e=JS(t,n))),null===(l=e>0?rx(e,n):null)?(n.needReadable=n.length<=n.highWaterMark,e=0):(n.length-=e,n.awaitDrain=0),0===n.length&&(n.ended||(n.needReadable=!0),t!==e&&n.ended&&ix(this)),null!==l&&this.emit("data",l),l},zS.prototype._read=function(e){VS(this,new KS("_read()"))},zS.prototype.pipe=function(e,n){var t=this,l=this._readableState;switch(l.pipesCount){case 0:l.pipes=e;break;case 1:l.pipes=[l.pipes,e];break;default:l.pipes.push(e)}l.pipesCount+=1,TS("pipe count=%d opts=%j",l.pipesCount,n);var r=(!n||!1!==n.end)&&e!==si.stdout&&e!==si.stderr?u:d;function i(n,r){TS("onunpipe"),n===t&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,TS("cleanup"),e.removeListener("close",h),e.removeListener("finish",f),e.removeListener("drain",o),e.removeListener("error",c),e.removeListener("unpipe",i),t.removeListener("end",u),t.removeListener("end",d),t.removeListener("data",a),s=!0,!l.awaitDrain||e._writableState&&!e._writableState.needDrain||o())}function u(){TS("onend"),e.end()}l.endEmitted?Jr(r):t.once("end",r),e.on("unpipe",i);var o=function(e){return function(){var n=e._readableState;TS("pipeOnDrain",n.awaitDrain),n.awaitDrain&&n.awaitDrain--,0===n.awaitDrain&&kS(e,"data")&&(n.flowing=!0,lx(e))}}(t);e.on("drain",o);var s=!1;function a(n){TS("ondata");var r=e.write(n);TS("dest.write",r),!1===r&&((1===l.pipesCount&&l.pipes===e||l.pipesCount>1&&-1!==ox(l.pipes,e))&&!s&&(TS("false write response, pause",l.awaitDrain),l.awaitDrain++),t.pause())}function c(n){TS("onerror",n),d(),e.removeListener("error",c),0===kS(e,"error")&&VS(e,n)}function h(){e.removeListener("finish",f),d()}function f(){TS("onfinish"),e.removeListener("close",h),d()}function d(){TS("unpipe"),t.unpipe(e)}return t.on("data",a),function(e,n,t){if("function"==typeof e.prependListener)return e.prependListener(n,t);e._events&&e._events[n]?Array.isArray(e._events[n])?e._events[n].unshift(t):e._events[n]=[t,e._events[n]]:e.on(n,t)}(e,"error",c),e.once("close",h),e.once("finish",f),e.emit("pipe",t),l.flowing||(TS("pipe resume"),t.resume()),e},zS.prototype.unpipe=function(e){var n=this._readableState,t={hasUnpiped:!1};if(0===n.pipesCount)return this;if(1===n.pipesCount)return e&&e!==n.pipes||(e||(e=n.pipes),n.pipes=null,n.pipesCount=0,n.flowing=!1,e&&e.emit("unpipe",this,t)),this;if(!e){var l=n.pipes,r=n.pipesCount;n.pipes=null,n.pipesCount=0,n.flowing=!1;for(var i=0;i<r;i++)l[i].emit("unpipe",this,{hasUnpiped:!1});return this}var u=ox(n.pipes,e);return-1===u||(n.pipes.splice(u,1),n.pipesCount-=1,1===n.pipesCount&&(n.pipes=n.pipes[0]),e.emit("unpipe",this,t)),this},zS.prototype.on=function(e,n){var t=IS.prototype.on.call(this,e,n),l=this._readableState;return"data"===e?(l.readableListening=this.listenerCount("readable")>0,!1!==l.flowing&&this.resume()):"readable"===e&&(l.endEmitted||l.readableListening||(l.readableListening=l.needReadable=!0,l.flowing=!1,l.emittedReadable=!1,TS("on readable",l.length,l.reading),l.length?XS(this):l.reading||Jr(nx,this))),t},zS.prototype.addListener=zS.prototype.on,zS.prototype.removeListener=function(e,n){var t=IS.prototype.removeListener.call(this,e,n);return"readable"===e&&Jr(ex,this),t},zS.prototype.removeAllListeners=function(e){var n=IS.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||Jr(ex,this),n},zS.prototype.resume=function(){var e=this._readableState;return e.flowing||(TS("resume"),e.flowing=!e.readableListening,function(e,n){n.resumeScheduled||(n.resumeScheduled=!0,Jr(tx,e,n))}(this,e)),e.paused=!1,this},zS.prototype.pause=function(){return TS("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(TS("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},zS.prototype.wrap=function(e){var n=this,t=this._readableState,l=!1;for(var r in e.on("end",(function(){if(TS("wrapped end"),t.decoder&&!t.ended){var e=t.decoder.end();e&&e.length&&n.push(e)}n.push(null)})),e.on("data",(function(r){(TS("wrapped data"),t.decoder&&(r=t.decoder.write(r)),t.objectMode&&null==r)||(t.objectMode||r&&r.length)&&(n.push(r)||(l=!0,e.pause()))})),e)void 0===this[r]&&"function"==typeof e[r]&&(this[r]=function(n){return function(){return e[n].apply(e,arguments)}}(r));for(var i=0;i<HS.length;i++)e.on(HS[i],this.emit.bind(this,HS[i]));return this._read=function(n){TS("wrapped _read",n),l&&(l=!1,e.resume())},this},"function"==typeof Symbol&&(zS.prototype[Symbol.asyncIterator]=function(){return void 0===RS&&(RS=ES),RS(this)}),Object.defineProperty(zS.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(zS.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(zS.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),zS._fromList=rx,Object.defineProperty(zS.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(zS.from=function(e,n){return void 0===NS&&(NS=SS),NS(zS,e,n)});var sx=function(e,n){if(ax("noDeprecation"))return e;var t=!1;return function(){if(!t){if(ax("throwDeprecation"))throw new Error(n);ax("traceDeprecation")?console.trace(n):console.warn(n),t=!0}return e.apply(this,arguments)}};function ax(e){try{if(!n.localStorage)return!1}catch(e){return!1}var t=n.localStorage[e];return null!=t&&"true"===String(t).toLowerCase()}const cx=kE;function hx(e){var n=this;this.next=null,this.entry=null,this.finish=function(){!function(e,n,t){var l=e.entry;e.entry=null;for(;l;){var r=l.callback;n.pendingcb--,r(t),l=l.next}n.corkedRequestsFree.next=e}(n,e)}}cx.Writable=Mx,Mx.WritableState=Ox;var fx={deprecate:sx},dx=PE,px=se.Buffer,yx=n.Uint8Array||function(){};var gx,mx=BE,vx=zE.getHighWaterMark,bx=KE.codes,wx=bx.ERR_INVALID_ARG_TYPE,_x=bx.ERR_METHOD_NOT_IMPLEMENTED,Ex=bx.ERR_MULTIPLE_CALLBACK,Sx=bx.ERR_STREAM_CANNOT_PIPE,xx=bx.ERR_STREAM_DESTROYED,kx=bx.ERR_STREAM_NULL_VALUES,Ix=bx.ERR_STREAM_WRITE_AFTER_END,Px=bx.ERR_UNKNOWN_ENCODING,Ax=mx.errorOrDestroy;function Tx(){}function Ox(e,n,t){e=e||{},"boolean"!=typeof t&&(t=n instanceof cx.Duplex),this.objectMode=!!e.objectMode,t&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=vx(this,e,"writableHighWaterMark",t),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var l=!1===e.decodeStrings;this.decodeStrings=!l,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,n){var t=e._writableState,l=t.sync,r=t.writecb;if("function"!=typeof r)throw new Ex;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(t),n)!function(e,n,t,l,r){--n.pendingcb,t?(Jr(r,l),Jr(Ux,e,n),e._writableState.errorEmitted=!0,Ax(e,l)):(r(l),e._writableState.errorEmitted=!0,Ax(e,l),Ux(e,n))}(e,t,l,n,r);else{var i=Lx(t)||e.destroyed;i||t.corked||t.bufferProcessing||!t.bufferedRequest||Cx(e,t),l?Jr(Nx,e,t,i,r):Nx(e,t,i,r)}}(n,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new hx(this)}function Mx(e){var n=this instanceof cx.Duplex;if(!n&&!gx.call(Mx,this))return new Mx(e);this._writableState=new Ox(e,this,n),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),dx.call(this)}function Rx(e,n,t,l,r,i,u){n.writelen=l,n.writecb=u,n.writing=!0,n.sync=!0,n.destroyed?n.onwrite(new xx("write")):t?e._writev(r,n.onwrite):e._write(r,i,n.onwrite),n.sync=!1}function Nx(e,n,t,l){t||function(e,n){0===n.length&&n.needDrain&&(n.needDrain=!1,e.emit("drain"))}(e,n),n.pendingcb--,l(),Ux(e,n)}function Cx(e,n){n.bufferProcessing=!0;var t=n.bufferedRequest;if(e._writev&&t&&t.next){var l=n.bufferedRequestCount,r=new Array(l),i=n.corkedRequestsFree;i.entry=t;for(var u=0,o=!0;t;)r[u]=t,t.isBuf||(o=!1),t=t.next,u+=1;r.allBuffers=o,Rx(e,n,!0,n.length,r,"",i.finish),n.pendingcb++,n.lastBufferedRequest=null,i.next?(n.corkedRequestsFree=i.next,i.next=null):n.corkedRequestsFree=new hx(n),n.bufferedRequestCount=0}else{for(;t;){var s=t.chunk,a=t.encoding,c=t.callback;if(Rx(e,n,!1,n.objectMode?1:s.length,s,a,c),t=t.next,n.bufferedRequestCount--,n.writing)break}null===t&&(n.lastBufferedRequest=null)}n.bufferedRequest=t,n.bufferProcessing=!1}function Lx(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function jx(e,n){e._final((function(t){n.pendingcb--,t&&Ax(e,t),n.prefinished=!0,e.emit("prefinish"),Ux(e,n)}))}function Ux(e,n){var t=Lx(n);if(t&&(function(e,n){n.prefinished||n.finalCalled||("function"!=typeof e._final||n.destroyed?(n.prefinished=!0,e.emit("prefinish")):(n.pendingcb++,n.finalCalled=!0,Jr(jx,e,n)))}(e,n),0===n.pendingcb&&(n.finished=!0,e.emit("finish"),n.autoDestroy))){var l=e._readableState;(!l||l.autoDestroy&&l.endEmitted)&&e.destroy()}return t}vg.exports(Mx,dx),Ox.prototype.getBuffer=function(){for(var e=this.bufferedRequest,n=[];e;)n.push(e),e=e.next;return n},function(){try{Object.defineProperty(Ox.prototype,"buffer",{get:fx.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(gx=Function.prototype[Symbol.hasInstance],Object.defineProperty(Mx,Symbol.hasInstance,{value:function(e){return!!gx.call(this,e)||this===Mx&&(e&&e._writableState instanceof Ox)}})):gx=function(e){return e instanceof this},Mx.prototype.pipe=function(){Ax(this,new Sx)},Mx.prototype.write=function(e,n,t){var l,r=this._writableState,i=!1,u=!r.objectMode&&(l=e,px.isBuffer(l)||l instanceof yx);return u&&!px.isBuffer(e)&&(e=function(e){return px.from(e)}(e)),"function"==typeof n&&(t=n,n=null),u?n="buffer":n||(n=r.defaultEncoding),"function"!=typeof t&&(t=Tx),r.ending?function(e,n){var t=new Ix;Ax(e,t),Jr(n,t)}(this,t):(u||function(e,n,t,l){var r;return null===t?r=new kx:"string"==typeof t||n.objectMode||(r=new wx("chunk",["string","Buffer"],t)),!r||(Ax(e,r),Jr(l,r),!1)}(this,r,e,t))&&(r.pendingcb++,i=function(e,n,t,l,r,i){if(!t){var u=function(e,n,t){e.objectMode||!1===e.decodeStrings||"string"!=typeof n||(n=px.from(n,t));return n}(n,l,r);l!==u&&(t=!0,r="buffer",l=u)}var o=n.objectMode?1:l.length;n.length+=o;var s=n.length<n.highWaterMark;s||(n.needDrain=!0);if(n.writing||n.corked){var a=n.lastBufferedRequest;n.lastBufferedRequest={chunk:l,encoding:r,isBuf:t,callback:i,next:null},a?a.next=n.lastBufferedRequest:n.bufferedRequest=n.lastBufferedRequest,n.bufferedRequestCount+=1}else Rx(e,n,!1,o,l,r,i);return s}(this,r,u,e,n,t)),i},Mx.prototype.cork=function(){this._writableState.corked++},Mx.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||Cx(this,e))},Mx.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new Px(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(Mx.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(Mx.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Mx.prototype._write=function(e,n,t){t(new _x("_write()"))},Mx.prototype._writev=null,Mx.prototype.end=function(e,n,t){var l=this._writableState;return"function"==typeof e?(t=e,e=null,n=null):"function"==typeof n&&(t=n,n=null),null!=e&&this.write(e,n),l.corked&&(l.corked=1,this.uncork()),l.ending||function(e,n,t){n.ending=!0,Ux(e,n),t&&(n.finished?Jr(t):e.once("finish",t));n.ended=!0,e.writable=!1}(this,l,t),this},Object.defineProperty(Mx.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(Mx.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),Mx.prototype.destroy=mx.destroy,Mx.prototype._undestroy=mx.undestroy,Mx.prototype._destroy=function(e,n){n(e)};var Dx=Object.keys||function(e){var n=[];for(var t in e)n.push(t);return n};const Bx=kE;Bx.Duplex=Hx,vg.exports(Hx,Bx.Readable);for(var Kx=Dx(Bx.Writable.prototype),Fx=0;Fx<Kx.length;Fx++){var Vx=Kx[Fx];Hx.prototype[Vx]||(Hx.prototype[Vx]=Bx.Writable.prototype[Vx])}function Hx(e){if(!(this instanceof Hx))return new Hx(e);Bx.Readable.call(this,e),Bx.Writable.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",qx)))}function qx(){this._writableState.ended||Jr(zx,this)}function zx(e){e.end()}Object.defineProperty(Hx.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(Hx.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(Hx.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(Hx.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}});const $x=kE;$x.Transform=Zx;var Gx=KE.codes,Wx=Gx.ERR_METHOD_NOT_IMPLEMENTED,Jx=Gx.ERR_MULTIPLE_CALLBACK,Xx=Gx.ERR_TRANSFORM_ALREADY_TRANSFORMING,Yx=Gx.ERR_TRANSFORM_WITH_LENGTH_0;function Qx(e,n){var t=this._transformState;t.transforming=!1;var l=t.writecb;if(null===l)return this.emit("error",new Jx);t.writechunk=null,t.writecb=null,null!=n&&this.push(n),l(e);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}function Zx(e){if(!(this instanceof Zx))return new Zx(e);$x.Duplex.call(this,e),this._transformState={afterTransform:Qx.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",ek)}function ek(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?nk(this,null,null):this._flush((function(n,t){nk(e,n,t)}))}function nk(e,n,t){if(n)return e.emit("error",n);if(null!=t&&e.push(t),e._writableState.length)throw new Yx;if(e._transformState.transforming)throw new Xx;return e.push(null)}vg.exports(Zx,$x.Duplex),Zx.prototype.push=function(e,n){return this._transformState.needTransform=!1,$x.Duplex.prototype.push.call(this,e,n)},Zx.prototype._transform=function(e,n,t){t(new Wx("_transform()"))},Zx.prototype._write=function(e,n,t){var l=this._transformState;if(l.writecb=t,l.writechunk=e,l.writeencoding=n,!l.transforming){var r=this._readableState;(l.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},Zx.prototype._read=function(e){var n=this._transformState;null===n.writechunk||n.transforming?n.needTransform=!0:(n.transforming=!0,this._transform(n.writechunk,n.writeencoding,n.afterTransform))},Zx.prototype._destroy=function(e,n){$x.Duplex.prototype._destroy.call(this,e,(function(e){n(e)}))};const tk=kE;function lk(e){if(!(this instanceof lk))return new lk(e);Transform.call(this,e)}var rk;tk.PassThrough=lk,vg.exports(lk,tk.Transform),lk.prototype._transform=function(e,n,t){t(null,e)};var ik=KE.codes,uk=ik.ERR_MISSING_ARGS,ok=ik.ERR_STREAM_DESTROYED;function sk(e){if(e)throw e}function ak(e,n,t,l){l=function(e){var n=!1;return function(){n||(n=!0,e.apply(void 0,arguments))}}(l);var r=!1;e.on("close",(function(){r=!0})),void 0===rk&&(rk=oS),rk(e,{readable:n,writable:t},(function(e){if(e)return l(e);r=!0,l()}));var i=!1;return function(n){if(!r&&!i)return i=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void l(n||new ok("pipe"))}}function ck(e){e()}function hk(e,n){return e.pipe(n)}function fk(e){return e.length?"function"!=typeof e[e.length-1]?sk:e.pop():sk}var dk=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var l,r=fk(n);if(Array.isArray(n[0])&&(n=n[0]),n.length<2)throw new uk("streams");var i=n.map((function(e,t){var u=t<n.length-1;return ak(e,u,t>0,(function(e){l||(l=e),e&&i.forEach(ck),u||(i.forEach(ck),r(l))}))}));return n.reduce(hk)};!function(e,n){const t=kE;(n=e.exports=t.Readable).Stream=t.Readable,n.Readable=t.Readable,n.Writable=t.Writable,n.Duplex=t.Duplex,n.Transform=t.Transform,n.PassThrough=t.PassThrough,n.finished=oS,n.pipeline=dk}(xE,xE.exports);var pk=q_.exports.Buffer,yk=xE.exports.Transform;function gk(e){yk.call(this),this._block=pk.allocUnsafe(e),this._blockSize=e,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}(0,vg.exports)(gk,yk),gk.prototype._transform=function(e,n,t){var l=null;try{this.update(e,n)}catch(e){l=e}t(l)},gk.prototype._flush=function(e){var n=null;try{this.push(this.digest())}catch(e){n=e}e(n)},gk.prototype.update=function(e,n){if(function(e,n){if(!pk.isBuffer(e)&&"string"!=typeof e)throw new TypeError(n+" must be a string or a buffer")}(e,"Data"),this._finalized)throw new Error("Digest already called");pk.isBuffer(e)||(e=pk.from(e,n));for(var t=this._block,l=0;this._blockOffset+e.length-l>=this._blockSize;){for(var r=this._blockOffset;r<this._blockSize;)t[r++]=e[l++];this._update(),this._blockOffset=0}for(;l<e.length;)t[this._blockOffset++]=e[l++];for(var i=0,u=8*e.length;u>0;++i)this._length[i]+=u,(u=this._length[i]/4294967296|0)>0&&(this._length[i]-=4294967296*u);return this},gk.prototype._update=function(){throw new Error("_update is not implemented")},gk.prototype.digest=function(e){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var n=this._digest();void 0!==e&&(n=n.toString(e)),this._block.fill(0),this._blockOffset=0;for(var t=0;t<4;++t)this._length[t]=0;return n},gk.prototype._digest=function(){throw new Error("_digest is not implemented")};var mk=gk,vk=vg.exports,bk=mk,wk=q_.exports.Buffer,_k=new Array(16);function Ek(){bk.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function Sk(e,n){return e<<n|e>>>32-n}function xk(e,n,t,l,r,i,u){return Sk(e+(n&t|~n&l)+r+i|0,u)+n|0}function kk(e,n,t,l,r,i,u){return Sk(e+(n&l|t&~l)+r+i|0,u)+n|0}function Ik(e,n,t,l,r,i,u){return Sk(e+(n^t^l)+r+i|0,u)+n|0}function Pk(e,n,t,l,r,i,u){return Sk(e+(t^(n|~l))+r+i|0,u)+n|0}vk(Ek,bk),Ek.prototype._update=function(){for(var e=_k,n=0;n<16;++n)e[n]=this._block.readInt32LE(4*n);var t=this._a,l=this._b,r=this._c,i=this._d;t=xk(t,l,r,i,e[0],3614090360,7),i=xk(i,t,l,r,e[1],3905402710,12),r=xk(r,i,t,l,e[2],606105819,17),l=xk(l,r,i,t,e[3],3250441966,22),t=xk(t,l,r,i,e[4],4118548399,7),i=xk(i,t,l,r,e[5],1200080426,12),r=xk(r,i,t,l,e[6],2821735955,17),l=xk(l,r,i,t,e[7],4249261313,22),t=xk(t,l,r,i,e[8],1770035416,7),i=xk(i,t,l,r,e[9],2336552879,12),r=xk(r,i,t,l,e[10],4294925233,17),l=xk(l,r,i,t,e[11],2304563134,22),t=xk(t,l,r,i,e[12],1804603682,7),i=xk(i,t,l,r,e[13],4254626195,12),r=xk(r,i,t,l,e[14],2792965006,17),t=kk(t,l=xk(l,r,i,t,e[15],1236535329,22),r,i,e[1],4129170786,5),i=kk(i,t,l,r,e[6],3225465664,9),r=kk(r,i,t,l,e[11],643717713,14),l=kk(l,r,i,t,e[0],3921069994,20),t=kk(t,l,r,i,e[5],3593408605,5),i=kk(i,t,l,r,e[10],38016083,9),r=kk(r,i,t,l,e[15],3634488961,14),l=kk(l,r,i,t,e[4],3889429448,20),t=kk(t,l,r,i,e[9],568446438,5),i=kk(i,t,l,r,e[14],3275163606,9),r=kk(r,i,t,l,e[3],4107603335,14),l=kk(l,r,i,t,e[8],1163531501,20),t=kk(t,l,r,i,e[13],2850285829,5),i=kk(i,t,l,r,e[2],4243563512,9),r=kk(r,i,t,l,e[7],1735328473,14),t=Ik(t,l=kk(l,r,i,t,e[12],2368359562,20),r,i,e[5],4294588738,4),i=Ik(i,t,l,r,e[8],2272392833,11),r=Ik(r,i,t,l,e[11],1839030562,16),l=Ik(l,r,i,t,e[14],4259657740,23),t=Ik(t,l,r,i,e[1],2763975236,4),i=Ik(i,t,l,r,e[4],1272893353,11),r=Ik(r,i,t,l,e[7],4139469664,16),l=Ik(l,r,i,t,e[10],3200236656,23),t=Ik(t,l,r,i,e[13],681279174,4),i=Ik(i,t,l,r,e[0],3936430074,11),r=Ik(r,i,t,l,e[3],3572445317,16),l=Ik(l,r,i,t,e[6],76029189,23),t=Ik(t,l,r,i,e[9],3654602809,4),i=Ik(i,t,l,r,e[12],3873151461,11),r=Ik(r,i,t,l,e[15],530742520,16),t=Pk(t,l=Ik(l,r,i,t,e[2],3299628645,23),r,i,e[0],4096336452,6),i=Pk(i,t,l,r,e[7],1126891415,10),r=Pk(r,i,t,l,e[14],2878612391,15),l=Pk(l,r,i,t,e[5],4237533241,21),t=Pk(t,l,r,i,e[12],1700485571,6),i=Pk(i,t,l,r,e[3],2399980690,10),r=Pk(r,i,t,l,e[10],4293915773,15),l=Pk(l,r,i,t,e[1],2240044497,21),t=Pk(t,l,r,i,e[8],1873313359,6),i=Pk(i,t,l,r,e[15],4264355552,10),r=Pk(r,i,t,l,e[6],2734768916,15),l=Pk(l,r,i,t,e[13],1309151649,21),t=Pk(t,l,r,i,e[4],4149444226,6),i=Pk(i,t,l,r,e[11],3174756917,10),r=Pk(r,i,t,l,e[2],718787259,15),l=Pk(l,r,i,t,e[9],3951481745,21),this._a=this._a+t|0,this._b=this._b+l|0,this._c=this._c+r|0,this._d=this._d+i|0},Ek.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=wk.allocUnsafe(16);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e};var Ak=Ek,Tk=se.Buffer,Ok=vg.exports,Mk=mk,Rk=new Array(16),Nk=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],Ck=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],Lk=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],jk=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],Uk=[0,1518500249,1859775393,2400959708,2840853838],Dk=[1352829926,1548603684,1836072691,2053994217,0];function Bk(){Mk.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function Kk(e,n){return e<<n|e>>>32-n}function Fk(e,n,t,l,r,i,u,o){return Kk(e+(n^t^l)+i+u|0,o)+r|0}function Vk(e,n,t,l,r,i,u,o){return Kk(e+(n&t|~n&l)+i+u|0,o)+r|0}function Hk(e,n,t,l,r,i,u,o){return Kk(e+((n|~t)^l)+i+u|0,o)+r|0}function qk(e,n,t,l,r,i,u,o){return Kk(e+(n&l|t&~l)+i+u|0,o)+r|0}function zk(e,n,t,l,r,i,u,o){return Kk(e+(n^(t|~l))+i+u|0,o)+r|0}Ok(Bk,Mk),Bk.prototype._update=function(){for(var e=Rk,n=0;n<16;++n)e[n]=this._block.readInt32LE(4*n);for(var t=0|this._a,l=0|this._b,r=0|this._c,i=0|this._d,u=0|this._e,o=0|this._a,s=0|this._b,a=0|this._c,c=0|this._d,h=0|this._e,f=0;f<80;f+=1){var d,p;f<16?(d=Fk(t,l,r,i,u,e[Nk[f]],Uk[0],Lk[f]),p=zk(o,s,a,c,h,e[Ck[f]],Dk[0],jk[f])):f<32?(d=Vk(t,l,r,i,u,e[Nk[f]],Uk[1],Lk[f]),p=qk(o,s,a,c,h,e[Ck[f]],Dk[1],jk[f])):f<48?(d=Hk(t,l,r,i,u,e[Nk[f]],Uk[2],Lk[f]),p=Hk(o,s,a,c,h,e[Ck[f]],Dk[2],jk[f])):f<64?(d=qk(t,l,r,i,u,e[Nk[f]],Uk[3],Lk[f]),p=Vk(o,s,a,c,h,e[Ck[f]],Dk[3],jk[f])):(d=zk(t,l,r,i,u,e[Nk[f]],Uk[4],Lk[f]),p=Fk(o,s,a,c,h,e[Ck[f]],Dk[4],jk[f])),t=u,u=i,i=Kk(r,10),r=l,l=d,o=h,h=c,c=Kk(a,10),a=s,s=p}var y=this._b+r+c|0;this._b=this._c+i+h|0,this._c=this._d+u+o|0,this._d=this._e+t+s|0,this._e=this._a+l+a|0,this._a=y},Bk.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=Tk.alloc?Tk.alloc(20):new Tk(20);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e.writeInt32LE(this._e,16),e};var $k=Bk,Gk={exports:{}},Wk=q_.exports.Buffer;function Jk(e,n){this._block=Wk.alloc(e),this._finalSize=n,this._blockSize=e,this._len=0}Jk.prototype.update=function(e,n){"string"==typeof e&&(n=n||"utf8",e=Wk.from(e,n));for(var t=this._block,l=this._blockSize,r=e.length,i=this._len,u=0;u<r;){for(var o=i%l,s=Math.min(r-u,l-o),a=0;a<s;a++)t[o+a]=e[u+a];u+=s,(i+=s)%l==0&&this._update(t)}return this._len+=r,this},Jk.prototype.digest=function(e){var n=this._len%this._blockSize;this._block[n]=128,this._block.fill(0,n+1),n>=this._finalSize&&(this._update(this._block),this._block.fill(0));var t=8*this._len;if(t<=4294967295)this._block.writeUInt32BE(t,this._blockSize-4);else{var l=(4294967295&t)>>>0,r=(t-l)/4294967296;this._block.writeUInt32BE(r,this._blockSize-8),this._block.writeUInt32BE(l,this._blockSize-4)}this._update(this._block);var i=this._hash();return e?i.toString(e):i},Jk.prototype._update=function(){throw new Error("_update must be implemented by subclass")};var Xk=Jk,Yk=vg.exports,Qk=Xk,Zk=q_.exports.Buffer,eI=[1518500249,1859775393,-1894007588,-899497514],nI=new Array(80);function tI(){this.init(),this._w=nI,Qk.call(this,64,56)}function lI(e){return e<<30|e>>>2}function rI(e,n,t,l){return 0===e?n&t|~n&l:2===e?n&t|n&l|t&l:n^t^l}Yk(tI,Qk),tI.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},tI.prototype._update=function(e){for(var n,t=this._w,l=0|this._a,r=0|this._b,i=0|this._c,u=0|this._d,o=0|this._e,s=0;s<16;++s)t[s]=e.readInt32BE(4*s);for(;s<80;++s)t[s]=t[s-3]^t[s-8]^t[s-14]^t[s-16];for(var a=0;a<80;++a){var c=~~(a/20),h=0|((n=l)<<5|n>>>27)+rI(c,r,i,u)+o+t[a]+eI[c];o=u,u=i,i=lI(r),r=l,l=h}this._a=l+this._a|0,this._b=r+this._b|0,this._c=i+this._c|0,this._d=u+this._d|0,this._e=o+this._e|0},tI.prototype._hash=function(){var e=Zk.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e};var iI=tI,uI=vg.exports,oI=Xk,sI=q_.exports.Buffer,aI=[1518500249,1859775393,-1894007588,-899497514],cI=new Array(80);function hI(){this.init(),this._w=cI,oI.call(this,64,56)}function fI(e){return e<<5|e>>>27}function dI(e){return e<<30|e>>>2}function pI(e,n,t,l){return 0===e?n&t|~n&l:2===e?n&t|n&l|t&l:n^t^l}uI(hI,oI),hI.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},hI.prototype._update=function(e){for(var n,t=this._w,l=0|this._a,r=0|this._b,i=0|this._c,u=0|this._d,o=0|this._e,s=0;s<16;++s)t[s]=e.readInt32BE(4*s);for(;s<80;++s)t[s]=(n=t[s-3]^t[s-8]^t[s-14]^t[s-16])<<1|n>>>31;for(var a=0;a<80;++a){var c=~~(a/20),h=fI(l)+pI(c,r,i,u)+o+t[a]+aI[c]|0;o=u,u=i,i=dI(r),r=l,l=h}this._a=l+this._a|0,this._b=r+this._b|0,this._c=i+this._c|0,this._d=u+this._d|0,this._e=o+this._e|0},hI.prototype._hash=function(){var e=sI.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e};var yI=hI,gI=vg.exports,mI=Xk,vI=q_.exports.Buffer,bI=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],wI=new Array(64);function _I(){this.init(),this._w=wI,mI.call(this,64,56)}function EI(e,n,t){return t^e&(n^t)}function SI(e,n,t){return e&n|t&(e|n)}function xI(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function kI(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function II(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}function PI(e){return(e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10}gI(_I,mI),_I.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},_I.prototype._update=function(e){for(var n=this._w,t=0|this._a,l=0|this._b,r=0|this._c,i=0|this._d,u=0|this._e,o=0|this._f,s=0|this._g,a=0|this._h,c=0;c<16;++c)n[c]=e.readInt32BE(4*c);for(;c<64;++c)n[c]=PI(n[c-2])+n[c-7]+II(n[c-15])+n[c-16]|0;for(var h=0;h<64;++h){var f=a+kI(u)+EI(u,o,s)+bI[h]+n[h]|0,d=xI(t)+SI(t,l,r)|0;a=s,s=o,o=u,u=i+f|0,i=r,r=l,l=t,t=f+d|0}this._a=t+this._a|0,this._b=l+this._b|0,this._c=r+this._c|0,this._d=i+this._d|0,this._e=u+this._e|0,this._f=o+this._f|0,this._g=s+this._g|0,this._h=a+this._h|0},_I.prototype._hash=function(){var e=vI.allocUnsafe(32);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e.writeInt32BE(this._h,28),e};var AI=_I,TI=vg.exports,OI=AI,MI=Xk,RI=q_.exports.Buffer,NI=new Array(64);function CI(){this.init(),this._w=NI,MI.call(this,64,56)}TI(CI,OI),CI.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},CI.prototype._hash=function(){var e=RI.allocUnsafe(28);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e};var LI=CI,jI=vg.exports,UI=Xk,DI=q_.exports.Buffer,BI=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],KI=new Array(160);function FI(){this.init(),this._w=KI,UI.call(this,128,112)}function VI(e,n,t){return t^e&(n^t)}function HI(e,n,t){return e&n|t&(e|n)}function qI(e,n){return(e>>>28|n<<4)^(n>>>2|e<<30)^(n>>>7|e<<25)}function zI(e,n){return(e>>>14|n<<18)^(e>>>18|n<<14)^(n>>>9|e<<23)}function $I(e,n){return(e>>>1|n<<31)^(e>>>8|n<<24)^e>>>7}function GI(e,n){return(e>>>1|n<<31)^(e>>>8|n<<24)^(e>>>7|n<<25)}function WI(e,n){return(e>>>19|n<<13)^(n>>>29|e<<3)^e>>>6}function JI(e,n){return(e>>>19|n<<13)^(n>>>29|e<<3)^(e>>>6|n<<26)}function XI(e,n){return e>>>0<n>>>0?1:0}jI(FI,UI),FI.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},FI.prototype._update=function(e){for(var n=this._w,t=0|this._ah,l=0|this._bh,r=0|this._ch,i=0|this._dh,u=0|this._eh,o=0|this._fh,s=0|this._gh,a=0|this._hh,c=0|this._al,h=0|this._bl,f=0|this._cl,d=0|this._dl,p=0|this._el,y=0|this._fl,g=0|this._gl,m=0|this._hl,v=0;v<32;v+=2)n[v]=e.readInt32BE(4*v),n[v+1]=e.readInt32BE(4*v+4);for(;v<160;v+=2){var b=n[v-30],w=n[v-30+1],_=$I(b,w),E=GI(w,b),S=WI(b=n[v-4],w=n[v-4+1]),x=JI(w,b),k=n[v-14],I=n[v-14+1],P=n[v-32],A=n[v-32+1],T=E+I|0,O=_+k+XI(T,E)|0;O=(O=O+S+XI(T=T+x|0,x)|0)+P+XI(T=T+A|0,A)|0,n[v]=O,n[v+1]=T}for(var M=0;M<160;M+=2){O=n[M],T=n[M+1];var R=HI(t,l,r),N=HI(c,h,f),C=qI(t,c),L=qI(c,t),j=zI(u,p),U=zI(p,u),D=BI[M],B=BI[M+1],K=VI(u,o,s),F=VI(p,y,g),V=m+U|0,H=a+j+XI(V,m)|0;H=(H=(H=H+K+XI(V=V+F|0,F)|0)+D+XI(V=V+B|0,B)|0)+O+XI(V=V+T|0,T)|0;var q=L+N|0,z=C+R+XI(q,L)|0;a=s,m=g,s=o,g=y,o=u,y=p,u=i+H+XI(p=d+V|0,d)|0,i=r,d=f,r=l,f=h,l=t,h=c,t=H+z+XI(c=V+q|0,V)|0}this._al=this._al+c|0,this._bl=this._bl+h|0,this._cl=this._cl+f|0,this._dl=this._dl+d|0,this._el=this._el+p|0,this._fl=this._fl+y|0,this._gl=this._gl+g|0,this._hl=this._hl+m|0,this._ah=this._ah+t+XI(this._al,c)|0,this._bh=this._bh+l+XI(this._bl,h)|0,this._ch=this._ch+r+XI(this._cl,f)|0,this._dh=this._dh+i+XI(this._dl,d)|0,this._eh=this._eh+u+XI(this._el,p)|0,this._fh=this._fh+o+XI(this._fl,y)|0,this._gh=this._gh+s+XI(this._gl,g)|0,this._hh=this._hh+a+XI(this._hl,m)|0},FI.prototype._hash=function(){var e=DI.allocUnsafe(64);function n(n,t,l){e.writeInt32BE(n,l),e.writeInt32BE(t,l+4)}return n(this._ah,this._al,0),n(this._bh,this._bl,8),n(this._ch,this._cl,16),n(this._dh,this._dl,24),n(this._eh,this._el,32),n(this._fh,this._fl,40),n(this._gh,this._gl,48),n(this._hh,this._hl,56),e};var YI=FI,QI=vg.exports,ZI=YI,eP=Xk,nP=q_.exports.Buffer,tP=new Array(160);function lP(){this.init(),this._w=tP,eP.call(this,128,112)}QI(lP,ZI),lP.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},lP.prototype._hash=function(){var e=nP.allocUnsafe(48);function n(n,t,l){e.writeInt32BE(n,l),e.writeInt32BE(t,l+4)}return n(this._ah,this._al,0),n(this._bh,this._bl,8),n(this._ch,this._cl,16),n(this._dh,this._dl,24),n(this._eh,this._el,32),n(this._fh,this._fl,40),e};var rP=lP,iP=Gk.exports=function(e){e=e.toLowerCase();var n=iP[e];if(!n)throw new Error(e+" is not supported (we accept pull requests)");return new n};iP.sha=iI,iP.sha1=yI,iP.sha224=LI,iP.sha256=AI,iP.sha384=rP,iP.sha512=YI;var uP=t(Go),oP=t(oo),sP=q_.exports.Buffer,aP=uP.Transform,cP=oP.StringDecoder;function hP(e){aP.call(this),this.hashMode="string"==typeof e,this.hashMode?this[e]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}(0,vg.exports)(hP,aP),hP.prototype.update=function(e,n,t){"string"==typeof e&&(e=sP.from(e,n));var l=this._update(e);return this.hashMode?this:(t&&(l=this._toString(l,t)),l)},hP.prototype.setAutoPadding=function(){},hP.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},hP.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},hP.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},hP.prototype._transform=function(e,n,t){var l;try{this.hashMode?this._update(e):this.push(this._update(e))}catch(e){l=e}finally{t(l)}},hP.prototype._flush=function(e){var n;try{this.push(this.__final())}catch(e){n=e}e(n)},hP.prototype._finalOrDigest=function(e){var n=this.__final()||sP.alloc(0);return e&&(n=this._toString(n,e,!0)),n},hP.prototype._toString=function(e,n,t){if(this._decoder||(this._decoder=new cP(n),this._encoding=n),this._encoding!==n)throw new Error("can't switch encodings");var l=this._decoder.write(e);return t&&(l+=this._decoder.end()),l};var fP=hP,dP=vg.exports,pP=Ak,yP=$k,gP=Gk.exports,mP=fP;function vP(e){mP.call(this,"digest"),this._hash=e}dP(vP,mP),vP.prototype._update=function(e){this._hash.update(e)},vP.prototype._final=function(){return this._hash.digest()};var bP=function(e){return"md5"===(e=e.toLowerCase())?new pP:"rmd160"===e||"ripemd160"===e?new yP:new vP(gP(e))},wP=vg.exports,_P=q_.exports.Buffer,EP=fP,SP=_P.alloc(128),xP=64;function kP(e,n){EP.call(this,"digest"),"string"==typeof n&&(n=_P.from(n)),this._alg=e,this._key=n,n.length>xP?n=e(n):n.length<xP&&(n=_P.concat([n,SP],xP));for(var t=this._ipad=_P.allocUnsafe(xP),l=this._opad=_P.allocUnsafe(xP),r=0;r<xP;r++)t[r]=54^n[r],l[r]=92^n[r];this._hash=[t]}wP(kP,EP),kP.prototype._update=function(e){this._hash.push(e)},kP.prototype._final=function(){var e=this._alg(_P.concat(this._hash));return this._alg(_P.concat([this._opad,e]))};var IP=kP,PP=Ak,AP=vg.exports,TP=IP,OP=fP,MP=q_.exports.Buffer,RP=function(e){return(new PP).update(e).digest()},NP=$k,CP=Gk.exports,LP=MP.alloc(128);function jP(e,n){OP.call(this,"digest"),"string"==typeof n&&(n=MP.from(n));var t="sha512"===e||"sha384"===e?128:64;(this._alg=e,this._key=n,n.length>t)?n=("rmd160"===e?new NP:CP(e)).update(n).digest():n.length<t&&(n=MP.concat([n,LP],t));for(var l=this._ipad=MP.allocUnsafe(t),r=this._opad=MP.allocUnsafe(t),i=0;i<t;i++)l[i]=54^n[i],r[i]=92^n[i];this._hash="rmd160"===e?new NP:CP(e),this._hash.update(l)}AP(jP,OP),jP.prototype._update=function(e){this._hash.update(e)},jP.prototype._final=function(){var e=this._hash.digest();return("rmd160"===this._alg?new NP:CP(this._alg)).update(this._opad).update(e).digest()};var UP=function(e,n){return"rmd160"===(e=e.toLowerCase())||"ripemd160"===e?new jP("rmd160",n):"md5"===e?new TP(RP,n):new jP(e,n)};Object.defineProperty(SE,"__esModule",{value:!0});const DP=bP,BP=UP;SE.hash160=function(e){const n=DP("sha256").update(e).digest();try{return DP("rmd160").update(n).digest()}catch(e){return DP("ripemd160").update(n).digest()}},SE.hmacSHA512=function(e,n){return BP("sha512",e).update(n).digest()};var KP=G_,FP=q_.exports.Buffer,VP=bP,HP=function(e){function n(n){var t=n.slice(0,-4),l=n.slice(-4),r=e(t);if(!(l[0]^r[0]|l[1]^r[1]|l[2]^r[2]|l[3]^r[3]))return t}return{encode:function(n){var t=e(n);return KP.encode(FP.concat([n,t],n.length+4))},decode:function(e){var t=n(KP.decode(e));if(!t)throw new Error("Invalid checksum");return t},decodeUnsafe:function(e){var t=KP.decodeUnsafe(e);if(t)return n(t)}}};var qP=HP((function(e){var n=VP("sha256").update(e).digest();return VP("sha256").update(n).digest()}));const zP=UP,$P=S.alloc(1,1),GP=S.alloc(1,0);var WP=function(e,n,t,l,r){let i=S.alloc(32,0),u=S.alloc(32,1);i=zP("sha256",i).update(u).update(GP).update(n).update(e).update(r||"").digest(),u=zP("sha256",i).update(u).digest(),i=zP("sha256",i).update(u).update($P).update(n).update(e).update(r||"").digest(),u=zP("sha256",i).update(u).digest(),u=zP("sha256",i).update(u).digest();let o=u;for(;!l(o)||!t(o);)i=zP("sha256",i).update(u).update(GP).digest(),u=zP("sha256",i).update(u).digest(),u=zP("sha256",i).update(u).digest(),o=u;return o};const JP=yg.exports,XP=new(0,Hm.ec)("secp256k1"),YP=WP,QP=S.alloc(32,0),ZP=S.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141","hex"),eA=S.from("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f","hex"),nA=XP.curve.n,tA=nA.shrn(1),lA=XP.curve.g,rA="Expected Private",iA="Expected Point",uA="Expected Tweak",oA="Expected Hash";function sA(e){return ue(e)&&32===e.length}function aA(e){return!!sA(e)&&e.compare(ZP)<0}function cA(e){if(!ue(e))return!1;if(e.length<33)return!1;const n=e[0],t=e.slice(1,33);if(0===t.compare(QP))return!1;if(t.compare(eA)>=0)return!1;if((2===n||3===n)&&33===e.length){try{gA(e)}catch(e){return!1}return!0}const l=e.slice(33);return 0!==l.compare(QP)&&(!(l.compare(eA)>=0)&&(4===n&&65===e.length))}function hA(e){return 4!==e[0]}function fA(e){return!!sA(e)&&(e.compare(QP)>0&&e.compare(ZP)<0)}function dA(e,n){return void 0===e&&void 0!==n?hA(n):void 0===e||e}function pA(e){return new JP(e)}function yA(e){return e.toArrayLike(S,"be",32)}function gA(e){return XP.curve.decodePoint(e)}function mA(e,n){return S.from(e._encode(n))}function vA(e,n,t){if(!sA(e))throw new TypeError(oA);if(!fA(n))throw new TypeError(rA);if(void 0!==t&&!sA(t))throw new TypeError("Expected Extra Data (32 bytes)");const l=pA(n),r=pA(e);let i,u;YP(e,n,(function(e){const n=pA(e),t=lA.mul(n);return!t.isInfinity()&&(i=t.x.umod(nA),0!==i.isZero()&&(u=n.invm(nA).mul(r.add(l.mul(i))).umod(nA),0!==u.isZero()))}),fA,t),u.cmp(tA)>0&&(u=nA.sub(u));const o=S.allocUnsafe(64);return yA(i).copy(o,0),yA(u).copy(o,32),o}var bA={isPoint:cA,isPointCompressed:function(e){return!!cA(e)&&hA(e)},isPrivate:fA,pointAdd:function(e,n,t){if(!cA(e))throw new TypeError(iA);if(!cA(n))throw new TypeError(iA);const l=gA(e),r=gA(n),i=l.add(r);return i.isInfinity()?null:mA(i,dA(t,e))},pointAddScalar:function(e,n,t){if(!cA(e))throw new TypeError(iA);if(!aA(n))throw new TypeError(uA);const l=dA(t,e),r=gA(e);if(0===n.compare(QP))return mA(r,l);const i=pA(n),u=lA.mul(i),o=r.add(u);return o.isInfinity()?null:mA(o,l)},pointCompress:function(e,n){if(!cA(e))throw new TypeError(iA);const t=gA(e);if(t.isInfinity())throw new TypeError(iA);return mA(t,dA(n,e))},pointFromScalar:function(e,n){if(!fA(e))throw new TypeError(rA);const t=pA(e),l=lA.mul(t);return l.isInfinity()?null:mA(l,dA(n))},pointMultiply:function(e,n,t){if(!cA(e))throw new TypeError(iA);if(!aA(n))throw new TypeError(uA);const l=dA(t,e),r=gA(e),i=pA(n),u=r.mul(i);return u.isInfinity()?null:mA(u,l)},privateAdd:function(e,n){if(!fA(e))throw new TypeError(rA);if(!aA(n))throw new TypeError(uA);const t=pA(e),l=pA(n),r=yA(t.add(l).umod(nA));return fA(r)?r:null},privateSub:function(e,n){if(!fA(e))throw new TypeError(rA);if(!aA(n))throw new TypeError(uA);const t=pA(e),l=pA(n),r=yA(t.sub(l).umod(nA));return fA(r)?r:null},sign:function(e,n){return vA(e,n)},signWithEntropy:function(e,n,t){return vA(e,n,t)},verify:function(e,n,t,l){if(!sA(e))throw new TypeError(oA);if(!cA(n))throw new TypeError(iA);if(!function(e){const n=e.slice(0,32),t=e.slice(32,64);return ue(e)&&64===e.length&&n.compare(ZP)<0&&t.compare(ZP)<0}(t))throw new TypeError("Expected Signature");const r=gA(n),i=pA(t.slice(0,32)),u=pA(t.slice(32,64));if(l&&u.cmp(tA)>0)return!1;if(i.gtn(0)<=0)return!1;if(u.gtn(0)<=0)return!1;const o=pA(e),s=u.invm(nA),a=o.mul(s).umod(nA),c=i.mul(s).umod(nA),h=lA.mulAdd(a,r,c);return!h.isInfinity()&&h.x.umod(nA).eq(i)}},wA={Array:function(e){return null!=e&&e.constructor===Array},Boolean:function(e){return"boolean"==typeof e},Function:function(e){return"function"==typeof e},Nil:function(e){return null==e},Number:function(e){return"number"==typeof e},Object:function(e){return"object"==typeof e},String:function(e){return"string"==typeof e},"":function(){return!0}};for(var _A in wA.Null=wA.Nil,wA)wA[_A].toJSON=function(e){return e}.bind(null,_A);var EA=wA,SA=EA;function xA(e){return e.name||e.toString().match(/function (.*?)\s*\(/)[1]}function kA(e){return SA.Nil(e)?"":xA(e.constructor)}function IA(e,n){Error.captureStackTrace&&Error.captureStackTrace(e,n)}function PA(e){return SA.Function(e)?e.toJSON?e.toJSON():xA(e):SA.Array(e)?"Array":e&&SA.Object(e)?"Object":void 0!==e?e:""}function AA(e,n,t){var l=function(e){return SA.Function(e)?"":SA.String(e)?JSON.stringify(e):e&&SA.Object(e)?"":e}(n);return"Expected "+PA(e)+", got"+(""!==t?" "+t:"")+(""!==l?" "+l:"")}function TA(e,n,t){t=t||kA(n),this.message=AA(e,n,t),IA(this,TA),this.__type=e,this.__value=n,this.__valueTypeName=t}function OA(e,n,t,l,r){e?(r=r||kA(l),this.message=function(e,n,t,l,r){var i='" of type ';return"key"===n&&(i='" with key type '),AA('property "'+PA(t)+i+PA(e),l,r)}(e,t,n,l,r)):this.message='Unexpected property "'+n+'"',IA(this,TA),this.__label=t,this.__property=n,this.__type=e,this.__value=l,this.__valueTypeName=r}TA.prototype=Object.create(Error.prototype),TA.prototype.constructor=TA,OA.prototype=Object.create(Error.prototype),OA.prototype.constructor=TA;var MA={TfTypeError:TA,TfPropertyTypeError:OA,tfCustomError:function(e,n){return new TA(e,{},n)},tfSubError:function(e,n,t){return e instanceof OA?(n=n+"."+e.__property,e=new OA(e.__type,n,e.__label,e.__value,e.__valueTypeName)):e instanceof TA&&(e=new OA(e.__type,n,t,e.__value,e.__valueTypeName)),IA(e),e},tfJSON:PA,getValueTypeName:kA},RA=EA,NA=MA;function CA(e){return ue(e)}function LA(e){return"string"==typeof e&&/^([0-9a-f]{2})+$/i.test(e)}function jA(e,n){var t=e.toJSON();function l(l){if(!e(l))return!1;if(l.length===n)return!0;throw NA.tfCustomError(t+"(Length: "+n+")",t+"(Length: "+l.length+")")}return l.toJSON=function(){return t},l}var UA=jA.bind(null,RA.Array),DA=jA.bind(null,CA),BA=jA.bind(null,LA),KA=jA.bind(null,RA.String);var FA=Math.pow(2,53)-1;var VA={ArrayN:UA,Buffer:CA,BufferN:DA,Finite:function(e){return"number"==typeof e&&isFinite(e)},Hex:LA,HexN:BA,Int8:function(e){return e<<24>>24===e},Int16:function(e){return e<<16>>16===e},Int32:function(e){return(0|e)===e},Int53:function(e){return"number"==typeof e&&e>=-FA&&e<=FA&&Math.floor(e)===e},Range:function(e,n,t){function l(l,r){return t(l,r)&&l>e&&l<n}return t=t||RA.Number,l.toJSON=function(){return`${t.toJSON()} between [${e}, ${n}]`},l},StringN:KA,UInt8:function(e){return(255&e)===e},UInt16:function(e){return(65535&e)===e},UInt32:function(e){return e>>>0===e},UInt53:function(e){return"number"==typeof e&&e>=0&&e<=FA&&Math.floor(e)===e}};for(var HA in VA)VA[HA].toJSON=function(e){return e}.bind(null,HA);var qA=VA,zA=EA,$A=MA.tfJSON,GA=MA.TfTypeError,WA=MA.TfPropertyTypeError,JA=MA.tfSubError,XA=MA.getValueTypeName,YA={arrayOf:function(e,n){function t(t,l){return!!zA.Array(t)&&(!zA.Nil(t)&&(!(void 0!==n.minLength&&t.length<n.minLength)&&(!(void 0!==n.maxLength&&t.length>n.maxLength)&&((void 0===n.length||t.length===n.length)&&t.every((function(n,t){try{return ZA(e,n,l)}catch(e){throw JA(e,t)}}))))))}return e=QA(e),n=n||{},t.toJSON=function(){var t="["+$A(e)+"]";return void 0!==n.length?t+="{"+n.length+"}":void 0===n.minLength&&void 0===n.maxLength||(t+="{"+(void 0===n.minLength?0:n.minLength)+","+(void 0===n.maxLength?1/0:n.maxLength)+"}"),t},t},maybe:function e(n){function t(t,l){return zA.Nil(t)||n(t,l,e)}return n=QA(n),t.toJSON=function(){return"?"+$A(n)},t},map:function(e,n){function t(t,l){if(!zA.Object(t))return!1;if(zA.Nil(t))return!1;for(var r in t){try{n&&ZA(n,r,l)}catch(e){throw JA(e,r,"key")}try{var i=t[r];ZA(e,i,l)}catch(e){throw JA(e,r)}}return!0}return e=QA(e),n&&(n=QA(n)),t.toJSON=n?function(){return"{"+$A(n)+": "+$A(e)+"}"}:function(){return"{"+$A(e)+"}"},t},object:function(e){var n={};for(var t in e)n[t]=QA(e[t]);function l(e,t){if(!zA.Object(e))return!1;if(zA.Nil(e))return!1;var l;try{for(l in n){ZA(n[l],e[l],t)}}catch(e){throw JA(e,l)}if(t)for(l in e)if(!n[l])throw new WA(void 0,l);return!0}return l.toJSON=function(){return $A(n)},l},anyOf:function(){var e=[].slice.call(arguments).map(QA);function n(n,t){return e.some((function(e){try{return ZA(e,n,t)}catch(e){return!1}}))}return n.toJSON=function(){return e.map($A).join("|")},n},allOf:function(){var e=[].slice.call(arguments).map(QA);function n(n,t){return e.every((function(e){try{return ZA(e,n,t)}catch(e){return!1}}))}return n.toJSON=function(){return e.map($A).join(" & ")},n},quacksLike:function(e){function n(n){return e===XA(n)}return n.toJSON=function(){return e},n},tuple:function(){var e=[].slice.call(arguments).map(QA);function n(n,t){return!zA.Nil(n)&&(!zA.Nil(n.length)&&((!t||n.length===e.length)&&e.every((function(e,l){try{return ZA(e,n[l],t)}catch(e){throw JA(e,l)}}))))}return n.toJSON=function(){return"("+e.map($A).join(", ")+")"},n},value:function(e){function n(n){return n===e}return n.toJSON=function(){return e},n}};function QA(e){if(zA.String(e))return"?"===e[0]?YA.maybe(e.slice(1)):zA[e]||YA.quacksLike(e);if(e&&zA.Object(e)){if(zA.Array(e)){if(1!==e.length)throw new TypeError("Expected compile() parameter of type Array of length 1");return YA.arrayOf(e[0])}return YA.object(e)}return zA.Function(e)?e:YA.value(e)}function ZA(e,n,t,l){if(zA.Function(e)){if(e(n,t))return!0;throw new GA(l||e,n)}return ZA(QA(e),n,t)}for(var eT in YA.oneOf=YA.anyOf,zA)ZA[eT]=zA[eT];for(eT in YA)ZA[eT]=YA[eT];var nT=qA;for(eT in nT)ZA[eT]=nT[eT];ZA.compile=QA,ZA.TfTypeError=GA,ZA.TfPropertyTypeError=WA;var tT=ZA,lT=qP;function rT(e,n){if(void 0!==n&&e[0]!==n)throw new Error("Invalid network version");if(33===e.length)return{version:e[0],privateKey:e.slice(1,33),compressed:!1};if(34!==e.length)throw new Error("Invalid WIF length");if(1!==e[33])throw new Error("Invalid compression flag");return{version:e[0],privateKey:e.slice(1,33),compressed:!0}}function iT(e,n,t){var l=new S(t?34:33);return l.writeUInt8(e,0),n.copy(l,1),t&&(l[33]=1),l}var uT={decode:function(e,n){return rT(lT.decode(e),n)},decodeRaw:rT,encode:function(e,n,t){return"number"==typeof e?lT.encode(iT(e,n,t)):lT.encode(iT(e.version,e.privateKey,e.compressed))},encodeRaw:iT};Object.defineProperty(EE,"__esModule",{value:!0});const oT=SE,sT=qP,aT=bA,cT=tT,hT=uT,fT=cT.BufferN(32),dT=cT.compile({wif:cT.UInt8,bip32:{public:cT.UInt32,private:cT.UInt32}}),pT={messagePrefix:"Bitcoin Signed Message:\n",bech32:"bc",bip32:{public:76067358,private:76066276},pubKeyHash:0,scriptHash:5,wif:128},yT=2147483648,gT=Math.pow(2,31)-1;function mT(e){return cT.String(e)&&null!==e.match(/^(m\/)?(\d+'?\/)*\d+'?$/)}function vT(e){return cT.UInt32(e)&&e<=gT}class bT{constructor(e,n,t,l,r=0,i=0,u=0){this.__D=e,this.__Q=n,this.chainCode=t,this.network=l,this.__DEPTH=r,this.__INDEX=i,this.__PARENT_FINGERPRINT=u,cT(dT,l),this.lowR=!1}get depth(){return this.__DEPTH}get index(){return this.__INDEX}get parentFingerprint(){return this.__PARENT_FINGERPRINT}get publicKey(){return void 0===this.__Q&&(this.__Q=aT.pointFromScalar(this.__D,!0)),this.__Q}get privateKey(){return this.__D}get identifier(){return oT.hash160(this.publicKey)}get fingerprint(){return this.identifier.slice(0,4)}get compressed(){return!0}isNeutered(){return void 0===this.__D}neutered(){return ET(this.publicKey,this.chainCode,this.network,this.depth,this.index,this.parentFingerprint)}toBase58(){const e=this.network,n=this.isNeutered()?e.bip32.public:e.bip32.private,t=S.allocUnsafe(78);return t.writeUInt32BE(n,0),t.writeUInt8(this.depth,4),t.writeUInt32BE(this.parentFingerprint,5),t.writeUInt32BE(this.index,9),this.chainCode.copy(t,13),this.isNeutered()?this.publicKey.copy(t,45):(t.writeUInt8(0,45),this.privateKey.copy(t,46)),sT.encode(t)}toWIF(){if(!this.privateKey)throw new TypeError("Missing private key");return hT.encode(this.network.wif,this.privateKey,!0)}derive(e){cT(cT.UInt32,e);const n=e>=yT,t=S.allocUnsafe(37);if(n){if(this.isNeutered())throw new TypeError("Missing private key for hardened child key");t[0]=0,this.privateKey.copy(t,1),t.writeUInt32BE(e,33)}else this.publicKey.copy(t,0),t.writeUInt32BE(e,33);const l=oT.hmacSHA512(this.chainCode,t),r=l.slice(0,32),i=l.slice(32);if(!aT.isPrivate(r))return this.derive(e+1);let u;if(this.isNeutered()){const n=aT.pointAddScalar(this.publicKey,r,!0);if(null===n)return this.derive(e+1);u=ET(n,i,this.network,this.depth+1,e,this.fingerprint.readUInt32BE(0))}else{const n=aT.privateAdd(this.privateKey,r);if(null==n)return this.derive(e+1);u=_T(n,i,this.network,this.depth+1,e,this.fingerprint.readUInt32BE(0))}return u}deriveHardened(e){return cT(vT,e),this.derive(e+yT)}derivePath(e){cT(mT,e);let n=e.split("/");if("m"===n[0]){if(this.parentFingerprint)throw new TypeError("Expected master, got child");n=n.slice(1)}return n.reduce(((e,n)=>{let t;return"'"===n.slice(-1)?(t=parseInt(n.slice(0,-1),10),e.deriveHardened(t)):(t=parseInt(n,10),e.derive(t))}),this)}sign(e,n){if(!this.privateKey)throw new Error("Missing private key");if(void 0===n&&(n=this.lowR),!1===n)return aT.sign(e,this.privateKey);{let n=aT.sign(e,this.privateKey);const t=S.alloc(32,0);let l=0;for(;n[0]>127;)l++,t.writeUIntLE(l,0,6),n=aT.signWithEntropy(e,this.privateKey,t);return n}}verify(e,n){return aT.verify(e,this.publicKey,n)}}function wT(e,n,t){return _T(e,n,t)}function _T(e,n,t,l,r,i){if(cT({privateKey:fT,chainCode:fT},{privateKey:e,chainCode:n}),t=t||pT,!aT.isPrivate(e))throw new TypeError("Private key not in range [1, n)");return new bT(e,void 0,n,t,l,r,i)}function ET(e,n,t,l,r,i){if(cT({publicKey:cT.BufferN(33),chainCode:fT},{publicKey:e,chainCode:n}),t=t||pT,!aT.isPoint(e))throw new TypeError("Point is not on the curve");return new bT(void 0,e,n,t,l,r,i)}EE.fromBase58=function(e,n){const t=sT.decode(e);if(78!==t.length)throw new TypeError("Invalid buffer length");n=n||pT;const l=t.readUInt32BE(0);if(l!==n.bip32.private&&l!==n.bip32.public)throw new TypeError("Invalid network version");const r=t[4],i=t.readUInt32BE(5);if(0===r&&0!==i)throw new TypeError("Invalid parent fingerprint");const u=t.readUInt32BE(9);if(0===r&&0!==u)throw new TypeError("Invalid index");const o=t.slice(13,45);let s;if(l===n.bip32.private){if(0!==t.readUInt8(45))throw new TypeError("Invalid private key");s=_T(t.slice(46,78),o,n,r,u,i)}else{s=ET(t.slice(45,78),o,n,r,u,i)}return s},EE.fromPrivateKey=wT,EE.fromPublicKey=function(e,n,t){return ET(e,n,t)},EE.fromSeed=function(e,n){if(cT(cT.Buffer,e),e.length<16)throw new TypeError("Seed should be at least 128 bits");if(e.length>64)throw new TypeError("Seed should be at most 512 bits");n=n||pT;const t=oT.hmacSHA512(S.from("Bitcoin seed","utf8"),e);return wT(t.slice(0,32),t.slice(32),n)},Object.defineProperty(_E,"__esModule",{value:!0});var ST=EE;_E.fromSeed=ST.fromSeed,_E.fromBase58=ST.fromBase58,_E.fromPublicKey=ST.fromPublicKey,_E.fromPrivateKey=ST.fromPrivateKey;var xT={},kT={};Object.defineProperty(kT,"__esModule",{value:!0}),kT.bitcoin={messagePrefix:"Bitcoin Signed Message:\n",bech32:"bc",bip32:{public:76067358,private:76066276},pubKeyHash:0,scriptHash:5,wif:128},kT.regtest={messagePrefix:"Bitcoin Signed Message:\n",bech32:"bcrt",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239},kT.testnet={messagePrefix:"Bitcoin Signed Message:\n",bech32:"tb",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239};var IT={},PT={},AT={},TT={};Object.defineProperty(TT,"__esModule",{value:!0}),TT.decode=function(e,n,t){n=n||4,t=void 0===t||t;const l=e.length;if(0===l)return 0;if(l>n)throw new TypeError("Script number overflow");if(t&&0==(127&e[l-1])&&(l<=1||0==(128&e[l-2])))throw new Error("Non-minimally encoded script number");if(5===l){const n=e.readUInt32LE(0),t=e.readUInt8(4);return 128&t?-(4294967296*(-129&t)+n):4294967296*t+n}let r=0;for(let n=0;n<l;++n)r|=e[n]<<8*n;return 128&e[l-1]?-(r&~(128<<8*(l-1))):r},TT.encode=function(e){let n=Math.abs(e);const t=(l=n)>2147483647?5:l>8388607?4:l>32767?3:l>127?2:l>0?1:0;var l;const r=S.allocUnsafe(t),i=e<0;for(let e=0;e<t;++e)r.writeUInt8(255&n,e),n>>=8;return 128&r[t-1]?r.writeUInt8(i?128:0,t-1):i&&(r[t-1]|=128),r};var OT={},MT={};Object.defineProperty(MT,"__esModule",{value:!0});const RT=tT,NT=Math.pow(2,31)-1;function CT(e){return RT.String(e)&&!!e.match(/^(m\/)?(\d+'?\/)*\d+'?$/)}MT.UInt31=function(e){return RT.UInt32(e)&&e<=NT},MT.BIP32Path=CT,CT.toJSON=()=>"BIP32 derivation path",MT.Signer=function(e){return(RT.Buffer(e.publicKey)||"function"==typeof e.getPublicKey)&&"function"==typeof e.sign};MT.Satoshi=function(e){return RT.UInt53(e)&&e<=21e14},MT.ECPoint=RT.quacksLike("Point"),MT.Network=RT.compile({messagePrefix:RT.oneOf(RT.Buffer,RT.String),bip32:{public:RT.UInt32,private:RT.UInt32},pubKeyHash:RT.UInt8,scriptHash:RT.UInt8,wif:RT.UInt8}),MT.Buffer256bit=RT.BufferN(32),MT.Hash160bit=RT.BufferN(20),MT.Hash256bit=RT.BufferN(32),MT.Number=RT.Number,MT.Array=RT.Array,MT.Boolean=RT.Boolean,MT.String=RT.String,MT.Buffer=RT.Buffer,MT.Hex=RT.Hex,MT.maybe=RT.maybe,MT.tuple=RT.tuple,MT.UInt8=RT.UInt8,MT.UInt32=RT.UInt32,MT.Function=RT.Function,MT.BufferN=RT.BufferN,MT.Null=RT.Null,MT.oneOf=RT.oneOf;var LT=q_.exports.Buffer;var jT={check:function(e){if(e.length<8)return!1;if(e.length>72)return!1;if(48!==e[0])return!1;if(e[1]!==e.length-2)return!1;if(2!==e[2])return!1;var n=e[3];if(0===n)return!1;if(5+n>=e.length)return!1;if(2!==e[4+n])return!1;var t=e[5+n];return 0!==t&&(6+n+t===e.length&&(!(128&e[4])&&(!(n>1&&0===e[4]&&!(128&e[5]))&&(!(128&e[n+6])&&!(t>1&&0===e[n+6]&&!(128&e[n+7]))))))},decode:function(e){if(e.length<8)throw new Error("DER sequence length is too short");if(e.length>72)throw new Error("DER sequence length is too long");if(48!==e[0])throw new Error("Expected DER sequence");if(e[1]!==e.length-2)throw new Error("DER sequence length is invalid");if(2!==e[2])throw new Error("Expected DER integer");var n=e[3];if(0===n)throw new Error("R length is zero");if(5+n>=e.length)throw new Error("R length is too long");if(2!==e[4+n])throw new Error("Expected DER integer (2)");var t=e[5+n];if(0===t)throw new Error("S length is zero");if(6+n+t!==e.length)throw new Error("S length is invalid");if(128&e[4])throw new Error("R value is negative");if(n>1&&0===e[4]&&!(128&e[5]))throw new Error("R value excessively padded");if(128&e[n+6])throw new Error("S value is negative");if(t>1&&0===e[n+6]&&!(128&e[n+7]))throw new Error("S value excessively padded");return{r:e.slice(4,4+n),s:e.slice(6+n)}},encode:function(e,n){var t=e.length,l=n.length;if(0===t)throw new Error("R length is zero");if(0===l)throw new Error("S length is zero");if(t>33)throw new Error("R length is too long");if(l>33)throw new Error("S length is too long");if(128&e[0])throw new Error("R value is negative");if(128&n[0])throw new Error("S value is negative");if(t>1&&0===e[0]&&!(128&e[1]))throw new Error("R value excessively padded");if(l>1&&0===n[0]&&!(128&n[1]))throw new Error("S value excessively padded");var r=LT.allocUnsafe(6+t+l);return r[0]=48,r[1]=r.length-2,r[2]=2,r[3]=e.length,e.copy(r,4),r[4+t]=2,r[5+t]=n.length,n.copy(r,6+t),r}};Object.defineProperty(OT,"__esModule",{value:!0});const UT=MT,DT=jT,BT=tT,KT=S.alloc(1,0);function FT(e){let n=0;for(;0===e[n];)++n;return n===e.length?KT:128&(e=e.slice(n))[0]?S.concat([KT,e],1+e.length):e}function VT(e){0===e[0]&&(e=e.slice(1));const n=S.alloc(32,0),t=Math.max(0,32-e.length);return e.copy(n,t),n}OT.decode=function(e){const n=e.readUInt8(e.length-1),t=-129&n;if(t<=0||t>=4)throw new Error("Invalid hashType "+n);const l=DT.decode(e.slice(0,-1)),r=VT(l.r),i=VT(l.s);return{signature:S.concat([r,i],64),hashType:n}},OT.encode=function(e,n){BT({signature:UT.BufferN(64),hashType:UT.UInt8},{signature:e,hashType:n});const t=-129&n;if(t<=0||t>=4)throw new Error("Invalid hashType "+n);const l=S.allocUnsafe(1);l.writeUInt8(n,0);const r=FT(e.slice(0,32)),i=FT(e.slice(32,64));return S.concat([DT.encode(r,i),l])};var HT={OP_FALSE:0,OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_TRUE:81,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SUBSTR:127,OP_LEFT:128,OP_RIGHT:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_NOP1:176,OP_NOP2:177,OP_CHECKLOCKTIMEVERIFY:177,OP_NOP3:178,OP_CHECKSEQUENCEVERIFY:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_PUBKEYHASH:253,OP_PUBKEY:254,OP_INVALIDOPCODE:255},qT=HT;function zT(e){return e<qT.OP_PUSHDATA1?1:e<=255?2:e<=65535?3:5}var $T={encodingLength:zT,encode:function(e,n,t){var l=zT(n);return 1===l?e.writeUInt8(n,t):2===l?(e.writeUInt8(qT.OP_PUSHDATA1,t),e.writeUInt8(n,t+1)):3===l?(e.writeUInt8(qT.OP_PUSHDATA2,t),e.writeUInt16LE(n,t+1)):(e.writeUInt8(qT.OP_PUSHDATA4,t),e.writeUInt32LE(n,t+1)),l},decode:function(e,n){var t,l,r=e.readUInt8(n);if(r<qT.OP_PUSHDATA1)t=r,l=1;else if(r===qT.OP_PUSHDATA1){if(n+2>e.length)return null;t=e.readUInt8(n+1),l=2}else if(r===qT.OP_PUSHDATA2){if(n+3>e.length)return null;t=e.readUInt16LE(n+1),l=3}else{if(n+5>e.length)return null;if(r!==qT.OP_PUSHDATA4)throw new Error("Unexpected opcode");t=e.readUInt32LE(n+1),l=5}return{opcode:r,number:t,size:l}}},GT=HT,WT={};for(var JT in GT){WT[GT[JT]]=JT}var XT=WT;!function(e){Object.defineProperty(e,"__esModule",{value:!0});const n=TT,t=OT,l=MT,r=jT,i=bA,u=$T,o=tT;e.OPS=HT;const s=XT,a=e.OPS.OP_RESERVED;function c(n){return l.Buffer(n)||function(n){return l.Number(n)&&(n===e.OPS.OP_0||n>=e.OPS.OP_1&&n<=e.OPS.OP_16||n===e.OPS.OP_1NEGATE)}(n)}function h(e){return l.Array(e)&&e.every(c)}function f(n){return 0===n.length?e.OPS.OP_0:1===n.length?n[0]>=1&&n[0]<=16?a+n[0]:129===n[0]?e.OPS.OP_1NEGATE:void 0:void 0}function d(e){return ue(e)}function p(e){return ue(e)}function y(e){if(d(e))return e;o(l.Array,e);const n=e.reduce(((e,n)=>p(n)?1===n.length&&void 0!==f(n)?e+1:e+u.encodingLength(n.length)+n.length:e+1),0),t=S.allocUnsafe(n);let r=0;if(e.forEach((e=>{if(p(e)){const n=f(e);if(void 0!==n)return t.writeUInt8(n,r),void(r+=1);r+=u.encode(t,e.length,r),e.copy(t,r),r+=e.length}else t.writeUInt8(e,r),r+=1})),r!==t.length)throw new Error("Could not decode chunks");return t}function g(n){if(t=n,l.Array(t))return n;var t;o(l.Buffer,n);const r=[];let i=0;for(;i<n.length;){const t=n[i];if(t>e.OPS.OP_0&&t<=e.OPS.OP_PUSHDATA4){const e=u.decode(n,i);if(null===e)return null;if(i+=e.size,i+e.number>n.length)return null;const t=n.slice(i,i+e.number);i+=e.number;const l=f(t);void 0!==l?r.push(l):r.push(t)}else r.push(t),i+=1}return r}function m(e){const n=-129&e;return n>0&&n<4}e.isPushOnly=h,e.compile=y,e.decompile=g,e.toASM=function(e){return d(e)&&(e=g(e)),e.map((e=>{if(p(e)){const n=f(e);if(void 0===n)return e.toString("hex");e=n}return s[e]})).join(" ")},e.fromASM=function(n){return o(l.String,n),y(n.split(" ").map((n=>void 0!==e.OPS[n]?e.OPS[n]:(o(l.Hex,n),S.from(n,"hex")))))},e.toStack=function(t){return t=g(t),o(h,t),t.map((t=>p(t)?t:t===e.OPS.OP_0?S.allocUnsafe(0):n.encode(t-a)))},e.isCanonicalPubKey=function(e){return i.isPoint(e)},e.isDefinedHashType=m,e.isCanonicalScriptSignature=function(e){return!!ue(e)&&(!!m(e[e.length-1])&&r.check(e.slice(0,-1)))},e.number=n,e.signature=t}(AT);var YT={};Object.defineProperty(YT,"__esModule",{value:!0}),YT.prop=function(e,n,t){Object.defineProperty(e,n,{configurable:!0,enumerable:!0,get(){const e=t.call(this);return this[n]=e,e},set(e){Object.defineProperty(this,n,{configurable:!0,enumerable:!0,value:e,writable:!0})}})},YT.value=function(e){let n;return()=>(void 0!==n||(n=e()),n)},Object.defineProperty(PT,"__esModule",{value:!0});const QT=kT,ZT=AT,eO=YT,nO=tT,tO=ZT.OPS;PT.p2data=function(e,n){if(!e.data&&!e.output)throw new TypeError("Not enough data");n=Object.assign({validate:!0},n||{}),nO({network:nO.maybe(nO.Object),output:nO.maybe(nO.Buffer),data:nO.maybe(nO.arrayOf(nO.Buffer))},e);const t={name:"embed",network:e.network||QT.bitcoin};if(eO.prop(t,"output",(()=>{if(e.data)return ZT.compile([tO.OP_RETURN].concat(e.data))})),eO.prop(t,"data",(()=>{if(e.output)return ZT.decompile(e.output).slice(1)})),n.validate&&e.output){const n=ZT.decompile(e.output);if(n[0]!==tO.OP_RETURN)throw new TypeError("Output is invalid");if(!n.slice(1).every(nO.Buffer))throw new TypeError("Output is invalid");if(e.data&&!function(e,n){return e.length===n.length&&e.every(((e,t)=>e.equals(n[t])))}(e.data,t.data))throw new TypeError("Data mismatch")}return Object.assign(t,e)};var lO={};Object.defineProperty(lO,"__esModule",{value:!0});const rO=kT,iO=AT,uO=YT,oO=iO.OPS,sO=tT,aO=bA,cO=oO.OP_RESERVED;function hO(e,n){return e.length===n.length&&e.every(((e,t)=>e.equals(n[t])))}lO.p2ms=function(e,n){if(!(e.input||e.output||e.pubkeys&&void 0!==e.m||e.signatures))throw new TypeError("Not enough data");function t(e){return iO.isCanonicalScriptSignature(e)||void 0!==(n.allowIncomplete&&e===oO.OP_0)}n=Object.assign({validate:!0},n||{}),sO({network:sO.maybe(sO.Object),m:sO.maybe(sO.Number),n:sO.maybe(sO.Number),output:sO.maybe(sO.Buffer),pubkeys:sO.maybe(sO.arrayOf(aO.isPoint)),signatures:sO.maybe(sO.arrayOf(t)),input:sO.maybe(sO.Buffer)},e);const l={network:e.network||rO.bitcoin};let r=[],i=!1;function u(e){i||(i=!0,r=iO.decompile(e),l.m=r[0]-cO,l.n=r[r.length-2]-cO,l.pubkeys=r.slice(1,-2))}if(uO.prop(l,"output",(()=>{if(e.m&&l.n&&e.pubkeys)return iO.compile([].concat(cO+e.m,e.pubkeys,cO+l.n,oO.OP_CHECKMULTISIG))})),uO.prop(l,"m",(()=>{if(l.output)return u(l.output),l.m})),uO.prop(l,"n",(()=>{if(l.pubkeys)return l.pubkeys.length})),uO.prop(l,"pubkeys",(()=>{if(e.output)return u(e.output),l.pubkeys})),uO.prop(l,"signatures",(()=>{if(e.input)return iO.decompile(e.input).slice(1)})),uO.prop(l,"input",(()=>{if(e.signatures)return iO.compile([oO.OP_0].concat(e.signatures))})),uO.prop(l,"witness",(()=>{if(l.input)return[]})),uO.prop(l,"name",(()=>{if(l.m&&l.n)return`p2ms(${l.m} of ${l.n})`})),n.validate){if(e.output){if(u(e.output),!sO.Number(r[0]))throw new TypeError("Output is invalid");if(!sO.Number(r[r.length-2]))throw new TypeError("Output is invalid");if(r[r.length-1]!==oO.OP_CHECKMULTISIG)throw new TypeError("Output is invalid");if(l.m<=0||l.n>16||l.m>l.n||l.n!==r.length-3)throw new TypeError("Output is invalid");if(!l.pubkeys.every((e=>aO.isPoint(e))))throw new TypeError("Output is invalid");if(void 0!==e.m&&e.m!==l.m)throw new TypeError("m mismatch");if(void 0!==e.n&&e.n!==l.n)throw new TypeError("n mismatch");if(e.pubkeys&&!hO(e.pubkeys,l.pubkeys))throw new TypeError("Pubkeys mismatch")}if(e.pubkeys){if(void 0!==e.n&&e.n!==e.pubkeys.length)throw new TypeError("Pubkey count mismatch");if(l.n=e.pubkeys.length,l.n<l.m)throw new TypeError("Pubkey count cannot be less than m")}if(e.signatures){if(e.signatures.length<l.m)throw new TypeError("Not enough signatures provided");if(e.signatures.length>l.m)throw new TypeError("Too many signatures provided")}if(e.input){if(e.input[0]!==oO.OP_0)throw new TypeError("Input is invalid");if(0===l.signatures.length||!l.signatures.every(t))throw new TypeError("Input has invalid signature(s)");if(e.signatures&&!hO(e.signatures,l.signatures))throw new TypeError("Signature mismatch");if(void 0!==e.m&&e.m!==e.signatures.length)throw new TypeError("Signature count mismatch")}}return Object.assign(l,e)};var fO={};Object.defineProperty(fO,"__esModule",{value:!0});const dO=kT,pO=AT,yO=YT,gO=tT,mO=pO.OPS,vO=bA;fO.p2pk=function(e,n){if(!(e.input||e.output||e.pubkey||e.input||e.signature))throw new TypeError("Not enough data");n=Object.assign({validate:!0},n||{}),gO({network:gO.maybe(gO.Object),output:gO.maybe(gO.Buffer),pubkey:gO.maybe(vO.isPoint),signature:gO.maybe(pO.isCanonicalScriptSignature),input:gO.maybe(gO.Buffer)},e);const t=yO.value((()=>pO.decompile(e.input))),l={name:"p2pk",network:e.network||dO.bitcoin};if(yO.prop(l,"output",(()=>{if(e.pubkey)return pO.compile([e.pubkey,mO.OP_CHECKSIG])})),yO.prop(l,"pubkey",(()=>{if(e.output)return e.output.slice(1,-1)})),yO.prop(l,"signature",(()=>{if(e.input)return t()[0]})),yO.prop(l,"input",(()=>{if(e.signature)return pO.compile([e.signature])})),yO.prop(l,"witness",(()=>{if(l.input)return[]})),n.validate){if(e.output){if(e.output[e.output.length-1]!==mO.OP_CHECKSIG)throw new TypeError("Output is invalid");if(!vO.isPoint(l.pubkey))throw new TypeError("Output pubkey is invalid");if(e.pubkey&&!e.pubkey.equals(l.pubkey))throw new TypeError("Pubkey mismatch")}if(e.signature&&e.input&&!e.input.equals(l.input))throw new TypeError("Signature mismatch");if(e.input){if(1!==t().length)throw new TypeError("Input is invalid");if(!pO.isCanonicalScriptSignature(l.signature))throw new TypeError("Input has invalid signature")}}return Object.assign(l,e)};var bO={},wO={};Object.defineProperty(wO,"__esModule",{value:!0});const _O=bP;function EO(e){try{return _O("rmd160").update(e).digest()}catch(n){return _O("ripemd160").update(e).digest()}}function SO(e){return _O("sha256").update(e).digest()}wO.ripemd160=EO,wO.sha1=function(e){return _O("sha1").update(e).digest()},wO.sha256=SO,wO.hash160=function(e){return EO(SO(e))},wO.hash256=function(e){return SO(SO(e))},Object.defineProperty(bO,"__esModule",{value:!0});const xO=wO,kO=kT,IO=AT,PO=YT,AO=tT,TO=IO.OPS,OO=bA,MO=qP;bO.p2pkh=function(e,n){if(!(e.address||e.hash||e.output||e.pubkey||e.input))throw new TypeError("Not enough data");n=Object.assign({validate:!0},n||{}),AO({network:AO.maybe(AO.Object),address:AO.maybe(AO.String),hash:AO.maybe(AO.BufferN(20)),output:AO.maybe(AO.BufferN(25)),pubkey:AO.maybe(OO.isPoint),signature:AO.maybe(IO.isCanonicalScriptSignature),input:AO.maybe(AO.Buffer)},e);const t=PO.value((()=>{const n=MO.decode(e.address);return{version:n.readUInt8(0),hash:n.slice(1)}})),l=PO.value((()=>IO.decompile(e.input))),r=e.network||kO.bitcoin,i={name:"p2pkh",network:r};if(PO.prop(i,"address",(()=>{if(!i.hash)return;const e=S.allocUnsafe(21);return e.writeUInt8(r.pubKeyHash,0),i.hash.copy(e,1),MO.encode(e)})),PO.prop(i,"hash",(()=>e.output?e.output.slice(3,23):e.address?t().hash:e.pubkey||i.pubkey?xO.hash160(e.pubkey||i.pubkey):void 0)),PO.prop(i,"output",(()=>{if(i.hash)return IO.compile([TO.OP_DUP,TO.OP_HASH160,i.hash,TO.OP_EQUALVERIFY,TO.OP_CHECKSIG])})),PO.prop(i,"pubkey",(()=>{if(e.input)return l()[1]})),PO.prop(i,"signature",(()=>{if(e.input)return l()[0]})),PO.prop(i,"input",(()=>{if(e.pubkey&&e.signature)return IO.compile([e.signature,e.pubkey])})),PO.prop(i,"witness",(()=>{if(i.input)return[]})),n.validate){let n=S.from([]);if(e.address){if(t().version!==r.pubKeyHash)throw new TypeError("Invalid version or Network mismatch");if(20!==t().hash.length)throw new TypeError("Invalid address");n=t().hash}if(e.hash){if(n.length>0&&!n.equals(e.hash))throw new TypeError("Hash mismatch");n=e.hash}if(e.output){if(25!==e.output.length||e.output[0]!==TO.OP_DUP||e.output[1]!==TO.OP_HASH160||20!==e.output[2]||e.output[23]!==TO.OP_EQUALVERIFY||e.output[24]!==TO.OP_CHECKSIG)throw new TypeError("Output is invalid");const t=e.output.slice(3,23);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch");n=t}if(e.pubkey){const t=xO.hash160(e.pubkey);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch");n=t}if(e.input){const t=l();if(2!==t.length)throw new TypeError("Input is invalid");if(!IO.isCanonicalScriptSignature(t[0]))throw new TypeError("Input has invalid signature");if(!OO.isPoint(t[1]))throw new TypeError("Input has invalid pubkey");if(e.signature&&!e.signature.equals(t[0]))throw new TypeError("Signature mismatch");if(e.pubkey&&!e.pubkey.equals(t[1]))throw new TypeError("Pubkey mismatch");const r=xO.hash160(t[1]);if(n.length>0&&!n.equals(r))throw new TypeError("Hash mismatch")}}return Object.assign(i,e)};var RO={};Object.defineProperty(RO,"__esModule",{value:!0});const NO=wO,CO=kT,LO=AT,jO=YT,UO=tT,DO=LO.OPS,BO=qP;RO.p2sh=function(e,n){if(!(e.address||e.hash||e.output||e.redeem||e.input))throw new TypeError("Not enough data");n=Object.assign({validate:!0},n||{}),UO({network:UO.maybe(UO.Object),address:UO.maybe(UO.String),hash:UO.maybe(UO.BufferN(20)),output:UO.maybe(UO.BufferN(23)),redeem:UO.maybe({network:UO.maybe(UO.Object),output:UO.maybe(UO.Buffer),input:UO.maybe(UO.Buffer),witness:UO.maybe(UO.arrayOf(UO.Buffer))}),input:UO.maybe(UO.Buffer),witness:UO.maybe(UO.arrayOf(UO.Buffer))},e);let t=e.network;t||(t=e.redeem&&e.redeem.network||CO.bitcoin);const l={network:t},r=jO.value((()=>{const n=BO.decode(e.address);return{version:n.readUInt8(0),hash:n.slice(1)}})),i=jO.value((()=>LO.decompile(e.input))),u=jO.value((()=>{const n=i();return{network:t,output:n[n.length-1],input:LO.compile(n.slice(0,-1)),witness:e.witness||[]}}));if(jO.prop(l,"address",(()=>{if(!l.hash)return;const e=S.allocUnsafe(21);return e.writeUInt8(l.network.scriptHash,0),l.hash.copy(e,1),BO.encode(e)})),jO.prop(l,"hash",(()=>e.output?e.output.slice(2,22):e.address?r().hash:l.redeem&&l.redeem.output?NO.hash160(l.redeem.output):void 0)),jO.prop(l,"output",(()=>{if(l.hash)return LO.compile([DO.OP_HASH160,l.hash,DO.OP_EQUAL])})),jO.prop(l,"redeem",(()=>{if(e.input)return u()})),jO.prop(l,"input",(()=>{if(e.redeem&&e.redeem.input&&e.redeem.output)return LO.compile([].concat(LO.decompile(e.redeem.input),e.redeem.output))})),jO.prop(l,"witness",(()=>l.redeem&&l.redeem.witness?l.redeem.witness:l.input?[]:void 0)),jO.prop(l,"name",(()=>{const e=["p2sh"];return void 0!==l.redeem&&e.push(l.redeem.name),e.join("-")})),n.validate){let n=S.from([]);if(e.address){if(r().version!==t.scriptHash)throw new TypeError("Invalid version or Network mismatch");if(20!==r().hash.length)throw new TypeError("Invalid address");n=r().hash}if(e.hash){if(n.length>0&&!n.equals(e.hash))throw new TypeError("Hash mismatch");n=e.hash}if(e.output){if(23!==e.output.length||e.output[0]!==DO.OP_HASH160||20!==e.output[1]||e.output[22]!==DO.OP_EQUAL)throw new TypeError("Output is invalid");const t=e.output.slice(2,22);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch");n=t}const l=e=>{if(e.output){const t=LO.decompile(e.output);if(!t||t.length<1)throw new TypeError("Redeem.output too short");const l=NO.hash160(e.output);if(n.length>0&&!n.equals(l))throw new TypeError("Hash mismatch");n=l}if(e.input){const n=e.input.length>0,t=e.witness&&e.witness.length>0;if(!n&&!t)throw new TypeError("Empty input");if(n&&t)throw new TypeError("Input and witness provided");if(n){const n=LO.decompile(e.input);if(!LO.isPushOnly(n))throw new TypeError("Non push-only scriptSig")}}};if(e.input){const e=i();if(!e||e.length<1)throw new TypeError("Input too short");if(!ue(u().output))throw new TypeError("Input is invalid");l(u())}if(e.redeem){if(e.redeem.network&&e.redeem.network!==t)throw new TypeError("Network mismatch");if(e.input){const n=u();if(e.redeem.output&&!e.redeem.output.equals(n.output))throw new TypeError("Redeem.output mismatch");if(e.redeem.input&&!e.redeem.input.equals(n.input))throw new TypeError("Redeem.input mismatch")}l(e.redeem)}if(e.witness&&e.redeem&&e.redeem.witness&&!function(e,n){return e.length===n.length&&e.every(((e,t)=>e.equals(n[t])))}(e.redeem.witness,e.witness))throw new TypeError("Witness and redeem.witness mismatch")}return Object.assign(l,e)};for(var KO={},FO="qpzry9x8gf2tvdw0s3jn54khce6mua7l",VO={},HO=0;HO<FO.length;HO++){var qO=FO.charAt(HO);if(void 0!==VO[qO])throw new TypeError(qO+" is ambiguous");VO[qO]=HO}function zO(e){var n=e>>25;return(33554431&e)<<5^996825010&-(n>>0&1)^642813549&-(n>>1&1)^513874426&-(n>>2&1)^1027748829&-(n>>3&1)^705979059&-(n>>4&1)}function $O(e){for(var n=1,t=0;t<e.length;++t){var l=e.charCodeAt(t);if(l<33||l>126)return"Invalid prefix ("+e+")";n=zO(n)^l>>5}for(n=zO(n),t=0;t<e.length;++t){var r=e.charCodeAt(t);n=zO(n)^31&r}return n}function GO(e,n){if(n=n||90,e.length<8)return e+" too short";if(e.length>n)return"Exceeds length limit";var t=e.toLowerCase(),l=e.toUpperCase();if(e!==t&&e!==l)return"Mixed-case string "+e;var r=(e=t).lastIndexOf("1");if(-1===r)return"No separator character for "+e;if(0===r)return"Missing prefix for "+e;var i=e.slice(0,r),u=e.slice(r+1);if(u.length<6)return"Data too short";var o=$O(i);if("string"==typeof o)return o;for(var s=[],a=0;a<u.length;++a){var c=u.charAt(a),h=VO[c];if(void 0===h)return"Unknown character "+c;o=zO(o)^h,a+6>=u.length||s.push(h)}return 1!==o?"Invalid checksum for "+e:{prefix:i,words:s}}function WO(e,n,t,l){for(var r=0,i=0,u=(1<<t)-1,o=[],s=0;s<e.length;++s)for(r=r<<n|e[s],i+=n;i>=t;)i-=t,o.push(r>>i&u);if(l)i>0&&o.push(r<<t-i&u);else{if(i>=n)return"Excess padding";if(r<<t-i&u)return"Non-zero padding"}return o}var JO={decodeUnsafe:function(){var e=GO.apply(null,arguments);if("object"==typeof e)return e},decode:function(e){var n=GO.apply(null,arguments);if("object"==typeof n)return n;throw new Error(n)},encode:function(e,n,t){if(t=t||90,e.length+7+n.length>t)throw new TypeError("Exceeds length limit");var l=$O(e=e.toLowerCase());if("string"==typeof l)throw new Error(l);for(var r=e+"1",i=0;i<n.length;++i){var u=n[i];if(u>>5!=0)throw new Error("Non 5-bit word");l=zO(l)^u,r+=FO.charAt(u)}for(i=0;i<6;++i)l=zO(l);for(l^=1,i=0;i<6;++i){r+=FO.charAt(l>>5*(5-i)&31)}return r},toWordsUnsafe:function(e){var n=WO(e,8,5,!0);if(Array.isArray(n))return n},toWords:function(e){var n=WO(e,8,5,!0);if(Array.isArray(n))return n;throw new Error(n)},fromWordsUnsafe:function(e){var n=WO(e,5,8,!1);if(Array.isArray(n))return n},fromWords:function(e){var n=WO(e,5,8,!1);if(Array.isArray(n))return n;throw new Error(n)}};Object.defineProperty(KO,"__esModule",{value:!0});const XO=wO,YO=kT,QO=AT,ZO=YT,eM=tT,nM=QO.OPS,tM=bA,lM=JO,rM=S.alloc(0);KO.p2wpkh=function(e,n){if(!(e.address||e.hash||e.output||e.pubkey||e.witness))throw new TypeError("Not enough data");n=Object.assign({validate:!0},n||{}),eM({address:eM.maybe(eM.String),hash:eM.maybe(eM.BufferN(20)),input:eM.maybe(eM.BufferN(0)),network:eM.maybe(eM.Object),output:eM.maybe(eM.BufferN(22)),pubkey:eM.maybe(tM.isPoint),signature:eM.maybe(QO.isCanonicalScriptSignature),witness:eM.maybe(eM.arrayOf(eM.Buffer))},e);const t=ZO.value((()=>{const n=lM.decode(e.address),t=n.words.shift(),l=lM.fromWords(n.words);return{version:t,prefix:n.prefix,data:S.from(l)}})),l=e.network||YO.bitcoin,r={name:"p2wpkh",network:l};if(ZO.prop(r,"address",(()=>{if(!r.hash)return;const e=lM.toWords(r.hash);return e.unshift(0),lM.encode(l.bech32,e)})),ZO.prop(r,"hash",(()=>e.output?e.output.slice(2,22):e.address?t().data:e.pubkey||r.pubkey?XO.hash160(e.pubkey||r.pubkey):void 0)),ZO.prop(r,"output",(()=>{if(r.hash)return QO.compile([nM.OP_0,r.hash])})),ZO.prop(r,"pubkey",(()=>e.pubkey?e.pubkey:e.witness?e.witness[1]:void 0)),ZO.prop(r,"signature",(()=>{if(e.witness)return e.witness[0]})),ZO.prop(r,"input",(()=>{if(r.witness)return rM})),ZO.prop(r,"witness",(()=>{if(e.pubkey&&e.signature)return[e.signature,e.pubkey]})),n.validate){let n=S.from([]);if(e.address){if(l&&l.bech32!==t().prefix)throw new TypeError("Invalid prefix or Network mismatch");if(0!==t().version)throw new TypeError("Invalid address version");if(20!==t().data.length)throw new TypeError("Invalid address data");n=t().data}if(e.hash){if(n.length>0&&!n.equals(e.hash))throw new TypeError("Hash mismatch");n=e.hash}if(e.output){if(22!==e.output.length||e.output[0]!==nM.OP_0||20!==e.output[1])throw new TypeError("Output is invalid");if(n.length>0&&!n.equals(e.output.slice(2)))throw new TypeError("Hash mismatch");n=e.output.slice(2)}if(e.pubkey){const t=XO.hash160(e.pubkey);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch");if(n=t,!tM.isPoint(e.pubkey)||33!==e.pubkey.length)throw new TypeError("Invalid pubkey for p2wpkh")}if(e.witness){if(2!==e.witness.length)throw new TypeError("Witness is invalid");if(!QO.isCanonicalScriptSignature(e.witness[0]))throw new TypeError("Witness has invalid signature");if(!tM.isPoint(e.witness[1])||33!==e.witness[1].length)throw new TypeError("Witness has invalid pubkey");if(e.signature&&!e.signature.equals(e.witness[0]))throw new TypeError("Signature mismatch");if(e.pubkey&&!e.pubkey.equals(e.witness[1]))throw new TypeError("Pubkey mismatch");const t=XO.hash160(e.witness[1]);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch")}}return Object.assign(r,e)};var iM={};Object.defineProperty(iM,"__esModule",{value:!0});const uM=wO,oM=kT,sM=AT,aM=YT,cM=tT,hM=sM.OPS,fM=bA,dM=JO,pM=S.alloc(0);function yM(e){return!(!ue(e)||65!==e.length||4!==e[0]||!fM.isPoint(e))}iM.p2wsh=function(e,n){if(!(e.address||e.hash||e.output||e.redeem||e.witness))throw new TypeError("Not enough data");n=Object.assign({validate:!0},n||{}),cM({network:cM.maybe(cM.Object),address:cM.maybe(cM.String),hash:cM.maybe(cM.BufferN(32)),output:cM.maybe(cM.BufferN(34)),redeem:cM.maybe({input:cM.maybe(cM.Buffer),network:cM.maybe(cM.Object),output:cM.maybe(cM.Buffer),witness:cM.maybe(cM.arrayOf(cM.Buffer))}),input:cM.maybe(cM.BufferN(0)),witness:cM.maybe(cM.arrayOf(cM.Buffer))},e);const t=aM.value((()=>{const n=dM.decode(e.address),t=n.words.shift(),l=dM.fromWords(n.words);return{version:t,prefix:n.prefix,data:S.from(l)}})),l=aM.value((()=>sM.decompile(e.redeem.input)));let r=e.network;r||(r=e.redeem&&e.redeem.network||oM.bitcoin);const i={network:r};if(aM.prop(i,"address",(()=>{if(!i.hash)return;const e=dM.toWords(i.hash);return e.unshift(0),dM.encode(r.bech32,e)})),aM.prop(i,"hash",(()=>e.output?e.output.slice(2):e.address?t().data:i.redeem&&i.redeem.output?uM.sha256(i.redeem.output):void 0)),aM.prop(i,"output",(()=>{if(i.hash)return sM.compile([hM.OP_0,i.hash])})),aM.prop(i,"redeem",(()=>{if(e.witness)return{output:e.witness[e.witness.length-1],input:pM,witness:e.witness.slice(0,-1)}})),aM.prop(i,"input",(()=>{if(i.witness)return pM})),aM.prop(i,"witness",(()=>{if(e.redeem&&e.redeem.input&&e.redeem.input.length>0&&e.redeem.output&&e.redeem.output.length>0){const n=sM.toStack(l());return i.redeem=Object.assign({witness:n},e.redeem),i.redeem.input=pM,[].concat(n,e.redeem.output)}if(e.redeem&&e.redeem.output&&e.redeem.witness)return[].concat(e.redeem.witness,e.redeem.output)})),aM.prop(i,"name",(()=>{const e=["p2wsh"];return void 0!==i.redeem&&e.push(i.redeem.name),e.join("-")})),n.validate){let n=S.from([]);if(e.address){if(t().prefix!==r.bech32)throw new TypeError("Invalid prefix or Network mismatch");if(0!==t().version)throw new TypeError("Invalid address version");if(32!==t().data.length)throw new TypeError("Invalid address data");n=t().data}if(e.hash){if(n.length>0&&!n.equals(e.hash))throw new TypeError("Hash mismatch");n=e.hash}if(e.output){if(34!==e.output.length||e.output[0]!==hM.OP_0||32!==e.output[1])throw new TypeError("Output is invalid");const t=e.output.slice(2);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch");n=t}if(e.redeem){if(e.redeem.network&&e.redeem.network!==r)throw new TypeError("Network mismatch");if(e.redeem.input&&e.redeem.input.length>0&&e.redeem.witness&&e.redeem.witness.length>0)throw new TypeError("Ambiguous witness source");if(e.redeem.output){if(0===sM.decompile(e.redeem.output).length)throw new TypeError("Redeem.output is invalid");const t=uM.sha256(e.redeem.output);if(n.length>0&&!n.equals(t))throw new TypeError("Hash mismatch");n=t}if(e.redeem.input&&!sM.isPushOnly(l()))throw new TypeError("Non push-only scriptSig");if(e.witness&&e.redeem.witness&&!function(e,n){return e.length===n.length&&e.every(((e,t)=>e.equals(n[t])))}(e.witness,e.redeem.witness))throw new TypeError("Witness and redeem.witness mismatch");if(e.redeem.input&&l().some(yM)||e.redeem.output&&(sM.decompile(e.redeem.output)||[]).some(yM))throw new TypeError("redeem.input or redeem.output contains uncompressed pubkey")}if(e.witness&&e.witness.length>0){const n=e.witness[e.witness.length-1];if(e.redeem&&e.redeem.output&&!e.redeem.output.equals(n))throw new TypeError("Witness and redeem.output mismatch");if(e.witness.some(yM)||(sM.decompile(n)||[]).some(yM))throw new TypeError("Witness contains uncompressed pubkey")}}return Object.assign(i,e)},Object.defineProperty(IT,"__esModule",{value:!0});const gM=PT;IT.embed=gM.p2data;const mM=lO;IT.p2ms=mM.p2ms;const vM=fO;IT.p2pk=vM.p2pk;const bM=bO;IT.p2pkh=bM.p2pkh;const wM=RO;IT.p2sh=wM.p2sh;const _M=KO;IT.p2wpkh=_M.p2wpkh;const EM=iM;IT.p2wsh=EM.p2wsh,Object.defineProperty(xT,"__esModule",{value:!0});const SM=kT,xM=IT,kM=AT,IM=MT,PM=JO,AM=qP,TM=tT;function OM(e){const n=AM.decode(e);if(n.length<21)throw new TypeError(e+" is too short");if(n.length>21)throw new TypeError(e+" is too long");return{version:n.readUInt8(0),hash:n.slice(1)}}function MM(e){const n=PM.decode(e),t=PM.fromWords(n.words.slice(1));return{version:n.words[0],prefix:n.prefix,data:S.from(t)}}xT.fromBase58Check=OM,xT.fromBech32=MM,xT.toBase58Check=function(e,n){TM(IM.tuple(IM.Hash160bit,IM.UInt8),arguments);const t=S.allocUnsafe(21);return t.writeUInt8(n,0),e.copy(t,1),AM.encode(t)},xT.toBech32=function(e,n,t){const l=PM.toWords(e);return l.unshift(n),PM.encode(t,l)},xT.fromOutputScript=function(e,n){n=n||SM.bitcoin;try{return xM.p2pkh({output:e,network:n}).address}catch(e){}try{return xM.p2sh({output:e,network:n}).address}catch(e){}try{return xM.p2wpkh({output:e,network:n}).address}catch(e){}try{return xM.p2wsh({output:e,network:n}).address}catch(e){}throw new Error(kM.toASM(e)+" has no matching Address")},xT.toOutputScript=function(e,n){let t,l;n=n||SM.bitcoin;try{t=OM(e)}catch(e){}if(t){if(t.version===n.pubKeyHash)return xM.p2pkh({hash:t.hash}).output;if(t.version===n.scriptHash)return xM.p2sh({hash:t.hash}).output}else{try{l=MM(e)}catch(e){}if(l){if(l.prefix!==n.bech32)throw new Error(e+" has an invalid prefix");if(0===l.version){if(20===l.data.length)return xM.p2wpkh({hash:l.data}).output;if(32===l.data.length)return xM.p2wsh({hash:l.data}).output}}}throw new Error(e+" has no matching Script")};var RM={},NM={exports:{}},CM=65536,LM=4294967295;var jM=q_.exports.Buffer,UM=n.crypto||n.msCrypto;UM&&UM.getRandomValues?NM.exports=function(e,n){if(e>LM)throw new RangeError("requested too many random bytes");var t=jM.allocUnsafe(e);if(e>0)if(e>CM)for(var l=0;l<e;l+=CM)UM.getRandomValues(t.slice(l,l+CM));else UM.getRandomValues(t);if("function"==typeof n)return Jr((function(){n(null,t)}));return t}:NM.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")},Object.defineProperty(RM,"__esModule",{value:!0});const DM=kT,BM=MT,KM=bA,FM=NM.exports,VM=tT,HM=uT,qM=VM.maybe(VM.compile({compressed:BM.maybe(BM.Boolean),network:BM.maybe(BM.Network)}));class zM{constructor(e,n,t){this.__D=e,this.__Q=n,this.lowR=!1,void 0===t&&(t={}),this.compressed=void 0===t.compressed||t.compressed,this.network=t.network||DM.bitcoin,void 0!==n&&(this.__Q=KM.pointCompress(n,this.compressed))}get privateKey(){return this.__D}get publicKey(){return this.__Q||(this.__Q=KM.pointFromScalar(this.__D,this.compressed)),this.__Q}toWIF(){if(!this.__D)throw new Error("Missing private key");return HM.encode(this.network.wif,this.__D,this.compressed)}sign(e,n){if(!this.__D)throw new Error("Missing private key");if(void 0===n&&(n=this.lowR),!1===n)return KM.sign(e,this.__D);{let n=KM.sign(e,this.__D);const t=S.alloc(32,0);let l=0;for(;n[0]>127;)l++,t.writeUIntLE(l,0,6),n=KM.signWithEntropy(e,this.__D,t);return n}}verify(e,n){return KM.verify(e,this.publicKey,n)}}function $M(e,n){if(VM(BM.Buffer256bit,e),!KM.isPrivate(e))throw new TypeError("Private key not in range [1, n)");return VM(qM,n),new zM(e,void 0,n)}RM.fromPrivateKey=$M,RM.fromPublicKey=function(e,n){return VM(KM.isPoint,e),VM(qM,n),new zM(void 0,e,n)},RM.fromWIF=function(e,n){const t=HM.decode(e),l=t.version;if(BM.Array(n)){if(n=n.filter((e=>l===e.wif)).pop(),!n)throw new Error("Unknown network version")}else if(n=n||DM.bitcoin,l!==n.wif)throw new Error("Invalid network version");return $M(t.privateKey,{compressed:t.compressed,network:n})},RM.makeRandom=function(e){VM(qM,e),void 0===e&&(e={});const n=e.rng||FM;let t;do{t=n(32),VM(BM.Buffer256bit,t)}while(!KM.isPrivate(t));return $M(t,e)};var GM={},WM={},JM=q_.exports.Buffer;function XM(e){if(e<0||e>9007199254740991||e%1!=0)throw new RangeError("value out of range")}function YM(e){return XM(e),e<253?1:e<=65535?3:e<=4294967295?5:9}var QM={encode:function e(n,t,l){if(XM(n),t||(t=JM.allocUnsafe(YM(n))),!JM.isBuffer(t))throw new TypeError("buffer must be a Buffer instance");return l||(l=0),n<253?(t.writeUInt8(n,l),e.bytes=1):n<=65535?(t.writeUInt8(253,l),t.writeUInt16LE(n,l+1),e.bytes=3):n<=4294967295?(t.writeUInt8(254,l),t.writeUInt32LE(n,l+1),e.bytes=5):(t.writeUInt8(255,l),t.writeUInt32LE(n>>>0,l+1),t.writeUInt32LE(n/4294967296|0,l+5),e.bytes=9),t},decode:function e(n,t){if(!JM.isBuffer(n))throw new TypeError("buffer must be a Buffer instance");t||(t=0);var l=n.readUInt8(t);if(l<253)return e.bytes=1,l;if(253===l)return e.bytes=3,n.readUInt16LE(t+1);if(254===l)return e.bytes=5,n.readUInt32LE(t+1);e.bytes=9;var r=n.readUInt32LE(t+1),i=4294967296*n.readUInt32LE(t+5)+r;return XM(i),i},encodingLength:YM};Object.defineProperty(WM,"__esModule",{value:!0});const ZM=MT,eR=tT,nR=QM;function tR(e,n){if("number"!=typeof e)throw new Error("cannot write a non-number as a number");if(e<0)throw new Error("specified a negative value for writing an unsigned value");if(e>n)throw new Error("RangeError: value out of range");if(Math.floor(e)!==e)throw new Error("value has a fractional component")}function lR(e,n){const t=e.readUInt32LE(n);let l=e.readUInt32LE(n+4);return l*=4294967296,tR(l+t,9007199254740991),l+t}function rR(e,n,t){return tR(n,9007199254740991),e.writeInt32LE(-1&n,t),e.writeUInt32LE(Math.floor(n/4294967296),t+4),t+8}WM.readUInt64LE=lR,WM.writeUInt64LE=rR,WM.reverseBuffer=function(e){if(e.length<1)return e;let n=e.length-1,t=0;for(let l=0;l<e.length/2;l++)t=e[l],e[l]=e[n],e[n]=t,n--;return e},WM.cloneBuffer=function(e){const n=S.allocUnsafe(e.length);return e.copy(n),n};WM.BufferWriter=class{constructor(e,n=0){this.buffer=e,this.offset=n,eR(ZM.tuple(ZM.Buffer,ZM.UInt32),[e,n])}writeUInt8(e){this.offset=this.buffer.writeUInt8(e,this.offset)}writeInt32(e){this.offset=this.buffer.writeInt32LE(e,this.offset)}writeUInt32(e){this.offset=this.buffer.writeUInt32LE(e,this.offset)}writeUInt64(e){this.offset=rR(this.buffer,e,this.offset)}writeVarInt(e){nR.encode(e,this.buffer,this.offset),this.offset+=nR.encode.bytes}writeSlice(e){if(this.buffer.length<this.offset+e.length)throw new Error("Cannot write slice out of bounds");this.offset+=e.copy(this.buffer,this.offset)}writeVarSlice(e){this.writeVarInt(e.length),this.writeSlice(e)}writeVector(e){this.writeVarInt(e.length),e.forEach((e=>this.writeVarSlice(e)))}};WM.BufferReader=class{constructor(e,n=0){this.buffer=e,this.offset=n,eR(ZM.tuple(ZM.Buffer,ZM.UInt32),[e,n])}readUInt8(){const e=this.buffer.readUInt8(this.offset);return this.offset++,e}readInt32(){const e=this.buffer.readInt32LE(this.offset);return this.offset+=4,e}readUInt32(){const e=this.buffer.readUInt32LE(this.offset);return this.offset+=4,e}readUInt64(){const e=lR(this.buffer,this.offset);return this.offset+=8,e}readVarInt(){const e=nR.decode(this.buffer,this.offset);return this.offset+=nR.decode.bytes,e}readSlice(e){if(this.buffer.length<this.offset+e)throw new Error("Cannot read slice out of bounds");const n=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,n}readVarSlice(){return this.readSlice(this.readVarInt())}readVector(){const e=this.readVarInt(),n=[];for(let t=0;t<e;t++)n.push(this.readVarSlice());return n}};var iR={};Object.defineProperty(iR,"__esModule",{value:!0});const uR=WM,oR=wO,sR=AT,aR=AT,cR=MT,hR=tT,fR=QM;function dR(e){const n=e.length;return fR.encodingLength(n)+n}const pR=S.allocUnsafe(0),yR=[],gR=S.from("0000000000000000000000000000000000000000000000000000000000000000","hex"),mR=S.from("0000000000000000000000000000000000000000000000000000000000000001","hex"),vR=S.from("ffffffffffffffff","hex"),bR={script:pR,valueBuffer:vR};class wR{constructor(){this.version=1,this.locktime=0,this.ins=[],this.outs=[]}static fromBuffer(e,n){const t=new uR.BufferReader(e),l=new wR;l.version=t.readInt32();const r=t.readUInt8(),i=t.readUInt8();let u=!1;r===wR.ADVANCED_TRANSACTION_MARKER&&i===wR.ADVANCED_TRANSACTION_FLAG?u=!0:t.offset-=2;const o=t.readVarInt();for(let e=0;e<o;++e)l.ins.push({hash:t.readSlice(32),index:t.readUInt32(),script:t.readVarSlice(),sequence:t.readUInt32(),witness:yR});const s=t.readVarInt();for(let e=0;e<s;++e)l.outs.push({value:t.readUInt64(),script:t.readVarSlice()});if(u){for(let e=0;e<o;++e)l.ins[e].witness=t.readVector();if(!l.hasWitnesses())throw new Error("Transaction has superfluous witness data")}if(l.locktime=t.readUInt32(),n)return l;if(t.offset!==e.length)throw new Error("Transaction has unexpected data");return l}static fromHex(e){return wR.fromBuffer(S.from(e,"hex"),!1)}static isCoinbaseHash(e){hR(cR.Hash256bit,e);for(let n=0;n<32;++n)if(0!==e[n])return!1;return!0}isCoinbase(){return 1===this.ins.length&&wR.isCoinbaseHash(this.ins[0].hash)}addInput(e,n,t,l){return hR(cR.tuple(cR.Hash256bit,cR.UInt32,cR.maybe(cR.UInt32),cR.maybe(cR.Buffer)),arguments),cR.Null(t)&&(t=wR.DEFAULT_SEQUENCE),this.ins.push({hash:e,index:n,script:l||pR,sequence:t,witness:yR})-1}addOutput(e,n){return hR(cR.tuple(cR.Buffer,cR.Satoshi),arguments),this.outs.push({script:e,value:n})-1}hasWitnesses(){return this.ins.some((e=>0!==e.witness.length))}weight(){return 3*this.byteLength(!1)+this.byteLength(!0)}virtualSize(){return Math.ceil(this.weight()/4)}byteLength(e=!0){const n=e&&this.hasWitnesses();return(n?10:8)+fR.encodingLength(this.ins.length)+fR.encodingLength(this.outs.length)+this.ins.reduce(((e,n)=>e+40+dR(n.script)),0)+this.outs.reduce(((e,n)=>e+8+dR(n.script)),0)+(n?this.ins.reduce(((e,n)=>e+function(e){const n=e.length;return fR.encodingLength(n)+e.reduce(((e,n)=>e+dR(n)),0)}(n.witness)),0):0)}clone(){const e=new wR;return e.version=this.version,e.locktime=this.locktime,e.ins=this.ins.map((e=>({hash:e.hash,index:e.index,script:e.script,sequence:e.sequence,witness:e.witness}))),e.outs=this.outs.map((e=>({script:e.script,value:e.value}))),e}hashForSignature(e,n,t){if(hR(cR.tuple(cR.UInt32,cR.Buffer,cR.Number),arguments),e>=this.ins.length)return mR;const l=sR.compile(sR.decompile(n).filter((e=>e!==aR.OPS.OP_CODESEPARATOR))),r=this.clone();if((31&t)===wR.SIGHASH_NONE)r.outs=[],r.ins.forEach(((n,t)=>{t!==e&&(n.sequence=0)}));else if((31&t)===wR.SIGHASH_SINGLE){if(e>=this.outs.length)return mR;r.outs.length=e+1;for(let n=0;n<e;n++)r.outs[n]=bR;r.ins.forEach(((n,t)=>{t!==e&&(n.sequence=0)}))}t&wR.SIGHASH_ANYONECANPAY?(r.ins=[r.ins[e]],r.ins[0].script=l):(r.ins.forEach((e=>{e.script=pR})),r.ins[e].script=l);const i=S.allocUnsafe(r.byteLength(!1)+4);return i.writeInt32LE(t,i.length-4),r.__toBuffer(i,0,!1),oR.hash256(i)}hashForWitnessV0(e,n,t,l){hR(cR.tuple(cR.UInt32,cR.Buffer,cR.Satoshi,cR.UInt32),arguments);let r,i=S.from([]),u=gR,o=gR,s=gR;if(l&wR.SIGHASH_ANYONECANPAY||(i=S.allocUnsafe(36*this.ins.length),r=new uR.BufferWriter(i,0),this.ins.forEach((e=>{r.writeSlice(e.hash),r.writeUInt32(e.index)})),o=oR.hash256(i)),l&wR.SIGHASH_ANYONECANPAY||(31&l)===wR.SIGHASH_SINGLE||(31&l)===wR.SIGHASH_NONE||(i=S.allocUnsafe(4*this.ins.length),r=new uR.BufferWriter(i,0),this.ins.forEach((e=>{r.writeUInt32(e.sequence)})),s=oR.hash256(i)),(31&l)!==wR.SIGHASH_SINGLE&&(31&l)!==wR.SIGHASH_NONE){const e=this.outs.reduce(((e,n)=>e+8+dR(n.script)),0);i=S.allocUnsafe(e),r=new uR.BufferWriter(i,0),this.outs.forEach((e=>{r.writeUInt64(e.value),r.writeVarSlice(e.script)})),u=oR.hash256(i)}else if((31&l)===wR.SIGHASH_SINGLE&&e<this.outs.length){const n=this.outs[e];i=S.allocUnsafe(8+dR(n.script)),r=new uR.BufferWriter(i,0),r.writeUInt64(n.value),r.writeVarSlice(n.script),u=oR.hash256(i)}i=S.allocUnsafe(156+dR(n)),r=new uR.BufferWriter(i,0);const a=this.ins[e];return r.writeUInt32(this.version),r.writeSlice(o),r.writeSlice(s),r.writeSlice(a.hash),r.writeUInt32(a.index),r.writeVarSlice(n),r.writeUInt64(t),r.writeUInt32(a.sequence),r.writeSlice(u),r.writeUInt32(this.locktime),r.writeUInt32(l),oR.hash256(i)}getHash(e){return e&&this.isCoinbase()?S.alloc(32,0):oR.hash256(this.__toBuffer(void 0,void 0,e))}getId(){return uR.reverseBuffer(this.getHash(!1)).toString("hex")}toBuffer(e,n){return this.__toBuffer(e,n,!0)}toHex(){return this.toBuffer(void 0,void 0).toString("hex")}setInputScript(e,n){hR(cR.tuple(cR.Number,cR.Buffer),arguments),this.ins[e].script=n}setWitness(e,n){hR(cR.tuple(cR.Number,[cR.Buffer]),arguments),this.ins[e].witness=n}__toBuffer(e,n,t=!1){e||(e=S.allocUnsafe(this.byteLength(t)));const l=new uR.BufferWriter(e,n||0);l.writeInt32(this.version);const r=t&&this.hasWitnesses();return r&&(l.writeUInt8(wR.ADVANCED_TRANSACTION_MARKER),l.writeUInt8(wR.ADVANCED_TRANSACTION_FLAG)),l.writeVarInt(this.ins.length),this.ins.forEach((e=>{l.writeSlice(e.hash),l.writeUInt32(e.index),l.writeVarSlice(e.script),l.writeUInt32(e.sequence)})),l.writeVarInt(this.outs.length),this.outs.forEach((e=>{void 0!==e.value?l.writeUInt64(e.value):l.writeSlice(e.valueBuffer),l.writeVarSlice(e.script)})),r&&this.ins.forEach((e=>{l.writeVector(e.witness)})),l.writeUInt32(this.locktime),void 0!==n?e.slice(n,l.offset):e}}wR.DEFAULT_SEQUENCE=4294967295,wR.SIGHASH_ALL=1,wR.SIGHASH_NONE=2,wR.SIGHASH_SINGLE=3,wR.SIGHASH_ANYONECANPAY=128,wR.ADVANCED_TRANSACTION_MARKER=0,wR.ADVANCED_TRANSACTION_FLAG=1,iR.Transaction=wR;Object.defineProperty(GM,"__esModule",{value:!0});const _R=WM,ER=wO,SR=iR,xR=MT,kR=function(e,n){if(!Array.isArray(e))throw TypeError("Expected values Array");if("function"!=typeof n)throw TypeError("Expected digest Function");for(var t=e.length,l=e.concat();t>1;){for(var r=0,i=0;i<t;i+=2,++r){var u=l[i],o=i+1===t?u:l[i+1],s=S.concat([u,o]);l[r]=n(s)}t=r}return l[0]},IR=tT,PR=QM,AR=new TypeError("Cannot compute merkle root for zero transactions"),TR=new TypeError("Cannot compute witness commit for non-segwit block");class OR{constructor(){this.version=1,this.prevHash=void 0,this.merkleRoot=void 0,this.timestamp=0,this.witnessCommit=void 0,this.bits=0,this.nonce=0,this.transactions=void 0}static fromBuffer(e){if(e.length<80)throw new Error("Buffer too small (< 80 bytes)");const n=new _R.BufferReader(e),t=new OR;if(t.version=n.readInt32(),t.prevHash=n.readSlice(32),t.merkleRoot=n.readSlice(32),t.timestamp=n.readUInt32(),t.bits=n.readUInt32(),t.nonce=n.readUInt32(),80===e.length)return t;const l=()=>{const e=SR.Transaction.fromBuffer(n.buffer.slice(n.offset),!0);return n.offset+=e.byteLength(),e},r=n.readVarInt();t.transactions=[];for(let e=0;e<r;++e){const e=l();t.transactions.push(e)}const i=t.getWitnessCommit();return i&&(t.witnessCommit=i),t}static fromHex(e){return OR.fromBuffer(S.from(e,"hex"))}static calculateTarget(e){const n=((4278190080&e)>>24)-3,t=8388607&e,l=S.alloc(32,0);return l.writeUIntBE(t,29-n,3),l}static calculateMerkleRoot(e,n){if(IR([{getHash:xR.Function}],e),0===e.length)throw AR;if(n&&!MR(e))throw TR;const t=e.map((e=>e.getHash(n))),l=kR(t,ER.hash256);return n?ER.hash256(S.concat([l,e[0].ins[0].witness[0]])):l}getWitnessCommit(){if(!MR(this.transactions))return null;const e=this.transactions[0].outs.filter((e=>e.script.slice(0,6).equals(S.from("6a24aa21a9ed","hex")))).map((e=>e.script.slice(6,38)));if(0===e.length)return null;const n=e[e.length-1];return n instanceof S&&32===n.length?n:null}hasWitnessCommit(){return this.witnessCommit instanceof S&&32===this.witnessCommit.length||null!==this.getWitnessCommit()}hasWitness(){return(e=this.transactions)instanceof Array&&e.some((e=>"object"==typeof e&&e.ins instanceof Array&&e.ins.some((e=>"object"==typeof e&&e.witness instanceof Array&&e.witness.length>0))));var e}weight(){return 3*this.byteLength(!1,!1)+this.byteLength(!1,!0)}byteLength(e,n=!0){return e||!this.transactions?80:80+PR.encodingLength(this.transactions.length)+this.transactions.reduce(((e,t)=>e+t.byteLength(n)),0)}getHash(){return ER.hash256(this.toBuffer(!0))}getId(){return _R.reverseBuffer(this.getHash()).toString("hex")}getUTCDate(){const e=new Date(0);return e.setUTCSeconds(this.timestamp),e}toBuffer(e){const n=S.allocUnsafe(this.byteLength(e)),t=new _R.BufferWriter(n);return t.writeInt32(this.version),t.writeSlice(this.prevHash),t.writeSlice(this.merkleRoot),t.writeUInt32(this.timestamp),t.writeUInt32(this.bits),t.writeUInt32(this.nonce),e||!this.transactions||(PR.encode(this.transactions.length,n,t.offset),t.offset+=PR.encode.bytes,this.transactions.forEach((e=>{const l=e.byteLength();e.toBuffer(n,t.offset),t.offset+=l}))),n}toHex(e){return this.toBuffer(e).toString("hex")}checkTxRoots(){const e=this.hasWitnessCommit();return!(!e&&this.hasWitness())&&(this.__checkMerkleRoot()&&(!e||this.__checkWitnessCommit()))}checkProofOfWork(){const e=_R.reverseBuffer(this.getHash()),n=OR.calculateTarget(this.bits);return e.compare(n)<=0}__checkMerkleRoot(){if(!this.transactions)throw AR;const e=OR.calculateMerkleRoot(this.transactions);return 0===this.merkleRoot.compare(e)}__checkWitnessCommit(){if(!this.transactions)throw AR;if(!this.hasWitnessCommit())throw TR;const e=OR.calculateMerkleRoot(this.transactions,!0);return 0===this.witnessCommit.compare(e)}}function MR(e){return e instanceof Array&&e[0]&&e[0].ins&&e[0].ins instanceof Array&&e[0].ins[0]&&e[0].ins[0].witness&&e[0].ins[0].witness instanceof Array&&e[0].ins[0].witness.length>0}GM.Block=OR;var RR={},NR={},CR={},LR={},jR={},UR={},DR={};!function(e){var n,t,l;Object.defineProperty(e,"__esModule",{value:!0}),(n=e.GlobalTypes||(e.GlobalTypes={}))[n.UNSIGNED_TX=0]="UNSIGNED_TX",n[n.GLOBAL_XPUB=1]="GLOBAL_XPUB",e.GLOBAL_TYPE_NAMES=["unsignedTx","globalXpub"],(t=e.InputTypes||(e.InputTypes={}))[t.NON_WITNESS_UTXO=0]="NON_WITNESS_UTXO",t[t.WITNESS_UTXO=1]="WITNESS_UTXO",t[t.PARTIAL_SIG=2]="PARTIAL_SIG",t[t.SIGHASH_TYPE=3]="SIGHASH_TYPE",t[t.REDEEM_SCRIPT=4]="REDEEM_SCRIPT",t[t.WITNESS_SCRIPT=5]="WITNESS_SCRIPT",t[t.BIP32_DERIVATION=6]="BIP32_DERIVATION",t[t.FINAL_SCRIPTSIG=7]="FINAL_SCRIPTSIG",t[t.FINAL_SCRIPTWITNESS=8]="FINAL_SCRIPTWITNESS",t[t.POR_COMMITMENT=9]="POR_COMMITMENT",t[t.TAP_KEY_SIG=19]="TAP_KEY_SIG",t[t.TAP_SCRIPT_SIG=20]="TAP_SCRIPT_SIG",t[t.TAP_LEAF_SCRIPT=21]="TAP_LEAF_SCRIPT",t[t.TAP_BIP32_DERIVATION=22]="TAP_BIP32_DERIVATION",t[t.TAP_INTERNAL_KEY=23]="TAP_INTERNAL_KEY",t[t.TAP_MERKLE_ROOT=24]="TAP_MERKLE_ROOT",e.INPUT_TYPE_NAMES=["nonWitnessUtxo","witnessUtxo","partialSig","sighashType","redeemScript","witnessScript","bip32Derivation","finalScriptSig","finalScriptWitness","porCommitment","tapKeySig","tapScriptSig","tapLeafScript","tapBip32Derivation","tapInternalKey","tapMerkleRoot"],(l=e.OutputTypes||(e.OutputTypes={}))[l.REDEEM_SCRIPT=0]="REDEEM_SCRIPT",l[l.WITNESS_SCRIPT=1]="WITNESS_SCRIPT",l[l.BIP32_DERIVATION=2]="BIP32_DERIVATION",l[l.TAP_INTERNAL_KEY=5]="TAP_INTERNAL_KEY",l[l.TAP_TREE=6]="TAP_TREE",l[l.TAP_BIP32_DERIVATION=7]="TAP_BIP32_DERIVATION",e.OUTPUT_TYPE_NAMES=["redeemScript","witnessScript","bip32Derivation","tapInternalKey","tapTree","tapBip32Derivation"]}(DR);var BR={};Object.defineProperty(BR,"__esModule",{value:!0});const KR=DR;BR.decode=function(e){if(e.key[0]!==KR.GlobalTypes.GLOBAL_XPUB)throw new Error("Decode Error: could not decode globalXpub with key 0x"+e.key.toString("hex"));if(79!==e.key.length||![2,3].includes(e.key[46]))throw new Error("Decode Error: globalXpub has invalid extended pubkey in key 0x"+e.key.toString("hex"));if(e.value.length/4%1!=0)throw new Error("Decode Error: Global GLOBAL_XPUB value length should be multiple of 4");const n=e.key.slice(1),t={masterFingerprint:e.value.slice(0,4),extendedPubkey:n,path:"m"};for(const n of(e=>[...Array(e).keys()])(e.value.length/4-1)){const l=e.value.readUInt32LE(4*n+4),r=!!(2147483648&l),i=2147483647&l;t.path+="/"+i.toString(10)+(r?"'":"")}return t},BR.encode=function(e){const n=S.from([KR.GlobalTypes.GLOBAL_XPUB]),t=S.concat([n,e.extendedPubkey]),l=e.path.split("/"),r=S.allocUnsafe(4*l.length);e.masterFingerprint.copy(r,0);let i=4;return l.slice(1).forEach((e=>{const n="'"===e.slice(-1);let t=2147483647&parseInt(n?e.slice(0,-1):e,10);n&&(t+=2147483648),r.writeUInt32LE(t,i),i+=4})),{key:t,value:r}},BR.expected="{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }",BR.check=function(e){const n=e.extendedPubkey,t=e.masterFingerprint,l=e.path;return ue(n)&&78===n.length&&[2,3].indexOf(n[45])>-1&&ue(t)&&4===t.length&&"string"==typeof l&&!!l.match(/^m(\/\d+'?)*$/)},BR.canAddToArray=function(e,n,t){const l=n.extendedPubkey.toString("hex");return!t.has(l)&&(t.add(l),0===e.filter((e=>e.extendedPubkey.equals(n.extendedPubkey))).length)};var FR={};Object.defineProperty(FR,"__esModule",{value:!0});const VR=DR;FR.encode=function(e){return{key:S.from([VR.GlobalTypes.UNSIGNED_TX]),value:e.toBuffer()}};var HR={};Object.defineProperty(HR,"__esModule",{value:!0});const qR=DR;HR.decode=function(e){if(e.key[0]!==qR.InputTypes.FINAL_SCRIPTSIG)throw new Error("Decode Error: could not decode finalScriptSig with key 0x"+e.key.toString("hex"));return e.value},HR.encode=function(e){return{key:S.from([qR.InputTypes.FINAL_SCRIPTSIG]),value:e}},HR.expected="Buffer",HR.check=function(e){return ue(e)},HR.canAdd=function(e,n){return!!e&&!!n&&void 0===e.finalScriptSig};var zR={};Object.defineProperty(zR,"__esModule",{value:!0});const $R=DR;zR.decode=function(e){if(e.key[0]!==$R.InputTypes.FINAL_SCRIPTWITNESS)throw new Error("Decode Error: could not decode finalScriptWitness with key 0x"+e.key.toString("hex"));return e.value},zR.encode=function(e){return{key:S.from([$R.InputTypes.FINAL_SCRIPTWITNESS]),value:e}},zR.expected="Buffer",zR.check=function(e){return ue(e)},zR.canAdd=function(e,n){return!!e&&!!n&&void 0===e.finalScriptWitness};var GR={};Object.defineProperty(GR,"__esModule",{value:!0});const WR=DR;GR.decode=function(e){if(e.key[0]!==WR.InputTypes.NON_WITNESS_UTXO)throw new Error("Decode Error: could not decode nonWitnessUtxo with key 0x"+e.key.toString("hex"));return e.value},GR.encode=function(e){return{key:S.from([WR.InputTypes.NON_WITNESS_UTXO]),value:e}},GR.expected="Buffer",GR.check=function(e){return ue(e)},GR.canAdd=function(e,n){return!!e&&!!n&&void 0===e.nonWitnessUtxo};var JR={};Object.defineProperty(JR,"__esModule",{value:!0});const XR=DR;JR.decode=function(e){if(e.key[0]!==XR.InputTypes.PARTIAL_SIG)throw new Error("Decode Error: could not decode partialSig with key 0x"+e.key.toString("hex"));if(34!==e.key.length&&66!==e.key.length||![2,3,4].includes(e.key[1]))throw new Error("Decode Error: partialSig has invalid pubkey in key 0x"+e.key.toString("hex"));return{pubkey:e.key.slice(1),signature:e.value}},JR.encode=function(e){const n=S.from([XR.InputTypes.PARTIAL_SIG]);return{key:S.concat([n,e.pubkey]),value:e.signature}},JR.expected="{ pubkey: Buffer; signature: Buffer; }",JR.check=function(e){return ue(e.pubkey)&&ue(e.signature)&&[33,65].includes(e.pubkey.length)&&[2,3,4].includes(e.pubkey[0])&&function(e){if(!ue(e)||e.length<9)return!1;if(48!==e[0])return!1;if(e.length!==e[1]+3)return!1;if(2!==e[2])return!1;const n=e[3];if(n>33||n<1)return!1;if(2!==e[3+n+1])return!1;const t=e[3+n+2];return!(t>33||t<1)&&e.length===3+n+2+t+2}(e.signature)},JR.canAddToArray=function(e,n,t){const l=n.pubkey.toString("hex");return!t.has(l)&&(t.add(l),0===e.filter((e=>e.pubkey.equals(n.pubkey))).length)};var YR={};Object.defineProperty(YR,"__esModule",{value:!0});const QR=DR;YR.decode=function(e){if(e.key[0]!==QR.InputTypes.POR_COMMITMENT)throw new Error("Decode Error: could not decode porCommitment with key 0x"+e.key.toString("hex"));return e.value.toString("utf8")},YR.encode=function(e){return{key:S.from([QR.InputTypes.POR_COMMITMENT]),value:S.from(e,"utf8")}},YR.expected="string",YR.check=function(e){return"string"==typeof e},YR.canAdd=function(e,n){return!!e&&!!n&&void 0===e.porCommitment};var ZR={};Object.defineProperty(ZR,"__esModule",{value:!0});const eN=DR;ZR.decode=function(e){if(e.key[0]!==eN.InputTypes.SIGHASH_TYPE)throw new Error("Decode Error: could not decode sighashType with key 0x"+e.key.toString("hex"));return e.value.readUInt32LE(0)},ZR.encode=function(e){const n=S.from([eN.InputTypes.SIGHASH_TYPE]),t=S.allocUnsafe(4);return t.writeUInt32LE(e,0),{key:n,value:t}},ZR.expected="number",ZR.check=function(e){return"number"==typeof e},ZR.canAdd=function(e,n){return!!e&&!!n&&void 0===e.sighashType};var nN={};Object.defineProperty(nN,"__esModule",{value:!0});const tN=DR;function lN(e){return ue(e)&&(64===e.length||65===e.length)}nN.decode=function(e){if(e.key[0]!==tN.InputTypes.TAP_KEY_SIG||1!==e.key.length)throw new Error("Decode Error: could not decode tapKeySig with key 0x"+e.key.toString("hex"));if(!lN(e.value))throw new Error("Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature");return e.value},nN.encode=function(e){return{key:S.from([tN.InputTypes.TAP_KEY_SIG]),value:e}},nN.expected="Buffer",nN.check=lN,nN.canAdd=function(e,n){return!!e&&!!n&&void 0===e.tapKeySig};var rN={};Object.defineProperty(rN,"__esModule",{value:!0});const iN=DR;rN.decode=function(e){if(e.key[0]!==iN.InputTypes.TAP_LEAF_SCRIPT)throw new Error("Decode Error: could not decode tapLeafScript with key 0x"+e.key.toString("hex"));if((e.key.length-2)%32!=0)throw new Error("Decode Error: tapLeafScript has invalid control block in key 0x"+e.key.toString("hex"));const n=e.value[e.value.length-1];if((254&e.key[1])!==n)throw new Error("Decode Error: tapLeafScript bad leaf version in key 0x"+e.key.toString("hex"));const t=e.value.slice(0,-1);return{controlBlock:e.key.slice(1),script:t,leafVersion:n}},rN.encode=function(e){const n=S.from([iN.InputTypes.TAP_LEAF_SCRIPT]),t=S.from([e.leafVersion]);return{key:S.concat([n,e.controlBlock]),value:S.concat([e.script,t])}},rN.expected="{ controlBlock: Buffer; leafVersion: number, script: Buffer; }",rN.check=function(e){return ue(e.controlBlock)&&(e.controlBlock.length-1)%32==0&&(254&e.controlBlock[0])===e.leafVersion&&ue(e.script)},rN.canAddToArray=function(e,n,t){const l=n.controlBlock.toString("hex");return!t.has(l)&&(t.add(l),0===e.filter((e=>e.controlBlock.equals(n.controlBlock))).length)};var uN={};Object.defineProperty(uN,"__esModule",{value:!0});const oN=DR;function sN(e){return ue(e)&&32===e.length}uN.decode=function(e){if(e.key[0]!==oN.InputTypes.TAP_MERKLE_ROOT||1!==e.key.length)throw new Error("Decode Error: could not decode tapMerkleRoot with key 0x"+e.key.toString("hex"));if(!sN(e.value))throw new Error("Decode Error: tapMerkleRoot not a 32-byte hash");return e.value},uN.encode=function(e){return{key:S.from([oN.InputTypes.TAP_MERKLE_ROOT]),value:e}},uN.expected="Buffer",uN.check=sN,uN.canAdd=function(e,n){return!!e&&!!n&&void 0===e.tapMerkleRoot};var aN={};Object.defineProperty(aN,"__esModule",{value:!0});const cN=DR;aN.decode=function(e){if(e.key[0]!==cN.InputTypes.TAP_SCRIPT_SIG)throw new Error("Decode Error: could not decode tapScriptSig with key 0x"+e.key.toString("hex"));if(65!==e.key.length)throw new Error("Decode Error: tapScriptSig has invalid key 0x"+e.key.toString("hex"));if(64!==e.value.length&&65!==e.value.length)throw new Error("Decode Error: tapScriptSig has invalid signature in key 0x"+e.key.toString("hex"));return{pubkey:e.key.slice(1,33),leafHash:e.key.slice(33),signature:e.value}},aN.encode=function(e){const n=S.from([cN.InputTypes.TAP_SCRIPT_SIG]);return{key:S.concat([n,e.pubkey,e.leafHash]),value:e.signature}},aN.expected="{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }",aN.check=function(e){return ue(e.pubkey)&&ue(e.leafHash)&&ue(e.signature)&&32===e.pubkey.length&&32===e.leafHash.length&&(64===e.signature.length||65===e.signature.length)},aN.canAddToArray=function(e,n,t){const l=n.pubkey.toString("hex")+n.leafHash.toString("hex");return!t.has(l)&&(t.add(l),0===e.filter((e=>e.pubkey.equals(n.pubkey)&&e.leafHash.equals(n.leafHash))).length)};var hN={},fN={},dN={};Object.defineProperty(dN,"__esModule",{value:!0});function pN(e){if(e<0||e>9007199254740991||e%1!=0)throw new RangeError("value out of range")}function yN(e){return pN(e),e<253?1:e<=65535?3:e<=4294967295?5:9}dN.encode=function e(n,t,l){if(pN(n),t||(t=S.allocUnsafe(yN(n))),!ue(t))throw new TypeError("buffer must be a Buffer instance");return l||(l=0),n<253?(t.writeUInt8(n,l),Object.assign(e,{bytes:1})):n<=65535?(t.writeUInt8(253,l),t.writeUInt16LE(n,l+1),Object.assign(e,{bytes:3})):n<=4294967295?(t.writeUInt8(254,l),t.writeUInt32LE(n,l+1),Object.assign(e,{bytes:5})):(t.writeUInt8(255,l),t.writeUInt32LE(n>>>0,l+1),t.writeUInt32LE(n/4294967296|0,l+5),Object.assign(e,{bytes:9})),t},dN.decode=function e(n,t){if(!ue(n))throw new TypeError("buffer must be a Buffer instance");t||(t=0);const l=n.readUInt8(t);if(l<253)return Object.assign(e,{bytes:1}),l;if(253===l)return Object.assign(e,{bytes:3}),n.readUInt16LE(t+1);if(254===l)return Object.assign(e,{bytes:5}),n.readUInt32LE(t+1);{Object.assign(e,{bytes:9});const l=n.readUInt32LE(t+1),r=4294967296*n.readUInt32LE(t+5)+l;return pN(r),r}},dN.encodingLength=yN,Object.defineProperty(fN,"__esModule",{value:!0});const gN=dN;function mN(e){const n=e.key.length,t=e.value.length,l=gN.encodingLength(n),r=gN.encodingLength(t),i=S.allocUnsafe(l+n+r+t);return gN.encode(n,i,0),e.key.copy(i,l),gN.encode(t,i,l+n),e.value.copy(i,l+n+r),i}function vN(e,n){if("number"!=typeof e)throw new Error("cannot write a non-number as a number");if(e<0)throw new Error("specified a negative value for writing an unsigned value");if(e>n)throw new Error("RangeError: value out of range");if(Math.floor(e)!==e)throw new Error("value has a fractional component")}fN.range=e=>[...Array(e).keys()],fN.reverseBuffer=function(e){if(e.length<1)return e;let n=e.length-1,t=0;for(let l=0;l<e.length/2;l++)t=e[l],e[l]=e[n],e[n]=t,n--;return e},fN.keyValsToBuffer=function(e){const n=e.map(mN);return n.push(S.from([0])),S.concat(n)},fN.keyValToBuffer=mN,fN.readUInt64LE=function(e,n){const t=e.readUInt32LE(n);let l=e.readUInt32LE(n+4);return l*=4294967296,vN(l+t,9007199254740991),l+t},fN.writeUInt64LE=function(e,n,t){return vN(n,9007199254740991),e.writeInt32LE(-1&n,t),e.writeUInt32LE(Math.floor(n/4294967296),t+4),t+8},Object.defineProperty(hN,"__esModule",{value:!0});const bN=DR,wN=fN,_N=dN;hN.decode=function(e){if(e.key[0]!==bN.InputTypes.WITNESS_UTXO)throw new Error("Decode Error: could not decode witnessUtxo with key 0x"+e.key.toString("hex"));const n=wN.readUInt64LE(e.value,0);let t=8;const l=_N.decode(e.value,t);t+=_N.encodingLength(l);const r=e.value.slice(t);if(r.length!==l)throw new Error("Decode Error: WITNESS_UTXO script is not proper length");return{script:r,value:n}},hN.encode=function(e){const{script:n,value:t}=e,l=_N.encodingLength(n.length),r=S.allocUnsafe(8+l+n.length);return wN.writeUInt64LE(r,t,0),_N.encode(n.length,r,8),n.copy(r,8+l),{key:S.from([bN.InputTypes.WITNESS_UTXO]),value:r}},hN.expected="{ script: Buffer; value: number; }",hN.check=function(e){return ue(e.script)&&"number"==typeof e.value},hN.canAdd=function(e,n){return!!e&&!!n&&void 0===e.witnessUtxo};var EN={};Object.defineProperty(EN,"__esModule",{value:!0});const SN=DR,xN=dN;EN.decode=function(e){if(e.key[0]!==SN.OutputTypes.TAP_TREE||1!==e.key.length)throw new Error("Decode Error: could not decode tapTree with key 0x"+e.key.toString("hex"));let n=0;const t=[];for(;n<e.value.length;){const l=e.value[n++],r=e.value[n++],i=xN.decode(e.value,n);n+=xN.encodingLength(i),t.push({depth:l,leafVersion:r,script:e.value.slice(n,n+i)}),n+=i}return{leaves:t}},EN.encode=function(e){const n=S.from([SN.OutputTypes.TAP_TREE]),t=[].concat(...e.leaves.map((e=>[S.of(e.depth,e.leafVersion),xN.encode(e.script.length),e.script])));return{key:n,value:S.concat(t)}},EN.expected="{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }",EN.check=function(e){return Array.isArray(e.leaves)&&e.leaves.every((e=>e.depth>=0&&e.depth<=128&&(254&e.leafVersion)===e.leafVersion&&ue(e.script)))},EN.canAdd=function(e,n){return!!e&&!!n&&void 0===e.tapTree};var kN={};Object.defineProperty(kN,"__esModule",{value:!0});const IN=e=>33===e.length&&[2,3].includes(e[0])||65===e.length&&4===e[0];kN.makeConverter=function(e,n=IN){return{decode:function(t){if(t.key[0]!==e)throw new Error("Decode Error: could not decode bip32Derivation with key 0x"+t.key.toString("hex"));const l=t.key.slice(1);if(!n(l))throw new Error("Decode Error: bip32Derivation has invalid pubkey in key 0x"+t.key.toString("hex"));if(t.value.length/4%1!=0)throw new Error("Decode Error: Input BIP32_DERIVATION value length should be multiple of 4");const r={masterFingerprint:t.value.slice(0,4),pubkey:l,path:"m"};for(const e of(e=>[...Array(e).keys()])(t.value.length/4-1)){const n=t.value.readUInt32LE(4*e+4),l=!!(2147483648&n),i=2147483647&n;r.path+="/"+i.toString(10)+(l?"'":"")}return r},encode:function(n){const t=S.from([e]),l=S.concat([t,n.pubkey]),r=n.path.split("/"),i=S.allocUnsafe(4*r.length);n.masterFingerprint.copy(i,0);let u=4;return r.slice(1).forEach((e=>{const n="'"===e.slice(-1);let t=2147483647&parseInt(n?e.slice(0,-1):e,10);n&&(t+=2147483648),i.writeUInt32LE(t,u),u+=4})),{key:l,value:i}},check:function(e){return ue(e.pubkey)&&ue(e.masterFingerprint)&&"string"==typeof e.path&&n(e.pubkey)&&4===e.masterFingerprint.length},expected:"{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }",canAddToArray:function(e,n,t){const l=n.pubkey.toString("hex");return!t.has(l)&&(t.add(l),0===e.filter((e=>e.pubkey.equals(n.pubkey))).length)}}};var PN={};Object.defineProperty(PN,"__esModule",{value:!0}),PN.makeChecker=function(e){return function(n){let t;if(e.includes(n.key[0])&&(t=n.key.slice(1),33!==t.length&&65!==t.length||![2,3,4].includes(t[0])))throw new Error("Format Error: invalid pubkey in key 0x"+n.key.toString("hex"));return t}};var AN={};Object.defineProperty(AN,"__esModule",{value:!0}),AN.makeConverter=function(e){return{decode:function(n){if(n.key[0]!==e)throw new Error("Decode Error: could not decode redeemScript with key 0x"+n.key.toString("hex"));return n.value},encode:function(n){return{key:S.from([e]),value:n}},check:function(e){return ue(e)},expected:"Buffer",canAdd:function(e,n){return!!e&&!!n&&void 0===e.redeemScript}}};var TN={};Object.defineProperty(TN,"__esModule",{value:!0});const ON=dN,MN=kN,RN=e=>32===e.length;TN.makeConverter=function(e){const n=MN.makeConverter(e,RN);return{decode:function(e){const t=ON.decode(e.value),l=ON.encodingLength(t),r=n.decode({key:e.key,value:e.value.slice(l+32*t)}),i=new Array(t);for(let n=0,r=l;n<t;n++,r+=32)i[n]=e.value.slice(r,r+32);return Object.assign({},r,{leafHashes:i})},encode:function(e){const t=n.encode(e),l=ON.encodingLength(e.leafHashes.length),r=S.allocUnsafe(l);ON.encode(e.leafHashes.length,r);const i=S.concat([r,...e.leafHashes,t.value]);return Object.assign({},t,{value:i})},check:function(e){return Array.isArray(e.leafHashes)&&e.leafHashes.every((e=>ue(e)&&32===e.length))&&n.check(e)},expected:"{ masterFingerprint: Buffer; pubkey: Buffer; path: string; leafHashes: Buffer[]; }",canAddToArray:n.canAddToArray}};var NN={};Object.defineProperty(NN,"__esModule",{value:!0}),NN.makeConverter=function(e){return{decode:function(n){if(n.key[0]!==e||1!==n.key.length)throw new Error("Decode Error: could not decode tapInternalKey with key 0x"+n.key.toString("hex"));if(32!==n.value.length)throw new Error("Decode Error: tapInternalKey not a 32-byte x-only pubkey");return n.value},encode:function(n){return{key:S.from([e]),value:n}},check:function(e){return ue(e)&&32===e.length},expected:"Buffer",canAdd:function(e,n){return!!e&&!!n&&void 0===e.tapInternalKey}}};var CN={};Object.defineProperty(CN,"__esModule",{value:!0}),CN.makeConverter=function(e){return{decode:function(n){if(n.key[0]!==e)throw new Error("Decode Error: could not decode witnessScript with key 0x"+n.key.toString("hex"));return n.value},encode:function(n){return{key:S.from([e]),value:n}},check:function(e){return ue(e)},expected:"Buffer",canAdd:function(e,n){return!!e&&!!n&&void 0===e.witnessScript}}},Object.defineProperty(UR,"__esModule",{value:!0});const LN=DR,jN=HR,UN=zR,DN=GR,BN=JR,KN=YR,FN=ZR,VN=nN,HN=rN,qN=uN,zN=aN,$N=hN,GN=EN,WN=kN,JN=PN,XN=AN,YN=TN,QN=NN,ZN=CN,eC={unsignedTx:FR,globalXpub:BR,checkPubkey:JN.makeChecker([])};UR.globals=eC;const nC={nonWitnessUtxo:DN,partialSig:BN,sighashType:FN,finalScriptSig:jN,finalScriptWitness:UN,porCommitment:KN,witnessUtxo:$N,bip32Derivation:WN.makeConverter(LN.InputTypes.BIP32_DERIVATION),redeemScript:XN.makeConverter(LN.InputTypes.REDEEM_SCRIPT),witnessScript:ZN.makeConverter(LN.InputTypes.WITNESS_SCRIPT),checkPubkey:JN.makeChecker([LN.InputTypes.PARTIAL_SIG,LN.InputTypes.BIP32_DERIVATION]),tapKeySig:VN,tapScriptSig:zN,tapLeafScript:HN,tapBip32Derivation:YN.makeConverter(LN.InputTypes.TAP_BIP32_DERIVATION),tapInternalKey:QN.makeConverter(LN.InputTypes.TAP_INTERNAL_KEY),tapMerkleRoot:qN};UR.inputs=nC;const tC={bip32Derivation:WN.makeConverter(LN.OutputTypes.BIP32_DERIVATION),redeemScript:XN.makeConverter(LN.OutputTypes.REDEEM_SCRIPT),witnessScript:ZN.makeConverter(LN.OutputTypes.WITNESS_SCRIPT),checkPubkey:JN.makeChecker([LN.OutputTypes.BIP32_DERIVATION]),tapBip32Derivation:YN.makeConverter(LN.OutputTypes.TAP_BIP32_DERIVATION),tapTree:GN,tapInternalKey:QN.makeConverter(LN.OutputTypes.TAP_INTERNAL_KEY)};UR.outputs=tC,Object.defineProperty(jR,"__esModule",{value:!0});const lC=UR,rC=fN,iC=dN,uC=DR;function oC(e,n,t){if(!n.equals(S.from([t])))throw new Error(`Format Error: Invalid ${e} key: ${n.toString("hex")}`)}function sC(e,{globalMapKeyVals:n,inputKeyVals:t,outputKeyVals:l}){const r={unsignedTx:e};let i=0;for(const e of n)switch(e.key[0]){case uC.GlobalTypes.UNSIGNED_TX:if(oC("global",e.key,uC.GlobalTypes.UNSIGNED_TX),i>0)throw new Error("Format Error: GlobalMap has multiple UNSIGNED_TX");i++;break;case uC.GlobalTypes.GLOBAL_XPUB:void 0===r.globalXpub&&(r.globalXpub=[]),r.globalXpub.push(lC.globals.globalXpub.decode(e));break;default:r.unknownKeyVals||(r.unknownKeyVals=[]),r.unknownKeyVals.push(e)}const u=t.length,o=l.length,s=[],a=[];for(const e of rC.range(u)){const n={};for(const l of t[e])switch(lC.inputs.checkPubkey(l),l.key[0]){case uC.InputTypes.NON_WITNESS_UTXO:if(oC("input",l.key,uC.InputTypes.NON_WITNESS_UTXO),void 0!==n.nonWitnessUtxo)throw new Error("Format Error: Input has multiple NON_WITNESS_UTXO");n.nonWitnessUtxo=lC.inputs.nonWitnessUtxo.decode(l);break;case uC.InputTypes.WITNESS_UTXO:if(oC("input",l.key,uC.InputTypes.WITNESS_UTXO),void 0!==n.witnessUtxo)throw new Error("Format Error: Input has multiple WITNESS_UTXO");n.witnessUtxo=lC.inputs.witnessUtxo.decode(l);break;case uC.InputTypes.PARTIAL_SIG:void 0===n.partialSig&&(n.partialSig=[]),n.partialSig.push(lC.inputs.partialSig.decode(l));break;case uC.InputTypes.SIGHASH_TYPE:if(oC("input",l.key,uC.InputTypes.SIGHASH_TYPE),void 0!==n.sighashType)throw new Error("Format Error: Input has multiple SIGHASH_TYPE");n.sighashType=lC.inputs.sighashType.decode(l);break;case uC.InputTypes.REDEEM_SCRIPT:if(oC("input",l.key,uC.InputTypes.REDEEM_SCRIPT),void 0!==n.redeemScript)throw new Error("Format Error: Input has multiple REDEEM_SCRIPT");n.redeemScript=lC.inputs.redeemScript.decode(l);break;case uC.InputTypes.WITNESS_SCRIPT:if(oC("input",l.key,uC.InputTypes.WITNESS_SCRIPT),void 0!==n.witnessScript)throw new Error("Format Error: Input has multiple WITNESS_SCRIPT");n.witnessScript=lC.inputs.witnessScript.decode(l);break;case uC.InputTypes.BIP32_DERIVATION:void 0===n.bip32Derivation&&(n.bip32Derivation=[]),n.bip32Derivation.push(lC.inputs.bip32Derivation.decode(l));break;case uC.InputTypes.FINAL_SCRIPTSIG:oC("input",l.key,uC.InputTypes.FINAL_SCRIPTSIG),n.finalScriptSig=lC.inputs.finalScriptSig.decode(l);break;case uC.InputTypes.FINAL_SCRIPTWITNESS:oC("input",l.key,uC.InputTypes.FINAL_SCRIPTWITNESS),n.finalScriptWitness=lC.inputs.finalScriptWitness.decode(l);break;case uC.InputTypes.POR_COMMITMENT:oC("input",l.key,uC.InputTypes.POR_COMMITMENT),n.porCommitment=lC.inputs.porCommitment.decode(l);break;case uC.InputTypes.TAP_KEY_SIG:oC("input",l.key,uC.InputTypes.TAP_KEY_SIG),n.tapKeySig=lC.inputs.tapKeySig.decode(l);break;case uC.InputTypes.TAP_SCRIPT_SIG:void 0===n.tapScriptSig&&(n.tapScriptSig=[]),n.tapScriptSig.push(lC.inputs.tapScriptSig.decode(l));break;case uC.InputTypes.TAP_LEAF_SCRIPT:void 0===n.tapLeafScript&&(n.tapLeafScript=[]),n.tapLeafScript.push(lC.inputs.tapLeafScript.decode(l));break;case uC.InputTypes.TAP_BIP32_DERIVATION:void 0===n.tapBip32Derivation&&(n.tapBip32Derivation=[]),n.tapBip32Derivation.push(lC.inputs.tapBip32Derivation.decode(l));break;case uC.InputTypes.TAP_INTERNAL_KEY:oC("input",l.key,uC.InputTypes.TAP_INTERNAL_KEY),n.tapInternalKey=lC.inputs.tapInternalKey.decode(l);break;case uC.InputTypes.TAP_MERKLE_ROOT:oC("input",l.key,uC.InputTypes.TAP_MERKLE_ROOT),n.tapMerkleRoot=lC.inputs.tapMerkleRoot.decode(l);break;default:n.unknownKeyVals||(n.unknownKeyVals=[]),n.unknownKeyVals.push(l)}s.push(n)}for(const e of rC.range(o)){const n={};for(const t of l[e])switch(lC.outputs.checkPubkey(t),t.key[0]){case uC.OutputTypes.REDEEM_SCRIPT:if(oC("output",t.key,uC.OutputTypes.REDEEM_SCRIPT),void 0!==n.redeemScript)throw new Error("Format Error: Output has multiple REDEEM_SCRIPT");n.redeemScript=lC.outputs.redeemScript.decode(t);break;case uC.OutputTypes.WITNESS_SCRIPT:if(oC("output",t.key,uC.OutputTypes.WITNESS_SCRIPT),void 0!==n.witnessScript)throw new Error("Format Error: Output has multiple WITNESS_SCRIPT");n.witnessScript=lC.outputs.witnessScript.decode(t);break;case uC.OutputTypes.BIP32_DERIVATION:void 0===n.bip32Derivation&&(n.bip32Derivation=[]),n.bip32Derivation.push(lC.outputs.bip32Derivation.decode(t));break;case uC.OutputTypes.TAP_INTERNAL_KEY:oC("output",t.key,uC.OutputTypes.TAP_INTERNAL_KEY),n.tapInternalKey=lC.outputs.tapInternalKey.decode(t);break;case uC.OutputTypes.TAP_TREE:oC("output",t.key,uC.OutputTypes.TAP_TREE),n.tapTree=lC.outputs.tapTree.decode(t);break;case uC.OutputTypes.TAP_BIP32_DERIVATION:void 0===n.tapBip32Derivation&&(n.tapBip32Derivation=[]),n.tapBip32Derivation.push(lC.outputs.tapBip32Derivation.decode(t));break;default:n.unknownKeyVals||(n.unknownKeyVals=[]),n.unknownKeyVals.push(t)}a.push(n)}return{globalMap:r,inputs:s,outputs:a}}jR.psbtFromBuffer=function(e,n){let t=0;function l(){const n=iC.decode(e,t);t+=iC.encodingLength(n);const l=e.slice(t,t+n);return t+=n,l}function r(){return{key:l(),value:l()}}function i(){if(t>=e.length)throw new Error("Format Error: Unexpected End of PSBT");const n=0===e.readUInt8(t);return n&&t++,n}if(1886610036!==function(){const n=e.readUInt32BE(t);return t+=4,n}())throw new Error("Format Error: Invalid Magic Number");if(255!==function(){const n=e.readUInt8(t);return t+=1,n}())throw new Error("Format Error: Magic Number must be followed by 0xff separator");const u=[],o={};for(;!i();){const e=r(),n=e.key.toString("hex");if(o[n])throw new Error("Format Error: Keys must be unique for global keymap: key "+n);o[n]=1,u.push(e)}const s=u.filter((e=>e.key[0]===uC.GlobalTypes.UNSIGNED_TX));if(1!==s.length)throw new Error("Format Error: Only one UNSIGNED_TX allowed");const a=n(s[0].value),{inputCount:c,outputCount:h}=a.getInputOutputCounts(),f=[],d=[];for(const e of rC.range(c)){const n={},t=[];for(;!i();){const l=r(),i=l.key.toString("hex");if(n[i])throw new Error("Format Error: Keys must be unique for each input: input index "+e+" key "+i);n[i]=1,t.push(l)}f.push(t)}for(const e of rC.range(h)){const n={},t=[];for(;!i();){const l=r(),i=l.key.toString("hex");if(n[i])throw new Error("Format Error: Keys must be unique for each output: output index "+e+" key "+i);n[i]=1,t.push(l)}d.push(t)}return sC(a,{globalMapKeyVals:u,inputKeyVals:f,outputKeyVals:d})},jR.checkKeyBuffer=oC,jR.psbtFromKeyVals=sC;var aC={};Object.defineProperty(aC,"__esModule",{value:!0});const cC=UR,hC=fN;aC.psbtToBuffer=function({globalMap:e,inputs:n,outputs:t}){const{globalKeyVals:l,inputKeyVals:r,outputKeyVals:i}=pC({globalMap:e,inputs:n,outputs:t}),u=hC.keyValsToBuffer(l),o=e=>0===e.length?[S.from([0])]:e.map(hC.keyValsToBuffer),s=o(r),a=o(i),c=S.allocUnsafe(5);return c.writeUIntBE(482972169471,0,5),S.concat([c,u].concat(s,a))};const fC=(e,n)=>e.key.compare(n.key);function dC(e,n){const t=new Set,l=Object.entries(e).reduce(((e,[l,r])=>{if("unknownKeyVals"===l)return e;const i=n[l];if(void 0===i)return e;const u=(Array.isArray(r)?r:[r]).map(i.encode);return u.map((e=>e.key.toString("hex"))).forEach((e=>{if(t.has(e))throw new Error("Serialize Error: Duplicate key: "+e);t.add(e)})),e.concat(u)}),[]),r=e.unknownKeyVals?e.unknownKeyVals.filter((e=>!t.has(e.key.toString("hex")))):[];return l.concat(r).sort(fC)}function pC({globalMap:e,inputs:n,outputs:t}){return{globalKeyVals:dC(e,cC.globals),inputKeyVals:n.map((e=>dC(e,cC.inputs))),outputKeyVals:t.map((e=>dC(e,cC.outputs)))}}aC.psbtToKeyVals=pC,function(e){function n(n){for(var t in n)e.hasOwnProperty(t)||(e[t]=n[t])}Object.defineProperty(e,"__esModule",{value:!0}),n(jR),n(aC)}(LR),Object.defineProperty(CR,"__esModule",{value:!0});const yC=LR;function gC(e,n,t){return l=>{if(e.has(l))return;const r=t.filter((e=>e.key.toString("hex")===l))[0];n.push(r),e.add(l)}}function mC(e){return e.globalMap.unsignedTx}function vC(e){const n=new Set;return e.forEach((e=>{const t=e.key.toString("hex");if(n.has(t))throw new Error("Combine: KeyValue Map keys should be unique");n.add(t)})),n}CR.combine=function(e){const n=e[0],t=yC.psbtToKeyVals(n),l=e.slice(1);if(0===l.length)throw new Error("Combine: Nothing to combine");const r=mC(n);if(void 0===r)throw new Error("Combine: Self missing transaction");const i=vC(t.globalKeyVals),u=t.inputKeyVals.map(vC),o=t.outputKeyVals.map(vC);for(const e of l){const n=mC(e);if(void 0===n||!n.toBuffer().equals(r.toBuffer()))throw new Error("Combine: One of the Psbts does not have the same transaction.");const l=yC.psbtToKeyVals(e);vC(l.globalKeyVals).forEach(gC(i,t.globalKeyVals,l.globalKeyVals));l.inputKeyVals.map(vC).forEach(((e,n)=>e.forEach(gC(u[n],t.inputKeyVals[n],l.inputKeyVals[n]))));l.outputKeyVals.map(vC).forEach(((e,n)=>e.forEach(gC(o[n],t.outputKeyVals[n],l.outputKeyVals[n]))))}return yC.psbtFromKeyVals(r,{globalMapKeyVals:t.globalKeyVals,inputKeyVals:t.inputKeyVals,outputKeyVals:t.outputKeyVals})};var bC={};!function(e){Object.defineProperty(e,"__esModule",{value:!0});const n=UR;function t(e,n){const t=e[n];if(void 0===t)throw new Error(`No input #${n}`);return t}function l(e,n){const t=e[n];if(void 0===t)throw new Error(`No output #${n}`);return t}function r(e,n,t,l){throw new Error(`Data for ${e} key ${n} is incorrect: Expected ${t} and got ${JSON.stringify(l)}`)}function i(e){return(t,l)=>{for(const i of Object.keys(t)){const u=t[i],{canAdd:o,canAddToArray:s,check:a,expected:c}=n[e+"s"][i]||{},h=!!s;if(a)if(h){if(!Array.isArray(u)||l[i]&&!Array.isArray(l[i]))throw new Error(`Key type ${i} must be an array`);u.every(a)||r(e,i,c,u);const n=l[i]||[],t=new Set;if(!u.every((e=>s(n,e,t))))throw new Error("Can not add duplicate data to array");l[i]=n.concat(u)}else{if(a(u)||r(e,i,c,u),!o(l,u))throw new Error(`Can not add duplicate data to ${e}`);l[i]=u}}}}e.checkForInput=t,e.checkForOutput=l,e.checkHasKey=function(e,n,t){if(e.key[0]<t)throw new Error("Use the method for your specific key instead of addUnknownKeyVal*");if(n&&0!==n.filter((n=>n.key.equals(e.key))).length)throw new Error(`Duplicate Key: ${e.key.toString("hex")}`)},e.getEnumLength=function(e){let n=0;return Object.keys(e).forEach((e=>{Number(isNaN(Number(e)))&&n++})),n},e.inputCheckUncleanFinalized=function(e,n){let t=!1;if(n.nonWitnessUtxo||n.witnessUtxo){const e=!!n.redeemScript,l=!!n.witnessScript,r=!e||!!n.finalScriptSig,i=!l||!!n.finalScriptWitness,u=!!n.finalScriptSig||!!n.finalScriptWitness;t=r&&i&&u}if(!1===t)throw new Error(`Input #${e} has too much or too little data to clean`)},e.updateGlobal=i("global"),e.updateInput=i("input"),e.updateOutput=i("output"),e.addInputAttributes=function(n,l){const r=t(n,n.length-1);e.updateInput(l,r)},e.addOutputAttributes=function(n,t){const r=l(n,n.length-1);e.updateOutput(t,r)},e.defaultVersionSetter=function(e,n){if(!ue(n)||n.length<4)throw new Error("Set Version: Invalid Transaction");return n.writeUInt32LE(e,0),n},e.defaultLocktimeSetter=function(e,n){if(!ue(n)||n.length<4)throw new Error("Set Locktime: Invalid Transaction");return n.writeUInt32LE(e,n.length-4),n}}(bC),Object.defineProperty(NR,"__esModule",{value:!0});const wC=CR,_C=LR,EC=DR,SC=bC;NR.Psbt=class{constructor(e){this.inputs=[],this.outputs=[],this.globalMap={unsignedTx:e}}static fromBase64(e,n){const t=S.from(e,"base64");return this.fromBuffer(t,n)}static fromHex(e,n){const t=S.from(e,"hex");return this.fromBuffer(t,n)}static fromBuffer(e,n){const t=_C.psbtFromBuffer(e,n),l=new this(t.globalMap.unsignedTx);return Object.assign(l,t),l}toBase64(){return this.toBuffer().toString("base64")}toHex(){return this.toBuffer().toString("hex")}toBuffer(){return _C.psbtToBuffer(this)}updateGlobal(e){return SC.updateGlobal(e,this.globalMap),this}updateInput(e,n){const t=SC.checkForInput(this.inputs,e);return SC.updateInput(n,t),this}updateOutput(e,n){const t=SC.checkForOutput(this.outputs,e);return SC.updateOutput(n,t),this}addUnknownKeyValToGlobal(e){return SC.checkHasKey(e,this.globalMap.unknownKeyVals,SC.getEnumLength(EC.GlobalTypes)),this.globalMap.unknownKeyVals||(this.globalMap.unknownKeyVals=[]),this.globalMap.unknownKeyVals.push(e),this}addUnknownKeyValToInput(e,n){const t=SC.checkForInput(this.inputs,e);return SC.checkHasKey(n,t.unknownKeyVals,SC.getEnumLength(EC.InputTypes)),t.unknownKeyVals||(t.unknownKeyVals=[]),t.unknownKeyVals.push(n),this}addUnknownKeyValToOutput(e,n){const t=SC.checkForOutput(this.outputs,e);return SC.checkHasKey(n,t.unknownKeyVals,SC.getEnumLength(EC.OutputTypes)),t.unknownKeyVals||(t.unknownKeyVals=[]),t.unknownKeyVals.push(n),this}addInput(e){this.globalMap.unsignedTx.addInput(e),this.inputs.push({unknownKeyVals:[]});const n=e.unknownKeyVals||[],t=this.inputs.length-1;if(!Array.isArray(n))throw new Error("unknownKeyVals must be an Array");return n.forEach((e=>this.addUnknownKeyValToInput(t,e))),SC.addInputAttributes(this.inputs,e),this}addOutput(e){this.globalMap.unsignedTx.addOutput(e),this.outputs.push({unknownKeyVals:[]});const n=e.unknownKeyVals||[],t=this.outputs.length-1;if(!Array.isArray(n))throw new Error("unknownKeyVals must be an Array");return n.forEach((e=>this.addUnknownKeyValToInput(t,e))),SC.addOutputAttributes(this.outputs,e),this}clearFinalizedInput(e){const n=SC.checkForInput(this.inputs,e);SC.inputCheckUncleanFinalized(e,n);for(const e of Object.keys(n))["witnessUtxo","nonWitnessUtxo","finalScriptSig","finalScriptWitness","unknownKeyVals"].includes(e)||delete n[e];return this}combine(...e){const n=wC.combine([this].concat(e));return Object.assign(this,n),this}getTransaction(){return this.globalMap.unsignedTx.toBuffer()}},Object.defineProperty(RR,"__esModule",{value:!0});const xC=NR,kC=dN,IC=bC,PC=xT,AC=WM,TC=wO,OC=RM,MC=IT,RC=AT,NC=iR,CC={network:kT.bitcoin,maximumFeeRate:5e3};class LC{constructor(e={},n=new xC.Psbt(new UC)){this.data=n,this.opts=Object.assign({},CC,e),this.__CACHE={__NON_WITNESS_UTXO_TX_CACHE:[],__NON_WITNESS_UTXO_BUF_CACHE:[],__TX_IN_CACHE:{},__TX:this.data.globalMap.unsignedTx.tx,__UNSAFE_SIGN_NONSEGWIT:!1},0===this.data.inputs.length&&this.setVersion(2);const t=(e,n,t,l)=>Object.defineProperty(e,n,{enumerable:t,writable:l});t(this,"__CACHE",!1,!0),t(this,"opts",!1,!0)}static fromBase64(e,n={}){const t=S.from(e,"base64");return this.fromBuffer(t,n)}static fromHex(e,n={}){const t=S.from(e,"hex");return this.fromBuffer(t,n)}static fromBuffer(e,n={}){const t=xC.Psbt.fromBuffer(e,jC),l=new LC(n,t);return function(e,n){e.ins.forEach((e=>{QC(n,e)}))}(l.__CACHE.__TX,l.__CACHE),l}get inputCount(){return this.data.inputs.length}get version(){return this.__CACHE.__TX.version}set version(e){this.setVersion(e)}get locktime(){return this.__CACHE.__TX.locktime}set locktime(e){this.setLocktime(e)}get txInputs(){return this.__CACHE.__TX.ins.map((e=>({hash:AC.cloneBuffer(e.hash),index:e.index,sequence:e.sequence})))}get txOutputs(){return this.__CACHE.__TX.outs.map((e=>{let n;try{n=PC.fromOutputScript(e.script,this.opts.network)}catch(e){}return{script:AC.cloneBuffer(e.script),value:e.value,address:n}}))}combine(...e){return this.data.combine(...e.map((e=>e.data))),this}clone(){const e=LC.fromBuffer(this.data.toBuffer());return e.opts=JSON.parse(JSON.stringify(this.opts)),e}setMaximumFeeRate(e){JC(e),this.opts.maximumFeeRate=e}setVersion(e){JC(e),XC(this.data.inputs,"setVersion");const n=this.__CACHE;return n.__TX.version=e,n.__EXTRACTED_TX=void 0,this}setLocktime(e){JC(e),XC(this.data.inputs,"setLocktime");const n=this.__CACHE;return n.__TX.locktime=e,n.__EXTRACTED_TX=void 0,this}setInputSequence(e,n){JC(n),XC(this.data.inputs,"setInputSequence");const t=this.__CACHE;if(t.__TX.ins.length<=e)throw new Error("Input index too high");return t.__TX.ins[e].sequence=n,t.__EXTRACTED_TX=void 0,this}addInputs(e){return e.forEach((e=>this.addInput(e))),this}addInput(e){if(arguments.length>1||!e||void 0===e.hash||void 0===e.index)throw new Error("Invalid arguments for Psbt.addInput. Requires single object with at least [hash] and [index]");XC(this.data.inputs,"addInput"),e.witnessScript&&yL(e.witnessScript);const n=this.__CACHE;this.data.addInput(e);QC(n,n.__TX.ins[n.__TX.ins.length-1]);const t=this.data.inputs.length-1,l=this.data.inputs[t];return l.nonWitnessUtxo&&aL(this.__CACHE,l,t),n.__FEE=void 0,n.__FEE_RATE=void 0,n.__EXTRACTED_TX=void 0,this}addOutputs(e){return e.forEach((e=>this.addOutput(e))),this}addOutput(e){if(arguments.length>1||!e||void 0===e.value||void 0===e.address&&void 0===e.script)throw new Error("Invalid arguments for Psbt.addOutput. Requires single object with at least [script or address] and [value]");XC(this.data.inputs,"addOutput");const{address:n}=e;if("string"==typeof n){const{network:t}=this.opts,l=PC.toOutputScript(n,t);e=Object.assign(e,{script:l})}const t=this.__CACHE;return this.data.addOutput(e),t.__FEE=void 0,t.__FEE_RATE=void 0,t.__EXTRACTED_TX=void 0,this}extractTransaction(e){if(!this.data.inputs.every(KC))throw new Error("Not finalized");const n=this.__CACHE;if(e||function(e,n,t){const l=n.__FEE_RATE||e.getFeeRate(),r=n.__EXTRACTED_TX.virtualSize(),i=l*r;if(l>=t.maximumFeeRate)throw new Error(`Warning: You are paying around ${(i/1e8).toFixed(8)} in fees, which is ${l} satoshi per byte for a transaction with a VSize of ${r} bytes (segwit counted as 0.25 byte per byte). Use setMaximumFeeRate method to raise your threshold, or pass true to the first arg of extractTransaction.`)}(this,n,this.opts),n.__EXTRACTED_TX)return n.__EXTRACTED_TX;const t=n.__TX.clone();return cL(this.data.inputs,t,n,!0),t}getFeeRate(){return tL("__FEE_RATE","fee rate",this.data.inputs,this.__CACHE)}getFee(){return tL("__FEE","fee",this.data.inputs,this.__CACHE)}finalizeAllInputs(){return IC.checkForInput(this.data.inputs,0),vL(this.data.inputs.length).forEach((e=>this.finalizeInput(e))),this}finalizeInput(e,n=lL){const t=IC.checkForInput(this.data.inputs,e),{script:l,isP2SH:r,isP2WSH:i,isSegwit:u}=function(e,n,t){const l=t.__TX,r={script:null,isSegwit:!1,isP2SH:!1,isP2WSH:!1};if(r.isP2SH=!!n.redeemScript,r.isP2WSH=!!n.witnessScript,n.witnessScript)r.script=n.witnessScript;else if(n.redeemScript)r.script=n.redeemScript;else if(n.nonWitnessUtxo){const i=hL(t,n,e),u=l.ins[e].index;r.script=i.outs[u].script}else n.witnessUtxo&&(r.script=n.witnessUtxo.script);(n.witnessScript||zC(r.script))&&(r.isSegwit=!0);return r}(e,t,this.__CACHE);if(!l)throw new Error(`No script found for input #${e}`);!function(e){if(!e.sighashType||!e.partialSig)return;const{partialSig:n,sighashType:t}=e;n.forEach((e=>{const{hashType:n}=RC.signature.decode(e.signature);if(t!==n)throw new Error("Signature sighash does not match input sighash type")}))}(t);const{finalScriptSig:o,finalScriptWitness:s}=n(e,t,l,u,r,i);if(o&&this.data.updateInput(e,{finalScriptSig:o}),s&&this.data.updateInput(e,{finalScriptWitness:s}),!o&&!s)throw new Error(`Unknown error finalizing input #${e}`);return this.data.clearFinalizedInput(e),this}getInputType(e){const n=IC.checkForInput(this.data.inputs,e),t=pL(fL(e,n,this.__CACHE),e,"input",n.redeemScript||function(e){if(!e)return;const n=RC.decompile(e);if(!n)return;const t=n[n.length-1];if(!ue(t)||dL(t)||(l=t,RC.isCanonicalScriptSignature(l)))return;var l;if(!RC.decompile(t))return;return t}(n.finalScriptSig),n.witnessScript||function(e){if(!e)return;const n=oL(e),t=n[n.length-1];if(dL(t))return;if(!RC.decompile(t))return;return t}(n.finalScriptWitness));return("raw"===t.type?"":t.type+"-")+mL(t.meaningfulScript)}inputHasPubkey(e,n){return function(e,n,t,l){const r=fL(t,n,l),{meaningfulScript:i}=pL(r,t,"input",n.redeemScript,n.witnessScript);return gL(e,i)}(n,IC.checkForInput(this.data.inputs,e),e,this.__CACHE)}inputHasHDKey(e,n){const t=IC.checkForInput(this.data.inputs,e),l=WC(n);return!!t.bip32Derivation&&t.bip32Derivation.some(l)}outputHasPubkey(e,n){return function(e,n,t,l){const r=l.__TX.outs[t].script,{meaningfulScript:i}=pL(r,t,"output",n.redeemScript,n.witnessScript);return gL(e,i)}(n,IC.checkForOutput(this.data.outputs,e),e,this.__CACHE)}outputHasHDKey(e,n){const t=IC.checkForOutput(this.data.outputs,e),l=WC(n);return!!t.bip32Derivation&&t.bip32Derivation.some(l)}validateSignaturesOfAllInputs(){IC.checkForInput(this.data.inputs,0);return vL(this.data.inputs.length).map((e=>this.validateSignaturesOfInput(e))).reduce(((e,n)=>!0===n&&e),!0)}validateSignaturesOfInput(e,n){const t=this.data.inputs[e],l=(t||{}).partialSig;if(!t||!l||l.length<1)throw new Error("No signatures to validate");const r=n?l.filter((e=>e.pubkey.equals(n))):l;if(r.length<1)throw new Error("No signatures for this pubkey");const i=[];let u,o,s;for(const n of r){const l=RC.signature.decode(n.signature),{hash:r,script:a}=s!==l.hashType?iL(e,Object.assign({},t,{sighashType:l.hashType}),this.__CACHE,!0):{hash:u,script:o};s=l.hashType,u=r,o=a,YC(n.pubkey,a,"verify");const c=OC.fromPublicKey(n.pubkey);i.push(c.verify(r,l.signature))}return i.every((e=>!0===e))}signAllInputsHD(e,n=[NC.Transaction.SIGHASH_ALL]){if(!e||!e.publicKey||!e.fingerprint)throw new Error("Need HDSigner to sign input");const t=[];for(const l of vL(this.data.inputs.length))try{this.signInputHD(l,e,n),t.push(!0)}catch(e){t.push(!1)}if(t.every((e=>!1===e)))throw new Error("No inputs were signed");return this}signAllInputsHDAsync(e,n=[NC.Transaction.SIGHASH_ALL]){return new Promise(((t,l)=>{if(!e||!e.publicKey||!e.fingerprint)return l(new Error("Need HDSigner to sign input"));const r=[],i=[];for(const t of vL(this.data.inputs.length))i.push(this.signInputHDAsync(t,e,n).then((()=>{r.push(!0)}),(()=>{r.push(!1)})));return Promise.all(i).then((()=>{if(r.every((e=>!1===e)))return l(new Error("No inputs were signed"));t()}))}))}signInputHD(e,n,t=[NC.Transaction.SIGHASH_ALL]){if(!n||!n.publicKey||!n.fingerprint)throw new Error("Need HDSigner to sign input");return uL(e,this.data.inputs,n).forEach((n=>this.signInput(e,n,t))),this}signInputHDAsync(e,n,t=[NC.Transaction.SIGHASH_ALL]){return new Promise(((l,r)=>{if(!n||!n.publicKey||!n.fingerprint)return r(new Error("Need HDSigner to sign input"));const i=uL(e,this.data.inputs,n).map((n=>this.signInputAsync(e,n,t)));return Promise.all(i).then((()=>{l()})).catch(r)}))}signAllInputs(e,n=[NC.Transaction.SIGHASH_ALL]){if(!e||!e.publicKey)throw new Error("Need Signer to sign input");const t=[];for(const l of vL(this.data.inputs.length))try{this.signInput(l,e,n),t.push(!0)}catch(e){t.push(!1)}if(t.every((e=>!1===e)))throw new Error("No inputs were signed");return this}signAllInputsAsync(e,n=[NC.Transaction.SIGHASH_ALL]){return new Promise(((t,l)=>{if(!e||!e.publicKey)return l(new Error("Need Signer to sign input"));const r=[],i=[];for(const[t]of this.data.inputs.entries())i.push(this.signInputAsync(t,e,n).then((()=>{r.push(!0)}),(()=>{r.push(!1)})));return Promise.all(i).then((()=>{if(r.every((e=>!1===e)))return l(new Error("No inputs were signed"));t()}))}))}signInput(e,n,t=[NC.Transaction.SIGHASH_ALL]){if(!n||!n.publicKey)throw new Error("Need Signer to sign input");const{hash:l,sighashType:r}=rL(this.data.inputs,e,n.publicKey,this.__CACHE,t),i=[{pubkey:n.publicKey,signature:RC.signature.encode(n.sign(l),r)}];return this.data.updateInput(e,{partialSig:i}),this}signInputAsync(e,n,t=[NC.Transaction.SIGHASH_ALL]){return Promise.resolve().then((()=>{if(!n||!n.publicKey)throw new Error("Need Signer to sign input");const{hash:l,sighashType:r}=rL(this.data.inputs,e,n.publicKey,this.__CACHE,t);return Promise.resolve(n.sign(l)).then((t=>{const l=[{pubkey:n.publicKey,signature:RC.signature.encode(t,r)}];this.data.updateInput(e,{partialSig:l})}))}))}toBuffer(){return DC(this.__CACHE),this.data.toBuffer()}toHex(){return DC(this.__CACHE),this.data.toHex()}toBase64(){return DC(this.__CACHE),this.data.toBase64()}updateGlobal(e){return this.data.updateGlobal(e),this}updateInput(e,n){return n.witnessScript&&yL(n.witnessScript),this.data.updateInput(e,n),n.nonWitnessUtxo&&aL(this.__CACHE,this.data.inputs[e],e),this}updateOutput(e,n){return this.data.updateOutput(e,n),this}addUnknownKeyValToGlobal(e){return this.data.addUnknownKeyValToGlobal(e),this}addUnknownKeyValToInput(e,n){return this.data.addUnknownKeyValToInput(e,n),this}addUnknownKeyValToOutput(e,n){return this.data.addUnknownKeyValToOutput(e,n),this}clearFinalizedInput(e){return this.data.clearFinalizedInput(e),this}}RR.Psbt=LC;const jC=e=>new UC(e);class UC{constructor(e=S.from([2,0,0,0,0,0,0,0,0,0])){this.tx=NC.Transaction.fromBuffer(e),function(e){const n=e.ins.every((e=>e.script&&0===e.script.length&&e.witness&&0===e.witness.length));if(!n)throw new Error("Format Error: Transaction ScriptSigs are not empty")}(this.tx),Object.defineProperty(this,"tx",{enumerable:!1,writable:!0})}getInputOutputCounts(){return{inputCount:this.tx.ins.length,outputCount:this.tx.outs.length}}addInput(e){if(void 0===e.hash||void 0===e.index||!ue(e.hash)&&"string"!=typeof e.hash||"number"!=typeof e.index)throw new Error("Error adding input.");const n="string"==typeof e.hash?AC.reverseBuffer(S.from(e.hash,"hex")):e.hash;this.tx.addInput(n,e.index,e.sequence)}addOutput(e){if(void 0===e.script||void 0===e.value||!ue(e.script)||"number"!=typeof e.value)throw new Error("Error adding output.");this.tx.addOutput(e.script,e.value)}toBuffer(){return this.tx.toBuffer()}}function DC(e){if(!1!==e.__UNSAFE_SIGN_NONSEGWIT)throw new Error("Not BIP174 compliant, can not export")}function BC(e,n,t){if(!n)return!1;let l;if(l=t?t.map((e=>{const t=OC.fromPublicKey(e,{compressed:!0}).publicKey;return n.find((e=>e.pubkey.equals(t)))})).filter((e=>!!e)):n,l.length>e)throw new Error("Too many signatures");return l.length===e}function KC(e){return!!e.finalScriptSig||!!e.finalScriptWitness}function FC(e){return n=>{try{return e({output:n}),!0}catch(e){return!1}}}const VC=FC(MC.p2ms),HC=FC(MC.p2pk),qC=FC(MC.p2pkh),zC=FC(MC.p2wpkh),$C=FC(MC.p2wsh),GC=FC(MC.p2sh);function WC(e){return n=>!!n.masterFingerprint.equals(e.fingerprint)&&!!e.derivePath(n.path).publicKey.equals(n.pubkey)}function JC(e){if("number"!=typeof e||e!==Math.floor(e)||e>4294967295||e<0)throw new Error("Invalid 32 bit integer")}function XC(e,n){e.forEach((e=>{let t=!1,l=[];if(0===(e.partialSig||[]).length){if(!e.finalScriptSig&&!e.finalScriptWitness)return;l=function(e){const n=e.finalScriptSig&&RC.decompile(e.finalScriptSig)||[],t=e.finalScriptWitness&&RC.decompile(e.finalScriptWitness)||[];return n.concat(t).filter((e=>ue(e)&&RC.isCanonicalScriptSignature(e))).map((e=>({signature:e})))}(e)}else l=e.partialSig;if(l.forEach((e=>{const{hashType:l}=RC.signature.decode(e.signature),r=[];l&NC.Transaction.SIGHASH_ANYONECANPAY&&r.push("addInput");switch(31&l){case NC.Transaction.SIGHASH_ALL:break;case NC.Transaction.SIGHASH_SINGLE:case NC.Transaction.SIGHASH_NONE:r.push("addOutput"),r.push("setInputSequence")}-1===r.indexOf(n)&&(t=!0)})),t)throw new Error("Can not modify transaction, signatures exist.")}))}function YC(e,n,t){if(!gL(e,n))throw new Error(`Can not ${t} for this input with the key ${e.toString("hex")}`)}function QC(e,n){const t=AC.reverseBuffer(S.from(n.hash)).toString("hex")+":"+n.index;if(e.__TX_IN_CACHE[t])throw new Error("Duplicate input detected.");e.__TX_IN_CACHE[t]=1}function ZC(e,n){return(t,l,r,i)=>{const u=e({redeem:{output:r}}).output;if(!l.equals(u))throw new Error(`${n} for ${i} #${t} doesn't match the scriptPubKey in the prevout`)}}const eL=ZC(MC.p2sh,"Redeem script"),nL=ZC(MC.p2wsh,"Witness script");function tL(e,n,t,l){if(!t.every(KC))throw new Error(`PSBT must be finalized to calculate ${n}`);if("__FEE_RATE"===e&&l.__FEE_RATE)return l.__FEE_RATE;if("__FEE"===e&&l.__FEE)return l.__FEE;let r,i=!0;return l.__EXTRACTED_TX?(r=l.__EXTRACTED_TX,i=!1):r=l.__TX.clone(),cL(t,r,l,i),"__FEE_RATE"===e?l.__FEE_RATE:"__FEE"===e?l.__FEE:void 0}function lL(e,n,t,l,r,i){const u=mL(t);if(!function(e,n,t){switch(t){case"pubkey":case"pubkeyhash":case"witnesspubkeyhash":return BC(1,e.partialSig);case"multisig":const t=MC.p2ms({output:n});return BC(t.m,e.partialSig,t.pubkeys);default:return!1}}(n,t,u))throw new Error(`Can not finalize input #${e}`);return function(e,n,t,l,r,i){let u,o;const s=function(e,n,t){let l;switch(n){case"multisig":const n=function(e,n){return MC.p2ms({output:e}).pubkeys.map((e=>(n.filter((n=>n.pubkey.equals(e)))[0]||{}).signature)).filter((e=>!!e))}(e,t);l=MC.p2ms({output:e,signatures:n});break;case"pubkey":l=MC.p2pk({output:e,signature:t[0].signature});break;case"pubkeyhash":l=MC.p2pkh({output:e,pubkey:t[0].pubkey,signature:t[0].signature});break;case"witnesspubkeyhash":l=MC.p2wpkh({output:e,pubkey:t[0].pubkey,signature:t[0].signature})}return l}(e,n,t),a=i?MC.p2wsh({redeem:s}):null,c=r?MC.p2sh({redeem:a||s}):null;l?(o=sL(a?a.witness:s.witness),c&&(u=c.input)):u=c?c.input:s.input;return{finalScriptSig:u,finalScriptWitness:o}}(t,u,n.partialSig,l,r,i)}function rL(e,n,t,l,r){const i=IC.checkForInput(e,n),{hash:u,sighashType:o,script:s}=iL(n,i,l,!1,r);return YC(t,s,"sign"),{hash:u,sighashType:o}}function iL(e,n,t,l,r){const i=t.__TX,u=n.sighashType||NC.Transaction.SIGHASH_ALL;if(r&&r.indexOf(u)<0){const e=function(e){let n=e&NC.Transaction.SIGHASH_ANYONECANPAY?"SIGHASH_ANYONECANPAY | ":"";switch(31&e){case NC.Transaction.SIGHASH_ALL:n+="SIGHASH_ALL";break;case NC.Transaction.SIGHASH_SINGLE:n+="SIGHASH_SINGLE";break;case NC.Transaction.SIGHASH_NONE:n+="SIGHASH_NONE"}return n}(u);throw new Error(`Sighash type is not allowed. Retry the sign method passing the sighashTypes array of whitelisted types. Sighash type: ${e}`)}let o,s;if(n.nonWitnessUtxo){const l=hL(t,n,e),r=i.ins[e].hash,u=l.getHash();if(!r.equals(u))throw new Error(`Non-witness UTXO hash for input #${e} doesn't match the hash specified in the prevout`);const o=i.ins[e].index;s=l.outs[o]}else{if(!n.witnessUtxo)throw new Error("Need a Utxo input item for signing");s=n.witnessUtxo}const{meaningfulScript:a,type:c}=pL(s.script,e,"input",n.redeemScript,n.witnessScript);if(["p2sh-p2wsh","p2wsh"].indexOf(c)>=0)o=i.hashForWitnessV0(e,a,s.value,u);else if(zC(a)){const n=MC.p2pkh({hash:a.slice(2)}).output;o=i.hashForWitnessV0(e,n,s.value,u)}else{if(void 0===n.nonWitnessUtxo&&!1===t.__UNSAFE_SIGN_NONSEGWIT)throw new Error(`Input #${e} has witnessUtxo but non-segwit script: ${a.toString("hex")}`);l||!1===t.__UNSAFE_SIGN_NONSEGWIT||console.warn("Warning: Signing non-segwit inputs without the full parent transaction means there is a chance that a miner could feed you incorrect information to trick you into paying large fees. This behavior is the same as the old TransactionBuilder class when signing non-segwit scripts. You are not able to export this Psbt with toBuffer|toBase64|toHex since it is not BIP174 compliant.\n*********************\nPROCEED WITH CAUTION!\n*********************"),o=i.hashForSignature(e,a,u)}return{script:a,sighashType:u,hash:o}}function uL(e,n,t){const l=IC.checkForInput(n,e);if(!l.bip32Derivation||0===l.bip32Derivation.length)throw new Error("Need bip32Derivation to sign with HD");const r=l.bip32Derivation.map((e=>e.masterFingerprint.equals(t.fingerprint)?e:void 0)).filter((e=>!!e));if(0===r.length)throw new Error("Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint");const i=r.map((e=>{const n=t.derivePath(e.path);if(!e.pubkey.equals(n.publicKey))throw new Error("pubkey did not match bip32Derivation");return n}));return i}function oL(e){let n=0;function t(){const t=kC.decode(e,n);return n+=kC.decode.bytes,t}function l(){return function(t){return n+=t,e.slice(n-t,n)}(t())}return function(){const e=t(),n=[];for(let t=0;t<e;t++)n.push(l());return n}()}function sL(e){let n=S.allocUnsafe(0);function t(e){const t=n.length,l=kC.encodingLength(e);n=S.concat([n,S.allocUnsafe(l)]),kC.encode(e,n,t)}function l(e){t(e.length),function(e){n=S.concat([n,S.from(e)])}(e)}var r;return t((r=e).length),r.forEach(l),n}function aL(e,n,t){e.__NON_WITNESS_UTXO_BUF_CACHE[t]=n.nonWitnessUtxo;const l=NC.Transaction.fromBuffer(n.nonWitnessUtxo);e.__NON_WITNESS_UTXO_TX_CACHE[t]=l;const r=e,i=t;delete n.nonWitnessUtxo,Object.defineProperty(n,"nonWitnessUtxo",{enumerable:!0,get(){const e=r.__NON_WITNESS_UTXO_BUF_CACHE[i],n=r.__NON_WITNESS_UTXO_TX_CACHE[i];if(void 0!==e)return e;{const e=n.toBuffer();return r.__NON_WITNESS_UTXO_BUF_CACHE[i]=e,e}},set(e){r.__NON_WITNESS_UTXO_BUF_CACHE[i]=e}})}function cL(e,n,t,l){let r=0;e.forEach(((e,i)=>{if(l&&e.finalScriptSig&&(n.ins[i].script=e.finalScriptSig),l&&e.finalScriptWitness&&(n.ins[i].witness=oL(e.finalScriptWitness)),e.witnessUtxo)r+=e.witnessUtxo.value;else if(e.nonWitnessUtxo){const l=hL(t,e,i),u=n.ins[i].index,o=l.outs[u];r+=o.value}}));const i=n.outs.reduce(((e,n)=>e+n.value),0),u=r-i;if(u<0)throw new Error("Outputs are spending more than Inputs");const o=n.virtualSize();t.__FEE=u,t.__EXTRACTED_TX=n,t.__FEE_RATE=Math.floor(u/o)}function hL(e,n,t){const l=e.__NON_WITNESS_UTXO_TX_CACHE;return l[t]||aL(e,n,t),l[t]}function fL(e,n,t){if(void 0!==n.witnessUtxo)return n.witnessUtxo.script;if(void 0!==n.nonWitnessUtxo){return hL(t,n,e).outs[t.__TX.ins[e].index].script}throw new Error("Can't find pubkey in input without Utxo data")}function dL(e){return 33===e.length&&RC.isCanonicalPubKey(e)}function pL(e,n,t,l,r){const i=GC(e),u=i&&l&&$C(l),o=$C(e);if(i&&void 0===l)throw new Error("scriptPubkey is P2SH but redeemScript missing");if((o||u)&&void 0===r)throw new Error("scriptPubkey or redeemScript is P2WSH but witnessScript missing");let s;return u?(s=r,eL(n,e,l,t),nL(n,l,r,t),yL(s)):o?(s=r,nL(n,e,r,t),yL(s)):i?(s=l,eL(n,e,l,t)):s=e,{meaningfulScript:s,type:u?"p2sh-p2wsh":i?"p2sh":o?"p2wsh":"raw"}}function yL(e){if(zC(e)||GC(e))throw new Error("P2WPKH or P2SH can not be contained within P2WSH")}function gL(e,n){const t=TC.hash160(e),l=RC.decompile(n);if(null===l)throw new Error("Unknown script error");return l.some((n=>"number"!=typeof n&&(n.equals(e)||n.equals(t))))}function mL(e){return zC(e)?"witnesspubkeyhash":qC(e)?"pubkeyhash":VC(e)?"multisig":HC(e)?"pubkey":"nonstandard"}function vL(e){return[...Array(e).keys()]}var bL={},wL={},_L={},EL={};Object.defineProperty(EL,"__esModule",{value:!0});const SL=AT,xL=AT;function kL(e){return e===xL.OPS.OP_0||SL.isCanonicalScriptSignature(e)}function IL(e,n){const t=SL.decompile(e);return!(t.length<2)&&(t[0]===xL.OPS.OP_0&&(n?t.slice(1).every(kL):t.slice(1).every(SL.isCanonicalScriptSignature)))}EL.check=IL,IL.toJSON=()=>"multisig input";var PL={};Object.defineProperty(PL,"__esModule",{value:!0});const AL=AT,TL=AT,OL=MT,ML=TL.OPS.OP_RESERVED;function RL(e,n){const t=AL.decompile(e);if(t.length<4)return!1;if(t[t.length-1]!==TL.OPS.OP_CHECKMULTISIG)return!1;if(!OL.Number(t[0]))return!1;if(!OL.Number(t[t.length-2]))return!1;const l=t[0]-ML,r=t[t.length-2]-ML;if(l<=0)return!1;if(r>16)return!1;if(l>r)return!1;if(r!==t.length-3)return!1;if(n)return!0;return t.slice(1,-2).every(AL.isCanonicalPubKey)}PL.check=RL,RL.toJSON=()=>"multi-sig output",Object.defineProperty(_L,"__esModule",{value:!0});const NL=EL;_L.input=NL;const CL=PL;_L.output=CL;var LL={};Object.defineProperty(LL,"__esModule",{value:!0});const jL=AT,UL=jL.OPS;function DL(e){const n=jL.compile(e);return n.length>1&&n[0]===UL.OP_RETURN}LL.check=DL,DL.toJSON=()=>"null data output";const BL={check:DL};LL.output=BL;var KL={},FL={};Object.defineProperty(FL,"__esModule",{value:!0});const VL=AT;function HL(e){const n=VL.decompile(e);return 1===n.length&&VL.isCanonicalScriptSignature(n[0])}FL.check=HL,HL.toJSON=()=>"pubKey input";var qL={};Object.defineProperty(qL,"__esModule",{value:!0});const zL=AT,$L=AT;function GL(e){const n=zL.decompile(e);return 2===n.length&&zL.isCanonicalPubKey(n[0])&&n[1]===$L.OPS.OP_CHECKSIG}qL.check=GL,GL.toJSON=()=>"pubKey output",Object.defineProperty(KL,"__esModule",{value:!0});const WL=FL;KL.input=WL;const JL=qL;KL.output=JL;var XL={},YL={};Object.defineProperty(YL,"__esModule",{value:!0});const QL=AT;function ZL(e){const n=QL.decompile(e);return 2===n.length&&QL.isCanonicalScriptSignature(n[0])&&QL.isCanonicalPubKey(n[1])}YL.check=ZL,ZL.toJSON=()=>"pubKeyHash input";var ej={};Object.defineProperty(ej,"__esModule",{value:!0});const nj=AT,tj=AT;function lj(e){const n=nj.compile(e);return 25===n.length&&n[0]===tj.OPS.OP_DUP&&n[1]===tj.OPS.OP_HASH160&&20===n[2]&&n[23]===tj.OPS.OP_EQUALVERIFY&&n[24]===tj.OPS.OP_CHECKSIG}ej.check=lj,lj.toJSON=()=>"pubKeyHash output",Object.defineProperty(XL,"__esModule",{value:!0});const rj=YL;XL.input=rj;const ij=ej;XL.output=ij;var uj={},oj={},sj={};Object.defineProperty(sj,"__esModule",{value:!0});const aj=AT,cj=AT;function hj(e){const n=aj.compile(e);return 22===n.length&&n[0]===cj.OPS.OP_0&&20===n[1]}sj.check=hj,hj.toJSON=()=>"Witness pubKeyHash output";var fj={};Object.defineProperty(fj,"__esModule",{value:!0});const dj=AT,pj=AT;function yj(e){const n=dj.compile(e);return 34===n.length&&n[0]===pj.OPS.OP_0&&32===n[1]}fj.check=yj,yj.toJSON=()=>"Witness scriptHash output",Object.defineProperty(oj,"__esModule",{value:!0});const gj=AT,mj=_L,vj=KL,bj=XL,wj=sj,_j=fj;function Ej(e,n){const t=gj.decompile(e);if(t.length<1)return!1;const l=t[t.length-1];if(!ue(l))return!1;const r=gj.decompile(gj.compile(t.slice(0,-1))),i=gj.decompile(l);return!!i&&(!!gj.isPushOnly(r)&&(1===t.length?_j.check(i)||wj.check(i):!(!bj.input.check(r)||!bj.output.check(i))||(!(!mj.input.check(r,n)||!mj.output.check(i))||!(!vj.input.check(r)||!vj.output.check(i)))))}oj.check=Ej,Ej.toJSON=()=>"scriptHash input";var Sj={};Object.defineProperty(Sj,"__esModule",{value:!0});const xj=AT,kj=AT;function Ij(e){const n=xj.compile(e);return 23===n.length&&n[0]===kj.OPS.OP_HASH160&&20===n[1]&&n[22]===kj.OPS.OP_EQUAL}Sj.check=Ij,Ij.toJSON=()=>"scriptHash output",Object.defineProperty(uj,"__esModule",{value:!0});const Pj=oj;uj.input=Pj;const Aj=Sj;uj.output=Aj;var Tj={},Oj={};Object.defineProperty(Oj,"__esModule",{value:!0});const Mj=AT,Rj=AT,Nj=MT,Cj=tT,Lj=S.from("aa21a9ed","hex");function jj(e){const n=Mj.compile(e);return n.length>37&&n[0]===Rj.OPS.OP_RETURN&&36===n[1]&&n.slice(2,6).equals(Lj)}Oj.check=jj,jj.toJSON=()=>"Witness commitment output",Oj.encode=function(e){Cj(Nj.Hash256bit,e);const n=S.allocUnsafe(36);return Lj.copy(n,0),e.copy(n,4),Mj.compile([Rj.OPS.OP_RETURN,n])},Oj.decode=function(e){return Cj(jj,e),Mj.decompile(e)[1].slice(4,36)},Object.defineProperty(Tj,"__esModule",{value:!0});const Uj=Oj;Tj.output=Uj;var Dj={},Bj={};Object.defineProperty(Bj,"__esModule",{value:!0});const Kj=AT;function Fj(e){const n=Kj.decompile(e);return 2===n.length&&Kj.isCanonicalScriptSignature(n[0])&&function(e){return Kj.isCanonicalPubKey(e)&&33===e.length}(n[1])}Bj.check=Fj,Fj.toJSON=()=>"witnessPubKeyHash input",Object.defineProperty(Dj,"__esModule",{value:!0});const Vj=Bj;Dj.input=Vj;const Hj=sj;Dj.output=Hj;var qj={},zj={};Object.defineProperty(zj,"__esModule",{value:!0});const $j=AT,Gj=tT,Wj=_L,Jj=KL,Xj=XL;function Yj(e,n){if(Gj(Gj.Array,e),e.length<1)return!1;const t=e[e.length-1];if(!ue(t))return!1;const l=$j.decompile(t);if(!l||0===l.length)return!1;const r=$j.compile(e.slice(0,-1));return!(!Xj.input.check(r)||!Xj.output.check(l))||(!(!Wj.input.check(r,n)||!Wj.output.check(l))||!(!Jj.input.check(r)||!Jj.output.check(l)))}zj.check=Yj,Yj.toJSON=()=>"witnessScriptHash input",Object.defineProperty(qj,"__esModule",{value:!0});const Qj=zj;qj.input=Qj;const Zj=fj;qj.output=Zj,Object.defineProperty(wL,"__esModule",{value:!0});const eU=AT,nU=_L,tU=LL,lU=KL,rU=XL,iU=uj,uU=Tj,oU=Dj,sU=qj,aU={P2MS:"multisig",NONSTANDARD:"nonstandard",NULLDATA:"nulldata",P2PK:"pubkey",P2PKH:"pubkeyhash",P2SH:"scripthash",P2WPKH:"witnesspubkeyhash",P2WSH:"witnessscripthash",WITNESS_COMMITMENT:"witnesscommitment"};wL.types=aU,wL.output=function(e){if(oU.output.check(e))return aU.P2WPKH;if(sU.output.check(e))return aU.P2WSH;if(rU.output.check(e))return aU.P2PKH;if(iU.output.check(e))return aU.P2SH;const n=eU.decompile(e);if(!n)throw new TypeError("Invalid script");return nU.output.check(n)?aU.P2MS:lU.output.check(n)?aU.P2PK:uU.output.check(n)?aU.WITNESS_COMMITMENT:tU.output.check(n)?aU.NULLDATA:aU.NONSTANDARD},wL.input=function(e,n){const t=eU.decompile(e);if(!t)throw new TypeError("Invalid script");return rU.input.check(t)?aU.P2PKH:iU.input.check(t,n)?aU.P2SH:nU.input.check(t,n)?aU.P2MS:lU.input.check(t)?aU.P2PK:aU.NONSTANDARD},wL.witness=function(e,n){const t=eU.decompile(e);if(!t)throw new TypeError("Invalid script");return oU.input.check(t)?aU.P2WPKH:sU.input.check(t,n)?aU.P2WSH:aU.NONSTANDARD},Object.defineProperty(bL,"__esModule",{value:!0});const cU=xT,hU=WM,fU=wL,dU=wO,pU=RM,yU=kT,gU=IT,mU=AT,vU=AT,bU=iR,wU=MT,_U=tT,EU=fU.types,SU=new Set(["p2pkh","p2pk","p2wpkh","p2ms","p2sh-p2pkh","p2sh-p2pk","p2sh-p2wpkh","p2sh-p2ms","p2wsh-p2pkh","p2wsh-p2pk","p2wsh-p2ms","p2sh-p2wsh-p2pkh","p2sh-p2wsh-p2pk","p2sh-p2wsh-p2ms"]);function xU(e,n,t){try{_U(e,n)}catch(e){throw new Error(t)}}class kU{constructor(e=yU.bitcoin,n=2500){this.network=e,this.maximumFeeRate=n,this.__PREV_TX_SET={},this.__INPUTS=[],this.__TX=new bU.Transaction,this.__TX.version=2,this.__USE_LOW_R=!1,console.warn("Deprecation Warning: TransactionBuilder will be removed in the future. (v6.x.x or later) Please use the Psbt class instead. Examples of usage are available in the transactions-psbt.js integration test file on our Github. A high level explanation is available in the psbt.ts and psbt.js files as well.")}static fromTransaction(e,n){const t=new kU(n);return t.setVersion(e.version),t.setLockTime(e.locktime),e.outs.forEach((e=>{t.addOutput(e.script,e.value)})),e.ins.forEach((e=>{t.__addInputUnsafe(e.hash,e.index,{sequence:e.sequence,script:e.script,witness:e.witness})})),t.__INPUTS.forEach(((n,t)=>{!function(e,n,t){if(e.redeemScriptType!==EU.P2MS||!e.redeemScript)return;if(e.pubkeys.length===e.signatures.length)return;const l=e.signatures.concat();e.signatures=e.pubkeys.map((r=>{const i=pU.fromPublicKey(r);let u;return l.some(((r,o)=>{if(!r)return!1;const s=mU.signature.decode(r),a=n.hashForSignature(t,e.redeemScript,s.hashType);return!!i.verify(a,s.signature)&&(l[o]=void 0,u=r,!0)})),u}))}(n,e,t)})),t}setLowR(e){return _U(_U.maybe(_U.Boolean),e),void 0===e&&(e=!0),this.__USE_LOW_R=e,e}setLockTime(e){if(_U(wU.UInt32,e),this.__INPUTS.some((e=>!!e.signatures&&e.signatures.some((e=>void 0!==e)))))throw new Error("No, this would invalidate signatures");this.__TX.locktime=e}setVersion(e){_U(wU.UInt32,e),this.__TX.version=e}addInput(e,n,t,l){if(!this.__canModifyInputs())throw new Error("No, this would invalidate signatures");let r;if("string"==typeof(i=e)||i instanceof String)e=hU.reverseBuffer(S.from(e,"hex"));else if(function(e){return e instanceof bU.Transaction}(e)){const t=e.outs[n];l=t.script,r=t.value,e=e.getHash(!1)}var i;return this.__addInputUnsafe(e,n,{sequence:t,prevOutScript:l,value:r})}addOutput(e,n){if(!this.__canModifyOutputs())throw new Error("No, this would invalidate signatures");return"string"==typeof e&&(e=cU.toOutputScript(e,this.network)),this.__TX.addOutput(e,n)}build(){return this.__build(!1)}buildIncomplete(){return this.__build(!0)}sign(e,n,t,l,r,i){!function({input:e,ourPubKey:n,keyPair:t,signatureHash:l,hashType:r,useLowR:i}){let u=!1;for(const[o,s]of e.pubkeys.entries()){if(!n.equals(s))continue;if(e.signatures[o])throw new Error("Signature already exists");if(33!==n.length&&e.hasWitness)throw new Error("BIP143 rejects uncompressed public keys in P2WPKH or P2WSH");const a=t.sign(l,i);e.signatures[o]=mU.signature.encode(a,r),u=!0}if(!u)throw new Error("Key pair cannot sign for this input")}(function(e,n,t,l,r,i,u,o,s,a,c){let h;if("number"==typeof r)console.warn("DEPRECATED: TransactionBuilder sign method arguments will change in v6, please use the TxbSignArg interface"),h=r;else{if("object"!=typeof r)throw new TypeError("TransactionBuilder sign first arg must be TxbSignArg or number");!function(e,n){if(!SU.has(n.prevOutScriptType))throw new TypeError(`Unknown prevOutScriptType "${n.prevOutScriptType}"`);xU(_U.Number,n.vin,"sign must include vin parameter as Number (input index)"),xU(wU.Signer,n.keyPair,"sign must include keyPair parameter as Signer interface"),xU(_U.maybe(_U.Number),n.hashType,"sign hashType parameter must be a number");const t=(e[n.vin]||[]).prevOutType,l=n.prevOutScriptType;switch(l){case"p2pkh":if(t&&"pubkeyhash"!==t)throw new TypeError(`input #${n.vin} is not of type p2pkh: ${t}`);xU(_U.value(void 0),n.witnessScript,`${l} requires NO witnessScript`),xU(_U.value(void 0),n.redeemScript,`${l} requires NO redeemScript`),xU(_U.value(void 0),n.witnessValue,`${l} requires NO witnessValue`);break;case"p2pk":if(t&&"pubkey"!==t)throw new TypeError(`input #${n.vin} is not of type p2pk: ${t}`);xU(_U.value(void 0),n.witnessScript,`${l} requires NO witnessScript`),xU(_U.value(void 0),n.redeemScript,`${l} requires NO redeemScript`),xU(_U.value(void 0),n.witnessValue,`${l} requires NO witnessValue`);break;case"p2wpkh":if(t&&"witnesspubkeyhash"!==t)throw new TypeError(`input #${n.vin} is not of type p2wpkh: ${t}`);xU(_U.value(void 0),n.witnessScript,`${l} requires NO witnessScript`),xU(_U.value(void 0),n.redeemScript,`${l} requires NO redeemScript`),xU(wU.Satoshi,n.witnessValue,`${l} requires witnessValue`);break;case"p2ms":if(t&&"multisig"!==t)throw new TypeError(`input #${n.vin} is not of type p2ms: ${t}`);xU(_U.value(void 0),n.witnessScript,`${l} requires NO witnessScript`),xU(_U.value(void 0),n.redeemScript,`${l} requires NO redeemScript`),xU(_U.value(void 0),n.witnessValue,`${l} requires NO witnessValue`);break;case"p2sh-p2wpkh":if(t&&"scripthash"!==t)throw new TypeError(`input #${n.vin} is not of type p2sh-p2wpkh: ${t}`);xU(_U.value(void 0),n.witnessScript,`${l} requires NO witnessScript`),xU(_U.Buffer,n.redeemScript,`${l} requires redeemScript`),xU(wU.Satoshi,n.witnessValue,`${l} requires witnessValue`);break;case"p2sh-p2ms":case"p2sh-p2pk":case"p2sh-p2pkh":if(t&&"scripthash"!==t)throw new TypeError(`input #${n.vin} is not of type ${l}: ${t}`);xU(_U.value(void 0),n.witnessScript,`${l} requires NO witnessScript`),xU(_U.Buffer,n.redeemScript,`${l} requires redeemScript`),xU(_U.value(void 0),n.witnessValue,`${l} requires NO witnessValue`);break;case"p2wsh-p2ms":case"p2wsh-p2pk":case"p2wsh-p2pkh":if(t&&"witnessscripthash"!==t)throw new TypeError(`input #${n.vin} is not of type ${l}: ${t}`);xU(_U.Buffer,n.witnessScript,`${l} requires witnessScript`),xU(_U.value(void 0),n.redeemScript,`${l} requires NO redeemScript`),xU(wU.Satoshi,n.witnessValue,`${l} requires witnessValue`);break;case"p2sh-p2wsh-p2ms":case"p2sh-p2wsh-p2pk":case"p2sh-p2wsh-p2pkh":if(t&&"scripthash"!==t)throw new TypeError(`input #${n.vin} is not of type ${l}: ${t}`);xU(_U.Buffer,n.witnessScript,`${l} requires witnessScript`),xU(_U.Buffer,n.redeemScript,`${l} requires witnessScript`),xU(wU.Satoshi,n.witnessValue,`${l} requires witnessScript`)}}(n,r),({vin:h,keyPair:i,redeemScript:u,hashType:o,witnessValue:s,witnessScript:a}=r)}if(void 0===i)throw new Error("sign requires keypair");if(i.network&&i.network!==e)throw new TypeError("Inconsistent network");if(!n[h])throw new Error("No input at index: "+h);if(o=o||bU.Transaction.SIGHASH_ALL,t(o))throw new Error("Transaction needs outputs");const f=n[h];if(void 0!==f.redeemScript&&u&&!f.redeemScript.equals(u))throw new Error("Inconsistent redeemScript");const d=i.publicKey||i.getPublicKey&&i.getPublicKey();if(!TU(f)){if(void 0!==s){if(void 0!==f.value&&f.value!==s)throw new Error("Input did not match witnessValue");_U(wU.Satoshi,s),f.value=s}if(!TU(f)){const e=function(e,n,t,l){if(t&&l){const r=gU.p2wsh({redeem:{output:l}}),i=gU.p2wsh({output:t}),u=gU.p2sh({redeem:{output:t}}),o=gU.p2sh({redeem:r});if(!r.hash.equals(i.hash))throw new Error("Witness script inconsistent with prevOutScript");if(!u.hash.equals(o.hash))throw new Error("Redeem script inconsistent with prevOutScript");const s=PU(r.redeem.output,n);if(!s.pubkeys)throw new Error(s.type+" not supported as witnessScript ("+mU.toASM(l)+")");e.signatures&&e.signatures.some((e=>void 0!==e))&&(s.signatures=e.signatures);const a=l;if(s.type===EU.P2WPKH)throw new Error("P2SH(P2WSH(P2WPKH)) is a consensus failure");return{redeemScript:t,redeemScriptType:EU.P2WSH,witnessScript:l,witnessScriptType:s.type,prevOutType:EU.P2SH,prevOutScript:u.output,hasWitness:!0,signScript:a,signType:s.type,pubkeys:s.pubkeys,signatures:s.signatures,maxSignatures:s.maxSignatures}}if(t){const l=gU.p2sh({redeem:{output:t}});if(e.prevOutScript){let n;try{n=gU.p2sh({output:e.prevOutScript})}catch(e){throw new Error("PrevOutScript must be P2SH")}if(!l.hash.equals(n.hash))throw new Error("Redeem script inconsistent with prevOutScript")}const r=PU(l.redeem.output,n);if(!r.pubkeys)throw new Error(r.type+" not supported as redeemScript ("+mU.toASM(t)+")");e.signatures&&e.signatures.some((e=>void 0!==e))&&(r.signatures=e.signatures);let i=t;return r.type===EU.P2WPKH&&(i=gU.p2pkh({pubkey:r.pubkeys[0]}).output),{redeemScript:t,redeemScriptType:r.type,prevOutType:EU.P2SH,prevOutScript:l.output,hasWitness:r.type===EU.P2WPKH,signScript:i,signType:r.type,pubkeys:r.pubkeys,signatures:r.signatures,maxSignatures:r.maxSignatures}}if(l){const t=gU.p2wsh({redeem:{output:l}});if(e.prevOutScript){const n=gU.p2wsh({output:e.prevOutScript});if(!t.hash.equals(n.hash))throw new Error("Witness script inconsistent with prevOutScript")}const r=PU(t.redeem.output,n);if(!r.pubkeys)throw new Error(r.type+" not supported as witnessScript ("+mU.toASM(l)+")");e.signatures&&e.signatures.some((e=>void 0!==e))&&(r.signatures=e.signatures);const i=l;if(r.type===EU.P2WPKH)throw new Error("P2WSH(P2WPKH) is a consensus failure");return{witnessScript:l,witnessScriptType:r.type,prevOutType:EU.P2WSH,prevOutScript:t.output,hasWitness:!0,signScript:i,signType:r.type,pubkeys:r.pubkeys,signatures:r.signatures,maxSignatures:r.maxSignatures}}if(e.prevOutType&&e.prevOutScript){if(e.prevOutType===EU.P2SH)throw new Error("PrevOutScript is "+e.prevOutType+", requires redeemScript");if(e.prevOutType===EU.P2WSH)throw new Error("PrevOutScript is "+e.prevOutType+", requires witnessScript");if(!e.prevOutScript)throw new Error("PrevOutScript is missing");const t=PU(e.prevOutScript,n);if(!t.pubkeys)throw new Error(t.type+" not supported ("+mU.toASM(e.prevOutScript)+")");e.signatures&&e.signatures.some((e=>void 0!==e))&&(t.signatures=e.signatures);let l=e.prevOutScript;return t.type===EU.P2WPKH&&(l=gU.p2pkh({pubkey:t.pubkeys[0]}).output),{prevOutType:t.type,prevOutScript:e.prevOutScript,hasWitness:t.type===EU.P2WPKH,signScript:l,signType:t.type,pubkeys:t.pubkeys,signatures:t.signatures,maxSignatures:t.maxSignatures}}const r=gU.p2pkh({pubkey:n}).output;return{prevOutType:EU.P2PKH,prevOutScript:r,hasWitness:!1,signScript:r,signType:EU.P2PKH,pubkeys:[n],signatures:[void 0]}}(f,d,u,a);Object.assign(f,e)}if(!TU(f))throw Error(f.prevOutType+" not supported")}let p;p=f.hasWitness?l.hashForWitnessV0(h,f.signScript,f.value,o):l.hashForSignature(h,f.signScript,o);return{input:f,ourPubKey:d,keyPair:i,signatureHash:p,hashType:o,useLowR:!!c}}(this.network,this.__INPUTS,this.__needsOutputs.bind(this),this.__TX,e,n,t,l,r,i,this.__USE_LOW_R))}__addInputUnsafe(e,n,t){if(bU.Transaction.isCoinbaseHash(e))throw new Error("coinbase inputs not supported");const l=e.toString("hex")+":"+n;if(void 0!==this.__PREV_TX_SET[l])throw new Error("Duplicate TxOut: "+l);let r={};if(void 0!==t.script&&(r=IU(t.script,t.witness||[])),void 0!==t.value&&(r.value=t.value),!r.prevOutScript&&t.prevOutScript){let e;if(!r.pubkeys&&!r.signatures){const n=PU(t.prevOutScript);n.pubkeys&&(r.pubkeys=n.pubkeys,r.signatures=n.signatures),e=n.type}r.prevOutScript=t.prevOutScript,r.prevOutType=e||fU.output(t.prevOutScript)}const i=this.__TX.addInput(e,n,t.sequence,t.scriptSig);return this.__INPUTS[i]=r,this.__PREV_TX_SET[l]=!0,i}__build(e){if(!e){if(!this.__TX.ins.length)throw new Error("Transaction has no inputs");if(!this.__TX.outs.length)throw new Error("Transaction has no outputs")}const n=this.__TX.clone();if(this.__INPUTS.forEach(((t,l)=>{if(!t.prevOutType&&!e)throw new Error("Transaction is not complete");const r=AU(t.prevOutType,t,e);if(r)n.setInputScript(l,r.input),n.setWitness(l,r.witness);else{if(!e&&t.prevOutType===EU.NONSTANDARD)throw new Error("Unknown input type");if(!e)throw new Error("Not enough information")}})),!e&&this.__overMaximumFees(n.virtualSize()))throw new Error("Transaction has absurd fees");return n}__canModifyInputs(){return this.__INPUTS.every((e=>!e.signatures||e.signatures.every((e=>{if(!e)return!0;return 0!=(OU(e)&bU.Transaction.SIGHASH_ANYONECANPAY)}))))}__needsOutputs(e){return e===bU.Transaction.SIGHASH_ALL?0===this.__TX.outs.length:0===this.__TX.outs.length&&this.__INPUTS.some((e=>!!e.signatures&&e.signatures.some((e=>{if(!e)return!1;return!(OU(e)&bU.Transaction.SIGHASH_NONE)}))))}__canModifyOutputs(){const e=this.__TX.ins.length,n=this.__TX.outs.length;return this.__INPUTS.every((t=>void 0===t.signatures||t.signatures.every((t=>{if(!t)return!0;const l=31&OU(t);return l===bU.Transaction.SIGHASH_NONE||l===bU.Transaction.SIGHASH_SINGLE&&e<=n}))))}__overMaximumFees(e){const n=this.__INPUTS.reduce(((e,n)=>e+(n.value>>>0)),0),t=this.__TX.outs.reduce(((e,n)=>e+n.value),0);return(n-t)/e>this.maximumFeeRate}}function IU(e,n,t,l){if(0===e.length&&0===n.length)return{};if(!t){let l=fU.input(e,!0),r=fU.witness(n,!0);l===EU.NONSTANDARD&&(l=void 0),r===EU.NONSTANDARD&&(r=void 0),t=l||r}switch(t){case EU.P2WPKH:{const{output:e,pubkey:t,signature:l}=gU.p2wpkh({witness:n});return{prevOutScript:e,prevOutType:EU.P2WPKH,pubkeys:[t],signatures:[l]}}case EU.P2PKH:{const{output:n,pubkey:t,signature:l}=gU.p2pkh({input:e});return{prevOutScript:n,prevOutType:EU.P2PKH,pubkeys:[t],signatures:[l]}}case EU.P2PK:{const{signature:n}=gU.p2pk({input:e});return{prevOutType:EU.P2PK,pubkeys:[void 0],signatures:[n]}}case EU.P2MS:{const{m:n,pubkeys:t,signatures:r}=gU.p2ms({input:e,output:l},{allowIncomplete:!0});return{prevOutType:EU.P2MS,pubkeys:t,signatures:r,maxSignatures:n}}}if(t===EU.P2SH){const{output:t,redeem:l}=gU.p2sh({input:e,witness:n}),r=fU.output(l.output),i=IU(l.input,l.witness,r,l.output);return i.prevOutType?{prevOutScript:t,prevOutType:EU.P2SH,redeemScript:l.output,redeemScriptType:i.prevOutType,witnessScript:i.witnessScript,witnessScriptType:i.witnessScriptType,pubkeys:i.pubkeys,signatures:i.signatures}:{}}if(t===EU.P2WSH){const{output:t,redeem:l}=gU.p2wsh({input:e,witness:n}),r=fU.output(l.output);let i;return i=r===EU.P2WPKH?IU(l.input,l.witness,r):IU(mU.compile(l.witness),[],r,l.output),i.prevOutType?{prevOutScript:t,prevOutType:EU.P2WSH,witnessScript:l.output,witnessScriptType:i.prevOutType,pubkeys:i.pubkeys,signatures:i.signatures}:{}}return{prevOutType:EU.NONSTANDARD,prevOutScript:e}}function PU(e,n){_U(wU.Buffer,e);const t=fU.output(e);switch(t){case EU.P2PKH:{if(!n)return{type:t};const l=gU.p2pkh({output:e}).hash,r=dU.hash160(n);return l.equals(r)?{type:t,pubkeys:[n],signatures:[void 0]}:{type:t}}case EU.P2WPKH:{if(!n)return{type:t};const l=gU.p2wpkh({output:e}).hash,r=dU.hash160(n);return l.equals(r)?{type:t,pubkeys:[n],signatures:[void 0]}:{type:t}}case EU.P2PK:return{type:t,pubkeys:[gU.p2pk({output:e}).pubkey],signatures:[void 0]};case EU.P2MS:{const n=gU.p2ms({output:e});return{type:t,pubkeys:n.pubkeys,signatures:n.pubkeys.map((()=>{})),maxSignatures:n.m}}}return{type:t}}function AU(e,n,t){const l=n.pubkeys||[];let r=n.signatures||[];switch(e){case EU.P2PKH:if(0===l.length)break;if(0===r.length)break;return gU.p2pkh({pubkey:l[0],signature:r[0]});case EU.P2WPKH:if(0===l.length)break;if(0===r.length)break;return gU.p2wpkh({pubkey:l[0],signature:r[0]});case EU.P2PK:if(0===l.length)break;if(0===r.length)break;return gU.p2pk({signature:r[0]});case EU.P2MS:{const e=n.maxSignatures;r=t?r.map((e=>e||vU.OPS.OP_0)):r.filter((e=>e));const i=!t||e===r.length;return gU.p2ms({m:e,pubkeys:l,signatures:r},{allowIncomplete:t,validate:i})}case EU.P2SH:{const e=AU(n.redeemScriptType,n,t);if(!e)return;return gU.p2sh({redeem:{output:e.output||n.redeemScript,input:e.input,witness:e.witness}})}case EU.P2WSH:{const e=AU(n.witnessScriptType,n,t);if(!e)return;return gU.p2wsh({redeem:{output:n.witnessScript,input:e.input,witness:e.witness}})}}}function TU(e){return void 0!==e.signScript&&void 0!==e.signType&&void 0!==e.pubkeys&&void 0!==e.signatures&&e.signatures.length===e.pubkeys.length&&e.pubkeys.length>0&&(!1===e.hasWitness||void 0!==e.value)}function OU(e){return e.readUInt8(e.length-1)}bL.TransactionBuilder=kU,Object.defineProperty(wE,"__esModule",{value:!0});const MU=_E;wE.bip32=MU;const RU=xT;wE.address=RU;const NU=wO;wE.crypto=NU;const CU=RM;wE.ECPair=CU;const LU=kT;var jU=wE.networks=LU;const UU=IT;var DU=wE.payments=UU;const BU=AT;wE.script=BU;var KU=GM;wE.Block=KU.Block;var FU=RR;wE.Psbt=FU.Psbt;var VU=AT;wE.opcodes=VU.OPS;var HU=iR;wE.Transaction=HU.Transaction;var qU=bL;wE.TransactionBuilder=qU.TransactionBuilder;var zU={exports:{}};function $U(e,n){const t=bE(e.publicKeyJwk);let l="";switch(n.code){case Ll.Bitcoin:case Ll.Mocknet:case Ll.Testnet:l=function(e,n){return DU.p2pkh({pubkey:e,network:jU[n.code]}).address}(t,n);break;case Ll.Ethmain:case Ll.Ethropst:case Ll.Ethrinkeby:l=function(e,n){const t=e.toString("hex"),l=new Hm.ec("secp256k1").keyFromPublic(t,"hex").getPublic().encode("hex").slice(2),r="undefined"==typeof Buffer?S:Buffer;return`0x${zU.exports.keccak256(r.from(l,"hex")).slice(24).toString()}`}(t);break;default:throw new mr("deriveIssuingAddressFromPublicKey",`${ug} - ${Zc.i18n.getText("errors","deriveIssuingAddressFromPublicKey")}`)}return l}function GU(e,n){if(e!==n)throw new mr("compareHashes",cr("errors","ensureHashesEqual"));return!0}function WU(e,n){if(e!==n)throw new mr("checkMerkleRoot",cr("errors","ensureMerkleRootEqual"));return!0}function JU(e,n,t){let l="";const r=function(e,n){let t=null;for(const l in e)Object.prototype.hasOwnProperty.call(e,l)&&l.toLowerCase()===n.toLowerCase()&&(t=l);return e[t]}(e,n),i=Xc(t);if(r?(r.created&&i<=r.created&&(l="invalidIssuingAddressCreationTime"),r.revoked&&i>=r.revoked&&(l="invalidIssuingAddressRevoked"),r.expires&&i>=r.expires&&(l="invalidIssuingAddressExpired")):l="invalidIssuingAddressUnknown",l)throw new mr("checkAuthenticity",cr("errors",l))}function XU(e){let n=e.targetHash;const t=e.merkleRoot;try{const t=e.proof||e.path;if(!!t)for(const e in t){const l=t[e];let r;if(void 0!==l.left)r=eg(`${l.left}${n}`),n=Zy(r);else{if(void 0===l.right)throw new mr("checkReceipt","Trigger catch error.");r=eg(`${n}${l.right}`),n=Zy(r)}}}catch(e){throw new mr("checkReceipt",cr("errors","ensureValidReceipt"))}if(n!==t)throw new mr("checkReceipt",cr("errors","invalidMerkleReceipt"))}function YU(e){if("string"==typeof e&&e.length>0)return e;throw new mr("getTransactionId",cr("errors","isTransactionIdValid"))}!function(e){!function(){var t="input is invalid type",l="object"==typeof window,r=l?window:{};r.JS_SHA3_NO_WINDOW&&(l=!1);var i=!l&&"object"==typeof self;!r.JS_SHA3_NO_NODE_JS&&"object"==typeof si&&si.versions&&si.versions.node?r=n:i&&(r=self);var u=!r.JS_SHA3_NO_COMMON_JS&&e.exports,o=!r.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,s="0123456789abcdef".split(""),a=[4,1024,262144,67108864],c=[0,8,16,24],h=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],f=[224,256,384,512],d=[128,256],p=["hex","buffer","arrayBuffer","array","digest"],y={128:168,256:136};!r.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!o||!r.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var g=function(e,n,t){return function(l){return new M(e,n,e).update(l)[t]()}},m=function(e,n,t){return function(l,r){return new M(e,n,r).update(l)[t]()}},v=function(e,n,t){return function(n,l,r,i){return S["cshake"+e].update(n,l,r,i)[t]()}},b=function(e,n,t){return function(n,l,r,i){return S["kmac"+e].update(n,l,r,i)[t]()}},w=function(e,n,t,l){for(var r=0;r<p.length;++r){var i=p[r];e[i]=n(t,l,i)}return e},_=function(e,n){var t=g(e,n,"hex");return t.create=function(){return new M(e,n,e)},t.update=function(e){return t.create().update(e)},w(t,g,e,n)},E=[{name:"keccak",padding:[1,256,65536,16777216],bits:f,createMethod:_},{name:"sha3",padding:[6,1536,393216,100663296],bits:f,createMethod:_},{name:"shake",padding:[31,7936,2031616,520093696],bits:d,createMethod:function(e,n){var t=m(e,n,"hex");return t.create=function(t){return new M(e,n,t)},t.update=function(e,n){return t.create(n).update(e)},w(t,m,e,n)}},{name:"cshake",padding:a,bits:d,createMethod:function(e,n){var t=y[e],l=v(e,0,"hex");return l.create=function(l,r,i){return r||i?new M(e,n,l).bytepad([r,i],t):S["shake"+e].create(l)},l.update=function(e,n,t,r){return l.create(n,t,r).update(e)},w(l,v,e,n)}},{name:"kmac",padding:a,bits:d,createMethod:function(e,n){var t=y[e],l=b(e,0,"hex");return l.create=function(l,r,i){return new R(e,n,r).bytepad(["KMAC",i],t).bytepad([l],t)},l.update=function(e,n,t,r){return l.create(e,t,r).update(n)},w(l,b,e,n)}}],S={},x=[],k=0;k<E.length;++k)for(var I=E[k],P=I.bits,A=0;A<P.length;++A){var T=I.name+"_"+P[A];if(x.push(T),S[T]=I.createMethod(P[A],I.padding),"sha3"!==I.name){var O=I.name+P[A];x.push(O),S[O]=S[T]}}function M(e,n,t){this.blocks=[],this.s=[],this.padding=n,this.outputBits=t,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=t>>5,this.extraBytes=(31&t)>>3;for(var l=0;l<50;++l)this.s[l]=0}function R(e,n,t){M.call(this,e,n,t)}M.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var n,l=typeof e;if("string"!==l){if("object"!==l)throw new Error(t);if(null===e)throw new Error(t);if(o&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||o&&ArrayBuffer.isView(e)))throw new Error(t);n=!0}for(var r,i,u=this.blocks,s=this.byteCount,a=e.length,h=this.blockCount,f=0,d=this.s;f<a;){if(this.reset)for(this.reset=!1,u[0]=this.block,r=1;r<h+1;++r)u[r]=0;if(n)for(r=this.start;f<a&&r<s;++f)u[r>>2]|=e[f]<<c[3&r++];else for(r=this.start;f<a&&r<s;++f)(i=e.charCodeAt(f))<128?u[r>>2]|=i<<c[3&r++]:i<2048?(u[r>>2]|=(192|i>>6)<<c[3&r++],u[r>>2]|=(128|63&i)<<c[3&r++]):i<55296||i>=57344?(u[r>>2]|=(224|i>>12)<<c[3&r++],u[r>>2]|=(128|i>>6&63)<<c[3&r++],u[r>>2]|=(128|63&i)<<c[3&r++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++f)),u[r>>2]|=(240|i>>18)<<c[3&r++],u[r>>2]|=(128|i>>12&63)<<c[3&r++],u[r>>2]|=(128|i>>6&63)<<c[3&r++],u[r>>2]|=(128|63&i)<<c[3&r++]);if(this.lastByteIndex=r,r>=s){for(this.start=r-s,this.block=u[h],r=0;r<h;++r)d[r]^=u[r];N(d),this.reset=!0}else this.start=r}return this},M.prototype.encode=function(e,n){var t=255&e,l=1,r=[t];for(t=255&(e>>=8);t>0;)r.unshift(t),t=255&(e>>=8),++l;return n?r.push(l):r.unshift(l),this.update(r),r.length},M.prototype.encodeString=function(e){var n,l=typeof e;if("string"!==l){if("object"!==l)throw new Error(t);if(null===e)throw new Error(t);if(o&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||o&&ArrayBuffer.isView(e)))throw new Error(t);n=!0}var r=0,i=e.length;if(n)r=i;else for(var u=0;u<e.length;++u){var s=e.charCodeAt(u);s<128?r+=1:s<2048?r+=2:s<55296||s>=57344?r+=3:(s=65536+((1023&s)<<10|1023&e.charCodeAt(++u)),r+=4)}return r+=this.encode(8*r),this.update(e),r},M.prototype.bytepad=function(e,n){for(var t=this.encode(n),l=0;l<e.length;++l)t+=this.encodeString(e[l]);var r=n-t%n,i=[];return i.length=r,this.update(i),this},M.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,n=this.lastByteIndex,t=this.blockCount,l=this.s;if(e[n>>2]|=this.padding[3&n],this.lastByteIndex===this.byteCount)for(e[0]=e[t],n=1;n<t+1;++n)e[n]=0;for(e[t-1]|=2147483648,n=0;n<t;++n)l[n]^=e[n];N(l)}},M.prototype.toString=M.prototype.hex=function(){this.finalize();for(var e,n=this.blockCount,t=this.s,l=this.outputBlocks,r=this.extraBytes,i=0,u=0,o="";u<l;){for(i=0;i<n&&u<l;++i,++u)e=t[i],o+=s[e>>4&15]+s[15&e]+s[e>>12&15]+s[e>>8&15]+s[e>>20&15]+s[e>>16&15]+s[e>>28&15]+s[e>>24&15];u%n==0&&(N(t),i=0)}return r&&(e=t[i],o+=s[e>>4&15]+s[15&e],r>1&&(o+=s[e>>12&15]+s[e>>8&15]),r>2&&(o+=s[e>>20&15]+s[e>>16&15])),o},M.prototype.arrayBuffer=function(){this.finalize();var e,n=this.blockCount,t=this.s,l=this.outputBlocks,r=this.extraBytes,i=0,u=0,o=this.outputBits>>3;e=r?new ArrayBuffer(l+1<<2):new ArrayBuffer(o);for(var s=new Uint32Array(e);u<l;){for(i=0;i<n&&u<l;++i,++u)s[u]=t[i];u%n==0&&N(t)}return r&&(s[i]=t[i],e=e.slice(0,o)),e},M.prototype.buffer=M.prototype.arrayBuffer,M.prototype.digest=M.prototype.array=function(){this.finalize();for(var e,n,t=this.blockCount,l=this.s,r=this.outputBlocks,i=this.extraBytes,u=0,o=0,s=[];o<r;){for(u=0;u<t&&o<r;++u,++o)e=o<<2,n=l[u],s[e]=255&n,s[e+1]=n>>8&255,s[e+2]=n>>16&255,s[e+3]=n>>24&255;o%t==0&&N(l)}return i&&(e=o<<2,n=l[u],s[e]=255&n,i>1&&(s[e+1]=n>>8&255),i>2&&(s[e+2]=n>>16&255)),s},R.prototype=new M,R.prototype.finalize=function(){return this.encode(this.outputBits,!0),M.prototype.finalize.call(this)};var N=function(e){var n,t,l,r,i,u,o,s,a,c,f,d,p,y,g,m,v,b,w,_,E,S,x,k,I,P,A,T,O,M,R,N,C,L,j,U,D,B,K,F,V,H,q,z,$,G,W,J,X,Y,Q,Z,ee,ne,te,le,re,ie,ue,oe,se,ae,ce;for(l=0;l<48;l+=2)r=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],u=e[2]^e[12]^e[22]^e[32]^e[42],o=e[3]^e[13]^e[23]^e[33]^e[43],s=e[4]^e[14]^e[24]^e[34]^e[44],a=e[5]^e[15]^e[25]^e[35]^e[45],c=e[6]^e[16]^e[26]^e[36]^e[46],f=e[7]^e[17]^e[27]^e[37]^e[47],n=(d=e[8]^e[18]^e[28]^e[38]^e[48])^(u<<1|o>>>31),t=(p=e[9]^e[19]^e[29]^e[39]^e[49])^(o<<1|u>>>31),e[0]^=n,e[1]^=t,e[10]^=n,e[11]^=t,e[20]^=n,e[21]^=t,e[30]^=n,e[31]^=t,e[40]^=n,e[41]^=t,n=r^(s<<1|a>>>31),t=i^(a<<1|s>>>31),e[2]^=n,e[3]^=t,e[12]^=n,e[13]^=t,e[22]^=n,e[23]^=t,e[32]^=n,e[33]^=t,e[42]^=n,e[43]^=t,n=u^(c<<1|f>>>31),t=o^(f<<1|c>>>31),e[4]^=n,e[5]^=t,e[14]^=n,e[15]^=t,e[24]^=n,e[25]^=t,e[34]^=n,e[35]^=t,e[44]^=n,e[45]^=t,n=s^(d<<1|p>>>31),t=a^(p<<1|d>>>31),e[6]^=n,e[7]^=t,e[16]^=n,e[17]^=t,e[26]^=n,e[27]^=t,e[36]^=n,e[37]^=t,e[46]^=n,e[47]^=t,n=c^(r<<1|i>>>31),t=f^(i<<1|r>>>31),e[8]^=n,e[9]^=t,e[18]^=n,e[19]^=t,e[28]^=n,e[29]^=t,e[38]^=n,e[39]^=t,e[48]^=n,e[49]^=t,y=e[0],g=e[1],G=e[11]<<4|e[10]>>>28,W=e[10]<<4|e[11]>>>28,T=e[20]<<3|e[21]>>>29,O=e[21]<<3|e[20]>>>29,oe=e[31]<<9|e[30]>>>23,se=e[30]<<9|e[31]>>>23,H=e[40]<<18|e[41]>>>14,q=e[41]<<18|e[40]>>>14,L=e[2]<<1|e[3]>>>31,j=e[3]<<1|e[2]>>>31,m=e[13]<<12|e[12]>>>20,v=e[12]<<12|e[13]>>>20,J=e[22]<<10|e[23]>>>22,X=e[23]<<10|e[22]>>>22,M=e[33]<<13|e[32]>>>19,R=e[32]<<13|e[33]>>>19,ae=e[42]<<2|e[43]>>>30,ce=e[43]<<2|e[42]>>>30,ne=e[5]<<30|e[4]>>>2,te=e[4]<<30|e[5]>>>2,U=e[14]<<6|e[15]>>>26,D=e[15]<<6|e[14]>>>26,b=e[25]<<11|e[24]>>>21,w=e[24]<<11|e[25]>>>21,Y=e[34]<<15|e[35]>>>17,Q=e[35]<<15|e[34]>>>17,N=e[45]<<29|e[44]>>>3,C=e[44]<<29|e[45]>>>3,k=e[6]<<28|e[7]>>>4,I=e[7]<<28|e[6]>>>4,le=e[17]<<23|e[16]>>>9,re=e[16]<<23|e[17]>>>9,B=e[26]<<25|e[27]>>>7,K=e[27]<<25|e[26]>>>7,_=e[36]<<21|e[37]>>>11,E=e[37]<<21|e[36]>>>11,Z=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,z=e[8]<<27|e[9]>>>5,$=e[9]<<27|e[8]>>>5,P=e[18]<<20|e[19]>>>12,A=e[19]<<20|e[18]>>>12,ie=e[29]<<7|e[28]>>>25,ue=e[28]<<7|e[29]>>>25,F=e[38]<<8|e[39]>>>24,V=e[39]<<8|e[38]>>>24,S=e[48]<<14|e[49]>>>18,x=e[49]<<14|e[48]>>>18,e[0]=y^~m&b,e[1]=g^~v&w,e[10]=k^~P&T,e[11]=I^~A&O,e[20]=L^~U&B,e[21]=j^~D&K,e[30]=z^~G&J,e[31]=$^~W&X,e[40]=ne^~le&ie,e[41]=te^~re&ue,e[2]=m^~b&_,e[3]=v^~w&E,e[12]=P^~T&M,e[13]=A^~O&R,e[22]=U^~B&F,e[23]=D^~K&V,e[32]=G^~J&Y,e[33]=W^~X&Q,e[42]=le^~ie&oe,e[43]=re^~ue&se,e[4]=b^~_&S,e[5]=w^~E&x,e[14]=T^~M&N,e[15]=O^~R&C,e[24]=B^~F&H,e[25]=K^~V&q,e[34]=J^~Y&Z,e[35]=X^~Q&ee,e[44]=ie^~oe&ae,e[45]=ue^~se&ce,e[6]=_^~S&y,e[7]=E^~x&g,e[16]=M^~N&k,e[17]=R^~C&I,e[26]=F^~H&L,e[27]=V^~q&j,e[36]=Y^~Z&z,e[37]=Q^~ee&$,e[46]=oe^~ae&ne,e[47]=se^~ce&te,e[8]=S^~y&m,e[9]=x^~g&v,e[18]=N^~k&P,e[19]=C^~I&A,e[28]=H^~L&U,e[29]=q^~j&D,e[38]=Z^~z&G,e[39]=ee^~$&W,e[48]=ae^~ne&le,e[49]=ce^~te&re,e[0]^=h[l],e[1]^=h[l+1]};if(u)e.exports=S;else for(k=0;k<x.length;++k)r[x[k]]=S[x[k]]}()}(zU);var QU={type:"object",required:["merkleRoot","targetHash","anchors"],properties:{merkleRoot:{type:"string",minLength:64,maxLength:64},targetHash:{type:"string",minLength:64,maxLength:64},anchors:{type:"array",minLength:1,items:{type:"string"}}}},ZU={exports:{}};
/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
!function(e,n){!function(e){function n(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];if(n.length>1){n[0]=n[0].slice(0,-1);for(var l=n.length-1,r=1;r<l;++r)n[r]=n[r].slice(1,-1);return n[l]=n[l].slice(1),n.join("")}return n[0]}function t(e){return"(?:"+e+")"}function l(e){return void 0===e?"undefined":null===e?"null":Object.prototype.toString.call(e).split(" ").pop().split("]").shift().toLowerCase()}function r(e){return e.toUpperCase()}function i(e){return null!=e?e instanceof Array?e:"number"!=typeof e.length||e.split||e.setInterval||e.call?[e]:Array.prototype.slice.call(e):[]}function u(e,n){var t=e;if(n)for(var l in n)t[l]=n[l];return t}function o(e){var l="[A-Za-z]",r="[0-9]",i=n(r,"[A-Fa-f]"),u=t(t("%[EFef]"+i+"%"+i+i+"%"+i+i)+"|"+t("%[89A-Fa-f]"+i+"%"+i+i)+"|"+t("%"+i+i)),o="[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",s=n("[\\:\\/\\?\\#\\[\\]\\@]",o),a=e?"[\\uE000-\\uF8FF]":"[]",c=n(l,r,"[\\-\\.\\_\\~]",e?"[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]":"[]");t(l+n(l,r,"[\\+\\-\\.]")+"*"),t(t(u+"|"+n(c,o,"[\\:]"))+"*");var h=t(t("25[0-5]")+"|"+t("2[0-4]"+r)+"|"+t("1"+r+r)+"|"+t("0?[1-9]"+r)+"|0?0?"+r),f=t(h+"\\."+h+"\\."+h+"\\."+h),d=t(i+"{1,4}"),p=t(t(d+"\\:"+d)+"|"+f),y=t(t(d+"\\:")+"{6}"+p),g=t("\\:\\:"+t(d+"\\:")+"{5}"+p),m=t(t(d)+"?\\:\\:"+t(d+"\\:")+"{4}"+p),v=t(t(t(d+"\\:")+"{0,1}"+d)+"?\\:\\:"+t(d+"\\:")+"{3}"+p),b=t(t(t(d+"\\:")+"{0,2}"+d)+"?\\:\\:"+t(d+"\\:")+"{2}"+p),w=t(t(t(d+"\\:")+"{0,3}"+d)+"?\\:\\:"+d+"\\:"+p),_=t(t(t(d+"\\:")+"{0,4}"+d)+"?\\:\\:"+p),E=t(t(t(d+"\\:")+"{0,5}"+d)+"?\\:\\:"+d),S=t(t(t(d+"\\:")+"{0,6}"+d)+"?\\:\\:"),x=t([y,g,m,v,b,w,_,E,S].join("|")),k=t(t(c+"|"+u)+"+");t("[vV]"+i+"+\\."+n(c,o,"[\\:]")+"+"),t(t(u+"|"+n(c,o))+"*");var I=t(u+"|"+n(c,o,"[\\:\\@]"));return t(t(u+"|"+n(c,o,"[\\@]"))+"+"),t(t(I+"|"+n("[\\/\\?]",a))+"*"),{NOT_SCHEME:new RegExp(n("[^]",l,r,"[\\+\\-\\.]"),"g"),NOT_USERINFO:new RegExp(n("[^\\%\\:]",c,o),"g"),NOT_HOST:new RegExp(n("[^\\%\\[\\]\\:]",c,o),"g"),NOT_PATH:new RegExp(n("[^\\%\\/\\:\\@]",c,o),"g"),NOT_PATH_NOSCHEME:new RegExp(n("[^\\%\\/\\@]",c,o),"g"),NOT_QUERY:new RegExp(n("[^\\%]",c,o,"[\\:\\@\\/\\?]",a),"g"),NOT_FRAGMENT:new RegExp(n("[^\\%]",c,o,"[\\:\\@\\/\\?]"),"g"),ESCAPE:new RegExp(n("[^]",c,o),"g"),UNRESERVED:new RegExp(c,"g"),OTHER_CHARS:new RegExp(n("[^\\%]",c,s),"g"),PCT_ENCODED:new RegExp(u,"g"),IPV4ADDRESS:new RegExp("^("+f+")$"),IPV6ADDRESS:new RegExp("^\\[?("+x+")"+t(t("\\%25|\\%(?!"+i+"{2})")+"("+k+")")+"?\\]?$")}}var s=o(!1),a=o(!0),c=function(){function e(e,n){var t=[],l=!0,r=!1,i=void 0;try{for(var u,o=e[Symbol.iterator]();!(l=(u=o.next()).done)&&(t.push(u.value),!n||t.length!==n);l=!0);}catch(e){r=!0,i=e}finally{try{!l&&o.return&&o.return()}finally{if(r)throw i}}return t}return function(n,t){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return e(n,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),h=function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)},f=2147483647,d=36,p=1,y=26,g=38,m=700,v=72,b=128,w="-",_=/^xn--/,E=/[^\0-\x7E]/,S=/[\x2E\u3002\uFF0E\uFF61]/g,x={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},k=d-p,I=Math.floor,P=String.fromCharCode;function A(e){throw new RangeError(x[e])}function T(e,n){for(var t=[],l=e.length;l--;)t[l]=n(e[l]);return t}function O(e,n){var t=e.split("@"),l="";return t.length>1&&(l=t[0]+"@",e=t[1]),l+T((e=e.replace(S,".")).split("."),n).join(".")}function M(e){for(var n=[],t=0,l=e.length;t<l;){var r=e.charCodeAt(t++);if(r>=55296&&r<=56319&&t<l){var i=e.charCodeAt(t++);56320==(64512&i)?n.push(((1023&r)<<10)+(1023&i)+65536):(n.push(r),t--)}else n.push(r)}return n}var R=function(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:d},N=function(e,n){return e+22+75*(e<26)-((0!=n)<<5)},C=function(e,n,t){var l=0;for(e=t?I(e/m):e>>1,e+=I(e/n);e>k*y>>1;l+=d)e=I(e/k);return I(l+(k+1)*e/(e+g))},L=function(e){var n=[],t=e.length,l=0,r=b,i=v,u=e.lastIndexOf(w);u<0&&(u=0);for(var o=0;o<u;++o)e.charCodeAt(o)>=128&&A("not-basic"),n.push(e.charCodeAt(o));for(var s=u>0?u+1:0;s<t;){for(var a=l,c=1,h=d;;h+=d){s>=t&&A("invalid-input");var g=R(e.charCodeAt(s++));(g>=d||g>I((f-l)/c))&&A("overflow"),l+=g*c;var m=h<=i?p:h>=i+y?y:h-i;if(g<m)break;var _=d-m;c>I(f/_)&&A("overflow"),c*=_}var E=n.length+1;i=C(l-a,E,0==a),I(l/E)>f-r&&A("overflow"),r+=I(l/E),l%=E,n.splice(l++,0,r)}return String.fromCodePoint.apply(String,n)},j=function(e){var n=[],t=(e=M(e)).length,l=b,r=0,i=v,u=!0,o=!1,s=void 0;try{for(var a,c=e[Symbol.iterator]();!(u=(a=c.next()).done);u=!0){var h=a.value;h<128&&n.push(P(h))}}catch(e){o=!0,s=e}finally{try{!u&&c.return&&c.return()}finally{if(o)throw s}}var g=n.length,m=g;for(g&&n.push(w);m<t;){var _=f,E=!0,S=!1,x=void 0;try{for(var k,T=e[Symbol.iterator]();!(E=(k=T.next()).done);E=!0){var O=k.value;O>=l&&O<_&&(_=O)}}catch(e){S=!0,x=e}finally{try{!E&&T.return&&T.return()}finally{if(S)throw x}}var R=m+1;_-l>I((f-r)/R)&&A("overflow"),r+=(_-l)*R,l=_;var L=!0,j=!1,U=void 0;try{for(var D,B=e[Symbol.iterator]();!(L=(D=B.next()).done);L=!0){var K=D.value;if(K<l&&++r>f&&A("overflow"),K==l){for(var F=r,V=d;;V+=d){var H=V<=i?p:V>=i+y?y:V-i;if(F<H)break;var q=F-H,z=d-H;n.push(P(N(H+q%z,0))),F=I(q/z)}n.push(P(N(F,0))),i=C(r,R,m==g),r=0,++m}}}catch(e){j=!0,U=e}finally{try{!L&&B.return&&B.return()}finally{if(j)throw U}}++r,++l}return n.join("")},U=function(e){return O(e,(function(e){return _.test(e)?L(e.slice(4).toLowerCase()):e}))},D=function(e){return O(e,(function(e){return E.test(e)?"xn--"+j(e):e}))},B={version:"2.1.0",ucs2:{decode:M,encode:function(e){return String.fromCodePoint.apply(String,h(e))}},decode:L,encode:j,toASCII:D,toUnicode:U},K={};function F(e){var n=e.charCodeAt(0);return n<16?"%0"+n.toString(16).toUpperCase():n<128?"%"+n.toString(16).toUpperCase():n<2048?"%"+(n>>6|192).toString(16).toUpperCase()+"%"+(63&n|128).toString(16).toUpperCase():"%"+(n>>12|224).toString(16).toUpperCase()+"%"+(n>>6&63|128).toString(16).toUpperCase()+"%"+(63&n|128).toString(16).toUpperCase()}function V(e){for(var n="",t=0,l=e.length;t<l;){var r=parseInt(e.substr(t+1,2),16);if(r<128)n+=String.fromCharCode(r),t+=3;else if(r>=194&&r<224){if(l-t>=6){var i=parseInt(e.substr(t+4,2),16);n+=String.fromCharCode((31&r)<<6|63&i)}else n+=e.substr(t,6);t+=6}else if(r>=224){if(l-t>=9){var u=parseInt(e.substr(t+4,2),16),o=parseInt(e.substr(t+7,2),16);n+=String.fromCharCode((15&r)<<12|(63&u)<<6|63&o)}else n+=e.substr(t,9);t+=9}else n+=e.substr(t,3),t+=3}return n}function H(e,n){function t(e){var t=V(e);return t.match(n.UNRESERVED)?t:e}return e.scheme&&(e.scheme=String(e.scheme).replace(n.PCT_ENCODED,t).toLowerCase().replace(n.NOT_SCHEME,"")),void 0!==e.userinfo&&(e.userinfo=String(e.userinfo).replace(n.PCT_ENCODED,t).replace(n.NOT_USERINFO,F).replace(n.PCT_ENCODED,r)),void 0!==e.host&&(e.host=String(e.host).replace(n.PCT_ENCODED,t).toLowerCase().replace(n.NOT_HOST,F).replace(n.PCT_ENCODED,r)),void 0!==e.path&&(e.path=String(e.path).replace(n.PCT_ENCODED,t).replace(e.scheme?n.NOT_PATH:n.NOT_PATH_NOSCHEME,F).replace(n.PCT_ENCODED,r)),void 0!==e.query&&(e.query=String(e.query).replace(n.PCT_ENCODED,t).replace(n.NOT_QUERY,F).replace(n.PCT_ENCODED,r)),void 0!==e.fragment&&(e.fragment=String(e.fragment).replace(n.PCT_ENCODED,t).replace(n.NOT_FRAGMENT,F).replace(n.PCT_ENCODED,r)),e}function q(e){return e.replace(/^0*(.*)/,"$1")||"0"}function z(e,n){var t=e.match(n.IPV4ADDRESS)||[],l=c(t,2)[1];return l?l.split(".").map(q).join("."):e}function $(e,n){var t=e.match(n.IPV6ADDRESS)||[],l=c(t,3),r=l[1],i=l[2];if(r){for(var u=r.toLowerCase().split("::").reverse(),o=c(u,2),s=o[0],a=o[1],h=a?a.split(":").map(q):[],f=s.split(":").map(q),d=n.IPV4ADDRESS.test(f[f.length-1]),p=d?7:8,y=f.length-p,g=Array(p),m=0;m<p;++m)g[m]=h[m]||f[y+m]||"";d&&(g[p-1]=z(g[p-1],n));var v=g.reduce((function(e,n,t){if(!n||"0"===n){var l=e[e.length-1];l&&l.index+l.length===t?l.length++:e.push({index:t,length:1})}return e}),[]).sort((function(e,n){return n.length-e.length}))[0],b=void 0;if(v&&v.length>1){var w=g.slice(0,v.index),_=g.slice(v.index+v.length);b=w.join(":")+"::"+_.join(":")}else b=g.join(":");return i&&(b+="%"+i),b}return e}var G=/^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i,W=void 0==="".match(/(){0}/)[1];function J(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t={},l=!1!==n.iri?a:s;"suffix"===n.reference&&(e=(n.scheme?n.scheme+":":"")+"//"+e);var r=e.match(G);if(r){W?(t.scheme=r[1],t.userinfo=r[3],t.host=r[4],t.port=parseInt(r[5],10),t.path=r[6]||"",t.query=r[7],t.fragment=r[8],isNaN(t.port)&&(t.port=r[5])):(t.scheme=r[1]||void 0,t.userinfo=-1!==e.indexOf("@")?r[3]:void 0,t.host=-1!==e.indexOf("//")?r[4]:void 0,t.port=parseInt(r[5],10),t.path=r[6]||"",t.query=-1!==e.indexOf("?")?r[7]:void 0,t.fragment=-1!==e.indexOf("#")?r[8]:void 0,isNaN(t.port)&&(t.port=e.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?r[4]:void 0)),t.host&&(t.host=$(z(t.host,l),l)),void 0!==t.scheme||void 0!==t.userinfo||void 0!==t.host||void 0!==t.port||t.path||void 0!==t.query?void 0===t.scheme?t.reference="relative":void 0===t.fragment?t.reference="absolute":t.reference="uri":t.reference="same-document",n.reference&&"suffix"!==n.reference&&n.reference!==t.reference&&(t.error=t.error||"URI is not a "+n.reference+" reference.");var i=K[(n.scheme||t.scheme||"").toLowerCase()];if(n.unicodeSupport||i&&i.unicodeSupport)H(t,l);else{if(t.host&&(n.domainHost||i&&i.domainHost))try{t.host=B.toASCII(t.host.replace(l.PCT_ENCODED,V).toLowerCase())}catch(e){t.error=t.error||"Host's domain name can not be converted to ASCII via punycode: "+e}H(t,s)}i&&i.parse&&i.parse(t,n)}else t.error=t.error||"URI can not be parsed.";return t}function X(e,n){var t=!1!==n.iri?a:s,l=[];return void 0!==e.userinfo&&(l.push(e.userinfo),l.push("@")),void 0!==e.host&&l.push($(z(String(e.host),t),t).replace(t.IPV6ADDRESS,(function(e,n,t){return"["+n+(t?"%25"+t:"")+"]"}))),"number"!=typeof e.port&&"string"!=typeof e.port||(l.push(":"),l.push(String(e.port))),l.length?l.join(""):void 0}var Y=/^\.\.?\//,Q=/^\/\.(\/|$)/,Z=/^\/\.\.(\/|$)/,ee=/^\/?(?:.|\n)*?(?=\/|$)/;function ne(e){for(var n=[];e.length;)if(e.match(Y))e=e.replace(Y,"");else if(e.match(Q))e=e.replace(Q,"/");else if(e.match(Z))e=e.replace(Z,"/"),n.pop();else if("."===e||".."===e)e="";else{var t=e.match(ee);if(!t)throw new Error("Unexpected dot segment condition");var l=t[0];e=e.slice(l.length),n.push(l)}return n.join("")}function te(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.iri?a:s,l=[],r=K[(n.scheme||e.scheme||"").toLowerCase()];if(r&&r.serialize&&r.serialize(e,n),e.host)if(t.IPV6ADDRESS.test(e.host));else if(n.domainHost||r&&r.domainHost)try{e.host=n.iri?B.toUnicode(e.host):B.toASCII(e.host.replace(t.PCT_ENCODED,V).toLowerCase())}catch(t){e.error=e.error||"Host's domain name can not be converted to "+(n.iri?"Unicode":"ASCII")+" via punycode: "+t}H(e,t),"suffix"!==n.reference&&e.scheme&&(l.push(e.scheme),l.push(":"));var i=X(e,n);if(void 0!==i&&("suffix"!==n.reference&&l.push("//"),l.push(i),e.path&&"/"!==e.path.charAt(0)&&l.push("/")),void 0!==e.path){var u=e.path;n.absolutePath||r&&r.absolutePath||(u=ne(u)),void 0===i&&(u=u.replace(/^\/\//,"/%2F")),l.push(u)}return void 0!==e.query&&(l.push("?"),l.push(e.query)),void 0!==e.fragment&&(l.push("#"),l.push(e.fragment)),l.join("")}function le(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l={};return arguments[3]||(e=J(te(e,t),t),n=J(te(n,t),t)),!(t=t||{}).tolerant&&n.scheme?(l.scheme=n.scheme,l.userinfo=n.userinfo,l.host=n.host,l.port=n.port,l.path=ne(n.path||""),l.query=n.query):(void 0!==n.userinfo||void 0!==n.host||void 0!==n.port?(l.userinfo=n.userinfo,l.host=n.host,l.port=n.port,l.path=ne(n.path||""),l.query=n.query):(n.path?("/"===n.path.charAt(0)?l.path=ne(n.path):(void 0===e.userinfo&&void 0===e.host&&void 0===e.port||e.path?e.path?l.path=e.path.slice(0,e.path.lastIndexOf("/")+1)+n.path:l.path=n.path:l.path="/"+n.path,l.path=ne(l.path)),l.query=n.query):(l.path=e.path,void 0!==n.query?l.query=n.query:l.query=e.query),l.userinfo=e.userinfo,l.host=e.host,l.port=e.port),l.scheme=e.scheme),l.fragment=n.fragment,l}function re(e,n,t){var l=u({scheme:"null"},t);return te(le(J(e,l),J(n,l),l,!0),l)}function ie(e,n){return"string"==typeof e?e=te(J(e,n),n):"object"===l(e)&&(e=J(te(e,n),n)),e}function ue(e,n,t){return"string"==typeof e?e=te(J(e,t),t):"object"===l(e)&&(e=te(e,t)),"string"==typeof n?n=te(J(n,t),t):"object"===l(n)&&(n=te(n,t)),e===n}function oe(e,n){return e&&e.toString().replace(n&&n.iri?a.ESCAPE:s.ESCAPE,F)}function se(e,n){return e&&e.toString().replace(n&&n.iri?a.PCT_ENCODED:s.PCT_ENCODED,V)}var ae={scheme:"http",domainHost:!0,parse:function(e,n){return e.host||(e.error=e.error||"HTTP URIs must have a host."),e},serialize:function(e,n){var t="https"===String(e.scheme).toLowerCase();return e.port!==(t?443:80)&&""!==e.port||(e.port=void 0),e.path||(e.path="/"),e}},ce={scheme:"https",domainHost:ae.domainHost,parse:ae.parse,serialize:ae.serialize};function he(e){return"boolean"==typeof e.secure?e.secure:"wss"===String(e.scheme).toLowerCase()}var fe={scheme:"ws",domainHost:!0,parse:function(e,n){var t=e;return t.secure=he(t),t.resourceName=(t.path||"/")+(t.query?"?"+t.query:""),t.path=void 0,t.query=void 0,t},serialize:function(e,n){if(e.port!==(he(e)?443:80)&&""!==e.port||(e.port=void 0),"boolean"==typeof e.secure&&(e.scheme=e.secure?"wss":"ws",e.secure=void 0),e.resourceName){var t=e.resourceName.split("?"),l=c(t,2),r=l[0],i=l[1];e.path=r&&"/"!==r?r:void 0,e.query=i,e.resourceName=void 0}return e.fragment=void 0,e}},de={scheme:"wss",domainHost:fe.domainHost,parse:fe.parse,serialize:fe.serialize},pe={},ye="[A-Za-z0-9\\-\\.\\_\\~\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]",ge="[0-9A-Fa-f]",me=t(t("%[EFef]"+ge+"%"+ge+ge+"%"+ge+ge)+"|"+t("%[89A-Fa-f]"+ge+"%"+ge+ge)+"|"+t("%"+ge+ge)),ve="[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]",be=n("[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]",'[\\"\\\\]'),we="[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]",_e=new RegExp(ye,"g"),Ee=new RegExp(me,"g"),Se=new RegExp(n("[^]",ve,"[\\.]",'[\\"]',be),"g"),xe=new RegExp(n("[^]",ye,we),"g"),ke=xe;function Ie(e){var n=V(e);return n.match(_e)?n:e}var Pe={scheme:"mailto",parse:function(e,n){var t=e,l=t.to=t.path?t.path.split(","):[];if(t.path=void 0,t.query){for(var r=!1,i={},u=t.query.split("&"),o=0,s=u.length;o<s;++o){var a=u[o].split("=");switch(a[0]){case"to":for(var c=a[1].split(","),h=0,f=c.length;h<f;++h)l.push(c[h]);break;case"subject":t.subject=se(a[1],n);break;case"body":t.body=se(a[1],n);break;default:r=!0,i[se(a[0],n)]=se(a[1],n)}}r&&(t.headers=i)}t.query=void 0;for(var d=0,p=l.length;d<p;++d){var y=l[d].split("@");if(y[0]=se(y[0]),n.unicodeSupport)y[1]=se(y[1],n).toLowerCase();else try{y[1]=B.toASCII(se(y[1],n).toLowerCase())}catch(e){t.error=t.error||"Email address's domain name can not be converted to ASCII via punycode: "+e}l[d]=y.join("@")}return t},serialize:function(e,n){var t=e,l=i(e.to);if(l){for(var u=0,o=l.length;u<o;++u){var s=String(l[u]),a=s.lastIndexOf("@"),c=s.slice(0,a).replace(Ee,Ie).replace(Ee,r).replace(Se,F),h=s.slice(a+1);try{h=n.iri?B.toUnicode(h):B.toASCII(se(h,n).toLowerCase())}catch(e){t.error=t.error||"Email address's domain name can not be converted to "+(n.iri?"Unicode":"ASCII")+" via punycode: "+e}l[u]=c+"@"+h}t.path=l.join(",")}var f=e.headers=e.headers||{};e.subject&&(f.subject=e.subject),e.body&&(f.body=e.body);var d=[];for(var p in f)f[p]!==pe[p]&&d.push(p.replace(Ee,Ie).replace(Ee,r).replace(xe,F)+"="+f[p].replace(Ee,Ie).replace(Ee,r).replace(ke,F));return d.length&&(t.query=d.join("&")),t}},Ae=/^([^\:]+)\:(.*)/,Te={scheme:"urn",parse:function(e,n){var t=e.path&&e.path.match(Ae),l=e;if(t){var r=n.scheme||l.scheme||"urn",i=t[1].toLowerCase(),u=t[2],o=r+":"+(n.nid||i),s=K[o];l.nid=i,l.nss=u,l.path=void 0,s&&(l=s.parse(l,n))}else l.error=l.error||"URN can not be parsed.";return l},serialize:function(e,n){var t=n.scheme||e.scheme||"urn",l=e.nid,r=t+":"+(n.nid||l),i=K[r];i&&(e=i.serialize(e,n));var u=e,o=e.nss;return u.path=(l||n.nid)+":"+o,u}},Oe=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/,Me={scheme:"urn:uuid",parse:function(e,n){var t=e;return t.uuid=t.nss,t.nss=void 0,n.tolerant||t.uuid&&t.uuid.match(Oe)||(t.error=t.error||"UUID is not valid."),t},serialize:function(e,n){var t=e;return t.nss=(e.uuid||"").toLowerCase(),t}};K[ae.scheme]=ae,K[ce.scheme]=ce,K[fe.scheme]=fe,K[de.scheme]=de,K[Pe.scheme]=Pe,K[Te.scheme]=Te,K[Me.scheme]=Me,e.SCHEMES=K,e.pctEncChar=F,e.pctDecChars=V,e.parse=J,e.removeDotSegments=ne,e.serialize=te,e.resolveComponents=le,e.resolve=re,e.normalize=ie,e.equal=ue,e.escapeComponent=oe,e.unescapeComponent=se,Object.defineProperty(e,"__esModule",{value:!0})}(n)}(0,ZU.exports);var eD=function e(n,t){if(n===t)return!0;if(n&&t&&"object"==typeof n&&"object"==typeof t){if(n.constructor!==t.constructor)return!1;var l,r,i;if(Array.isArray(n)){if((l=n.length)!=t.length)return!1;for(r=l;0!=r--;)if(!e(n[r],t[r]))return!1;return!0}if(n.constructor===RegExp)return n.source===t.source&&n.flags===t.flags;if(n.valueOf!==Object.prototype.valueOf)return n.valueOf()===t.valueOf();if(n.toString!==Object.prototype.toString)return n.toString()===t.toString();if((l=(i=Object.keys(n)).length)!==Object.keys(t).length)return!1;for(r=l;0!=r--;)if(!Object.prototype.hasOwnProperty.call(t,i[r]))return!1;for(r=l;0!=r--;){var u=i[r];if(!e(n[u],t[u]))return!1}return!0}return n!=n&&t!=t},nD={copy:function(e,n){for(var t in n=n||{},e)n[t]=e[t];return n},checkDataType:tD,checkDataTypes:function(e,n,t){if(1===e.length)return tD(e[0],n,t,!0);var l="",r=rD(e);for(var i in r.array&&r.object&&(l=r.null?"(":"(!"+n+" || ",l+="typeof "+n+' !== "object")',delete r.null,delete r.array,delete r.object),r.number&&delete r.integer,r)l+=(l?" && ":"")+tD(i,n,t,!0);return l},coerceToTypes:function(e,n){if(Array.isArray(n)){for(var t=[],l=0;l<n.length;l++){var r=n[l];(lD[r]||"array"===e&&"array"===r)&&(t[t.length]=r)}if(t.length)return t}else{if(lD[n])return[n];if("array"===e&&"array"===n)return["array"]}},toHash:rD,getProperty:oD,escapeQuotes:sD,equal:eD,ucs2length:function(e){for(var n,t=0,l=e.length,r=0;r<l;)t++,(n=e.charCodeAt(r++))>=55296&&n<=56319&&r<l&&56320==(64512&(n=e.charCodeAt(r)))&&r++;return t},varOccurences:function(e,n){n+="[^0-9]";var t=e.match(new RegExp(n,"g"));return t?t.length:0},varReplace:function(e,n,t){return n+="([^0-9])",t=t.replace(/\$/g,"$$$$"),e.replace(new RegExp(n,"g"),t+"$1")},schemaHasRules:function(e,n){if("boolean"==typeof e)return!e;for(var t in e)if(n[t])return!0},schemaHasRulesExcept:function(e,n,t){if("boolean"==typeof e)return!e&&"not"!=t;for(var l in e)if(l!=t&&n[l])return!0},schemaUnknownRules:function(e,n){if("boolean"==typeof e)return;for(var t in e)if(!n[t])return t},toQuotedString:aD,getPathExpr:function(e,n,t,l){return fD(e,t?"'/' + "+n+(l?"":".replace(/~/g, '~0').replace(/\\//g, '~1')"):l?"'[' + "+n+" + ']'":"'[\\'' + "+n+" + '\\']'")},getPath:function(e,n,t){var l=aD(t?"/"+dD(n):oD(n));return fD(e,l)},getData:function(e,n,t){var l,r,i,u;if(""===e)return"rootData";if("/"==e[0]){if(!cD.test(e))throw new Error("Invalid JSON-pointer: "+e);r=e,i="rootData"}else{if(!(u=e.match(hD)))throw new Error("Invalid JSON-pointer: "+e);if(l=+u[1],"#"==(r=u[2])){if(l>=n)throw new Error("Cannot access property/index "+l+" levels up, current level is "+n);return t[n-l]}if(l>n)throw new Error("Cannot access data "+l+" levels up, current level is "+n);if(i="data"+(n-l||""),!r)return i}for(var o=i,s=r.split("/"),a=0;a<s.length;a++){var c=s[a];c&&(i+=oD(pD(c)),o+=" && "+i)}return o},unescapeFragment:function(e){return pD(decodeURIComponent(e))},unescapeJsonPointer:pD,escapeFragment:function(e){return encodeURIComponent(dD(e))},escapeJsonPointer:dD};function tD(e,n,t,l){var r=l?" !== ":" === ",i=l?" || ":" && ",u=l?"!":"",o=l?"":"!";switch(e){case"null":return n+r+"null";case"array":return u+"Array.isArray("+n+")";case"object":return"("+u+n+i+"typeof "+n+r+'"object"'+i+o+"Array.isArray("+n+"))";case"integer":return"(typeof "+n+r+'"number"'+i+o+"("+n+" % 1)"+i+n+r+n+(t?i+u+"isFinite("+n+")":"")+")";case"number":return"(typeof "+n+r+'"'+e+'"'+(t?i+u+"isFinite("+n+")":"")+")";default:return"typeof "+n+r+'"'+e+'"'}}var lD=rD(["string","number","integer","boolean","null"]);function rD(e){for(var n={},t=0;t<e.length;t++)n[e[t]]=!0;return n}var iD=/^[a-z$_][a-z$_0-9]*$/i,uD=/'|\\/g;function oD(e){return"number"==typeof e?"["+e+"]":iD.test(e)?"."+e:"['"+sD(e)+"']"}function sD(e){return e.replace(uD,"\\$&").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\f/g,"\\f").replace(/\t/g,"\\t")}function aD(e){return"'"+sD(e)+"'"}var cD=/^\/(?:[^~]|~0|~1)*$/,hD=/^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;function fD(e,n){return'""'==e?n:(e+" + "+n).replace(/([^\\])' \+ '/g,"$1")}function dD(e){return e.replace(/~/g,"~0").replace(/\//g,"~1")}function pD(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")}var yD=nD,gD=function(e){yD.copy(e,this)};var mD={exports:{}},vD=mD.exports=function(e,n,t){"function"==typeof n&&(t=n,n={}),bD(n,"function"==typeof(t=n.cb||t)?t:t.pre||function(){},t.post||function(){},e,"",e)};function bD(e,n,t,l,r,i,u,o,s,a){if(l&&"object"==typeof l&&!Array.isArray(l)){for(var c in n(l,r,i,u,o,s,a),l){var h=l[c];if(Array.isArray(h)){if(c in vD.arrayKeywords)for(var f=0;f<h.length;f++)bD(e,n,t,h[f],r+"/"+c+"/"+f,i,r,c,l,f)}else if(c in vD.propsKeywords){if(h&&"object"==typeof h)for(var d in h)bD(e,n,t,h[d],r+"/"+c+"/"+d.replace(/~/g,"~0").replace(/\//g,"~1"),i,r,c,l,d)}else(c in vD.keywords||e.allKeys&&!(c in vD.skipKeywords))&&bD(e,n,t,h,r+"/"+c,i,r,c,l)}t(l,r,i,u,o,s,a)}}vD.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0},vD.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},vD.propsKeywords={definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},vD.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0};var wD=ZU.exports,_D=eD,ED=nD,SD=gD,xD=mD.exports,kD=ID;function ID(e,n,t){var l=this._refs[t];if("string"==typeof l){if(!this._refs[l])return ID.call(this,e,n,l);l=this._refs[l]}if((l=l||this._schemas[t])instanceof SD)return RD(l.schema,this._opts.inlineRefs)?l.schema:l.validate||this._compile(l);var r,i,u,o=PD.call(this,n,t);return o&&(r=o.schema,n=o.root,u=o.baseId),r instanceof SD?i=r.validate||e.call(this,r.schema,n,void 0,u):void 0!==r&&(i=RD(r,this._opts.inlineRefs)?r:e.call(this,r,n,void 0,u)),i}function PD(e,n){var t=wD.parse(n),l=jD(t),r=LD(this._getId(e.schema));if(0===Object.keys(e.schema).length||l!==r){var i=DD(l),u=this._refs[i];if("string"==typeof u)return AD.call(this,e,u,t);if(u instanceof SD)u.validate||this._compile(u),e=u;else{if(!((u=this._schemas[i])instanceof SD))return;if(u.validate||this._compile(u),i==DD(n))return{schema:u,root:e,baseId:r};e=u}if(!e.schema)return;r=LD(this._getId(e.schema))}return OD.call(this,t,r,e.schema,e)}function AD(e,n,t){var l=PD.call(this,e,n);if(l){var r=l.schema,i=l.baseId;e=l.root;var u=this._getId(r);return u&&(i=BD(i,u)),OD.call(this,t,i,r,e)}}ID.normalizeId=DD,ID.fullPath=LD,ID.url=BD,ID.ids=function(e){var n=DD(this._getId(e)),t={"":n},l={"":LD(n,!1)},r={},i=this;return xD(e,{allKeys:!0},(function(e,n,u,o,s,a,c){if(""!==n){var h=i._getId(e),f=t[o],d=l[o]+"/"+s;if(void 0!==c&&(d+="/"+("number"==typeof c?c:ED.escapeFragment(c))),"string"==typeof h){h=f=DD(f?wD.resolve(f,h):h);var p=i._refs[h];if("string"==typeof p&&(p=i._refs[p]),p&&p.schema){if(!_D(e,p.schema))throw new Error('id "'+h+'" resolves to more than one schema')}else if(h!=DD(d))if("#"==h[0]){if(r[h]&&!_D(e,r[h]))throw new Error('id "'+h+'" resolves to more than one schema');r[h]=e}else i._refs[h]=d}t[n]=f,l[n]=d}})),r},ID.inlineRef=RD,ID.schema=PD;var TD=ED.toHash(["properties","patternProperties","enum","dependencies","definitions"]);function OD(e,n,t,l){if(e.fragment=e.fragment||"","/"==e.fragment.slice(0,1)){for(var r=e.fragment.split("/"),i=1;i<r.length;i++){var u=r[i];if(u){if(void 0===(t=t[u=ED.unescapeFragment(u)]))break;var o;if(!TD[u]&&((o=this._getId(t))&&(n=BD(n,o)),t.$ref)){var s=BD(n,t.$ref),a=PD.call(this,l,s);a&&(t=a.schema,l=a.root,n=a.baseId)}}}return void 0!==t&&t!==l.schema?{schema:t,root:l,baseId:n}:void 0}}var MD=ED.toHash(["type","format","pattern","maxLength","minLength","maxProperties","minProperties","maxItems","minItems","maximum","minimum","uniqueItems","multipleOf","required","enum"]);function RD(e,n){return!1!==n&&(void 0===n||!0===n?ND(e):n?CD(e)<=n:void 0)}function ND(e){var n;if(Array.isArray(e)){for(var t=0;t<e.length;t++)if("object"==typeof(n=e[t])&&!ND(n))return!1}else for(var l in e){if("$ref"==l)return!1;if("object"==typeof(n=e[l])&&!ND(n))return!1}return!0}function CD(e){var n,t=0;if(Array.isArray(e)){for(var l=0;l<e.length;l++)if("object"==typeof(n=e[l])&&(t+=CD(n)),t==1/0)return 1/0}else for(var r in e){if("$ref"==r)return 1/0;if(MD[r])t++;else if("object"==typeof(n=e[r])&&(t+=CD(n)+1),t==1/0)return 1/0}return t}function LD(e,n){return!1!==n&&(e=DD(e)),jD(wD.parse(e))}function jD(e){return wD.serialize(e).split("#")[0]+"#"}var UD=/#\/?$/;function DD(e){return e?e.replace(UD,""):""}function BD(e,n){return n=DD(n),wD.resolve(e,n)}var KD=kD,FD={Validation:HD((function(e){this.message="validation failed",this.errors=e,this.ajv=this.validation=!0})),MissingRef:HD(VD)};function VD(e,n,t){this.message=t||VD.message(e,n),this.missingRef=KD.url(e,n),this.missingSchema=KD.normalizeId(KD.fullPath(this.missingRef))}function HD(e){return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}VD.message=function(e,n){return"can't resolve reference "+n+" from id "+e};var qD=function(e,n){n||(n={}),"function"==typeof n&&(n={cmp:n});var t="boolean"==typeof n.cycles&&n.cycles,l=n.cmp&&function(e){return function(n){return function(t,l){var r={key:t,value:n[t]},i={key:l,value:n[l]};return e(r,i)}}}(n.cmp),r=[];return function e(n){if(n&&n.toJSON&&"function"==typeof n.toJSON&&(n=n.toJSON()),void 0!==n){if("number"==typeof n)return isFinite(n)?""+n:"null";if("object"!=typeof n)return JSON.stringify(n);var i,u;if(Array.isArray(n)){for(u="[",i=0;i<n.length;i++)i&&(u+=","),u+=e(n[i])||"null";return u+"]"}if(null===n)return"null";if(-1!==r.indexOf(n)){if(t)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var o=r.push(n)-1,s=Object.keys(n).sort(l&&l(n));for(u="",i=0;i<s.length;i++){var a=s[i],c=e(n[a]);c&&(u&&(u+=","),u+=JSON.stringify(a)+":"+c)}return r.splice(o,1),"{"+u+"}"}}(e)},zD=function(e,n,t){var l="",r=!0===e.schema.$async,i=e.util.schemaHasRulesExcept(e.schema,e.RULES.all,"$ref"),u=e.self._getId(e.schema);if(e.opts.strictKeywords){var o=e.util.schemaUnknownRules(e.schema,e.RULES.keywords);if(o){var s="unknown keyword: "+o;if("log"!==e.opts.strictKeywords)throw new Error(s);e.logger.warn(s)}}if(e.isTop&&(l+=" var validate = ",r&&(e.async=!0,l+="async "),l+="function(data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; ",u&&(e.opts.sourceCode||e.opts.processCode)&&(l+=" /*# sourceURL="+u+" */ ")),"boolean"==typeof e.schema||!i&&!e.schema.$ref){n="false schema";var a=e.level,c=e.dataLevel,h=e.schema[n],f=e.schemaPath+e.util.getProperty(n),d=e.errSchemaPath+"/"+n,p=!e.opts.allErrors,y="data"+(c||""),g="valid"+a;if(!1===e.schema){e.isTop?p=!0:l+=" var "+g+" = false; ",(X=X||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'false schema' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(d)+" , params: {} ",!1!==e.opts.messages&&(l+=" , message: 'boolean schema is false' "),e.opts.verbose&&(l+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+y+" "),l+=" } "):l+=" {} ";var m=l;l=X.pop(),!e.compositeRule&&p?e.async?l+=" throw new ValidationError(["+m+"]); ":l+=" validate.errors = ["+m+"]; return false; ":l+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}else e.isTop?l+=r?" return data; ":" validate.errors = null; return true; ":l+=" var "+g+" = true; ";return e.isTop&&(l+=" }; return validate; "),l}if(e.isTop){var v=e.isTop;a=e.level=0,c=e.dataLevel=0,y="data";if(e.rootId=e.resolve.fullPath(e.self._getId(e.root.schema)),e.baseId=e.baseId||e.rootId,delete e.isTop,e.dataPathArr=[""],void 0!==e.schema.default&&e.opts.useDefaults&&e.opts.strictDefaults){var b="default is ignored in the schema root";if("log"!==e.opts.strictDefaults)throw new Error(b);e.logger.warn(b)}l+=" var vErrors = null; ",l+=" var errors = 0;     ",l+=" if (rootData === undefined) rootData = data; "}else{a=e.level,y="data"+((c=e.dataLevel)||"");if(u&&(e.baseId=e.resolve.url(e.baseId,u)),r&&!e.async)throw new Error("async schema in sync schema");l+=" var errs_"+a+" = errors;"}g="valid"+a,p=!e.opts.allErrors;var w="",_="",E=e.schema.type,S=Array.isArray(E);if(E&&e.opts.nullable&&!0===e.schema.nullable&&(S?-1==E.indexOf("null")&&(E=E.concat("null")):"null"!=E&&(E=[E,"null"],S=!0)),S&&1==E.length&&(E=E[0],S=!1),e.schema.$ref&&i){if("fail"==e.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path "'+e.errSchemaPath+'" (see option extendRefs)');!0!==e.opts.extendRefs&&(i=!1,e.logger.warn('$ref: keywords ignored in schema at path "'+e.errSchemaPath+'"'))}if(e.schema.$comment&&e.opts.$comment&&(l+=" "+e.RULES.all.$comment.code(e,"$comment")),E){if(e.opts.coerceTypes)var x=e.util.coerceToTypes(e.opts.coerceTypes,E);var k=e.RULES.types[E];if(x||S||!0===k||k&&!Y(k)){f=e.schemaPath+".type",d=e.errSchemaPath+"/type",f=e.schemaPath+".type",d=e.errSchemaPath+"/type";var I=S?"checkDataTypes":"checkDataType";if(l+=" if ("+e.util[I](E,y,e.opts.strictNumbers,!0)+") { ",x){var P="dataType"+a,A="coerced"+a;l+=" var "+P+" = typeof "+y+"; var "+A+" = undefined; ","array"==e.opts.coerceTypes&&(l+=" if ("+P+" == 'object' && Array.isArray("+y+") && "+y+".length == 1) { "+y+" = "+y+"[0]; "+P+" = typeof "+y+"; if ("+e.util.checkDataType(e.schema.type,y,e.opts.strictNumbers)+") "+A+" = "+y+"; } "),l+=" if ("+A+" !== undefined) ; ";var T=x;if(T)for(var O,M=-1,R=T.length-1;M<R;)"string"==(O=T[M+=1])?l+=" else if ("+P+" == 'number' || "+P+" == 'boolean') "+A+" = '' + "+y+"; else if ("+y+" === null) "+A+" = ''; ":"number"==O||"integer"==O?(l+=" else if ("+P+" == 'boolean' || "+y+" === null || ("+P+" == 'string' && "+y+" && "+y+" == +"+y+" ","integer"==O&&(l+=" && !("+y+" % 1)"),l+=")) "+A+" = +"+y+"; "):"boolean"==O?l+=" else if ("+y+" === 'false' || "+y+" === 0 || "+y+" === null) "+A+" = false; else if ("+y+" === 'true' || "+y+" === 1) "+A+" = true; ":"null"==O?l+=" else if ("+y+" === '' || "+y+" === 0 || "+y+" === false) "+A+" = null; ":"array"==e.opts.coerceTypes&&"array"==O&&(l+=" else if ("+P+" == 'string' || "+P+" == 'number' || "+P+" == 'boolean' || "+y+" == null) "+A+" = ["+y+"]; ");l+=" else {   ",(X=X||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'type' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(d)+" , params: { type: '",l+=S?""+E.join(","):""+E,l+="' } ",!1!==e.opts.messages&&(l+=" , message: 'should be ",l+=S?""+E.join(","):""+E,l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+y+" "),l+=" } "):l+=" {} ";m=l;l=X.pop(),!e.compositeRule&&p?e.async?l+=" throw new ValidationError(["+m+"]); ":l+=" validate.errors = ["+m+"]; return false; ":l+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } if ("+A+" !== undefined) {  ";var N=c?"data"+(c-1||""):"parentData";l+=" "+y+" = "+A+"; ",c||(l+="if ("+N+" !== undefined)"),l+=" "+N+"["+(c?e.dataPathArr[c]:"parentDataProperty")+"] = "+A+"; } "}else{(X=X||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'type' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(d)+" , params: { type: '",l+=S?""+E.join(","):""+E,l+="' } ",!1!==e.opts.messages&&(l+=" , message: 'should be ",l+=S?""+E.join(","):""+E,l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+y+" "),l+=" } "):l+=" {} ";m=l;l=X.pop(),!e.compositeRule&&p?e.async?l+=" throw new ValidationError(["+m+"]); ":l+=" validate.errors = ["+m+"]; return false; ":l+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}l+=" } "}}if(e.schema.$ref&&!i)l+=" "+e.RULES.all.$ref.code(e,"$ref")+" ",p&&(l+=" } if (errors === ",l+=v?"0":"errs_"+a,l+=") { ",_+="}");else{var C=e.RULES;if(C)for(var L=-1,j=C.length-1;L<j;)if(Y(k=C[L+=1])){if(k.type&&(l+=" if ("+e.util.checkDataType(k.type,y,e.opts.strictNumbers)+") { "),e.opts.useDefaults)if("object"==k.type&&e.schema.properties){h=e.schema.properties;var U=Object.keys(h);if(U)for(var D,B=-1,K=U.length-1;B<K;){if(void 0!==(H=h[D=U[B+=1]]).default){var F=y+e.util.getProperty(D);if(e.compositeRule){if(e.opts.strictDefaults){b="default is ignored for: "+F;if("log"!==e.opts.strictDefaults)throw new Error(b);e.logger.warn(b)}}else l+=" if ("+F+" === undefined ","empty"==e.opts.useDefaults&&(l+=" || "+F+" === null || "+F+" === '' "),l+=" ) "+F+" = ","shared"==e.opts.useDefaults?l+=" "+e.useDefault(H.default)+" ":l+=" "+JSON.stringify(H.default)+" ",l+="; "}}}else if("array"==k.type&&Array.isArray(e.schema.items)){var V=e.schema.items;if(V){M=-1;for(var H,q=V.length-1;M<q;)if(void 0!==(H=V[M+=1]).default){F=y+"["+M+"]";if(e.compositeRule){if(e.opts.strictDefaults){b="default is ignored for: "+F;if("log"!==e.opts.strictDefaults)throw new Error(b);e.logger.warn(b)}}else l+=" if ("+F+" === undefined ","empty"==e.opts.useDefaults&&(l+=" || "+F+" === null || "+F+" === '' "),l+=" ) "+F+" = ","shared"==e.opts.useDefaults?l+=" "+e.useDefault(H.default)+" ":l+=" "+JSON.stringify(H.default)+" ",l+="; "}}}var z=k.rules;if(z)for(var $,G=-1,W=z.length-1;G<W;)if(Q($=z[G+=1])){var J=$.code(e,$.keyword,k.type);J&&(l+=" "+J+" ",p&&(w+="}"))}if(p&&(l+=" "+w+" ",w=""),k.type&&(l+=" } ",E&&E===k.type&&!x)){l+=" else { ";var X;f=e.schemaPath+".type",d=e.errSchemaPath+"/type";(X=X||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'type' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(d)+" , params: { type: '",l+=S?""+E.join(","):""+E,l+="' } ",!1!==e.opts.messages&&(l+=" , message: 'should be ",l+=S?""+E.join(","):""+E,l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+y+" "),l+=" } "):l+=" {} ";m=l;l=X.pop(),!e.compositeRule&&p?e.async?l+=" throw new ValidationError(["+m+"]); ":l+=" validate.errors = ["+m+"]; return false; ":l+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } "}p&&(l+=" if (errors === ",l+=v?"0":"errs_"+a,l+=") { ",_+="}")}}function Y(e){for(var n=e.rules,t=0;t<n.length;t++)if(Q(n[t]))return!0}function Q(n){return void 0!==e.schema[n.keyword]||n.implements&&function(n){for(var t=n.implements,l=0;l<t.length;l++)if(void 0!==e.schema[t[l]])return!0}(n)}return p&&(l+=" "+_+" "),v?(r?(l+=" if (errors === 0) return data;           ",l+=" else throw new ValidationError(vErrors); "):(l+=" validate.errors = vErrors; ",l+=" return errors === 0;       "),l+=" }; return validate;"):l+=" var "+g+" = errors === errs_"+a+";",l},$D=kD,GD=nD,WD=FD,JD=qD,XD=zD,YD=GD.ucs2length,QD=eD,ZD=WD.Validation,eB=function e(n,t,l,r){var i=this,u=this._opts,o=[void 0],s={},a=[],c={},h=[],f={},d=[];t=t||{schema:n,refVal:o,refs:s};var p=nB.call(this,n,t,r),y=this._compilations[p.index];if(p.compiling)return y.callValidate=function e(){var n=y.validate,t=n.apply(this,arguments);return e.errors=n.errors,t};var g=this._formats,m=this.RULES;try{var v=w(n,t,l,r);y.validate=v;var b=y.callValidate;return b&&(b.schema=v.schema,b.errors=null,b.refs=v.refs,b.refVal=v.refVal,b.root=v.root,b.$async=v.$async,u.sourceCode&&(b.source=v.source)),v}finally{tB.call(this,n,t,r)}function w(n,l,r,c){var f=!l||l&&l.schema==n;if(l.schema!=t.schema)return e.call(i,n,l,r,c);var p,y=!0===n.$async,v=XD({isTop:!0,schema:n,isRoot:f,baseId:c,root:l,schemaPath:"",errSchemaPath:"#",errorPath:'""',MissingRefError:WD.MissingRef,RULES:m,validate:XD,util:GD,resolve:$D,resolveRef:_,usePattern:x,useDefault:k,useCustomRule:I,opts:u,formats:g,logger:i.logger,self:i});v=sB(o,uB)+sB(a,rB)+sB(h,iB)+sB(d,oB)+v,u.processCode&&(v=u.processCode(v,n));try{p=new Function("self","RULES","formats","root","refVal","defaults","customRules","equal","ucs2length","ValidationError",v)(i,m,g,t,o,h,d,QD,YD,ZD),o[0]=p}catch(e){throw i.logger.error("Error compiling schema, function code:",v),e}return p.schema=n,p.errors=null,p.refs=s,p.refVal=o,p.root=f?p:l,y&&(p.$async=!0),!0===u.sourceCode&&(p.source={code:v,patterns:a,defaults:h}),p}function _(n,r,a){r=$D.url(n,r);var c,h,f=s[r];if(void 0!==f)return S(c=o[f],h="refVal["+f+"]");if(!a&&t.refs){var d=t.refs[r];if(void 0!==d)return S(c=t.refVal[d],h=E(r,c))}h=E(r);var p=$D.call(i,w,t,r);if(void 0===p){var y=l&&l[r];y&&(p=$D.inlineRef(y,u.inlineRefs)?y:e.call(i,y,t,l,n))}if(void 0!==p)return function(e,n){var t=s[e];o[t]=n}(r,p),S(p,h);!function(e){delete s[e]}(r)}function E(e,n){var t=o.length;return o[t]=n,s[e]=t,"refVal"+t}function S(e,n){return"object"==typeof e||"boolean"==typeof e?{code:n,schema:e,inline:!0}:{code:n,$async:e&&!!e.$async}}function x(e){var n=c[e];return void 0===n&&(n=c[e]=a.length,a[n]=e),"pattern"+n}function k(e){switch(typeof e){case"boolean":case"number":return""+e;case"string":return GD.toQuotedString(e);case"object":if(null===e)return"null";var n=JD(e),t=f[n];return void 0===t&&(t=f[n]=h.length,h[t]=e),"default"+t}}function I(e,n,t,l){if(!1!==i._opts.validateSchema){var r=e.definition.dependencies;if(r&&!r.every((function(e){return Object.prototype.hasOwnProperty.call(t,e)})))throw new Error("parent schema must have all required keywords: "+r.join(","));var o=e.definition.validateSchema;if(o)if(!o(n)){var s="keyword schema is invalid: "+i.errorsText(o.errors);if("log"!=i._opts.validateSchema)throw new Error(s);i.logger.error(s)}}var a,c=e.definition.compile,h=e.definition.inline,f=e.definition.macro;if(c)a=c.call(i,n,t,l);else if(f)a=f.call(i,n,t,l),!1!==u.validateSchema&&i.validateSchema(a,!0);else if(h)a=h.call(i,l,e.keyword,n,t);else if(!(a=e.definition.validate))return;if(void 0===a)throw new Error('custom keyword "'+e.keyword+'"failed to compile');var p=d.length;return d[p]=a,{code:"customRule"+p,validate:a}}};function nB(e,n,t){var l=lB.call(this,e,n,t);return l>=0?{index:l,compiling:!0}:(l=this._compilations.length,this._compilations[l]={schema:e,root:n,baseId:t},{index:l,compiling:!1})}function tB(e,n,t){var l=lB.call(this,e,n,t);l>=0&&this._compilations.splice(l,1)}function lB(e,n,t){for(var l=0;l<this._compilations.length;l++){var r=this._compilations[l];if(r.schema==e&&r.root==n&&r.baseId==t)return l}return-1}function rB(e,n){return"var pattern"+e+" = new RegExp("+GD.toQuotedString(n[e])+");"}function iB(e){return"var default"+e+" = defaults["+e+"];"}function uB(e,n){return void 0===n[e]?"":"var refVal"+e+" = refVal["+e+"];"}function oB(e){return"var customRule"+e+" = customRules["+e+"];"}function sB(e,n){if(!e.length)return"";for(var t="",l=0;l<e.length;l++)t+=n(l,e);return t}var aB={exports:{}},cB=aB.exports=function(){this._cache={}};cB.prototype.put=function(e,n){this._cache[e]=n},cB.prototype.get=function(e){return this._cache[e]},cB.prototype.del=function(e){delete this._cache[e]},cB.prototype.clear=function(){this._cache={}};var hB=nD,fB=/^(\d\d\d\d)-(\d\d)-(\d\d)$/,dB=[0,31,28,31,30,31,30,31,31,30,31,30,31],pB=/^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d(?::?\d\d)?)?$/i,yB=/^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,gB=/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,mB=/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,vB=/^(?:(?:http[s\u017F]?|ftp):\/\/)(?:(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+(?::(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?@)?(?:(?!10(?:\.[0-9]{1,3}){3})(?!127(?:\.[0-9]{1,3}){3})(?!169\.254(?:\.[0-9]{1,3}){2})(?!192\.168(?:\.[0-9]{1,3}){2})(?!172\.(?:1[6-9]|2[0-9]|3[01])(?:\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9a-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-)*(?:[0-9a-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)(?:\.(?:(?:[0-9a-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-)*(?:[0-9a-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)*(?:\.(?:(?:[a-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?$/i,bB=/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,wB=/^(?:\/(?:[^~/]|~0|~1)*)*$/,_B=/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,EB=/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,SB=xB;function xB(e){return e="full"==e?"full":"fast",hB.copy(xB[e])}function kB(e){var n=e.match(fB);if(!n)return!1;var t=+n[1],l=+n[2],r=+n[3];return l>=1&&l<=12&&r>=1&&r<=(2==l&&function(e){return e%4==0&&(e%100!=0||e%400==0)}(t)?29:dB[l])}function IB(e,n){var t=e.match(pB);if(!t)return!1;var l=t[1],r=t[2],i=t[3],u=t[5];return(l<=23&&r<=59&&i<=59||23==l&&59==r&&60==i)&&(!n||u)}xB.fast={date:/^\d\d\d\d-[0-1]\d-[0-3]\d$/,time:/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,"date-time":/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,uri:/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,"uri-reference":/^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,"uri-template":mB,url:vB,email:/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:yB,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:OB,uuid:bB,"json-pointer":wB,"json-pointer-uri-fragment":_B,"relative-json-pointer":EB},xB.full={date:kB,time:IB,"date-time":function(e){var n=e.split(PB);return 2==n.length&&kB(n[0])&&IB(n[1],!0)},uri:function(e){return AB.test(e)&&gB.test(e)},"uri-reference":/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,"uri-template":mB,url:vB,email:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:yB,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:OB,uuid:bB,"json-pointer":wB,"json-pointer-uri-fragment":_B,"relative-json-pointer":EB};var PB=/t|\s/i;var AB=/\/|:/;var TB=/[^\\]\\Z/;function OB(e){if(TB.test(e))return!1;try{return new RegExp(e),!0}catch(e){return!1}}var MB=function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f=e.opts.$data&&o&&o.$data;f?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o;var d="maximum"==n,p=d?"exclusiveMaximum":"exclusiveMinimum",y=e.schema[p],g=e.opts.$data&&y&&y.$data,m=d?"<":">",v=d?">":"<",b=void 0;if(!f&&"number"!=typeof o&&void 0!==o)throw new Error(n+" must be number");if(!g&&void 0!==y&&"number"!=typeof y&&"boolean"!=typeof y)throw new Error(p+" must be number or boolean");if(g){var w=e.util.getData(y.$data,u,e.dataPathArr),_="exclusive"+i,E="exclType"+i,S="exclIsNumber"+i,x="' + "+(P="op"+i)+" + '";r+=" var schemaExcl"+i+" = "+w+"; ",r+=" var "+_+"; var "+E+" = typeof "+(w="schemaExcl"+i)+"; if ("+E+" != 'boolean' && "+E+" != 'undefined' && "+E+" != 'number') { ";var k;b=p;(k=k||[]).push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(b||"_exclusiveLimit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: {} ",!1!==e.opts.messages&&(r+=" , message: '"+p+" should be boolean' "),e.opts.verbose&&(r+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var I=r;r=k.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+I+"]); ":r+=" validate.errors = ["+I+"]; return false; ":r+=" var err = "+I+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } else if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'number') || "),r+=" "+E+" == 'number' ? ( ("+_+" = "+l+" === undefined || "+w+" "+m+"= "+l+") ? "+h+" "+v+"= "+w+" : "+h+" "+v+" "+l+" ) : ( ("+_+" = "+w+" === true) ? "+h+" "+v+"= "+l+" : "+h+" "+v+" "+l+" ) || "+h+" !== "+h+") { var op"+i+" = "+_+" ? '"+m+"' : '"+m+"='; ",void 0===o&&(b=p,a=e.errSchemaPath+"/"+p,l=w,f=g)}else{x=m;if((S="number"==typeof y)&&f){var P="'"+x+"'";r+=" if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'number') || "),r+=" ( "+l+" === undefined || "+y+" "+m+"= "+l+" ? "+h+" "+v+"= "+y+" : "+h+" "+v+" "+l+" ) || "+h+" !== "+h+") { "}else{S&&void 0===o?(_=!0,b=p,a=e.errSchemaPath+"/"+p,l=y,v+="="):(S&&(l=Math[d?"min":"max"](y,o)),y===(!S||l)?(_=!0,b=p,a=e.errSchemaPath+"/"+p,v+="="):(_=!1,x+="="));P="'"+x+"'";r+=" if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'number') || "),r+=" "+h+" "+v+" "+l+" || "+h+" !== "+h+") { "}}b=b||n,(k=k||[]).push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(b||"_limit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { comparison: "+P+", limit: "+l+", exclusive: "+_+" } ",!1!==e.opts.messages&&(r+=" , message: 'should be "+x+" ",r+=f?"' + "+l:l+"'"),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";I=r;return r=k.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+I+"]); ":r+=" validate.errors = ["+I+"]; return false; ":r+=" var err = "+I+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",c&&(r+=" else { "),r},RB=function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f=e.opts.$data&&o&&o.$data;if(f?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o,!f&&"number"!=typeof o)throw new Error(n+" must be number");r+="if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'number') || "),r+=" "+h+".length "+("maxItems"==n?">":"<")+" "+l+") { ";var d=n,p=p||[];p.push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(d||"_limitItems")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { limit: "+l+" } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT have ",r+="maxItems"==n?"more":"fewer",r+=" than ",r+=f?"' + "+l+" + '":""+o,r+=" items' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var y=r;return r=p.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+y+"]); ":r+=" validate.errors = ["+y+"]; return false; ":r+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",c&&(r+=" else { "),r},NB=function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f=e.opts.$data&&o&&o.$data;if(f?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o,!f&&"number"!=typeof o)throw new Error(n+" must be number");var d="maxLength"==n?">":"<";r+="if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'number') || "),!1===e.opts.unicode?r+=" "+h+".length ":r+=" ucs2length("+h+") ",r+=" "+d+" "+l+") { ";var p=n,y=y||[];y.push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(p||"_limitLength")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { limit: "+l+" } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT be ",r+="maxLength"==n?"longer":"shorter",r+=" than ",r+=f?"' + "+l+" + '":""+o,r+=" characters' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var g=r;return r=y.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+g+"]); ":r+=" validate.errors = ["+g+"]; return false; ":r+=" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",c&&(r+=" else { "),r},CB=function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f=e.opts.$data&&o&&o.$data;if(f?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o,!f&&"number"!=typeof o)throw new Error(n+" must be number");r+="if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'number') || "),r+=" Object.keys("+h+").length "+("maxProperties"==n?">":"<")+" "+l+") { ";var d=n,p=p||[];p.push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(d||"_limitProperties")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { limit: "+l+" } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT have ",r+="maxProperties"==n?"more":"fewer",r+=" than ",r+=f?"' + "+l+" + '":""+o,r+=" properties' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var y=r;return r=p.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+y+"]); ":r+=" validate.errors = ["+y+"]; return false; ":r+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",c&&(r+=" else { "),r},LB={$ref:function(e,n,t){var l,r,i=" ",u=e.level,o=e.dataLevel,s=e.schema[n],a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(o||""),f="valid"+u;if("#"==s||"#/"==s)e.isRoot?(l=e.async,r="validate"):(l=!0===e.root.schema.$async,r="root.refVal[0]");else{var d=e.resolveRef(e.baseId,s,e.isRoot);if(void 0===d){var p=e.MissingRefError.message(e.baseId,s);if("fail"==e.opts.missingRefs){e.logger.error(p),(v=v||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '$ref' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { ref: '"+e.util.escapeQuotes(s)+"' } ",!1!==e.opts.messages&&(i+=" , message: 'can\\'t resolve reference "+e.util.escapeQuotes(s)+"' "),e.opts.verbose&&(i+=" , schema: "+e.util.toQuotedString(s)+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),i+=" } "):i+=" {} ";var y=i;i=v.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+y+"]); ":i+=" validate.errors = ["+y+"]; return false; ":i+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",c&&(i+=" if (false) { ")}else{if("ignore"!=e.opts.missingRefs)throw new e.MissingRefError(e.baseId,s,p);e.logger.warn(p),c&&(i+=" if (true) { ")}}else if(d.inline){var g=e.util.copy(e);g.level++;var m="valid"+g.level;g.schema=d.schema,g.schemaPath="",g.errSchemaPath=s,i+=" "+e.validate(g).replace(/validate\.schema/g,d.code)+" ",c&&(i+=" if ("+m+") { ")}else l=!0===d.$async||e.async&&!1!==d.$async,r=d.code}if(r){var v;(v=v||[]).push(i),i="",e.opts.passContext?i+=" "+r+".call(this, ":i+=" "+r+"( ",i+=" "+h+", (dataPath || '')",'""'!=e.errorPath&&(i+=" + "+e.errorPath);var b=i+=" , "+(o?"data"+(o-1||""):"parentData")+" , "+(o?e.dataPathArr[o]:"parentDataProperty")+", rootData)  ";if(i=v.pop(),l){if(!e.async)throw new Error("async schema referenced by sync schema");c&&(i+=" var "+f+"; "),i+=" try { await "+b+"; ",c&&(i+=" "+f+" = true; "),i+=" } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ",c&&(i+=" "+f+" = false; "),i+=" } ",c&&(i+=" if ("+f+") { ")}else i+=" if (!"+b+") { if (vErrors === null) vErrors = "+r+".errors; else vErrors = vErrors.concat("+r+".errors); errors = vErrors.length; } ",c&&(i+=" else { ")}return i},allOf:function(e,n,t){var l=" ",r=e.schema[n],i=e.schemaPath+e.util.getProperty(n),u=e.errSchemaPath+"/"+n,o=!e.opts.allErrors,s=e.util.copy(e),a="";s.level++;var c="valid"+s.level,h=s.baseId,f=!0,d=r;if(d)for(var p,y=-1,g=d.length-1;y<g;)p=d[y+=1],(e.opts.strictKeywords?"object"==typeof p&&Object.keys(p).length>0||!1===p:e.util.schemaHasRules(p,e.RULES.all))&&(f=!1,s.schema=p,s.schemaPath=i+"["+y+"]",s.errSchemaPath=u+"/"+y,l+="  "+e.validate(s)+" ",s.baseId=h,o&&(l+=" if ("+c+") { ",a+="}"));return o&&(l+=f?" if (true) { ":" "+a.slice(0,-1)+" "),l},anyOf:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f="errs__"+r,d=e.util.copy(e),p="";d.level++;var y="valid"+d.level,g=u.every((function(n){return e.opts.strictKeywords?"object"==typeof n&&Object.keys(n).length>0||!1===n:e.util.schemaHasRules(n,e.RULES.all)}));if(g){var m=d.baseId;l+=" var "+f+" = errors; var "+h+" = false;  ";var v=e.compositeRule;e.compositeRule=d.compositeRule=!0;var b=u;if(b)for(var w,_=-1,E=b.length-1;_<E;)w=b[_+=1],d.schema=w,d.schemaPath=o+"["+_+"]",d.errSchemaPath=s+"/"+_,l+="  "+e.validate(d)+" ",d.baseId=m,l+=" "+h+" = "+h+" || "+y+"; if (!"+h+") { ",p+="}";e.compositeRule=d.compositeRule=v,l+=" "+p+" if (!"+h+") {   var err =   ",!1!==e.createErrors?(l+=" { keyword: 'anyOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: {} ",!1!==e.opts.messages&&(l+=" , message: 'should match some schema in anyOf' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&a&&(e.async?l+=" throw new ValidationError(vErrors); ":l+=" validate.errors = vErrors; return false; "),l+=" } else {  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; } ",e.opts.allErrors&&(l+=" } ")}else a&&(l+=" if (true) { ");return l},$comment:function(e,n,t){var l=" ",r=e.schema[n],i=e.errSchemaPath+"/"+n;e.opts.allErrors;var u=e.util.toQuotedString(r);return!0===e.opts.$comment?l+=" console.log("+u+");":"function"==typeof e.opts.$comment&&(l+=" self._opts.$comment("+u+", "+e.util.toQuotedString(i)+", validate.root.schema);"),l},const:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f=e.opts.$data&&u&&u.$data;f&&(l+=" var schema"+r+" = "+e.util.getData(u.$data,i,e.dataPathArr)+"; "),f||(l+=" var schema"+r+" = validate.schema"+o+";"),l+="var "+h+" = equal("+c+", schema"+r+"); if (!"+h+") {   ";var d=d||[];d.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'const' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { allowedValue: schema"+r+" } ",!1!==e.opts.messages&&(l+=" , message: 'should be equal to constant' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var p=l;return l=d.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+p+"]); ":l+=" validate.errors = ["+p+"]; return false; ":l+=" var err = "+p+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" }",a&&(l+=" else { "),l},contains:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f="errs__"+r,d=e.util.copy(e);d.level++;var p="valid"+d.level,y="i"+r,g=d.dataLevel=e.dataLevel+1,m="data"+g,v=e.baseId,b=e.opts.strictKeywords?"object"==typeof u&&Object.keys(u).length>0||!1===u:e.util.schemaHasRules(u,e.RULES.all);if(l+="var "+f+" = errors;var "+h+";",b){var w=e.compositeRule;e.compositeRule=d.compositeRule=!0,d.schema=u,d.schemaPath=o,d.errSchemaPath=s,l+=" var "+p+" = false; for (var "+y+" = 0; "+y+" < "+c+".length; "+y+"++) { ",d.errorPath=e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers,!0);var _=c+"["+y+"]";d.dataPathArr[g]=y;var E=e.validate(d);d.baseId=v,e.util.varOccurences(E,m)<2?l+=" "+e.util.varReplace(E,m,_)+" ":l+=" var "+m+" = "+_+"; "+E+" ",l+=" if ("+p+") break; }  ",e.compositeRule=d.compositeRule=w,l+="  if (!"+p+") {"}else l+=" if ("+c+".length == 0) {";var S=S||[];S.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'contains' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: {} ",!1!==e.opts.messages&&(l+=" , message: 'should contain a valid item' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var x=l;return l=S.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+x+"]); ":l+=" validate.errors = ["+x+"]; return false; ":l+=" var err = "+x+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } else { ",b&&(l+="  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; } "),e.opts.allErrors&&(l+=" } "),l},dependencies:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="errs__"+r,f=e.util.copy(e),d="";f.level++;var p="valid"+f.level,y={},g={},m=e.opts.ownProperties;for(_ in u)if("__proto__"!=_){var v=u[_],b=Array.isArray(v)?g:y;b[_]=v}l+="var "+h+" = errors;";var w=e.errorPath;for(var _ in l+="var missing"+r+";",g)if((b=g[_]).length){if(l+=" if ( "+c+e.util.getProperty(_)+" !== undefined ",m&&(l+=" && Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(_)+"') "),a){l+=" && ( ";var E=b;if(E)for(var S=-1,x=E.length-1;S<x;){O=E[S+=1],S&&(l+=" || "),l+=" ( ( "+(C=c+(N=e.util.getProperty(O)))+" === undefined ",m&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(O)+"') "),l+=") && (missing"+r+" = "+e.util.toQuotedString(e.opts.jsonPointers?O:N)+") ) "}l+=")) {  ";var k="missing"+r,I="' + "+k+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(w,k,!0):w+" + "+k);var P=P||[];P.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { property: '"+e.util.escapeQuotes(_)+"', missingProperty: '"+I+"', depsCount: "+b.length+", deps: '"+e.util.escapeQuotes(1==b.length?b[0]:b.join(", "))+"' } ",!1!==e.opts.messages&&(l+=" , message: 'should have ",1==b.length?l+="property "+e.util.escapeQuotes(b[0]):l+="properties "+e.util.escapeQuotes(b.join(", ")),l+=" when property "+e.util.escapeQuotes(_)+" is present' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var A=l;l=P.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+A+"]); ":l+=" validate.errors = ["+A+"]; return false; ":l+=" var err = "+A+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}else{l+=" ) { ";var T=b;if(T)for(var O,M=-1,R=T.length-1;M<R;){O=T[M+=1];var N=e.util.getProperty(O),C=(I=e.util.escapeQuotes(O),c+N);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(w,O,e.opts.jsonPointers)),l+=" if ( "+C+" === undefined ",m&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(O)+"') "),l+=") {  var err =   ",!1!==e.createErrors?(l+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { property: '"+e.util.escapeQuotes(_)+"', missingProperty: '"+I+"', depsCount: "+b.length+", deps: '"+e.util.escapeQuotes(1==b.length?b[0]:b.join(", "))+"' } ",!1!==e.opts.messages&&(l+=" , message: 'should have ",1==b.length?l+="property "+e.util.escapeQuotes(b[0]):l+="properties "+e.util.escapeQuotes(b.join(", ")),l+=" when property "+e.util.escapeQuotes(_)+" is present' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}l+=" }   ",a&&(d+="}",l+=" else { ")}e.errorPath=w;var L=f.baseId;for(var _ in y){v=y[_];(e.opts.strictKeywords?"object"==typeof v&&Object.keys(v).length>0||!1===v:e.util.schemaHasRules(v,e.RULES.all))&&(l+=" "+p+" = true; if ( "+c+e.util.getProperty(_)+" !== undefined ",m&&(l+=" && Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(_)+"') "),l+=") { ",f.schema=v,f.schemaPath=o+e.util.getProperty(_),f.errSchemaPath=s+"/"+e.util.escapeFragment(_),l+="  "+e.validate(f)+" ",f.baseId=L,l+=" }  ",a&&(l+=" if ("+p+") { ",d+="}"))}return a&&(l+="   "+d+" if ("+h+" == errors) {"),l},enum:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f=e.opts.$data&&u&&u.$data;f&&(l+=" var schema"+r+" = "+e.util.getData(u.$data,i,e.dataPathArr)+"; ");var d="i"+r,p="schema"+r;f||(l+=" var "+p+" = validate.schema"+o+";"),l+="var "+h+";",f&&(l+=" if (schema"+r+" === undefined) "+h+" = true; else if (!Array.isArray(schema"+r+")) "+h+" = false; else {"),l+=h+" = false;for (var "+d+"=0; "+d+"<"+p+".length; "+d+"++) if (equal("+c+", "+p+"["+d+"])) { "+h+" = true; break; }",f&&(l+="  }  "),l+=" if (!"+h+") {   ";var y=y||[];y.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'enum' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { allowedValues: schema"+r+" } ",!1!==e.opts.messages&&(l+=" , message: 'should be equal to one of the allowed values' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var g=l;return l=y.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+g+"]); ":l+=" validate.errors = ["+g+"]; return false; ":l+=" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" }",a&&(l+=" else { "),l},format:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||"");if(!1===e.opts.format)return a&&(l+=" if (true) { "),l;var h,f=e.opts.$data&&u&&u.$data;f?(l+=" var schema"+r+" = "+e.util.getData(u.$data,i,e.dataPathArr)+"; ",h="schema"+r):h=u;var d=e.opts.unknownFormats,p=Array.isArray(d);if(f){l+=" var "+(y="format"+r)+" = formats["+h+"]; var "+(g="isObject"+r)+" = typeof "+y+" == 'object' && !("+y+" instanceof RegExp) && "+y+".validate; var "+(m="formatType"+r)+" = "+g+" && "+y+".type || 'string'; if ("+g+") { ",e.async&&(l+=" var async"+r+" = "+y+".async; "),l+=" "+y+" = "+y+".validate; } if (  ",f&&(l+=" ("+h+" !== undefined && typeof "+h+" != 'string') || "),l+=" (","ignore"!=d&&(l+=" ("+h+" && !"+y+" ",p&&(l+=" && self._opts.unknownFormats.indexOf("+h+") == -1 "),l+=") || "),l+=" ("+y+" && "+m+" == '"+t+"' && !(typeof "+y+" == 'function' ? ",e.async?l+=" (async"+r+" ? await "+y+"("+c+") : "+y+"("+c+")) ":l+=" "+y+"("+c+") ",l+=" : "+y+".test("+c+"))))) {"}else{var y;if(!(y=e.formats[u])){if("ignore"==d)return e.logger.warn('unknown format "'+u+'" ignored in schema at path "'+e.errSchemaPath+'"'),a&&(l+=" if (true) { "),l;if(p&&d.indexOf(u)>=0)return a&&(l+=" if (true) { "),l;throw new Error('unknown format "'+u+'" is used in schema at path "'+e.errSchemaPath+'"')}var g,m=(g="object"==typeof y&&!(y instanceof RegExp)&&y.validate)&&y.type||"string";if(g){var v=!0===y.async;y=y.validate}if(m!=t)return a&&(l+=" if (true) { "),l;if(v){if(!e.async)throw new Error("async format in sync schema");l+=" if (!(await "+(b="formats"+e.util.getProperty(u)+".validate")+"("+c+"))) { "}else{l+=" if (! ";var b="formats"+e.util.getProperty(u);g&&(b+=".validate"),l+="function"==typeof y?" "+b+"("+c+") ":" "+b+".test("+c+") ",l+=") { "}}var w=w||[];w.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'format' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { format:  ",l+=f?""+h:""+e.util.toQuotedString(u),l+="  } ",!1!==e.opts.messages&&(l+=" , message: 'should match format \"",l+=f?"' + "+h+" + '":""+e.util.escapeQuotes(u),l+="\"' "),e.opts.verbose&&(l+=" , schema:  ",l+=f?"validate.schema"+o:""+e.util.toQuotedString(u),l+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var _=l;return l=w.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+_+"]); ":l+=" validate.errors = ["+_+"]; return false; ":l+=" var err = "+_+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } ",a&&(l+=" else { "),l},if:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f="errs__"+r,d=e.util.copy(e);d.level++;var p="valid"+d.level,y=e.schema.then,g=e.schema.else,m=void 0!==y&&(e.opts.strictKeywords?"object"==typeof y&&Object.keys(y).length>0||!1===y:e.util.schemaHasRules(y,e.RULES.all)),v=void 0!==g&&(e.opts.strictKeywords?"object"==typeof g&&Object.keys(g).length>0||!1===g:e.util.schemaHasRules(g,e.RULES.all)),b=d.baseId;if(m||v){var w;d.createErrors=!1,d.schema=u,d.schemaPath=o,d.errSchemaPath=s,l+=" var "+f+" = errors; var "+h+" = true;  ";var _=e.compositeRule;e.compositeRule=d.compositeRule=!0,l+="  "+e.validate(d)+" ",d.baseId=b,d.createErrors=!0,l+="  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; }  ",e.compositeRule=d.compositeRule=_,m?(l+=" if ("+p+") {  ",d.schema=e.schema.then,d.schemaPath=e.schemaPath+".then",d.errSchemaPath=e.errSchemaPath+"/then",l+="  "+e.validate(d)+" ",d.baseId=b,l+=" "+h+" = "+p+"; ",m&&v?l+=" var "+(w="ifClause"+r)+" = 'then'; ":w="'then'",l+=" } ",v&&(l+=" else { ")):l+=" if (!"+p+") { ",v&&(d.schema=e.schema.else,d.schemaPath=e.schemaPath+".else",d.errSchemaPath=e.errSchemaPath+"/else",l+="  "+e.validate(d)+" ",d.baseId=b,l+=" "+h+" = "+p+"; ",m&&v?l+=" var "+(w="ifClause"+r)+" = 'else'; ":w="'else'",l+=" } "),l+=" if (!"+h+") {   var err =   ",!1!==e.createErrors?(l+=" { keyword: 'if' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { failingKeyword: "+w+" } ",!1!==e.opts.messages&&(l+=" , message: 'should match \"' + "+w+" + '\" schema' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&a&&(e.async?l+=" throw new ValidationError(vErrors); ":l+=" validate.errors = vErrors; return false; "),l+=" }   ",a&&(l+=" else { ")}else a&&(l+=" if (true) { ");return l},items:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f="errs__"+r,d=e.util.copy(e),p="";d.level++;var y="valid"+d.level,g="i"+r,m=d.dataLevel=e.dataLevel+1,v="data"+m,b=e.baseId;if(l+="var "+f+" = errors;var "+h+";",Array.isArray(u)){var w=e.schema.additionalItems;if(!1===w){l+=" "+h+" = "+c+".length <= "+u.length+"; ";var _=s;s=e.errSchemaPath+"/additionalItems",l+="  if (!"+h+") {   ";var E=E||[];E.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'additionalItems' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { limit: "+u.length+" } ",!1!==e.opts.messages&&(l+=" , message: 'should NOT have more than "+u.length+" items' "),e.opts.verbose&&(l+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var S=l;l=E.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+S+"]); ":l+=" validate.errors = ["+S+"]; return false; ":l+=" var err = "+S+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } ",s=_,a&&(p+="}",l+=" else { ")}var x=u;if(x)for(var k,I=-1,P=x.length-1;I<P;)if(k=x[I+=1],e.opts.strictKeywords?"object"==typeof k&&Object.keys(k).length>0||!1===k:e.util.schemaHasRules(k,e.RULES.all)){l+=" "+y+" = true; if ("+c+".length > "+I+") { ";var A=c+"["+I+"]";d.schema=k,d.schemaPath=o+"["+I+"]",d.errSchemaPath=s+"/"+I,d.errorPath=e.util.getPathExpr(e.errorPath,I,e.opts.jsonPointers,!0),d.dataPathArr[m]=I;var T=e.validate(d);d.baseId=b,e.util.varOccurences(T,v)<2?l+=" "+e.util.varReplace(T,v,A)+" ":l+=" var "+v+" = "+A+"; "+T+" ",l+=" }  ",a&&(l+=" if ("+y+") { ",p+="}")}if("object"==typeof w&&(e.opts.strictKeywords?"object"==typeof w&&Object.keys(w).length>0||!1===w:e.util.schemaHasRules(w,e.RULES.all))){d.schema=w,d.schemaPath=e.schemaPath+".additionalItems",d.errSchemaPath=e.errSchemaPath+"/additionalItems",l+=" "+y+" = true; if ("+c+".length > "+u.length+") {  for (var "+g+" = "+u.length+"; "+g+" < "+c+".length; "+g+"++) { ",d.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers,!0);A=c+"["+g+"]";d.dataPathArr[m]=g;T=e.validate(d);d.baseId=b,e.util.varOccurences(T,v)<2?l+=" "+e.util.varReplace(T,v,A)+" ":l+=" var "+v+" = "+A+"; "+T+" ",a&&(l+=" if (!"+y+") break; "),l+=" } }  ",a&&(l+=" if ("+y+") { ",p+="}")}}else if(e.opts.strictKeywords?"object"==typeof u&&Object.keys(u).length>0||!1===u:e.util.schemaHasRules(u,e.RULES.all)){d.schema=u,d.schemaPath=o,d.errSchemaPath=s,l+="  for (var "+g+" = 0; "+g+" < "+c+".length; "+g+"++) { ",d.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers,!0);A=c+"["+g+"]";d.dataPathArr[m]=g;T=e.validate(d);d.baseId=b,e.util.varOccurences(T,v)<2?l+=" "+e.util.varReplace(T,v,A)+" ":l+=" var "+v+" = "+A+"; "+T+" ",a&&(l+=" if (!"+y+") break; "),l+=" }"}return a&&(l+=" "+p+" if ("+f+" == errors) {"),l},maximum:MB,minimum:MB,maxItems:RB,minItems:RB,maxLength:NB,minLength:NB,maxProperties:CB,minProperties:CB,multipleOf:function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f=e.opts.$data&&o&&o.$data;if(f?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o,!f&&"number"!=typeof o)throw new Error(n+" must be number");r+="var division"+i+";if (",f&&(r+=" "+l+" !== undefined && ( typeof "+l+" != 'number' || "),r+=" (division"+i+" = "+h+" / "+l+", ",e.opts.multipleOfPrecision?r+=" Math.abs(Math.round(division"+i+") - division"+i+") > 1e-"+e.opts.multipleOfPrecision+" ":r+=" division"+i+" !== parseInt(division"+i+") ",r+=" ) ",f&&(r+="  )  "),r+=" ) {   ";var d=d||[];d.push(r),r="",!1!==e.createErrors?(r+=" { keyword: 'multipleOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { multipleOf: "+l+" } ",!1!==e.opts.messages&&(r+=" , message: 'should be multiple of ",r+=f?"' + "+l:l+"'"),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var p=r;return r=d.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+p+"]); ":r+=" validate.errors = ["+p+"]; return false; ":r+=" var err = "+p+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",c&&(r+=" else { "),r},not:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="errs__"+r,f=e.util.copy(e);f.level++;var d="valid"+f.level;if(e.opts.strictKeywords?"object"==typeof u&&Object.keys(u).length>0||!1===u:e.util.schemaHasRules(u,e.RULES.all)){f.schema=u,f.schemaPath=o,f.errSchemaPath=s,l+=" var "+h+" = errors;  ";var p,y=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.createErrors=!1,f.opts.allErrors&&(p=f.opts.allErrors,f.opts.allErrors=!1),l+=" "+e.validate(f)+" ",f.createErrors=!0,p&&(f.opts.allErrors=p),e.compositeRule=f.compositeRule=y,l+=" if ("+d+") {   ";var g=g||[];g.push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'not' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: {} ",!1!==e.opts.messages&&(l+=" , message: 'should NOT be valid' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var m=l;l=g.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+m+"]); ":l+=" validate.errors = ["+m+"]; return false; ":l+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } else {  errors = "+h+"; if (vErrors !== null) { if ("+h+") vErrors.length = "+h+"; else vErrors = null; } ",e.opts.allErrors&&(l+=" } ")}else l+="  var err =   ",!1!==e.createErrors?(l+=" { keyword: 'not' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: {} ",!1!==e.opts.messages&&(l+=" , message: 'should NOT be valid' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",a&&(l+=" if (false) { ");return l},oneOf:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f="errs__"+r,d=e.util.copy(e),p="";d.level++;var y="valid"+d.level,g=d.baseId,m="prevValid"+r,v="passingSchemas"+r;l+="var "+f+" = errors , "+m+" = false , "+h+" = false , "+v+" = null; ";var b=e.compositeRule;e.compositeRule=d.compositeRule=!0;var w=u;if(w)for(var _,E=-1,S=w.length-1;E<S;)_=w[E+=1],(e.opts.strictKeywords?"object"==typeof _&&Object.keys(_).length>0||!1===_:e.util.schemaHasRules(_,e.RULES.all))?(d.schema=_,d.schemaPath=o+"["+E+"]",d.errSchemaPath=s+"/"+E,l+="  "+e.validate(d)+" ",d.baseId=g):l+=" var "+y+" = true; ",E&&(l+=" if ("+y+" && "+m+") { "+h+" = false; "+v+" = ["+v+", "+E+"]; } else { ",p+="}"),l+=" if ("+y+") { "+h+" = "+m+" = true; "+v+" = "+E+"; }";return e.compositeRule=d.compositeRule=b,l+=p+"if (!"+h+") {   var err =   ",!1!==e.createErrors?(l+=" { keyword: 'oneOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { passingSchemas: "+v+" } ",!1!==e.opts.messages&&(l+=" , message: 'should match exactly one schema in oneOf' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&a&&(e.async?l+=" throw new ValidationError(vErrors); ":l+=" validate.errors = vErrors; return false; "),l+="} else {  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; }",e.opts.allErrors&&(l+=" } "),l},pattern:function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f=e.opts.$data&&o&&o.$data;f?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o,r+="if ( ",f&&(r+=" ("+l+" !== undefined && typeof "+l+" != 'string') || "),r+=" !"+(f?"(new RegExp("+l+"))":e.usePattern(o))+".test("+h+") ) {   ";var d=d||[];d.push(r),r="",!1!==e.createErrors?(r+=" { keyword: 'pattern' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { pattern:  ",r+=f?""+l:""+e.util.toQuotedString(o),r+="  } ",!1!==e.opts.messages&&(r+=" , message: 'should match pattern \"",r+=f?"' + "+l+" + '":""+e.util.escapeQuotes(o),r+="\"' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+e.util.toQuotedString(o),r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var p=r;return r=d.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+p+"]); ":r+=" validate.errors = ["+p+"]; return false; ":r+=" var err = "+p+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",c&&(r+=" else { "),r},properties:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="errs__"+r,f=e.util.copy(e),d="";f.level++;var p="valid"+f.level,y="key"+r,g="idx"+r,m=f.dataLevel=e.dataLevel+1,v="data"+m,b="dataProperties"+r,w=Object.keys(u||{}).filter(N),_=e.schema.patternProperties||{},E=Object.keys(_).filter(N),S=e.schema.additionalProperties,x=w.length||E.length,k=!1===S,I="object"==typeof S&&Object.keys(S).length,P=e.opts.removeAdditional,A=k||I||P,T=e.opts.ownProperties,O=e.baseId,M=e.schema.required;if(M&&(!e.opts.$data||!M.$data)&&M.length<e.opts.loopRequired)var R=e.util.toHash(M);function N(e){return"__proto__"!==e}if(l+="var "+h+" = errors;var "+p+" = true;",T&&(l+=" var "+b+" = undefined;"),A){if(l+=T?" "+b+" = "+b+" || Object.keys("+c+"); for (var "+g+"=0; "+g+"<"+b+".length; "+g+"++) { var "+y+" = "+b+"["+g+"]; ":" for (var "+y+" in "+c+") { ",x){if(l+=" var isAdditional"+r+" = !(false ",w.length)if(w.length>8)l+=" || validate.schema"+o+".hasOwnProperty("+y+") ";else{var C=w;if(C)for(var L=-1,j=C.length-1;L<j;)J=C[L+=1],l+=" || "+y+" == "+e.util.toQuotedString(J)+" "}if(E.length){var U=E;if(U)for(var D=-1,B=U.length-1;D<B;)ie=U[D+=1],l+=" || "+e.usePattern(ie)+".test("+y+") "}l+=" ); if (isAdditional"+r+") { "}if("all"==P)l+=" delete "+c+"["+y+"]; ";else{var K=e.errorPath,F="' + "+y+" + '";if(e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers)),k)if(P)l+=" delete "+c+"["+y+"]; ";else{l+=" "+p+" = false; ";var V=s;s=e.errSchemaPath+"/additionalProperties",(te=te||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'additionalProperties' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { additionalProperty: '"+F+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is an invalid additional property":l+="should NOT have additional properties",l+="' "),e.opts.verbose&&(l+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var H=l;l=te.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+H+"]); ":l+=" validate.errors = ["+H+"]; return false; ":l+=" var err = "+H+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s=V,a&&(l+=" break; ")}else if(I)if("failing"==P){l+=" var "+h+" = errors;  ";var q=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.schema=S,f.schemaPath=e.schemaPath+".additionalProperties",f.errSchemaPath=e.errSchemaPath+"/additionalProperties",f.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers);var z=c+"["+y+"]";f.dataPathArr[m]=y;var $=e.validate(f);f.baseId=O,e.util.varOccurences($,v)<2?l+=" "+e.util.varReplace($,v,z)+" ":l+=" var "+v+" = "+z+"; "+$+" ",l+=" if (!"+p+") { errors = "+h+"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete "+c+"["+y+"]; }  ",e.compositeRule=f.compositeRule=q}else{f.schema=S,f.schemaPath=e.schemaPath+".additionalProperties",f.errSchemaPath=e.errSchemaPath+"/additionalProperties",f.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers);z=c+"["+y+"]";f.dataPathArr[m]=y;$=e.validate(f);f.baseId=O,e.util.varOccurences($,v)<2?l+=" "+e.util.varReplace($,v,z)+" ":l+=" var "+v+" = "+z+"; "+$+" ",a&&(l+=" if (!"+p+") break; ")}e.errorPath=K}x&&(l+=" } "),l+=" }  ",a&&(l+=" if ("+p+") { ",d+="}")}var G=e.opts.useDefaults&&!e.compositeRule;if(w.length){var W=w;if(W)for(var J,X=-1,Y=W.length-1;X<Y;){var Q=u[J=W[X+=1]];if(e.opts.strictKeywords?"object"==typeof Q&&Object.keys(Q).length>0||!1===Q:e.util.schemaHasRules(Q,e.RULES.all)){var Z=e.util.getProperty(J),ee=(z=c+Z,G&&void 0!==Q.default);f.schema=Q,f.schemaPath=o+Z,f.errSchemaPath=s+"/"+e.util.escapeFragment(J),f.errorPath=e.util.getPath(e.errorPath,J,e.opts.jsonPointers),f.dataPathArr[m]=e.util.toQuotedString(J);$=e.validate(f);if(f.baseId=O,e.util.varOccurences($,v)<2){$=e.util.varReplace($,v,z);var ne=z}else{ne=v;l+=" var "+v+" = "+z+"; "}if(ee)l+=" "+$+" ";else{if(R&&R[J]){l+=" if ( "+ne+" === undefined ",T&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(J)+"') "),l+=") { "+p+" = false; ";K=e.errorPath,V=s;var te,le=e.util.escapeQuotes(J);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(K,J,e.opts.jsonPointers)),s=e.errSchemaPath+"/required",(te=te||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { missingProperty: '"+le+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is a required property":l+="should have required property \\'"+le+"\\'",l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";H=l;l=te.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+H+"]); ":l+=" validate.errors = ["+H+"]; return false; ":l+=" var err = "+H+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s=V,e.errorPath=K,l+=" } else { "}else a?(l+=" if ( "+ne+" === undefined ",T&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(J)+"') "),l+=") { "+p+" = true; } else { "):(l+=" if ("+ne+" !== undefined ",T&&(l+=" &&   Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(J)+"') "),l+=" ) { ");l+=" "+$+" } "}}a&&(l+=" if ("+p+") { ",d+="}")}}if(E.length){var re=E;if(re)for(var ie,ue=-1,oe=re.length-1;ue<oe;){Q=_[ie=re[ue+=1]];if(e.opts.strictKeywords?"object"==typeof Q&&Object.keys(Q).length>0||!1===Q:e.util.schemaHasRules(Q,e.RULES.all)){f.schema=Q,f.schemaPath=e.schemaPath+".patternProperties"+e.util.getProperty(ie),f.errSchemaPath=e.errSchemaPath+"/patternProperties/"+e.util.escapeFragment(ie),l+=T?" "+b+" = "+b+" || Object.keys("+c+"); for (var "+g+"=0; "+g+"<"+b+".length; "+g+"++) { var "+y+" = "+b+"["+g+"]; ":" for (var "+y+" in "+c+") { ",l+=" if ("+e.usePattern(ie)+".test("+y+")) { ",f.errorPath=e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers);z=c+"["+y+"]";f.dataPathArr[m]=y;$=e.validate(f);f.baseId=O,e.util.varOccurences($,v)<2?l+=" "+e.util.varReplace($,v,z)+" ":l+=" var "+v+" = "+z+"; "+$+" ",a&&(l+=" if (!"+p+") break; "),l+=" } ",a&&(l+=" else "+p+" = true; "),l+=" }  ",a&&(l+=" if ("+p+") { ",d+="}")}}}return a&&(l+=" "+d+" if ("+h+" == errors) {"),l},propertyNames:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="errs__"+r,f=e.util.copy(e);f.level++;var d="valid"+f.level;if(l+="var "+h+" = errors;",e.opts.strictKeywords?"object"==typeof u&&Object.keys(u).length>0||!1===u:e.util.schemaHasRules(u,e.RULES.all)){f.schema=u,f.schemaPath=o,f.errSchemaPath=s;var p="key"+r,y="idx"+r,g="i"+r,m="' + "+p+" + '",v="data"+(f.dataLevel=e.dataLevel+1),b="dataProperties"+r,w=e.opts.ownProperties,_=e.baseId;w&&(l+=" var "+b+" = undefined; "),l+=w?" "+b+" = "+b+" || Object.keys("+c+"); for (var "+y+"=0; "+y+"<"+b+".length; "+y+"++) { var "+p+" = "+b+"["+y+"]; ":" for (var "+p+" in "+c+") { ",l+=" var startErrs"+r+" = errors; ";var E=p,S=e.compositeRule;e.compositeRule=f.compositeRule=!0;var x=e.validate(f);f.baseId=_,e.util.varOccurences(x,v)<2?l+=" "+e.util.varReplace(x,v,E)+" ":l+=" var "+v+" = "+E+"; "+x+" ",e.compositeRule=f.compositeRule=S,l+=" if (!"+d+") { for (var "+g+"=startErrs"+r+"; "+g+"<errors; "+g+"++) { vErrors["+g+"].propertyName = "+p+"; }   var err =   ",!1!==e.createErrors?(l+=" { keyword: 'propertyNames' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { propertyName: '"+m+"' } ",!1!==e.opts.messages&&(l+=" , message: 'property name \\'"+m+"\\' is invalid' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&a&&(e.async?l+=" throw new ValidationError(vErrors); ":l+=" validate.errors = vErrors; return false; "),a&&(l+=" break; "),l+=" } }"}return a&&(l+="  if ("+h+" == errors) {"),l},required:function(e,n,t){var l=" ",r=e.level,i=e.dataLevel,u=e.schema[n],o=e.schemaPath+e.util.getProperty(n),s=e.errSchemaPath+"/"+n,a=!e.opts.allErrors,c="data"+(i||""),h="valid"+r,f=e.opts.$data&&u&&u.$data;f&&(l+=" var schema"+r+" = "+e.util.getData(u.$data,i,e.dataPathArr)+"; ");var d="schema"+r;if(!f)if(u.length<e.opts.loopRequired&&e.schema.properties&&Object.keys(e.schema.properties).length){var p=[],y=u;if(y)for(var g,m=-1,v=y.length-1;m<v;){g=y[m+=1];var b=e.schema.properties[g];b&&(e.opts.strictKeywords?"object"==typeof b&&Object.keys(b).length>0||!1===b:e.util.schemaHasRules(b,e.RULES.all))||(p[p.length]=g)}}else p=u;if(f||p.length){var w=e.errorPath,_=f||p.length>=e.opts.loopRequired,E=e.opts.ownProperties;if(a)if(l+=" var missing"+r+"; ",_){f||(l+=" var "+d+" = validate.schema"+o+"; ");var S="' + "+(T="schema"+r+"["+(I="i"+r)+"]")+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(w,T,e.opts.jsonPointers)),l+=" var "+h+" = true; ",f&&(l+=" if (schema"+r+" === undefined) "+h+" = true; else if (!Array.isArray(schema"+r+")) "+h+" = false; else {"),l+=" for (var "+I+" = 0; "+I+" < "+d+".length; "+I+"++) { "+h+" = "+c+"["+d+"["+I+"]] !== undefined ",E&&(l+=" &&   Object.prototype.hasOwnProperty.call("+c+", "+d+"["+I+"]) "),l+="; if (!"+h+") break; } ",f&&(l+="  }  "),l+="  if (!"+h+") {   ",(A=A||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { missingProperty: '"+S+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is a required property":l+="should have required property \\'"+S+"\\'",l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";var x=l;l=A.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+x+"]); ":l+=" validate.errors = ["+x+"]; return false; ":l+=" var err = "+x+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } else { "}else{l+=" if ( ";var k=p;if(k)for(var I=-1,P=k.length-1;I<P;){M=k[I+=1],I&&(l+=" || "),l+=" ( ( "+(L=c+(C=e.util.getProperty(M)))+" === undefined ",E&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(M)+"') "),l+=") && (missing"+r+" = "+e.util.toQuotedString(e.opts.jsonPointers?M:C)+") ) "}l+=") {  ";var A;S="' + "+(T="missing"+r)+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(w,T,!0):w+" + "+T),(A=A||[]).push(l),l="",!1!==e.createErrors?(l+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { missingProperty: '"+S+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is a required property":l+="should have required property \\'"+S+"\\'",l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ";x=l;l=A.pop(),!e.compositeRule&&a?e.async?l+=" throw new ValidationError(["+x+"]); ":l+=" validate.errors = ["+x+"]; return false; ":l+=" var err = "+x+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } else { "}else if(_){f||(l+=" var "+d+" = validate.schema"+o+"; ");var T;S="' + "+(T="schema"+r+"["+(I="i"+r)+"]")+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(w,T,e.opts.jsonPointers)),f&&(l+=" if ("+d+" && !Array.isArray("+d+")) {  var err =   ",!1!==e.createErrors?(l+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { missingProperty: '"+S+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is a required property":l+="should have required property \\'"+S+"\\'",l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if ("+d+" !== undefined) { "),l+=" for (var "+I+" = 0; "+I+" < "+d+".length; "+I+"++) { if ("+c+"["+d+"["+I+"]] === undefined ",E&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", "+d+"["+I+"]) "),l+=") {  var err =   ",!1!==e.createErrors?(l+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { missingProperty: '"+S+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is a required property":l+="should have required property \\'"+S+"\\'",l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ",f&&(l+="  }  ")}else{var O=p;if(O)for(var M,R=-1,N=O.length-1;R<N;){M=O[R+=1];var C=e.util.getProperty(M),L=(S=e.util.escapeQuotes(M),c+C);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(w,M,e.opts.jsonPointers)),l+=" if ( "+L+" === undefined ",E&&(l+=" || ! Object.prototype.hasOwnProperty.call("+c+", '"+e.util.escapeQuotes(M)+"') "),l+=") {  var err =   ",!1!==e.createErrors?(l+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { missingProperty: '"+S+"' } ",!1!==e.opts.messages&&(l+=" , message: '",e.opts._errorDataPathProperty?l+="is a required property":l+="should have required property \\'"+S+"\\'",l+="' "),e.opts.verbose&&(l+=" , schema: validate.schema"+o+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),l+=" } "):l+=" {} ",l+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}e.errorPath=w}else a&&(l+=" if (true) {");return l},uniqueItems:function(e,n,t){var l,r=" ",i=e.level,u=e.dataLevel,o=e.schema[n],s=e.schemaPath+e.util.getProperty(n),a=e.errSchemaPath+"/"+n,c=!e.opts.allErrors,h="data"+(u||""),f="valid"+i,d=e.opts.$data&&o&&o.$data;if(d?(r+=" var schema"+i+" = "+e.util.getData(o.$data,u,e.dataPathArr)+"; ",l="schema"+i):l=o,(o||d)&&!1!==e.opts.uniqueItems){d&&(r+=" var "+f+"; if ("+l+" === false || "+l+" === undefined) "+f+" = true; else if (typeof "+l+" != 'boolean') "+f+" = false; else { "),r+=" var i = "+h+".length , "+f+" = true , j; if (i > 1) { ";var p=e.schema.items&&e.schema.items.type,y=Array.isArray(p);if(!p||"object"==p||"array"==p||y&&(p.indexOf("object")>=0||p.indexOf("array")>=0))r+=" outer: for (;i--;) { for (j = i; j--;) { if (equal("+h+"[i], "+h+"[j])) { "+f+" = false; break outer; } } } ";else{r+=" var itemIndices = {}, item; for (;i--;) { var item = "+h+"[i]; ";var g="checkDataType"+(y?"s":"");r+=" if ("+e.util[g](p,"item",e.opts.strictNumbers,!0)+") continue; ",y&&(r+=" if (typeof item == 'string') item = '\"' + item; "),r+=" if (typeof itemIndices[item] == 'number') { "+f+" = false; j = itemIndices[item]; break; } itemIndices[item] = i; } "}r+=" } ",d&&(r+="  }  "),r+=" if (!"+f+") {   ";var m=m||[];m.push(r),r="",!1!==e.createErrors?(r+=" { keyword: 'uniqueItems' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { i: i, j: j } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' "),e.opts.verbose&&(r+=" , schema:  ",r+=d?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+h+" "),r+=" } "):r+=" {} ";var v=r;r=m.pop(),!e.compositeRule&&c?e.async?r+=" throw new ValidationError(["+v+"]); ":r+=" validate.errors = ["+v+"]; return false; ":r+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",c&&(r+=" else { ")}else c&&(r+=" if (true) { ");return r},validate:zD},jB=LB,UB=nD.toHash,DB=["multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","additionalItems","maxItems","minItems","uniqueItems","maxProperties","minProperties","required","additionalProperties","enum","format","const"],BB=FD.MissingRef,KB=function e(n,t,l){var r=this;if("function"!=typeof this._opts.loadSchema)throw new Error("options.loadSchema should be a function");"function"==typeof t&&(l=t,t=void 0);var i=u(n).then((function(){var e=r._addSchema(n,void 0,t);return e.validate||o(e)}));l&&i.then((function(e){l(null,e)}),l);return i;function u(n){var t=n.$schema;return t&&!r.getSchema(t)?e.call(r,{$ref:t},!0):Promise.resolve()}function o(e){try{return r._compile(e)}catch(n){if(n instanceof BB)return function(n){var l=n.missingSchema;if(a(l))throw new Error("Schema "+l+" is loaded but "+n.missingRef+" cannot be resolved");var i=r._loadingSchemas[l];i||(i=r._loadingSchemas[l]=r._opts.loadSchema(l)).then(s,s);return i.then((function(e){if(!a(l))return u(e).then((function(){a(l)||r.addSchema(e,l,void 0,t)}))})).then((function(){return o(e)}));function s(){delete r._loadingSchemas[l]}function a(e){return r._refs[e]||r._schemas[e]}}(n);throw n}}};var FB={$schema:"http://json-schema.org/draft-07/schema#",$id:"http://json-schema.org/draft-07/schema#",title:"Core schema meta-schema",definitions:{schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},nonNegativeInteger:{type:"integer",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:"#/definitions/nonNegativeInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},uniqueItems:!0,default:[]}},type:["object","boolean"],properties:{$id:{type:"string",format:"uri-reference"},$schema:{type:"string",format:"uri"},$ref:{type:"string",format:"uri-reference"},$comment:{type:"string"},title:{type:"string"},description:{type:"string"},default:!0,readOnly:{type:"boolean",default:!1},examples:{type:"array",items:!0},multipleOf:{type:"number",exclusiveMinimum:0},maximum:{type:"number"},exclusiveMaximum:{type:"number"},minimum:{type:"number"},exclusiveMinimum:{type:"number"},maxLength:{$ref:"#/definitions/nonNegativeInteger"},minLength:{$ref:"#/definitions/nonNegativeIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{$ref:"#"},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:!0},maxItems:{$ref:"#/definitions/nonNegativeInteger"},minItems:{$ref:"#/definitions/nonNegativeIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},contains:{$ref:"#"},maxProperties:{$ref:"#/definitions/nonNegativeInteger"},minProperties:{$ref:"#/definitions/nonNegativeIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{$ref:"#"},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},propertyNames:{format:"regex"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},propertyNames:{$ref:"#"},const:!0,enum:{type:"array",items:!0,minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},contentMediaType:{type:"string"},contentEncoding:{type:"string"},if:{$ref:"#"},then:{$ref:"#"},else:{$ref:"#"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},default:!0},VB=FB,HB={$id:"https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js",definitions:{simpleTypes:VB.definitions.simpleTypes},type:"object",dependencies:{schema:["validate"],$data:["validate"],statements:["inline"],valid:{not:{required:["macro"]}}},properties:{type:VB.properties.type,schema:{type:"boolean"},statements:{type:"boolean"},dependencies:{type:"array",items:{type:"string"}},metaSchema:{type:"object"},modifying:{type:"boolean"},valid:{type:"boolean"},$data:{type:"boolean"},async:{type:"boolean"},errors:{anyOf:[{type:"boolean"},{const:"full"}]}}},qB=/^[a-z_$][a-z0-9_$-]*$/i,zB=function(e,n,t){var l,r,i=" ",u=e.level,o=e.dataLevel,s=e.schema[n],a=e.schemaPath+e.util.getProperty(n),c=e.errSchemaPath+"/"+n,h=!e.opts.allErrors,f="data"+(o||""),d="valid"+u,p="errs__"+u,y=e.opts.$data&&s&&s.$data;y?(i+=" var schema"+u+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",r="schema"+u):r=s;var g,m,v,b,w,_=this,E="definition"+u,S=_.definition,x="";if(y&&S.$data){w="keywordValidate"+u;var k=S.validateSchema;i+=" var "+E+" = RULES.custom['"+n+"'].definition; var "+w+" = "+E+".validate;"}else{if(!(b=e.useCustomRule(_,s,e.schema,e)))return;r="validate.schema"+a,w=b.code,g=S.compile,m=S.inline,v=S.macro}var I=w+".errors",P="i"+u,A="ruleErr"+u,T=S.async;if(T&&!e.async)throw new Error("async keyword in sync schema");if(m||v||(i+=I+" = null;"),i+="var "+p+" = errors;var "+d+";",y&&S.$data&&(x+="}",i+=" if ("+r+" === undefined) { "+d+" = true; } else { ",k&&(x+="}",i+=" "+d+" = "+E+".validateSchema("+r+"); if ("+d+") { ")),m)S.statements?i+=" "+b.validate+" ":i+=" "+d+" = "+b.validate+"; ";else if(v){var O=e.util.copy(e);x="";O.level++;var M="valid"+O.level;O.schema=b.validate,O.schemaPath="";var R=e.compositeRule;e.compositeRule=O.compositeRule=!0;var N=e.validate(O).replace(/validate\.schema/g,w);e.compositeRule=O.compositeRule=R,i+=" "+N}else{(U=U||[]).push(i),i="",i+="  "+w+".call( ",e.opts.passContext?i+="this":i+="self",g||!1===S.schema?i+=" , "+f+" ":i+=" , "+r+" , "+f+" , validate.schema"+e.schemaPath+" ",i+=" , (dataPath || '')",'""'!=e.errorPath&&(i+=" + "+e.errorPath);var C=o?"data"+(o-1||""):"parentData",L=o?e.dataPathArr[o]:"parentDataProperty",j=i+=" , "+C+" , "+L+" , rootData )  ";i=U.pop(),!1===S.errors?(i+=" "+d+" = ",T&&(i+="await "),i+=j+"; "):i+=T?" var "+(I="customErrors"+u)+" = null; try { "+d+" = await "+j+"; } catch (e) { "+d+" = false; if (e instanceof ValidationError) "+I+" = e.errors; else throw e; } ":" "+I+" = null; "+d+" = "+j+"; "}if(S.modifying&&(i+=" if ("+C+") "+f+" = "+C+"["+L+"];"),i+=""+x,S.valid)h&&(i+=" if (true) { ");else{var U;i+=" if ( ",void 0===S.valid?(i+=" !",i+=v?""+M:""+d):i+=" "+!S.valid+" ",i+=") { ",l=_.keyword,(U=U||[]).push(i),i="",(U=U||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(l||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { keyword: '"+_.keyword+"' } ",!1!==e.opts.messages&&(i+=" , message: 'should pass \""+_.keyword+"\" keyword validation' "),e.opts.verbose&&(i+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+f+" "),i+=" } "):i+=" {} ";var D=i;i=U.pop(),!e.compositeRule&&h?e.async?i+=" throw new ValidationError(["+D+"]); ":i+=" validate.errors = ["+D+"]; return false; ":i+=" var err = "+D+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";var B=i;i=U.pop(),m?S.errors?"full"!=S.errors&&(i+="  for (var "+P+"="+p+"; "+P+"<errors; "+P+"++) { var "+A+" = vErrors["+P+"]; if ("+A+".dataPath === undefined) "+A+".dataPath = (dataPath || '') + "+e.errorPath+"; if ("+A+".schemaPath === undefined) { "+A+'.schemaPath = "'+c+'"; } ',e.opts.verbose&&(i+=" "+A+".schema = "+r+"; "+A+".data = "+f+"; "),i+=" } "):!1===S.errors?i+=" "+B+" ":(i+=" if ("+p+" == errors) { "+B+" } else {  for (var "+P+"="+p+"; "+P+"<errors; "+P+"++) { var "+A+" = vErrors["+P+"]; if ("+A+".dataPath === undefined) "+A+".dataPath = (dataPath || '') + "+e.errorPath+"; if ("+A+".schemaPath === undefined) { "+A+'.schemaPath = "'+c+'"; } ',e.opts.verbose&&(i+=" "+A+".schema = "+r+"; "+A+".data = "+f+"; "),i+=" } } "):v?(i+="   var err =   ",!1!==e.createErrors?(i+=" { keyword: '"+(l||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { keyword: '"+_.keyword+"' } ",!1!==e.opts.messages&&(i+=" , message: 'should pass \""+_.keyword+"\" keyword validation' "),e.opts.verbose&&(i+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+f+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&h&&(e.async?i+=" throw new ValidationError(vErrors); ":i+=" validate.errors = vErrors; return false; ")):!1===S.errors?i+=" "+B+" ":(i+=" if (Array.isArray("+I+")) { if (vErrors === null) vErrors = "+I+"; else vErrors = vErrors.concat("+I+"); errors = vErrors.length;  for (var "+P+"="+p+"; "+P+"<errors; "+P+"++) { var "+A+" = vErrors["+P+"]; if ("+A+".dataPath === undefined) "+A+".dataPath = (dataPath || '') + "+e.errorPath+";  "+A+'.schemaPath = "'+c+'";  ',e.opts.verbose&&(i+=" "+A+".schema = "+r+"; "+A+".data = "+f+"; "),i+=" } } else { "+B+" } "),i+=" } ",h&&(i+=" else { ")}return i},$B=HB,GB={add:function(e,n){var t=this.RULES;if(t.keywords[e])throw new Error("Keyword "+e+" is already defined");if(!qB.test(e))throw new Error("Keyword "+e+" is not a valid identifier");if(n){this.validateKeyword(n,!0);var l=n.type;if(Array.isArray(l))for(var r=0;r<l.length;r++)u(e,l[r],n);else u(e,l,n);var i=n.metaSchema;i&&(n.$data&&this._opts.$data&&(i={anyOf:[i,{$ref:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"}]}),n.validateSchema=this.compile(i,!0))}function u(e,n,l){for(var r,i=0;i<t.length;i++){var u=t[i];if(u.type==n){r=u;break}}r||(r={type:n,rules:[]},t.push(r));var o={keyword:e,definition:l,custom:!0,code:zB,implements:l.implements};r.rules.push(o),t.custom[e]=o}return t.keywords[e]=t.all[e]=!0,this},get:function(e){var n=this.RULES.custom[e];return n?n.definition:this.RULES.keywords[e]||!1},remove:function(e){var n=this.RULES;delete n.keywords[e],delete n.all[e],delete n.custom[e];for(var t=0;t<n.length;t++)for(var l=n[t].rules,r=0;r<l.length;r++)if(l[r].keyword==e){l.splice(r,1);break}return this},validate:function e(n,t){e.errors=null;var l=this._validateKeyword=this._validateKeyword||this.compile($B,!0);if(l(n))return!0;if(e.errors=l.errors,t)throw new Error("custom keyword definition is invalid: "+this.errorsText(l.errors));return!1}};var WB={$schema:"http://json-schema.org/draft-07/schema#",$id:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#",description:"Meta-schema for $data reference (JSON Schema extension proposal)",type:"object",required:["$data"],properties:{$data:{type:"string",anyOf:[{format:"relative-json-pointer"},{format:"json-pointer"}]}},additionalProperties:!1},JB=eB,XB=kD,YB=aB.exports,QB=gD,ZB=qD,eK=SB,nK=function(){var e=[{type:"number",rules:[{maximum:["exclusiveMaximum"]},{minimum:["exclusiveMinimum"]},"multipleOf","format"]},{type:"string",rules:["maxLength","minLength","pattern","format"]},{type:"array",rules:["maxItems","minItems","items","contains","uniqueItems"]},{type:"object",rules:["maxProperties","minProperties","required","dependencies","propertyNames",{properties:["additionalProperties","patternProperties"]}]},{rules:["$ref","const","enum","not","anyOf","oneOf","allOf","if"]}],n=["type","$comment"];return e.all=UB(n),e.types=UB(["number","integer","string","array","object","boolean","null"]),e.forEach((function(t){t.rules=t.rules.map((function(t){var l;if("object"==typeof t){var r=Object.keys(t)[0];l=t[r],t=r,l.forEach((function(t){n.push(t),e.all[t]=!0}))}return n.push(t),e.all[t]={keyword:t,code:jB[t],implements:l}})),e.all.$comment={keyword:"$comment",code:jB.$comment},t.type&&(e.types[t.type]=t)})),e.keywords=UB(n.concat(["$schema","$id","id","$data","$async","title","description","default","definitions","examples","readOnly","writeOnly","contentMediaType","contentEncoding","additionalItems","then","else"])),e.custom={},e},tK=function(e,n){for(var t=0;t<n.length;t++){e=JSON.parse(JSON.stringify(e));var l,r=n[t].split("/"),i=e;for(l=1;l<r.length;l++)i=i[r[l]];for(l=0;l<DB.length;l++){var u=DB[l],o=i[u];o&&(i[u]={anyOf:[o,{$ref:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"}]})}}return e},lK=nD,rK=cK;cK.prototype.validate=function(e,n){var t;if("string"==typeof e){if(!(t=this.getSchema(e)))throw new Error('no schema with key or ref "'+e+'"')}else{var l=this._addSchema(e);t=l.validate||this._compile(l)}var r=t(n);!0!==t.$async&&(this.errors=t.errors);return r},cK.prototype.compile=function(e,n){var t=this._addSchema(e,void 0,n);return t.validate||this._compile(t)},cK.prototype.addSchema=function(e,n,t,l){if(Array.isArray(e)){for(var r=0;r<e.length;r++)this.addSchema(e[r],void 0,t,l);return this}var i=this._getId(e);if(void 0!==i&&"string"!=typeof i)throw new Error("schema id must be string");return gK(this,n=XB.normalizeId(n||i)),this._schemas[n]=this._addSchema(e,t,l,!0),this},cK.prototype.addMetaSchema=function(e,n,t){return this.addSchema(e,n,t,!0),this},cK.prototype.validateSchema=function(e,n){var t=e.$schema;if(void 0!==t&&"string"!=typeof t)throw new Error("$schema must be a string");if(!(t=t||this._opts.defaultMeta||function(e){var n=e._opts.meta;return e._opts.defaultMeta="object"==typeof n?e._getId(n)||n:e.getSchema(oK)?oK:void 0,e._opts.defaultMeta}(this)))return this.logger.warn("meta-schema not available"),this.errors=null,!0;var l=this.validate(t,e);if(!l&&n){var r="schema is invalid: "+this.errorsText();if("log"!=this._opts.validateSchema)throw new Error(r);this.logger.error(r)}return l},cK.prototype.getSchema=function(e){var n=hK(this,e);switch(typeof n){case"object":return n.validate||this._compile(n);case"string":return this.getSchema(n);case"undefined":return function(e,n){var t=XB.schema.call(e,{schema:{}},n);if(t){var l=t.schema,r=t.root,i=t.baseId,u=JB.call(e,l,r,void 0,i);return e._fragments[n]=new QB({ref:n,fragment:!0,schema:l,root:r,baseId:i,validate:u}),u}}(this,e)}},cK.prototype.removeSchema=function(e){if(e instanceof RegExp)return fK(this,this._schemas,e),fK(this,this._refs,e),this;switch(typeof e){case"undefined":return fK(this,this._schemas),fK(this,this._refs),this._cache.clear(),this;case"string":var n=hK(this,e);return n&&this._cache.del(n.cacheKey),delete this._schemas[e],delete this._refs[e],this;case"object":var t=this._opts.serialize,l=t?t(e):e;this._cache.del(l);var r=this._getId(e);r&&(r=XB.normalizeId(r),delete this._schemas[r],delete this._refs[r])}return this},cK.prototype.addFormat=function(e,n){"string"==typeof n&&(n=new RegExp(n));return this._formats[e]=n,this},cK.prototype.errorsText=function(e,n){if(!(e=e||this.errors))return"No errors";for(var t=void 0===(n=n||{}).separator?", ":n.separator,l=void 0===n.dataVar?"data":n.dataVar,r="",i=0;i<e.length;i++){var u=e[i];u&&(r+=l+u.dataPath+" "+u.message+t)}return r.slice(0,-t.length)},cK.prototype._addSchema=function(e,n,t,l){if("object"!=typeof e&&"boolean"!=typeof e)throw new Error("schema should be object or boolean");var r=this._opts.serialize,i=r?r(e):e,u=this._cache.get(i);if(u)return u;l=l||!1!==this._opts.addUsedSchema;var o=XB.normalizeId(this._getId(e));o&&l&&gK(this,o);var s,a=!1!==this._opts.validateSchema&&!n;a&&!(s=o&&o==XB.normalizeId(e.$schema))&&this.validateSchema(e,!0);var c=XB.ids.call(this,e),h=new QB({id:o,schema:e,localRefs:c,cacheKey:i,meta:t});"#"!=o[0]&&l&&(this._refs[o]=h);this._cache.put(i,h),a&&s&&this.validateSchema(e,!0);return h},cK.prototype._compile=function(e,n){if(e.compiling)return e.validate=r,r.schema=e.schema,r.errors=null,r.root=n||r,!0===e.schema.$async&&(r.$async=!0),r;var t,l;e.compiling=!0,e.meta&&(t=this._opts,this._opts=this._metaOpts);try{l=JB.call(this,e.schema,n,e.localRefs)}catch(n){throw delete e.validate,n}finally{e.compiling=!1,e.meta&&(this._opts=t)}return e.validate=l,e.refs=l.refs,e.refVal=l.refVal,e.root=l.root,l;function r(){var n=e.validate,t=n.apply(this,arguments);return r.errors=n.errors,t}},cK.prototype.compileAsync=KB;var iK=GB;cK.prototype.addKeyword=iK.add,cK.prototype.getKeyword=iK.get,cK.prototype.removeKeyword=iK.remove,cK.prototype.validateKeyword=iK.validate;var uK=FD;cK.ValidationError=uK.Validation,cK.MissingRefError=uK.MissingRef,cK.$dataMetaSchema=tK;var oK="http://json-schema.org/draft-07/schema",sK=["removeAdditional","useDefaults","coerceTypes","strictDefaults"],aK=["/properties"];function cK(e){if(!(this instanceof cK))return new cK(e);e=this._opts=lK.copy(e)||{},function(e){var n=e._opts.logger;if(!1===n)e.logger={log:mK,warn:mK,error:mK};else{if(void 0===n&&(n=console),!("object"==typeof n&&n.log&&n.warn&&n.error))throw new Error("logger must implement log, warn and error methods");e.logger=n}}(this),this._schemas={},this._refs={},this._fragments={},this._formats=eK(e.format),this._cache=e.cache||new YB,this._loadingSchemas={},this._compilations=[],this.RULES=nK(),this._getId=function(e){switch(e.schemaId){case"auto":return yK;case"id":return dK;default:return pK}}(e),e.loopRequired=e.loopRequired||1/0,"property"==e.errorDataPath&&(e._errorDataPathProperty=!0),void 0===e.serialize&&(e.serialize=ZB),this._metaOpts=function(e){for(var n=lK.copy(e._opts),t=0;t<sK.length;t++)delete n[sK[t]];return n}(this),e.formats&&function(e){for(var n in e._opts.formats){var t=e._opts.formats[n];e.addFormat(n,t)}}(this),e.keywords&&function(e){for(var n in e._opts.keywords){var t=e._opts.keywords[n];e.addKeyword(n,t)}}(this),function(e){var n;e._opts.$data&&(n=WB,e.addMetaSchema(n,n.$id,!0));if(!1===e._opts.meta)return;var t=FB;e._opts.$data&&(t=tK(t,aK));e.addMetaSchema(t,oK,!0),e._refs["http://json-schema.org/schema"]=oK}(this),"object"==typeof e.meta&&this.addMetaSchema(e.meta),e.nullable&&this.addKeyword("nullable",{metaSchema:{type:"boolean"}}),function(e){var n=e._opts.schemas;if(!n)return;if(Array.isArray(n))e.addSchema(n);else for(var t in n)e.addSchema(n[t],t)}(this)}function hK(e,n){return n=XB.normalizeId(n),e._schemas[n]||e._refs[n]||e._fragments[n]}function fK(e,n,t){for(var l in n){var r=n[l];r.meta||t&&!t.test(l)||(e._cache.del(r.cacheKey),delete n[l])}}function dK(e){return e.$id&&this.logger.warn("schema $id ignored",e.$id),e.id}function pK(e){return e.id&&this.logger.warn("schema id ignored",e.id),e.$id}function yK(e){if(e.$id&&e.id&&e.$id!=e.id)throw new Error("schema $id is different from id");return e.$id||e.id}function gK(e,n){if(e._schemas[n]||e._refs[n])throw new Error('schema with key or id "'+n+'" already exists')}function mK(){}const vK=QU;var bK={validate:(new rK).compile(vK)};var wK={root:{merkleRoot:0,targetHash:1,anchors:2,path:3},path:{left:0,right:1},chain:{btc:{id:0,networks:{mainnet:1,testnet:3}},eth:{id:1,networks:{mainnet:1,ropsten:3,rinkeby:4}},mtc:{id:2,networks:{mainnet:137,mumbai:80001}}}},_K={},EK=t(nu),SK={},xK={};!function(e){const n=ce.exports.BigNumber;e.MT={POS_INT:0,NEG_INT:1,BYTE_STRING:2,UTF8_STRING:3,ARRAY:4,MAP:5,TAG:6,SIMPLE_FLOAT:7},e.TAG={DATE_STRING:0,DATE_EPOCH:1,POS_BIGINT:2,NEG_BIGINT:3,DECIMAL_FRAC:4,BIGFLOAT:5,BASE64URL_EXPECTED:21,BASE64_EXPECTED:22,BASE16_EXPECTED:23,CBOR:24,URI:32,BASE64URL:33,BASE64:34,REGEXP:35,MIME:36},e.NUMBYTES={ZERO:0,ONE:24,TWO:25,FOUR:26,EIGHT:27,INDEFINITE:31},e.SIMPLE={FALSE:20,TRUE:21,NULL:22,UNDEFINED:23},e.SYMS={NULL:Symbol("null"),UNDEFINED:Symbol("undef"),PARENT:Symbol("parent"),BREAK:Symbol("break"),STREAM:Symbol("stream")},e.SHIFT32=4294967296,e.BI={MINUS_ONE:-1,MAXINT32:4294967295,MAXINT64:"0xffffffffffffffff",SHIFT32:e.SHIFT32};const t=new n(-1);e.BN={MINUS_ONE:t,NEG_MAX:t.minus(new n(Number.MAX_SAFE_INTEGER.toString(16),16)),MAXINT:new n("0x20000000000000"),MAXINT32:new n(4294967295),MAXINT64:new n("0xffffffffffffffff"),SHIFT32:new n(e.SHIFT32)}}(xK),function(e){const n=EK,t=ce.exports.BigNumber,l=xK.NUMBYTES,r=xK.SHIFT32;e.hasBigInt="function"==typeof BigInt;const i="function"==typeof TextDecoder?TextDecoder:n.TextDecoder;if(i){const n=new i("utf8",{fatal:!0,ignoreBOM:!0});e.utf8=e=>n.decode(e),e.utf8.checksUTF8=!0}else e.utf8=e=>e.toString("utf8"),e.utf8.checksUTF8=!1;e.parseCBORint=function(e,n){switch(e){case l.ONE:return n.readUInt8(0);case l.TWO:return n.readUInt16BE(0);case l.FOUR:return n.readUInt32BE(0);case l.EIGHT:const i=n.readUInt32BE(0),u=n.readUInt32BE(4);return i>2097151?new t(i).times(r).plus(u):i*r+u;default:throw new Error("Invalid additional info for int: "+e)}},e.writeHalf=function(e,n){const t=S.allocUnsafe(4);t.writeFloatBE(n,0);const l=t.readUInt32BE(0);if(0!=(8191&l))return!1;let r=l>>16&32768;const i=l>>23&255,u=8388607&l;if(i>=113&&i<=142)r+=(i-112<<10)+(u>>13);else{if(!(i>=103&&i<113))return!1;if(u&(1<<126-i)-1)return!1;r+=u+8388608>>126-i}return e.writeUInt16BE(r),!0},e.parseHalf=function(e){const n=128&e[0]?-1:1,t=(124&e[0])>>2,l=(3&e[0])<<8|e[1];return t?31===t?n*(l?NaN:Infinity):n*Math.pow(2,t-25)*(1024+l):5.960464477539063e-8*n*l},e.parseCBORfloat=function(n){switch(n.length){case 2:return e.parseHalf(n);case 4:return n.readFloatBE(0);case 8:return n.readDoubleBE(0);default:throw new Error("Invalid float size: "+n.length)}},e.hex=function(e){return S.from(e.replace(/^0x/,""),"hex")},e.bin=function(e){let n=0,t=(e=e.replace(/\s/g,"")).length%8||8;const l=[];for(;t<=e.length;)l.push(parseInt(e.slice(n,t),2)),n=t,t+=8;return S.from(l)},e.extend=function(e={},...n){const t=n.length;for(let l=0;l<t;l++){const t=n[l];for(const n in t){const l=t[n];e[n]=l}}return e},e.arrayEqual=function(e,n){return null==e&&null==n||null!=e&&null!=n&&(e.length===n.length&&e.every(((e,t)=>e===n[t])))},e.bufferEqual=function(e,n){if(null==e&&null==n)return!0;if(null==e||null==n)return!1;if(!ue(e)||!ue(n)||e.length!==n.length)return!1;const t=e.length;let l,r,i=!0;for(l=r=0;r<t;l=++r){const t=e[l];i=i&&n[l]===t}return!!i},e.bufferToBignumber=function(e){return new t(e.toString("hex"),16)},e.toBigInt=function(n){return e.hasBigInt?BigInt(n):Number(n)},e.bigIntize=function(n){const t={};for(const l in n)t[l]=e.toBigInt(n[l]);return t},e.bufferToBigInt=function(n){return e.toBigInt("0x"+n.toString("hex"))},e.guessEncoding=function(e){if("string"==typeof e)return"hex";if(!ue(e))throw new Error("Unknown input type")}}(SK);const kK=EK,IK=xK.MT,PK=xK.SIMPLE,AK=xK.SYMS;class TK{constructor(e){if("number"!=typeof e)throw new Error("Invalid Simple type: "+typeof e);if(e<0||e>255||(0|e)!==e)throw new Error("value must be a small positive integer: "+e);this.value=e}toString(){return"simple("+this.value+")"}[kK.inspect.custom](e,n){return"simple("+this.value+")"}inspect(e,n){return"simple("+this.value+")"}encodeCBOR(e){return e._pushInt(this.value,IK.SIMPLE_FLOAT)}static isSimple(e){return e instanceof TK}static decode(e,n=!0,t=!1){switch(e){case PK.FALSE:return!1;case PK.TRUE:return!0;case PK.NULL:return n?null:AK.NULL;case PK.UNDEFINED:return n?void 0:AK.UNDEFINED;case-1:if(!n||!t)throw new Error("Invalid BREAK");return AK.BREAK;default:return new TK(e)}}}var OK=TK;const MK=uP,RK=EK;class NK extends MK.Transform{constructor(e,n,t){let l,r;switch(null==t&&(t={}),typeof e){case"object":ue(e)?(l=e,null!=n&&"object"==typeof n&&(t=n)):t=e;break;case"string":l=e,null!=n&&"object"==typeof n?t=n:r=n}null==t&&(t={}),null==l&&(l=t.input),null==r&&(r=t.inputEncoding),delete t.input,delete t.inputEncoding;const i=null==t.watchPipe||t.watchPipe;delete t.watchPipe;const u=!!t.readError;delete t.readError,super(t),this.readError=u,i&&this.on("pipe",(e=>{const n=e._readableState.objectMode;if(this.length>0&&n!==this._readableState.objectMode)throw new Error("Do not switch objectMode in the middle of the stream");return this._readableState.objectMode=n,this._writableState.objectMode=n})),null!=l&&this.end(l,r)}static isNoFilter(e){return e instanceof this}static compare(e,n){if(!(e instanceof this))throw new TypeError("Arguments must be NoFilters");return e===n?0:e.compare(n)}static concat(e,n){if(!Array.isArray(e))throw new TypeError("list argument must be an Array of NoFilters");if(0===e.length||0===n)return S.alloc(0);null==n&&(n=e.reduce(((e,n)=>{if(!(n instanceof NK))throw new TypeError("list argument must be an Array of NoFilters");return e+n.length}),0));let t=!0,l=!0;const r=e.map((e=>{if(!(e instanceof NK))throw new TypeError("list argument must be an Array of NoFilters");const n=e.slice();return ue(n)?l=!1:t=!1,n}));if(t)return S.concat(r,n);if(l)return[].concat(...r).slice(0,n);throw new Error("Concatenating mixed object and byte streams not supported")}_transform(e,n,t){this._readableState.objectMode||ue(e)||(e=S.from(e,n)),this.push(e),t()}_bufArray(){let e=this._readableState.buffer;if(!Array.isArray(e)){let n=e.head;for(e=[];null!=n;)e.push(n.data),n=n.next}return e}read(e){const n=super.read(e);if(null!=n){if(this.emit("read",n),this.readError&&n.length<e)throw new Error(`Read ${n.length}, wanted ${e}`)}else if(this.readError)throw new Error(`No data available, wanted ${e}`);return n}promise(e){let n=!1;return new Promise(((t,l)=>{this.on("finish",(()=>{const l=this.read();null==e||n||(n=!0,e(null,l)),t(l)})),this.on("error",(t=>{null==e||n||(n=!0,e(t)),l(t)}))}))}compare(e){if(!(e instanceof NK))throw new TypeError("Arguments must be NoFilters");if(this===e)return 0;{const n=this.slice(),t=e.slice();if(ue(n)&&ue(t))return n.compare(t);throw new Error("Cannot compare streams in object mode")}}equals(e){return 0===this.compare(e)}slice(e,n){if(this._readableState.objectMode)return this._bufArray().slice(e,n);const t=this._bufArray();switch(t.length){case 0:return S.alloc(0);case 1:return t[0].slice(e,n);default:return S.concat(t).slice(e,n)}}get(e){return this.slice()[e]}toJSON(){const e=this.slice();return ue(e)?e.toJSON():e}toString(e,n,t){const l=this.slice(n,t);if(!ue(l))return JSON.stringify(l);if((!e||"utf8"===e)&&RK.TextDecoder){return new RK.TextDecoder("utf8",{fatal:!0,ignoreBOM:!0}).decode(l)}return l.toString(e,n,t)}inspect(e,n){return this[RK.inspect.custom](e,n)}[RK.inspect.custom](e,n){const t=this._bufArray().map((e=>ue(e)?(null!=n?n.stylize:void 0)?n.stylize(e.toString("hex"),"string"):e.toString("hex"):RK.inspect(e,n))).join(", ");return`${this.constructor.name} [${t}]`}get length(){return this._readableState.length}writeBigInt(e){let n=e.toString(16);if(e<0){const t=BigInt(Math.floor(n.length/2));n=(e=(BigInt(1)<<t*BigInt(8))+e).toString(16)}return n.length%2&&(n="0"+n),this.push(S.from(n,"hex"))}readUBigInt(e){const n=this.read(e);return ue(n)?BigInt("0x"+n.toString("hex")):null}readBigInt(e){const n=this.read(e);if(!ue(n))return null;let t=BigInt("0x"+n.toString("hex"));if(128&n[0]){t-=BigInt(1)<<BigInt(n.length)*BigInt(8)}return t}}function CK(e,n){return function(t){const l=this.read(n);return ue(l)?l[e].call(l,0,!0):null}}function LK(e,n){return function(t){const l=S.alloc(n);return l[e].call(l,t,0,!0),this.push(l)}}Object.assign(NK.prototype,{writeUInt8:LK("writeUInt8",1),writeUInt16LE:LK("writeUInt16LE",2),writeUInt16BE:LK("writeUInt16BE",2),writeUInt32LE:LK("writeUInt32LE",4),writeUInt32BE:LK("writeUInt32BE",4),writeInt8:LK("writeInt8",1),writeInt16LE:LK("writeInt16LE",2),writeInt16BE:LK("writeInt16BE",2),writeInt32LE:LK("writeInt32LE",4),writeInt32BE:LK("writeInt32BE",4),writeFloatLE:LK("writeFloatLE",4),writeFloatBE:LK("writeFloatBE",4),writeDoubleLE:LK("writeDoubleLE",8),writeDoubleBE:LK("writeDoubleBE",8),readUInt8:CK("readUInt8",1),readUInt16LE:CK("readUInt16LE",2),readUInt16BE:CK("readUInt16BE",2),readUInt32LE:CK("readUInt32LE",4),readUInt32BE:CK("readUInt32BE",4),readInt8:CK("readInt8",1),readInt16LE:CK("readInt16LE",2),readInt16BE:CK("readInt16BE",2),readInt32LE:CK("readInt32LE",4),readInt32BE:CK("readInt32BE",4),readFloatLE:CK("readFloatLE",4),readFloatBE:CK("readFloatBE",4),readDoubleLE:CK("readDoubleLE",8),readDoubleBE:CK("readDoubleBE",8)});var jK=NK;const UK=jK,DK=uP.Transform;var BK=class extends DK{constructor(e){super(e),this._writableState.objectMode=!1,this._readableState.objectMode=!0,this.bs=new UK,this.__restart()}_transform(e,n,t){for(this.bs.write(e);this.bs.length>=this.__needed;){let e;const n=null===this.__needed?void 0:this.bs.read(this.__needed);try{e=this.__parser.next(n)}catch(e){return t(e)}this.__needed&&(this.__fresh=!1),e.done?(this.push(e.value),this.__restart()):this.__needed=e.value||0}return t()}*_parse(){throw new Error("Must be implemented in subclass")}__restart(){this.__needed=null,this.__parser=this._parse(),this.__fresh=!0}_flush(e){e(this.__fresh?null:new Error("unexpected end of input"))}};const KK=ce.exports.BigNumber,FK=SK,VK=Mu,HK=new KK(-1),qK=new KK(2);class zK{constructor(e,n,t){if(this.tag=e,this.value=n,this.err=t,"number"!=typeof this.tag)throw new Error("Invalid tag type ("+typeof this.tag+")");if(this.tag<0||(0|this.tag)!==this.tag)throw new Error("Tag must be a positive integer: "+this.tag)}toString(){return`${this.tag}(${JSON.stringify(this.value)})`}encodeCBOR(e){return e._pushTag(this.tag),e.pushAny(this.value)}convert(e){let n=null!=e?e[this.tag]:void 0;if("function"!=typeof n&&(n=zK["_tag_"+this.tag],"function"!=typeof n))return this;try{return n.call(zK,this.value)}catch(e){return this.err=e,this}}static _tag_0(e){return new Date(e)}static _tag_1(e){return new Date(1e3*e)}static _tag_2(e){return FK.bufferToBignumber(e)}static _tag_3(e){return HK.minus(FK.bufferToBignumber(e))}static _tag_4(e){return KK(e[1]).shiftedBy(e[0])}static _tag_5(e){return qK.pow(e[0]).times(e[1])}static _tag_32(e){return VK.parse(e)}static _tag_35(e){return new RegExp(e)}}var $K=zK;const GK=uP,WK=BK,JK=$K,XK=OK,YK=SK,QK=ce.exports.BigNumber,ZK=jK,eF=xK,nF=eF.MT,tF=eF.NUMBYTES,lF=eF.SYMS,rF=YK.bigIntize(eF.BI),iF=eF.BN,uF=Symbol("count"),oF=Symbol("major type"),sF=Symbol("error"),aF=Symbol("not found");function cF(e,n,t){const l=[];return l[uF]=t,l[lF.PARENT]=e,l[oF]=n,l}function hF(e,n){const t=new ZK;return t[uF]=-1,t[lF.PARENT]=e,t[oF]=n,t}function fF(e){return YK.bufferToBigInt(e)}function dF(e){return rF.MINUS_ONE-YK.bufferToBigInt(e)}class pF extends WK{constructor(e){const n=(e=e||{}).tags;delete e.tags;const t=null!=e.max_depth?e.max_depth:-1;delete e.max_depth;const l=!!YK.hasBigInt&&!!e.bigint;delete e.bigint,super(e),this.running=!0,this.max_depth=t,this.tags=n,l&&(null==this.tags&&(this.tags={}),null==this.tags[2]&&(this.tags[2]=fF),null==this.tags[3]&&(this.tags[3]=dF))}static nullcheck(e){switch(e){case lF.NULL:return null;case lF.UNDEFINED:return;case aF:throw new Error("Value not found");default:return e}}static decodeFirstSync(e,n){let t,l={};switch(typeof(n=n||{encoding:"hex"})){case"string":t=n;break;case"object":l=YK.extend({},n),t=l.encoding,delete l.encoding}const r=new pF(l),i=e instanceof GK.Readable?e:new ZK(e,null!=t?t:YK.guessEncoding(e)),u=r._parse();let o=u.next();for(;!o.done;){const e=i.read(o.value);if(null==e||e.length!==o.value)throw new Error("Insufficient data");o=u.next(e)}const s=pF.nullcheck(o.value);if(i.length>0){const e=i.read(1);i.unshift(e);const n=new Error("Unexpected data: 0x"+e[0].toString(16));throw n.value=s,n}return s}static decodeAllSync(e,n){let t,l={};switch(typeof(n=n||{encoding:"hex"})){case"string":t=n;break;case"object":l=YK.extend({},n),t=l.encoding,delete l.encoding}const r=new pF(l),i=e instanceof GK.Readable?e:new ZK(e,null!=t?t:YK.guessEncoding(e)),u=[];for(;i.length>0;){const e=r._parse();let n=e.next();for(;!n.done;){const t=i.read(n.value);if(null==t||t.length!==n.value)throw new Error("Insufficient data");n=e.next(t)}u.push(pF.nullcheck(n.value))}return u}static decodeFirst(e,n,t){let l={},r=!1,i="hex";switch(typeof n){case"function":t=n,i=YK.guessEncoding(e);break;case"string":i=n;break;case"object":l=YK.extend({},n),i=null!=l.encoding?l.encoding:YK.guessEncoding(e),delete l.encoding,r=null!=l.required&&l.required,delete l.required}const u=new pF(l);let o=aF;const s=new Promise(((e,n)=>{u.on("data",(e=>{o=pF.nullcheck(e),u.close()})),u.once("error",(e=>(o!==aF&&(e.value=o),o=sF,u.close(),n(e)))),u.once("end",(()=>{switch(o){case aF:return r?n(new Error("No CBOR found")):e(o);case sF:return;default:return e(o)}}))}));return"function"==typeof t&&s.then((e=>t(null,e)),t),u.end(e,i),s}static decodeAll(e,n,t){let l={},r="hex";switch(typeof n){case"function":t=n,r=YK.guessEncoding(e);break;case"string":r=n;break;case"object":l=YK.extend({},n),r=null!=l.encoding?l.encoding:YK.guessEncoding(e),delete l.encoding}const i=new pF(l),u=[];i.on("data",(e=>u.push(pF.nullcheck(e))));const o=new Promise(((e,n)=>{i.on("error",n),i.on("end",(()=>e(u)))}));return"function"==typeof t&&o.then((e=>t(null,e)),t),i.end(e,r),o}close(){this.running=!1,this.__fresh=!0}*_parse(){let e=null,n=0,t=null;for(;;){if(this.max_depth>=0&&n>this.max_depth)throw new Error("Maximum depth "+this.max_depth+" exceeded");const l=(yield 1)[0];if(!this.running)throw new Error("Unexpected data: 0x"+l.toString(16));const r=l>>5,i=31&l,u=null!=e?e[oF]:void 0,o=null!=e?e.length:void 0;switch(i){case tF.ONE:this.emit("more-bytes",r,1,u,o),t=(yield 1)[0];break;case tF.TWO:case tF.FOUR:case tF.EIGHT:const e=1<<i-24;this.emit("more-bytes",r,e,u,o);const n=yield e;t=r===nF.SIMPLE_FLOAT?n:YK.parseCBORint(i,n);break;case 28:case 29:case 30:throw this.running=!1,new Error("Additional info not implemented: "+i);case tF.INDEFINITE:switch(r){case nF.POS_INT:case nF.NEG_INT:case nF.TAG:throw new Error(`Invalid indefinite encoding for MT ${r}`)}t=-1;break;default:t=i}switch(r){case nF.POS_INT:break;case nF.NEG_INT:t=t===Number.MAX_SAFE_INTEGER?iF.NEG_MAX:t instanceof QK?iF.MINUS_ONE.minus(t):-1-t;break;case nF.BYTE_STRING:case nF.UTF8_STRING:switch(t){case 0:this.emit("start-string",r,t,u,o),t=r===nF.BYTE_STRING?S.allocUnsafe(0):"";break;case-1:this.emit("start",r,lF.STREAM,u,o),e=hF(e,r),n++;continue;default:this.emit("start-string",r,t,u,o),t=yield t,r===nF.UTF8_STRING&&(t=YK.utf8(t))}break;case nF.ARRAY:case nF.MAP:switch(t){case 0:t=r===nF.MAP?{}:[];break;case-1:this.emit("start",r,lF.STREAM,u,o),e=cF(e,r,-1),n++;continue;default:this.emit("start",r,t,u,o),e=cF(e,r,t*(r-3)),n++;continue}break;case nF.TAG:this.emit("start",r,t,u,o),e=cF(e,r,1),e.push(t),n++;continue;case nF.SIMPLE_FLOAT:if("number"==typeof t){if(i===tF.ONE&&t<32)throw new Error(`Invalid two-byte encoding of simple value ${t}`);const n=null!=e;t=XK.decode(t,n,n&&e[uF]<0)}else t=YK.parseCBORfloat(t)}this.emit("value",t,u,o,i);let s=!1;for(;null!=e;){switch(!1){case t!==lF.BREAK:e[uF]=1;break;case!Array.isArray(e):e.push(t);break;case!(e instanceof ZK):const n=e[oF];if(null!=n&&n!==r)throw this.running=!1,new Error("Invalid major type in indefinite encoding");e.write(t)}if(0!=--e[uF]){s=!0;break}if(--n,delete e[uF],Array.isArray(e))switch(e[oF]){case nF.ARRAY:t=e;break;case nF.MAP:let n=!0;if(e.length%2!=0)throw new Error("Invalid map length: "+e.length);for(let t=0,l=e.length;t<l;t+=2)if("string"!=typeof e[t]){n=!1;break}if(n){t={};for(let n=0,l=e.length;n<l;n+=2)t[e[n]]=e[n+1]}else{t=new Map;for(let n=0,l=e.length;n<l;n+=2)t.set(e[n],e[n+1])}break;case nF.TAG:t=new JK(e[0],e[1]).convert(this.tags)}else if(e instanceof ZK)switch(e[oF]){case nF.BYTE_STRING:t=e.slice();break;case nF.UTF8_STRING:t=e.toString("utf-8")}this.emit("stop",e[oF]);const l=e;e=e[lF.PARENT],delete l[lF.PARENT],delete l[oF]}if(!s)return t}}}pF.NOT_FOUND=aF;var yF=pF;const gF=uP,mF=EK,vF=yF,bF=xK,wF=ce.exports.BigNumber,_F=jK,EF=bF.MT,SF=bF.NUMBYTES,xF=bF.SYMS;function kF(e){return e>1?"s":""}class IF extends gF.Transform{constructor(e){const n=Object.assign({depth:1,max_depth:10,no_summary:!1},e,{readableObjectMode:!1,writableObjectMode:!1}),t=n.max_depth;delete n.max_depth;const l=n.depth;delete n.depth,super(n),this.depth=l,this.max_depth=t,this.all=new _F,n.tags={24:this._tag_24.bind(this)},this.parser=new vF(n),this.parser.on("value",this._on_value.bind(this)),this.parser.on("start",this._on_start.bind(this)),this.parser.on("start-string",this._on_start_string.bind(this)),this.parser.on("stop",this._on_stop.bind(this)),this.parser.on("more-bytes",this._on_more.bind(this)),this.parser.on("error",this._on_error.bind(this)),n.no_summary||this.parser.on("data",this._on_data.bind(this)),this.parser.bs.on("read",this._on_read.bind(this))}_tag_24(e){const n=new IF({depth:this.depth+1,no_summary:!0});n.on("data",(e=>this.push(e))),n.on("error",(e=>this.emit("error",e))),n.end(e)}_transform(e,n,t){this.parser.write(e,n,t)}_flush(e){return this.parser._flush(e)}static comment(e,n,t){if(null==e)throw new Error("input required");let l="string"==typeof e?"hex":void 0,r=10;switch(typeof n){case"function":t=n;break;case"string":l=n;break;case"number":r=n;break;case"object":const e=n.encoding,i=n.max_depth;l=null!=e?e:l,r=null!=i?i:r;break;case"undefined":break;default:throw new Error("Unknown option type")}const i=new _F,u=new IF({max_depth:r});let o=null;return"function"==typeof t?(u.on("end",(()=>{t(null,i.toString("utf8"))})),u.on("error",t)):o=new Promise(((e,n)=>(u.on("end",(()=>{e(i.toString("utf8"))})),u.on("error",n)))),u.pipe(i),u.end(e,l),o}_on_error(e){this.push("ERROR: "),this.push(e.toString()),this.push("\n")}_on_read(e){this.all.write(e);const n=e.toString("hex");this.push(new Array(this.depth+1).join("  ")),this.push(n);let t=2*(this.max_depth-this.depth);return t-=n.length,t<1&&(t=1),this.push(new Array(t+1).join(" ")),this.push("-- ")}_on_more(e,n,t,l){this.depth++;let r="";switch(e){case EF.POS_INT:r="Positive number,";break;case EF.NEG_INT:r="Negative number,";break;case EF.ARRAY:r="Array, length";break;case EF.MAP:r="Map, count";break;case EF.BYTE_STRING:r="Bytes, length";break;case EF.UTF8_STRING:r="String, length";break;case EF.SIMPLE_FLOAT:r=1===n?"Simple value,":"Float,"}return this.push(r+" next "+n+" byte"+kF(n)+"\n")}_on_start_string(e,n,t,l){this.depth++;let r="";switch(e){case EF.BYTE_STRING:r="Bytes, length: "+n;break;case EF.UTF8_STRING:r="String, length: "+n.toString()}return this.push(r+"\n")}_on_start(e,n,t,l){if(this.depth++,n!==xF.BREAK)switch(t){case EF.ARRAY:this.push(`[${l}], `);break;case EF.MAP:l%2?this.push(`{Val:${Math.floor(l/2)}}, `):this.push(`{Key:${Math.floor(l/2)}}, `)}switch(e){case EF.TAG:this.push(`Tag #${n}`),24==n&&this.push(" Encoded CBOR data item");break;case EF.ARRAY:n===xF.STREAM?this.push("Array (streaming)"):this.push(`Array, ${n} item${kF(n)}`);break;case EF.MAP:n===xF.STREAM?this.push("Map (streaming)"):this.push(`Map, ${n} pair${kF(n)}`);break;case EF.BYTE_STRING:this.push("Bytes (streaming)");break;case EF.UTF8_STRING:this.push("String (streaming)")}return this.push("\n")}_on_stop(e){return this.depth--}_on_value(e,n,t,l){if(e!==xF.BREAK)switch(n){case EF.ARRAY:this.push(`[${t}], `);break;case EF.MAP:t%2?this.push(`{Val:${Math.floor(t/2)}}, `):this.push(`{Key:${Math.floor(t/2)}}, `)}switch(e===xF.BREAK?this.push("BREAK\n"):e===xF.NULL?this.push("null\n"):e===xF.UNDEFINED?this.push("undefined\n"):"string"==typeof e?(this.depth--,e.length>0&&(this.push(JSON.stringify(e)),this.push("\n"))):ue(e)?(this.depth--,e.length>0&&(this.push(e.toString("hex")),this.push("\n"))):e instanceof wF?(this.push(e.toString()),this.push("\n")):(this.push(mF.inspect(e)),this.push("\n")),l){case SF.ONE:case SF.TWO:case SF.FOUR:case SF.EIGHT:this.depth--}}_on_data(){return this.push("0x"),this.push(this.all.read().toString("hex")),this.push("\n")}}var PF=IF;const AF=uP,TF=EK,OF=yF,MF=SK,RF=xK,NF=ce.exports.BigNumber,CF=jK,LF=RF.MT,jF=RF.SYMS;class UF extends AF.Transform{constructor(e){const n=Object.assign({separator:"\n",stream_errors:!1},e,{readableObjectMode:!1,writableObjectMode:!1}),t=n.separator;delete n.separator;const l=n.stream_errors;delete n.stream_errors,super(n),this.float_bytes=-1,this.separator=t,this.stream_errors=l,this.parser=new OF(n),this.parser.on("more-bytes",this._on_more.bind(this)),this.parser.on("value",this._on_value.bind(this)),this.parser.on("start",this._on_start.bind(this)),this.parser.on("stop",this._on_stop.bind(this)),this.parser.on("data",this._on_data.bind(this)),this.parser.on("error",this._on_error.bind(this))}_transform(e,n,t){return this.parser.write(e,n,t)}_flush(e){return this.parser._flush((n=>this.stream_errors?(n&&this._on_error(n),e()):e(n)))}static diagnose(e,n,t){if(null==e)throw new Error("input required");let l={},r="hex";switch(typeof n){case"function":t=n,r=MF.guessEncoding(e);break;case"object":l=MF.extend({},n),r=null!=l.encoding?l.encoding:MF.guessEncoding(e),delete l.encoding;break;default:r=null!=n?n:"hex"}const i=new CF,u=new UF(l);let o=null;return"function"==typeof t?(u.on("end",(()=>t(null,i.toString("utf8")))),u.on("error",t)):o=new Promise(((e,n)=>(u.on("end",(()=>e(i.toString("utf8")))),u.on("error",n)))),u.pipe(i),u.end(e,r),o}_on_error(e){return this.stream_errors?this.push(e.toString()):this.emit("error",e)}_on_more(e,n,t,l){if(e===LF.SIMPLE_FLOAT)return this.float_bytes={2:1,4:2,8:3}[n]}_fore(e,n){switch(e){case LF.BYTE_STRING:case LF.UTF8_STRING:case LF.ARRAY:if(n>0)return this.push(", ");break;case LF.MAP:if(n>0)return n%2?this.push(": "):this.push(", ")}}_on_value(e,n,t){if(e!==jF.BREAK)return this._fore(n,t),this.push((()=>{switch(!1){case e!==jF.NULL:return"null";case e!==jF.UNDEFINED:return"undefined";case"string"!=typeof e:return JSON.stringify(e);case!(this.float_bytes>0):const n=this.float_bytes;return this.float_bytes=-1,TF.inspect(e)+"_"+n;case!ue(e):return"h'"+e.toString("hex")+"'";case!(e instanceof NF):return e.toString();default:return TF.inspect(e)}})())}_on_start(e,n,t,l){switch(this._fore(t,l),e){case LF.TAG:this.push(`${n}(`);break;case LF.ARRAY:this.push("[");break;case LF.MAP:this.push("{");break;case LF.BYTE_STRING:case LF.UTF8_STRING:this.push("(")}if(n===jF.STREAM)return this.push("_ ")}_on_stop(e){switch(e){case LF.TAG:return this.push(")");case LF.ARRAY:return this.push("]");case LF.MAP:return this.push("}");case LF.BYTE_STRING:case LF.UTF8_STRING:return this.push(")")}}_on_data(){return this.push(this.separator)}}var DF=UF;const BF=uP,KF=Mu;ce.exports.BigNumber;const FF=jK,VF=SK,HF=xK,qF=HF.MT,zF=HF.NUMBYTES,$F=HF.SHIFT32,GF=HF.SYMS,WF=HF.TAG,JF=HF.MT.SIMPLE_FLOAT<<5|HF.NUMBYTES.TWO,XF=HF.MT.SIMPLE_FLOAT<<5|HF.NUMBYTES.FOUR,YF=HF.MT.SIMPLE_FLOAT<<5|HF.NUMBYTES.EIGHT,QF=HF.MT.SIMPLE_FLOAT<<5|HF.SIMPLE.TRUE,ZF=HF.MT.SIMPLE_FLOAT<<5|HF.SIMPLE.FALSE,eV=HF.MT.SIMPLE_FLOAT<<5|HF.SIMPLE.UNDEFINED,nV=HF.MT.SIMPLE_FLOAT<<5|HF.SIMPLE.NULL,tV=S.from([255]),lV=VF.bigIntize(HF.BI),rV=HF.BN,iV=S.from("f97e00","hex"),uV=S.from("f9fc00","hex"),oV=S.from("f97c00","hex"),sV=S.from("f98000","hex"),aV=Symbol("CBOR_LOOP_DETECT");class cV extends BF.Transform{constructor(e){const n=Object.assign({},e,{readableObjectMode:!1,writableObjectMode:!0});super(n),this.canonical=n.canonical,this.encodeUndefined=n.encodeUndefined,this.disallowUndefinedKeys=!!n.disallowUndefinedKeys,this.dateType=null!=n.dateType?n.dateType.toLowerCase():"number",this.collapseBigIntegers=!!n.collapseBigIntegers,"symbol"==typeof n.detectLoops?this.detectLoops=n.detectLoops:this.detectLoops=n.detectLoops?Symbol("CBOR_DETECT"):null,this.semanticTypes={Array:this._pushArray,Date:this._pushDate,Buffer:this._pushBuffer,Map:this._pushMap,NoFilter:this._pushNoFilter,RegExp:this._pushRegexp,Set:this._pushSet,BigNumber:this._pushBigNumber,ArrayBuffer:this._pushUint8Array,Uint8ClampedArray:this._pushUint8Array,Uint8Array:this._pushUint8Array,Uint16Array:this._pushArray,Uint32Array:this._pushArray,Int8Array:this._pushArray,Int16Array:this._pushArray,Int32Array:this._pushArray,Float32Array:this._pushFloat32Array,Float64Array:this._pushFloat64Array},KF.Url&&this.addSemanticType("Url",this._pushUrl),KF.URL&&this.addSemanticType("URL",this._pushURL);const t=n.genTypes||[];for(let e=0,n=t.length;e<n;e+=2)this.addSemanticType(t[e],t[e+1])}_transform(e,n,t){return t(!1===this.pushAny(e)?new Error("Push Error"):void 0)}_flush(e){return e()}addSemanticType(e,n){if("function"!=typeof n)throw new TypeError("fun must be of type function");const t="string"==typeof e?e:e.name,l=this.semanticTypes[t];return this.semanticTypes[t]=n,l}_pushUInt8(e){const n=S.allocUnsafe(1);return n.writeUInt8(e,0),this.push(n)}_pushUInt16BE(e){const n=S.allocUnsafe(2);return n.writeUInt16BE(e,0),this.push(n)}_pushUInt32BE(e){const n=S.allocUnsafe(4);return n.writeUInt32BE(e,0),this.push(n)}_pushFloatBE(e){const n=S.allocUnsafe(4);return n.writeFloatBE(e,0),this.push(n)}_pushDoubleBE(e){const n=S.allocUnsafe(8);return n.writeDoubleBE(e,0),this.push(n)}_pushNaN(){return this.push(iV)}_pushInfinity(e){const n=e<0?uV:oV;return this.push(n)}_pushFloat(e){if(this.canonical){const n=S.allocUnsafe(2);if(VF.writeHalf(n,e))return this._pushUInt8(JF)&&this.push(n)}return Math.fround(e)===e?this._pushUInt8(XF)&&this._pushFloatBE(e):this._pushUInt8(YF)&&this._pushDoubleBE(e)}_pushInt(e,n,t){const l=n<<5;switch(!1){case!(e<24):return this._pushUInt8(l|e);case!(e<=255):return this._pushUInt8(l|zF.ONE)&&this._pushUInt8(e);case!(e<=65535):return this._pushUInt8(l|zF.TWO)&&this._pushUInt16BE(e);case!(e<=4294967295):return this._pushUInt8(l|zF.FOUR)&&this._pushUInt32BE(e);case!(e<=Number.MAX_SAFE_INTEGER):return this._pushUInt8(l|zF.EIGHT)&&this._pushUInt32BE(Math.floor(e/$F))&&this._pushUInt32BE(e%$F);default:return n===qF.NEG_INT?this._pushFloat(t):this._pushFloat(e)}}_pushIntNum(e){return Object.is(e,-0)?this.push(sV):e<0?this._pushInt(-e-1,qF.NEG_INT,e):this._pushInt(e,qF.POS_INT)}_pushNumber(e){switch(!1){case!isNaN(e):return this._pushNaN();case isFinite(e):return this._pushInfinity(e);case Math.round(e)!==e:return this._pushIntNum(e);default:return this._pushFloat(e)}}_pushString(e){const n=S.byteLength(e,"utf8");return this._pushInt(n,qF.UTF8_STRING)&&this.push(e,"utf8")}_pushBoolean(e){return this._pushUInt8(e?QF:ZF)}_pushUndefined(e){switch(typeof this.encodeUndefined){case"undefined":return this._pushUInt8(eV);case"function":return this.pushAny(this.encodeUndefined.call(this,e));case"object":if(ue(this.encodeUndefined))return this.push(this.encodeUndefined)}return this.pushAny(this.encodeUndefined)}_pushNull(e){return this._pushUInt8(nV)}_pushArray(e,n,t){t=Object.assign({indefinite:!1},t);const l=n.length;if(t.indefinite){if(!e._pushUInt8(qF.ARRAY<<5|zF.INDEFINITE))return!1}else if(!e._pushInt(l,qF.ARRAY))return!1;for(let t=0;t<l;t++)if(!e.pushAny(n[t]))return!1;return!(t.indefinite&&!e.push(tV))}_pushTag(e){return this._pushInt(e,qF.TAG)}_pushDate(e,n){switch(e.dateType){case"string":return e._pushTag(WF.DATE_STRING)&&e._pushString(n.toISOString());case"int":case"integer":return e._pushTag(WF.DATE_EPOCH)&&e._pushIntNum(Math.round(n/1e3));case"float":return e._pushTag(WF.DATE_EPOCH)&&e._pushFloat(n/1e3);default:return e._pushTag(WF.DATE_EPOCH)&&e.pushAny(n/1e3)}}_pushBuffer(e,n){return e._pushInt(n.length,qF.BYTE_STRING)&&e.push(n)}_pushNoFilter(e,n){return e._pushBuffer(e,n.slice())}_pushRegexp(e,n){return e._pushTag(WF.REGEXP)&&e.pushAny(n.source)}_pushSet(e,n){if(!e._pushInt(n.size,qF.ARRAY))return!1;for(const t of n)if(!e.pushAny(t))return!1;return!0}_pushUrl(e,n){return e._pushTag(WF.URI)&&e.pushAny(n.format())}_pushURL(e,n){return e._pushTag(WF.URI)&&e.pushAny(n.toString())}_pushBigint(e){let n=qF.POS_INT,t=WF.POS_BIGINT;if(e.isNegative()&&(e=e.negated().minus(1),n=qF.NEG_INT,t=WF.NEG_BIGINT),this.collapseBigIntegers&&e.lte(rV.MAXINT64))return e.lte(rV.MAXINT32)?this._pushInt(e.toNumber(),n):this._pushUInt8(n<<5|zF.EIGHT)&&this._pushUInt32BE(e.dividedToIntegerBy(rV.SHIFT32).toNumber())&&this._pushUInt32BE(e.mod(rV.SHIFT32).toNumber());let l=e.toString(16);l.length%2&&(l="0"+l);const r=S.from(l,"hex");return this._pushTag(t)&&this._pushBuffer(this,r)}_pushJSBigint(e){let n=qF.POS_INT,t=WF.POS_BIGINT;if(e<0&&(e=-e+lV.MINUS_ONE,n=qF.NEG_INT,t=WF.NEG_BIGINT),this.collapseBigIntegers&&e<=lV.MAXINT64)return e<=4294967295?this._pushInt(Number(e),n):this._pushUInt8(n<<5|zF.EIGHT)&&this._pushUInt32BE(Number(e/lV.SHIFT32))&&this._pushUInt32BE(Number(e%lV.SHIFT32));let l=e.toString(16);l.length%2&&(l="0"+l);const r=S.from(l,"hex");return this._pushTag(t)&&this._pushBuffer(this,r)}_pushBigNumber(e,n){if(n.isNaN())return e._pushNaN();if(!n.isFinite())return e._pushInfinity(n.isNegative()?-1/0:1/0);if(n.isInteger())return e._pushBigint(n);if(!e._pushTag(WF.DECIMAL_FRAC)||!e._pushInt(2,qF.ARRAY))return!1;const t=n.decimalPlaces(),l=n.shiftedBy(t);return!!e._pushIntNum(-t)&&(l.abs().isLessThan(rV.MAXINT)?e._pushIntNum(l.toNumber()):e._pushBigint(l))}_pushMap(e,n,t){if((t=Object.assign({indefinite:!1},t)).indefinite){if(!e._pushUInt8(qF.MAP<<5|zF.INDEFINITE))return!1}else if(!e._pushInt(n.size,qF.MAP))return!1;if(e.canonical){const t=[...n.entries()],l=new cV(this),r=new FF({highWaterMark:this.readableHighWaterMark});l.pipe(r),t.sort((([e],[n])=>{l.pushAny(e);const t=r.read();l.pushAny(n);const i=r.read();return t.compare(i)}));for(const[n,l]of t){if(e.disallowUndefinedKeys&&void 0===n)throw new Error("Invalid Map key: undefined");if(!e.pushAny(n)||!e.pushAny(l))return!1}}else for(const[t,l]of n){if(e.disallowUndefinedKeys&&void 0===t)throw new Error("Invalid Map key: undefined");if(!e.pushAny(t)||!e.pushAny(l))return!1}return!(t.indefinite&&!e.push(tV))}_pushUint8Array(e,n){return e._pushBuffer(e,S.from(n))}_pushFloat32Array(e,n){const t=n.length;if(!e._pushInt(t,qF.ARRAY))return!1;for(let l=0;l<t;l++)if(!e._pushUInt8(XF)||!e._pushFloatBE(n[l]))return!1;return!0}_pushFloat64Array(e,n){const t=n.length;if(!e._pushInt(t,qF.ARRAY))return!1;for(let l=0;l<t;l++)if(!e._pushUInt8(YF)||!e._pushDoubleBE(n[l]))return!1;return!0}removeLoopDetectors(e){return!!this.detectLoops&&cV.removeLoopDetectors(e,this.detectLoops)}static removeLoopDetectors(e,n=null){if("object"!=typeof e||!e)return!1;const t=e[aV];if(!t)return!1;if(null==n)n=t;else if(n!==t)return!1;if(delete e[aV],Array.isArray(e))for(const t of e)this.removeLoopDetectors(t,n);else for(const t in e)this.removeLoopDetectors(e[t],n);return!0}_pushObject(e,n){if(!e)return this._pushNull(e);if(!(n=Object.assign({indefinite:!1,skipTypes:!1},n)).indefinite&&this.detectLoops){if(e[aV]===this.detectLoops)throw new Error("Loop detected while CBOR encoding");e[aV]=this.detectLoops}if(!n.skipTypes){const n=e.encodeCBOR;if("function"==typeof n)return n.call(e,this);const t=this.semanticTypes[e.constructor.name];if(t)return t.call(e,this,e)}const t=Object.keys(e).filter((n=>"function"!=typeof e[n])),l={};if(this.canonical&&t.sort(((e,n)=>{const t=l[e]||(l[e]=cV.encode(e)),r=l[n]||(l[n]=cV.encode(n));return t.compare(r)})),n.indefinite){if(!this._pushUInt8(qF.MAP<<5|zF.INDEFINITE))return!1}else if(!this._pushInt(t.length,qF.MAP))return!1;let r;for(let n=0,i=t.length;n<i;n++){const i=t[n];if(this.canonical&&(r=l[i])){if(!this.push(r))return!1}else if(!this._pushString(i))return!1;if(!this.pushAny(e[i]))return!1}return!(n.indefinite&&!this.push(tV))}pushAny(e){switch(typeof e){case"number":return this._pushNumber(e);case"bigint":return this._pushJSBigint(e);case"string":return this._pushString(e);case"boolean":return this._pushBoolean(e);case"undefined":return this._pushUndefined(e);case"object":return this._pushObject(e);case"symbol":switch(e){case GF.NULL:return this._pushNull(null);case GF.UNDEFINED:return this._pushUndefined(void 0);default:throw new Error("Unknown symbol: "+e.toString())}default:throw new Error("Unknown type: "+typeof e+", "+(e.toString?e.toString():""))}}_pushAny(e){return this.pushAny(e)}_encodeAll(e){const n=new FF({highWaterMark:this.readableHighWaterMark});this.pipe(n);for(const n of e)this.pushAny(n);return this.end(),n.read()}static encodeIndefinite(e,n,t){if(null==n){if(null==this)throw new Error("No object to encode");n=this}t=Object.assign({chunkSize:4096},t);let l=!0;const r=typeof n;if("string"===r){l=l&&e._pushUInt8(qF.UTF8_STRING<<5|zF.INDEFINITE);let r=0;for(;r<n.length;){const i=r+t.chunkSize;l=l&&e._pushString(n.slice(r,i)),r=i}l=l&&e.push(tV)}else if(ue(n)){l=l&&e._pushUInt8(qF.BYTE_STRING<<5|zF.INDEFINITE);let r=0;for(;r<n.length;){const i=r+t.chunkSize;l=l&&e._pushBuffer(e,n.slice(r,i)),r=i}l=l&&e.push(tV)}else if(Array.isArray(n))l=l&&e._pushArray(e,n,{indefinite:!0});else if(n instanceof Map)l=l&&e._pushMap(e,n,{indefinite:!0});else{if("object"!==r)throw new Error("Invalid indefinite encoding");l=l&&e._pushObject(n,{indefinite:!0,skipTypes:!0})}return l}static encode(...e){return(new cV)._encodeAll(e)}static encodeCanonical(...e){return new cV({canonical:!0})._encodeAll(e)}static encodeOne(e,n){return new cV(n)._encodeAll([e])}static encodeAsync(e,n){return new Promise(((t,l)=>{const r=[],i=new cV(n);i.on("data",(e=>r.push(e))),i.on("error",l),i.on("finish",(()=>t(S.concat(r)))),i.pushAny(e),i.end()}))}}var hV=cV;const fV=hV,dV=yF,pV=xK.MT;class yV extends Map{constructor(e){super(e)}static _encode(e){return fV.encodeCanonical(e).toString("base64")}static _decode(e){return dV.decodeFirstSync(e,"base64")}get(e){return super.get(yV._encode(e))}set(e,n){return super.set(yV._encode(e),n)}delete(e){return super.delete(yV._encode(e))}has(e){return super.has(yV._encode(e))}*keys(){for(const e of super.keys())yield yV._decode(e)}*entries(){for(const e of super.entries())yield[yV._decode(e[0]),e[1]]}[Symbol.iterator](){return this.entries()}forEach(e,n){if("function"!=typeof e)throw new TypeError("Must be function");for(const n of super.entries())e.call(this,n[1],yV._decode(n[0]),this)}encodeCBOR(e){if(!e._pushInt(this.size,pV.MAP))return!1;if(e.canonical){const n=Array.from(super.entries()).map((e=>[S.from(e[0],"base64"),e[1]]));n.sort(((e,n)=>e[0].compare(n[0])));for(const t of n)if(!e.push(t[0])||!e.pushAny(t[1]))return!1}else for(const n of super.entries())if(!e.push(S.from(n[0],"base64"))||!e.pushAny(n[1]))return!1;return!0}}var gV=yV;!function(e){e.BigNumber=ce.exports.BigNumber,e.Commented=PF,e.Diagnose=DF,e.Decoder=yF,e.Encoder=hV,e.Simple=OK,e.Tagged=$K,e.Map=gV,e.comment=e.Commented.comment,e.decodeAll=e.Decoder.decodeAll,e.decodeFirst=e.Decoder.decodeFirst,e.decodeAllSync=e.Decoder.decodeAllSync,e.decodeFirstSync=e.Decoder.decodeFirstSync,e.diagnose=e.Diagnose.diagnose,e.encode=e.Encoder.encode,e.encodeCanonical=e.Encoder.encodeCanonical,e.encodeOne=e.Encoder.encodeOne,e.encodeAsync=e.Encoder.encodeAsync,e.decode=e.Decoder.decodeFirstSync,e.leveldb={decode:e.Decoder.decodeAllSync,encode:e.Encoder.encode,buffer:!0,name:"cbor"},e.hasBigInt=SK.hasBigInt}(_K);var mV={exports:{}};var vV=class{constructor(e,n,t,l){this.name=e,this.code=n,this.alphabet=l,t&&l&&(this.engine=t(l))}encode(e){return this.engine.encode(e)}decode(e){return this.engine.decode(e)}isImplemented(){return this.engine}};const{Buffer:bV}=se;function wV(e,n){const t=e.byteLength,l=new Uint8Array(e),r=n.indexOf("=")===n.length-1;r&&(n=n.substring(0,n.length-1));let i=0,u=0,o="";for(let e=0;e<t;e++)for(u=u<<8|l[e],i+=8;i>=5;)o+=n[u>>>i-5&31],i-=5;if(i>0&&(o+=n[u<<5-i&31]),r)for(;o.length%8!=0;)o+="=";return o}const{Buffer:_V}=se;const EV=vV,SV=function(e){return{encode:e=>"string"==typeof e?bV.from(e).toString("hex"):e.toString("hex"),decode(n){for(const t of n)if(e.indexOf(t)<0)throw new Error("invalid base16 character");return bV.from(n,"hex")}}},xV=function(e){return{encode:n=>wV("string"==typeof n?Uint8Array.from(n):n,e),decode(n){for(const t of n)if(e.indexOf(t)<0)throw new Error("invalid base32 character");return function(e,n){const t=(e=e.replace(new RegExp("=","g"),"")).length;let l=0,r=0,i=0;const u=new Uint8Array(5*t/8|0);for(let o=0;o<t;o++)r=r<<5|n.indexOf(e[o]),l+=5,l>=8&&(u[i++]=r>>>l-8&255,l-=8);return u.buffer}(n,e)}}},kV=function(e){const n=e.indexOf("=")>-1,t=e.indexOf("-")>-1&&e.indexOf("_")>-1;return{encode(e){let l="";l="string"==typeof e?_V.from(e).toString("base64"):e.toString("base64"),t&&(l=l.replace(/\+/g,"-").replace(/\//g,"_"));const r=l.indexOf("=");return r>0&&!n&&(l=l.substring(0,r)),l},decode(n){for(const t of n)if(e.indexOf(t)<0)throw new Error("invalid base64 character");return _V.from(n,"base64")}}},IV=[["base1","1","","1"],["base2","0",$_,"01"],["base8","7",$_,"01234567"],["base10","9",$_,"0123456789"],["base16","f",SV,"0123456789abcdef"],["base32","b",xV,"abcdefghijklmnopqrstuvwxyz234567"],["base32pad","c",xV,"abcdefghijklmnopqrstuvwxyz234567="],["base32hex","v",xV,"0123456789abcdefghijklmnopqrstuv"],["base32hexpad","t",xV,"0123456789abcdefghijklmnopqrstuv="],["base32z","h",xV,"ybndrfg8ejkmcpqxot1uwisza345h769"],["base58flickr","Z",$_,"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],["base58btc","z",$_,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],["base64","m",kV,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],["base64pad","M",kV,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],["base64url","u",kV,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],["base64urlpad","U",kV,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]],PV=IV.reduce(((e,n)=>(e[n[0]]=new EV(n[0],n[1],n[2],n[3]),e)),{}),AV=IV.reduce(((e,n)=>(e[n[1]]=PV[n[0]],e)),{});var TV={names:PV,codes:AV};!function(e,n){const{Buffer:t}=se,l=TV;(n=e.exports=i).encode=function(e,n){const l=u(e);return i(l.name,t.from(l.encode(n)))},n.decode=function(e){t.isBuffer(e)&&(e=e.toString());const n=e.substring(0,1);"string"==typeof(e=e.substring(1,e.length))&&(e=t.from(e));const l=u(n);return t.from(l.decode(e.toString()))},n.isEncoded=function(e){t.isBuffer(e)&&(e=e.toString());if("[object String]"!==Object.prototype.toString.call(e))return!1;const n=e.substring(0,1);try{return u(n).name}catch(e){return!1}},n.names=Object.freeze(Object.keys(l.names)),n.codes=Object.freeze(Object.keys(l.codes));const r=new Error("Unsupported encoding");function i(e,n){if(!n)throw new Error("requires an encoded buffer");const l=u(e),r=t.from(l.code);return function(e,n){u(e).decode(n.toString())}(l.name,n),t.concat([r,n])}function u(e){let n;if(l.names[e])n=l.names[e];else{if(!l.codes[e])throw r;n=l.codes[e]}if(!n.isImplemented())throw new Error("Base "+e+" is not implemented yet");return n}}(mV,mV.exports);var OV={exports:{}};
/**
	 * @license
	 * Lodash <https://lodash.com/>
	 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */!function(e,t){(function(){var l,r="Expected a function",i="__lodash_hash_undefined__",u="__lodash_placeholder__",o=16,s=32,a=64,c=128,h=256,f=1/0,d=9007199254740991,p=NaN,y=4294967295,g=[["ary",c],["bind",1],["bindKey",2],["curry",8],["curryRight",o],["flip",512],["partial",s],["partialRight",a],["rearg",h]],m="[object Arguments]",v="[object Array]",b="[object Boolean]",w="[object Date]",_="[object Error]",E="[object Function]",S="[object GeneratorFunction]",x="[object Map]",k="[object Number]",I="[object Object]",P="[object Promise]",A="[object RegExp]",T="[object Set]",O="[object String]",M="[object Symbol]",R="[object WeakMap]",N="[object ArrayBuffer]",C="[object DataView]",L="[object Float32Array]",j="[object Float64Array]",U="[object Int8Array]",D="[object Int16Array]",B="[object Int32Array]",K="[object Uint8Array]",F="[object Uint8ClampedArray]",V="[object Uint16Array]",H="[object Uint32Array]",q=/\b__p \+= '';/g,z=/\b(__p \+=) '' \+/g,$=/(__e\(.*?\)|\b__t\)) \+\n'';/g,G=/&(?:amp|lt|gt|quot|#39);/g,W=/[&<>"']/g,J=RegExp(G.source),X=RegExp(W.source),Y=/<%-([\s\S]+?)%>/g,Q=/<%([\s\S]+?)%>/g,Z=/<%=([\s\S]+?)%>/g,ee=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ne=/^\w*$/,te=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,le=/[\\^$.*+?()[\]{}|]/g,re=RegExp(le.source),ie=/^\s+/,ue=/\s/,oe=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,se=/\{\n\/\* \[wrapped with (.+)\] \*/,ae=/,? & /,ce=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,he=/[()=,{}\[\]\/\s]/,fe=/\\(\\)?/g,de=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,pe=/\w*$/,ye=/^[-+]0x[0-9a-f]+$/i,ge=/^0b[01]+$/i,me=/^\[object .+?Constructor\]$/,ve=/^0o[0-7]+$/i,be=/^(?:0|[1-9]\d*)$/,we=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,_e=/($^)/,Ee=/['\n\r\u2028\u2029\\]/g,Se="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",xe="\\u2700-\\u27bf",ke="a-z\\xdf-\\xf6\\xf8-\\xff",Ie="A-Z\\xc0-\\xd6\\xd8-\\xde",Pe="\\ufe0e\\ufe0f",Ae="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Te="['’]",Oe="[\\ud800-\\udfff]",Me="["+Ae+"]",Re="["+Se+"]",Ne="\\d+",Ce="[\\u2700-\\u27bf]",Le="["+ke+"]",je="[^\\ud800-\\udfff"+Ae+Ne+xe+ke+Ie+"]",Ue="\\ud83c[\\udffb-\\udfff]",De="[^\\ud800-\\udfff]",Be="(?:\\ud83c[\\udde6-\\uddff]){2}",Ke="[\\ud800-\\udbff][\\udc00-\\udfff]",Fe="["+Ie+"]",Ve="(?:"+Le+"|"+je+")",He="(?:"+Fe+"|"+je+")",qe="(?:['’](?:d|ll|m|re|s|t|ve))?",ze="(?:['’](?:D|LL|M|RE|S|T|VE))?",$e="(?:"+Re+"|"+Ue+")"+"?",Ge="[\\ufe0e\\ufe0f]?",We=Ge+$e+("(?:\\u200d(?:"+[De,Be,Ke].join("|")+")"+Ge+$e+")*"),Je="(?:"+[Ce,Be,Ke].join("|")+")"+We,Xe="(?:"+[De+Re+"?",Re,Be,Ke,Oe].join("|")+")",Ye=RegExp(Te,"g"),Qe=RegExp(Re,"g"),Ze=RegExp(Ue+"(?="+Ue+")|"+Xe+We,"g"),en=RegExp([Fe+"?"+Le+"+"+qe+"(?="+[Me,Fe,"$"].join("|")+")",He+"+"+ze+"(?="+[Me,Fe+Ve,"$"].join("|")+")",Fe+"?"+Ve+"+"+qe,Fe+"+"+ze,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Ne,Je].join("|"),"g"),nn=RegExp("[\\u200d\\ud800-\\udfff"+Se+Pe+"]"),tn=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,ln=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],rn=-1,un={};un[L]=un[j]=un[U]=un[D]=un[B]=un[K]=un[F]=un[V]=un[H]=!0,un[m]=un[v]=un[N]=un[b]=un[C]=un[w]=un[_]=un[E]=un[x]=un[k]=un[I]=un[A]=un[T]=un[O]=un[R]=!1;var on={};on[m]=on[v]=on[N]=on[C]=on[b]=on[w]=on[L]=on[j]=on[U]=on[D]=on[B]=on[x]=on[k]=on[I]=on[A]=on[T]=on[O]=on[M]=on[K]=on[F]=on[V]=on[H]=!0,on[_]=on[E]=on[R]=!1;var sn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},an=parseFloat,cn=parseInt,hn="object"==typeof n&&n&&n.Object===Object&&n,fn="object"==typeof self&&self&&self.Object===Object&&self,dn=hn||fn||Function("return this")(),pn=t&&!t.nodeType&&t,yn=pn&&e&&!e.nodeType&&e,gn=yn&&yn.exports===pn,mn=gn&&hn.process,vn=function(){try{var e=yn&&yn.require&&yn.require("util").types;return e||mn&&mn.binding&&mn.binding("util")}catch(e){}}(),bn=vn&&vn.isArrayBuffer,wn=vn&&vn.isDate,_n=vn&&vn.isMap,En=vn&&vn.isRegExp,Sn=vn&&vn.isSet,xn=vn&&vn.isTypedArray;function kn(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}function In(e,n,t,l){for(var r=-1,i=null==e?0:e.length;++r<i;){var u=e[r];n(l,u,t(u),e)}return l}function Pn(e,n){for(var t=-1,l=null==e?0:e.length;++t<l&&!1!==n(e[t],t,e););return e}function An(e,n){for(var t=null==e?0:e.length;t--&&!1!==n(e[t],t,e););return e}function Tn(e,n){for(var t=-1,l=null==e?0:e.length;++t<l;)if(!n(e[t],t,e))return!1;return!0}function On(e,n){for(var t=-1,l=null==e?0:e.length,r=0,i=[];++t<l;){var u=e[t];n(u,t,e)&&(i[r++]=u)}return i}function Mn(e,n){return!!(null==e?0:e.length)&&Fn(e,n,0)>-1}function Rn(e,n,t){for(var l=-1,r=null==e?0:e.length;++l<r;)if(t(n,e[l]))return!0;return!1}function Nn(e,n){for(var t=-1,l=null==e?0:e.length,r=Array(l);++t<l;)r[t]=n(e[t],t,e);return r}function Cn(e,n){for(var t=-1,l=n.length,r=e.length;++t<l;)e[r+t]=n[t];return e}function Ln(e,n,t,l){var r=-1,i=null==e?0:e.length;for(l&&i&&(t=e[++r]);++r<i;)t=n(t,e[r],r,e);return t}function jn(e,n,t,l){var r=null==e?0:e.length;for(l&&r&&(t=e[--r]);r--;)t=n(t,e[r],r,e);return t}function Un(e,n){for(var t=-1,l=null==e?0:e.length;++t<l;)if(n(e[t],t,e))return!0;return!1}var Dn=zn("length");function Bn(e,n,t){var l;return t(e,(function(e,t,r){if(n(e,t,r))return l=t,!1})),l}function Kn(e,n,t,l){for(var r=e.length,i=t+(l?1:-1);l?i--:++i<r;)if(n(e[i],i,e))return i;return-1}function Fn(e,n,t){return n==n?function(e,n,t){var l=t-1,r=e.length;for(;++l<r;)if(e[l]===n)return l;return-1}(e,n,t):Kn(e,Hn,t)}function Vn(e,n,t,l){for(var r=t-1,i=e.length;++r<i;)if(l(e[r],n))return r;return-1}function Hn(e){return e!=e}function qn(e,n){var t=null==e?0:e.length;return t?Wn(e,n)/t:p}function zn(e){return function(n){return null==n?l:n[e]}}function $n(e){return function(n){return null==e?l:e[n]}}function Gn(e,n,t,l,r){return r(e,(function(e,r,i){t=l?(l=!1,e):n(t,e,r,i)})),t}function Wn(e,n){for(var t,r=-1,i=e.length;++r<i;){var u=n(e[r]);u!==l&&(t=t===l?u:t+u)}return t}function Jn(e,n){for(var t=-1,l=Array(e);++t<e;)l[t]=n(t);return l}function Xn(e){return e?e.slice(0,pt(e)+1).replace(ie,""):e}function Yn(e){return function(n){return e(n)}}function Qn(e,n){return Nn(n,(function(n){return e[n]}))}function Zn(e,n){return e.has(n)}function et(e,n){for(var t=-1,l=e.length;++t<l&&Fn(n,e[t],0)>-1;);return t}function nt(e,n){for(var t=e.length;t--&&Fn(n,e[t],0)>-1;);return t}function tt(e,n){for(var t=e.length,l=0;t--;)e[t]===n&&++l;return l}var lt=$n({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),rt=$n({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function it(e){return"\\"+sn[e]}function ut(e){return nn.test(e)}function ot(e){var n=-1,t=Array(e.size);return e.forEach((function(e,l){t[++n]=[l,e]})),t}function st(e,n){return function(t){return e(n(t))}}function at(e,n){for(var t=-1,l=e.length,r=0,i=[];++t<l;){var o=e[t];o!==n&&o!==u||(e[t]=u,i[r++]=t)}return i}function ct(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}function ht(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=[e,e]})),t}function ft(e){return ut(e)?function(e){var n=Ze.lastIndex=0;for(;Ze.test(e);)++n;return n}(e):Dn(e)}function dt(e){return ut(e)?function(e){return e.match(Ze)||[]}(e):function(e){return e.split("")}(e)}function pt(e){for(var n=e.length;n--&&ue.test(e.charAt(n)););return n}var yt=$n({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var gt=function e(n){var t,ue=(n=null==n?dn:gt.defaults(dn.Object(),n,gt.pick(dn,ln))).Array,Se=n.Date,xe=n.Error,ke=n.Function,Ie=n.Math,Pe=n.Object,Ae=n.RegExp,Te=n.String,Oe=n.TypeError,Me=ue.prototype,Re=ke.prototype,Ne=Pe.prototype,Ce=n["__core-js_shared__"],Le=Re.toString,je=Ne.hasOwnProperty,Ue=0,De=(t=/[^.]+$/.exec(Ce&&Ce.keys&&Ce.keys.IE_PROTO||""))?"Symbol(src)_1."+t:"",Be=Ne.toString,Ke=Le.call(Pe),Fe=dn._,Ve=Ae("^"+Le.call(je).replace(le,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),He=gn?n.Buffer:l,qe=n.Symbol,ze=n.Uint8Array,$e=He?He.allocUnsafe:l,Ge=st(Pe.getPrototypeOf,Pe),We=Pe.create,Je=Ne.propertyIsEnumerable,Xe=Me.splice,Ze=qe?qe.isConcatSpreadable:l,nn=qe?qe.iterator:l,sn=qe?qe.toStringTag:l,hn=function(){try{var e=di(Pe,"defineProperty");return e({},"",{}),e}catch(e){}}(),fn=n.clearTimeout!==dn.clearTimeout&&n.clearTimeout,pn=Se&&Se.now!==dn.Date.now&&Se.now,yn=n.setTimeout!==dn.setTimeout&&n.setTimeout,mn=Ie.ceil,vn=Ie.floor,Dn=Pe.getOwnPropertySymbols,$n=He?He.isBuffer:l,mt=n.isFinite,vt=Me.join,bt=st(Pe.keys,Pe),wt=Ie.max,_t=Ie.min,Et=Se.now,St=n.parseInt,xt=Ie.random,kt=Me.reverse,It=di(n,"DataView"),Pt=di(n,"Map"),At=di(n,"Promise"),Tt=di(n,"Set"),Ot=di(n,"WeakMap"),Mt=di(Pe,"create"),Rt=Ot&&new Ot,Nt={},Ct=Ki(It),Lt=Ki(Pt),jt=Ki(At),Ut=Ki(Tt),Dt=Ki(Ot),Bt=qe?qe.prototype:l,Kt=Bt?Bt.valueOf:l,Ft=Bt?Bt.toString:l;function Vt(e){if(lo(e)&&!$u(e)&&!(e instanceof $t)){if(e instanceof zt)return e;if(je.call(e,"__wrapped__"))return Fi(e)}return new zt(e)}var Ht=function(){function e(){}return function(n){if(!to(n))return{};if(We)return We(n);e.prototype=n;var t=new e;return e.prototype=l,t}}();function qt(){}function zt(e,n){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=l}function $t(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=y,this.__views__=[]}function Gt(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function Wt(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function Jt(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function Xt(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new Jt;++n<t;)this.add(e[n])}function Yt(e){var n=this.__data__=new Wt(e);this.size=n.size}function Qt(e,n){var t=$u(e),l=!t&&zu(e),r=!t&&!l&&Xu(e),i=!t&&!l&&!r&&ho(e),u=t||l||r||i,o=u?Jn(e.length,Te):[],s=o.length;for(var a in e)!n&&!je.call(e,a)||u&&("length"==a||r&&("offset"==a||"parent"==a)||i&&("buffer"==a||"byteLength"==a||"byteOffset"==a)||wi(a,s))||o.push(a);return o}function Zt(e){var n=e.length;return n?e[Xl(0,n-1)]:l}function el(e,n){return Ui(Mr(e),al(n,0,e.length))}function nl(e){return Ui(Mr(e))}function tl(e,n,t){(t!==l&&!Vu(e[n],t)||t===l&&!(n in e))&&ol(e,n,t)}function ll(e,n,t){var r=e[n];je.call(e,n)&&Vu(r,t)&&(t!==l||n in e)||ol(e,n,t)}function rl(e,n){for(var t=e.length;t--;)if(Vu(e[t][0],n))return t;return-1}function il(e,n,t,l){return pl(e,(function(e,r,i){n(l,e,t(e),i)})),l}function ul(e,n){return e&&Rr(n,Co(n),e)}function ol(e,n,t){"__proto__"==n&&hn?hn(e,n,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[n]=t}function sl(e,n){for(var t=-1,r=n.length,i=ue(r),u=null==e;++t<r;)i[t]=u?l:To(e,n[t]);return i}function al(e,n,t){return e==e&&(t!==l&&(e=e<=t?e:t),n!==l&&(e=e>=n?e:n)),e}function cl(e,n,t,r,i,u){var o,s=1&n,a=2&n,c=4&n;if(t&&(o=i?t(e,r,i,u):t(e)),o!==l)return o;if(!to(e))return e;var h=$u(e);if(h){if(o=function(e){var n=e.length,t=new e.constructor(n);n&&"string"==typeof e[0]&&je.call(e,"index")&&(t.index=e.index,t.input=e.input);return t}(e),!s)return Mr(e,o)}else{var f=gi(e),d=f==E||f==S;if(Xu(e))return kr(e,s);if(f==I||f==m||d&&!i){if(o=a||d?{}:vi(e),!s)return a?function(e,n){return Rr(e,yi(e),n)}(e,function(e,n){return e&&Rr(n,Lo(n),e)}(o,e)):function(e,n){return Rr(e,pi(e),n)}(e,ul(o,e))}else{if(!on[f])return i?e:{};o=function(e,n,t){var l=e.constructor;switch(n){case N:return Ir(e);case b:case w:return new l(+e);case C:return function(e,n){var t=n?Ir(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}(e,t);case L:case j:case U:case D:case B:case K:case F:case V:case H:return Pr(e,t);case x:return new l;case k:case O:return new l(e);case A:return function(e){var n=new e.constructor(e.source,pe.exec(e));return n.lastIndex=e.lastIndex,n}(e);case T:return new l;case M:return r=e,Kt?Pe(Kt.call(r)):{}}var r}(e,f,s)}}u||(u=new Yt);var p=u.get(e);if(p)return p;u.set(e,o),so(e)?e.forEach((function(l){o.add(cl(l,n,t,l,e,u))})):ro(e)&&e.forEach((function(l,r){o.set(r,cl(l,n,t,r,e,u))}));var y=h?l:(c?a?ui:ii:a?Lo:Co)(e);return Pn(y||e,(function(l,r){y&&(l=e[r=l]),ll(o,r,cl(l,n,t,r,e,u))})),o}function hl(e,n,t){var r=t.length;if(null==e)return!r;for(e=Pe(e);r--;){var i=t[r],u=n[i],o=e[i];if(o===l&&!(i in e)||!u(o))return!1}return!0}function fl(e,n,t){if("function"!=typeof e)throw new Oe(r);return Ni((function(){e.apply(l,t)}),n)}function dl(e,n,t,l){var r=-1,i=Mn,u=!0,o=e.length,s=[],a=n.length;if(!o)return s;t&&(n=Nn(n,Yn(t))),l?(i=Rn,u=!1):n.length>=200&&(i=Zn,u=!1,n=new Xt(n));e:for(;++r<o;){var c=e[r],h=null==t?c:t(c);if(c=l||0!==c?c:0,u&&h==h){for(var f=a;f--;)if(n[f]===h)continue e;s.push(c)}else i(n,h,l)||s.push(c)}return s}Vt.templateSettings={escape:Y,evaluate:Q,interpolate:Z,variable:"",imports:{_:Vt}},Vt.prototype=qt.prototype,Vt.prototype.constructor=Vt,zt.prototype=Ht(qt.prototype),zt.prototype.constructor=zt,$t.prototype=Ht(qt.prototype),$t.prototype.constructor=$t,Gt.prototype.clear=function(){this.__data__=Mt?Mt(null):{},this.size=0},Gt.prototype.delete=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n},Gt.prototype.get=function(e){var n=this.__data__;if(Mt){var t=n[e];return t===i?l:t}return je.call(n,e)?n[e]:l},Gt.prototype.has=function(e){var n=this.__data__;return Mt?n[e]!==l:je.call(n,e)},Gt.prototype.set=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=Mt&&n===l?i:n,this},Wt.prototype.clear=function(){this.__data__=[],this.size=0},Wt.prototype.delete=function(e){var n=this.__data__,t=rl(n,e);return!(t<0)&&(t==n.length-1?n.pop():Xe.call(n,t,1),--this.size,!0)},Wt.prototype.get=function(e){var n=this.__data__,t=rl(n,e);return t<0?l:n[t][1]},Wt.prototype.has=function(e){return rl(this.__data__,e)>-1},Wt.prototype.set=function(e,n){var t=this.__data__,l=rl(t,e);return l<0?(++this.size,t.push([e,n])):t[l][1]=n,this},Jt.prototype.clear=function(){this.size=0,this.__data__={hash:new Gt,map:new(Pt||Wt),string:new Gt}},Jt.prototype.delete=function(e){var n=hi(this,e).delete(e);return this.size-=n?1:0,n},Jt.prototype.get=function(e){return hi(this,e).get(e)},Jt.prototype.has=function(e){return hi(this,e).has(e)},Jt.prototype.set=function(e,n){var t=hi(this,e),l=t.size;return t.set(e,n),this.size+=t.size==l?0:1,this},Xt.prototype.add=Xt.prototype.push=function(e){return this.__data__.set(e,i),this},Xt.prototype.has=function(e){return this.__data__.has(e)},Yt.prototype.clear=function(){this.__data__=new Wt,this.size=0},Yt.prototype.delete=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t},Yt.prototype.get=function(e){return this.__data__.get(e)},Yt.prototype.has=function(e){return this.__data__.has(e)},Yt.prototype.set=function(e,n){var t=this.__data__;if(t instanceof Wt){var l=t.__data__;if(!Pt||l.length<199)return l.push([e,n]),this.size=++t.size,this;t=this.__data__=new Jt(l)}return t.set(e,n),this.size=t.size,this};var pl=Lr(El),yl=Lr(Sl,!0);function gl(e,n){var t=!0;return pl(e,(function(e,l,r){return t=!!n(e,l,r)})),t}function ml(e,n,t){for(var r=-1,i=e.length;++r<i;){var u=e[r],o=n(u);if(null!=o&&(s===l?o==o&&!co(o):t(o,s)))var s=o,a=u}return a}function vl(e,n){var t=[];return pl(e,(function(e,l,r){n(e,l,r)&&t.push(e)})),t}function bl(e,n,t,l,r){var i=-1,u=e.length;for(t||(t=bi),r||(r=[]);++i<u;){var o=e[i];n>0&&t(o)?n>1?bl(o,n-1,t,l,r):Cn(r,o):l||(r[r.length]=o)}return r}var wl=jr(),_l=jr(!0);function El(e,n){return e&&wl(e,n,Co)}function Sl(e,n){return e&&_l(e,n,Co)}function xl(e,n){return On(n,(function(n){return Zu(e[n])}))}function kl(e,n){for(var t=0,r=(n=_r(n,e)).length;null!=e&&t<r;)e=e[Bi(n[t++])];return t&&t==r?e:l}function Il(e,n,t){var l=n(e);return $u(e)?l:Cn(l,t(e))}function Pl(e){return null==e?e===l?"[object Undefined]":"[object Null]":sn&&sn in Pe(e)?function(e){var n=je.call(e,sn),t=e[sn];try{e[sn]=l;var r=!0}catch(e){}var i=Be.call(e);r&&(n?e[sn]=t:delete e[sn]);return i}(e):function(e){return Be.call(e)}(e)}function Al(e,n){return e>n}function Tl(e,n){return null!=e&&je.call(e,n)}function Ol(e,n){return null!=e&&n in Pe(e)}function Ml(e,n,t){for(var r=t?Rn:Mn,i=e[0].length,u=e.length,o=u,s=ue(u),a=1/0,c=[];o--;){var h=e[o];o&&n&&(h=Nn(h,Yn(n))),a=_t(h.length,a),s[o]=!t&&(n||i>=120&&h.length>=120)?new Xt(o&&h):l}h=e[0];var f=-1,d=s[0];e:for(;++f<i&&c.length<a;){var p=h[f],y=n?n(p):p;if(p=t||0!==p?p:0,!(d?Zn(d,y):r(c,y,t))){for(o=u;--o;){var g=s[o];if(!(g?Zn(g,y):r(e[o],y,t)))continue e}d&&d.push(y),c.push(p)}}return c}function Rl(e,n,t){var r=null==(e=Ti(e,n=_r(n,e)))?e:e[Bi(Qi(n))];return null==r?l:kn(r,e,t)}function Nl(e){return lo(e)&&Pl(e)==m}function Cl(e,n,t,r,i){return e===n||(null==e||null==n||!lo(e)&&!lo(n)?e!=e&&n!=n:function(e,n,t,r,i,u){var o=$u(e),s=$u(n),a=o?v:gi(e),c=s?v:gi(n),h=(a=a==m?I:a)==I,f=(c=c==m?I:c)==I,d=a==c;if(d&&Xu(e)){if(!Xu(n))return!1;o=!0,h=!1}if(d&&!h)return u||(u=new Yt),o||ho(e)?li(e,n,t,r,i,u):function(e,n,t,l,r,i,u){switch(t){case C:if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case N:return!(e.byteLength!=n.byteLength||!i(new ze(e),new ze(n)));case b:case w:case k:return Vu(+e,+n);case _:return e.name==n.name&&e.message==n.message;case A:case O:return e==n+"";case x:var o=ot;case T:var s=1&l;if(o||(o=ct),e.size!=n.size&&!s)return!1;var a=u.get(e);if(a)return a==n;l|=2,u.set(e,n);var c=li(o(e),o(n),l,r,i,u);return u.delete(e),c;case M:if(Kt)return Kt.call(e)==Kt.call(n)}return!1}(e,n,a,t,r,i,u);if(!(1&t)){var p=h&&je.call(e,"__wrapped__"),y=f&&je.call(n,"__wrapped__");if(p||y){var g=p?e.value():e,E=y?n.value():n;return u||(u=new Yt),i(g,E,t,r,u)}}if(!d)return!1;return u||(u=new Yt),function(e,n,t,r,i,u){var o=1&t,s=ii(e),a=s.length,c=ii(n).length;if(a!=c&&!o)return!1;var h=a;for(;h--;){var f=s[h];if(!(o?f in n:je.call(n,f)))return!1}var d=u.get(e),p=u.get(n);if(d&&p)return d==n&&p==e;var y=!0;u.set(e,n),u.set(n,e);var g=o;for(;++h<a;){var m=e[f=s[h]],v=n[f];if(r)var b=o?r(v,m,f,n,e,u):r(m,v,f,e,n,u);if(!(b===l?m===v||i(m,v,t,r,u):b)){y=!1;break}g||(g="constructor"==f)}if(y&&!g){var w=e.constructor,_=n.constructor;w==_||!("constructor"in e)||!("constructor"in n)||"function"==typeof w&&w instanceof w&&"function"==typeof _&&_ instanceof _||(y=!1)}return u.delete(e),u.delete(n),y}(e,n,t,r,i,u)}(e,n,t,r,Cl,i))}function Ll(e,n,t,r){var i=t.length,u=i,o=!r;if(null==e)return!u;for(e=Pe(e);i--;){var s=t[i];if(o&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++i<u;){var a=(s=t[i])[0],c=e[a],h=s[1];if(o&&s[2]){if(c===l&&!(a in e))return!1}else{var f=new Yt;if(r)var d=r(c,h,a,e,n,f);if(!(d===l?Cl(h,c,3,r,f):d))return!1}}return!0}function jl(e){return!(!to(e)||(n=e,De&&De in n))&&(Zu(e)?Ve:me).test(Ki(e));var n}function Ul(e){return"function"==typeof e?e:null==e?us:"object"==typeof e?$u(e)?Hl(e[0],e[1]):Vl(e):ys(e)}function Dl(e){if(!ki(e))return bt(e);var n=[];for(var t in Pe(e))je.call(e,t)&&"constructor"!=t&&n.push(t);return n}function Bl(e){if(!to(e))return function(e){var n=[];if(null!=e)for(var t in Pe(e))n.push(t);return n}(e);var n=ki(e),t=[];for(var l in e)("constructor"!=l||!n&&je.call(e,l))&&t.push(l);return t}function Kl(e,n){return e<n}function Fl(e,n){var t=-1,l=Wu(e)?ue(e.length):[];return pl(e,(function(e,r,i){l[++t]=n(e,r,i)})),l}function Vl(e){var n=fi(e);return 1==n.length&&n[0][2]?Pi(n[0][0],n[0][1]):function(t){return t===e||Ll(t,e,n)}}function Hl(e,n){return Ei(e)&&Ii(n)?Pi(Bi(e),n):function(t){var r=To(t,e);return r===l&&r===n?Oo(t,e):Cl(n,r,3)}}function ql(e,n,t,r,i){e!==n&&wl(n,(function(u,o){if(i||(i=new Yt),to(u))!function(e,n,t,r,i,u,o){var s=Mi(e,t),a=Mi(n,t),c=o.get(a);if(c)return void tl(e,t,c);var h=u?u(s,a,t+"",e,n,o):l,f=h===l;if(f){var d=$u(a),p=!d&&Xu(a),y=!d&&!p&&ho(a);h=a,d||p||y?$u(s)?h=s:Ju(s)?h=Mr(s):p?(f=!1,h=kr(a,!0)):y?(f=!1,h=Pr(a,!0)):h=[]:uo(a)||zu(a)?(h=s,zu(s)?h=wo(s):to(s)&&!Zu(s)||(h=vi(a))):f=!1}f&&(o.set(a,h),i(h,a,r,u,o),o.delete(a));tl(e,t,h)}(e,n,o,t,ql,r,i);else{var s=r?r(Mi(e,o),u,o+"",e,n,i):l;s===l&&(s=u),tl(e,o,s)}}),Lo)}function zl(e,n){var t=e.length;if(t)return wi(n+=n<0?t:0,t)?e[n]:l}function $l(e,n,t){n=n.length?Nn(n,(function(e){return $u(e)?function(n){return kl(n,1===e.length?e[0]:e)}:e})):[us];var l=-1;n=Nn(n,Yn(ci()));var r=Fl(e,(function(e,t,r){var i=Nn(n,(function(n){return n(e)}));return{criteria:i,index:++l,value:e}}));return function(e,n){var t=e.length;for(e.sort(n);t--;)e[t]=e[t].value;return e}(r,(function(e,n){return function(e,n,t){var l=-1,r=e.criteria,i=n.criteria,u=r.length,o=t.length;for(;++l<u;){var s=Ar(r[l],i[l]);if(s)return l>=o?s:s*("desc"==t[l]?-1:1)}return e.index-n.index}(e,n,t)}))}function Gl(e,n,t){for(var l=-1,r=n.length,i={};++l<r;){var u=n[l],o=kl(e,u);t(o,u)&&nr(i,_r(u,e),o)}return i}function Wl(e,n,t,l){var r=l?Vn:Fn,i=-1,u=n.length,o=e;for(e===n&&(n=Mr(n)),t&&(o=Nn(e,Yn(t)));++i<u;)for(var s=0,a=n[i],c=t?t(a):a;(s=r(o,c,s,l))>-1;)o!==e&&Xe.call(o,s,1),Xe.call(e,s,1);return e}function Jl(e,n){for(var t=e?n.length:0,l=t-1;t--;){var r=n[t];if(t==l||r!==i){var i=r;wi(r)?Xe.call(e,r,1):dr(e,r)}}return e}function Xl(e,n){return e+vn(xt()*(n-e+1))}function Yl(e,n){var t="";if(!e||n<1||n>d)return t;do{n%2&&(t+=e),(n=vn(n/2))&&(e+=e)}while(n);return t}function Ql(e,n){return Ci(Ai(e,n,us),e+"")}function Zl(e){return Zt(Ho(e))}function er(e,n){var t=Ho(e);return Ui(t,al(n,0,t.length))}function nr(e,n,t,r){if(!to(e))return e;for(var i=-1,u=(n=_r(n,e)).length,o=u-1,s=e;null!=s&&++i<u;){var a=Bi(n[i]),c=t;if("__proto__"===a||"constructor"===a||"prototype"===a)return e;if(i!=o){var h=s[a];(c=r?r(h,a,s):l)===l&&(c=to(h)?h:wi(n[i+1])?[]:{})}ll(s,a,c),s=s[a]}return e}var tr=Rt?function(e,n){return Rt.set(e,n),e}:us,lr=hn?function(e,n){return hn(e,"toString",{configurable:!0,enumerable:!1,value:ls(n),writable:!0})}:us;function rr(e){return Ui(Ho(e))}function ir(e,n,t){var l=-1,r=e.length;n<0&&(n=-n>r?0:r+n),(t=t>r?r:t)<0&&(t+=r),r=n>t?0:t-n>>>0,n>>>=0;for(var i=ue(r);++l<r;)i[l]=e[l+n];return i}function ur(e,n){var t;return pl(e,(function(e,l,r){return!(t=n(e,l,r))})),!!t}function or(e,n,t){var l=0,r=null==e?l:e.length;if("number"==typeof n&&n==n&&r<=2147483647){for(;l<r;){var i=l+r>>>1,u=e[i];null!==u&&!co(u)&&(t?u<=n:u<n)?l=i+1:r=i}return r}return sr(e,n,us,t)}function sr(e,n,t,r){var i=0,u=null==e?0:e.length;if(0===u)return 0;for(var o=(n=t(n))!=n,s=null===n,a=co(n),c=n===l;i<u;){var h=vn((i+u)/2),f=t(e[h]),d=f!==l,p=null===f,y=f==f,g=co(f);if(o)var m=r||y;else m=c?y&&(r||d):s?y&&d&&(r||!p):a?y&&d&&!p&&(r||!g):!p&&!g&&(r?f<=n:f<n);m?i=h+1:u=h}return _t(u,4294967294)}function ar(e,n){for(var t=-1,l=e.length,r=0,i=[];++t<l;){var u=e[t],o=n?n(u):u;if(!t||!Vu(o,s)){var s=o;i[r++]=0===u?0:u}}return i}function cr(e){return"number"==typeof e?e:co(e)?p:+e}function hr(e){if("string"==typeof e)return e;if($u(e))return Nn(e,hr)+"";if(co(e))return Ft?Ft.call(e):"";var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}function fr(e,n,t){var l=-1,r=Mn,i=e.length,u=!0,o=[],s=o;if(t)u=!1,r=Rn;else if(i>=200){var a=n?null:Yr(e);if(a)return ct(a);u=!1,r=Zn,s=new Xt}else s=n?[]:o;e:for(;++l<i;){var c=e[l],h=n?n(c):c;if(c=t||0!==c?c:0,u&&h==h){for(var f=s.length;f--;)if(s[f]===h)continue e;n&&s.push(h),o.push(c)}else r(s,h,t)||(s!==o&&s.push(h),o.push(c))}return o}function dr(e,n){return null==(e=Ti(e,n=_r(n,e)))||delete e[Bi(Qi(n))]}function pr(e,n,t,l){return nr(e,n,t(kl(e,n)),l)}function yr(e,n,t,l){for(var r=e.length,i=l?r:-1;(l?i--:++i<r)&&n(e[i],i,e););return t?ir(e,l?0:i,l?i+1:r):ir(e,l?i+1:0,l?r:i)}function gr(e,n){var t=e;return t instanceof $t&&(t=t.value()),Ln(n,(function(e,n){return n.func.apply(n.thisArg,Cn([e],n.args))}),t)}function mr(e,n,t){var l=e.length;if(l<2)return l?fr(e[0]):[];for(var r=-1,i=ue(l);++r<l;)for(var u=e[r],o=-1;++o<l;)o!=r&&(i[r]=dl(i[r]||u,e[o],n,t));return fr(bl(i,1),n,t)}function vr(e,n,t){for(var r=-1,i=e.length,u=n.length,o={};++r<i;){var s=r<u?n[r]:l;t(o,e[r],s)}return o}function br(e){return Ju(e)?e:[]}function wr(e){return"function"==typeof e?e:us}function _r(e,n){return $u(e)?e:Ei(e,n)?[e]:Di(_o(e))}var Er=Ql;function Sr(e,n,t){var r=e.length;return t=t===l?r:t,!n&&t>=r?e:ir(e,n,t)}var xr=fn||function(e){return dn.clearTimeout(e)};function kr(e,n){if(n)return e.slice();var t=e.length,l=$e?$e(t):new e.constructor(t);return e.copy(l),l}function Ir(e){var n=new e.constructor(e.byteLength);return new ze(n).set(new ze(e)),n}function Pr(e,n){var t=n?Ir(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}function Ar(e,n){if(e!==n){var t=e!==l,r=null===e,i=e==e,u=co(e),o=n!==l,s=null===n,a=n==n,c=co(n);if(!s&&!c&&!u&&e>n||u&&o&&a&&!s&&!c||r&&o&&a||!t&&a||!i)return 1;if(!r&&!u&&!c&&e<n||c&&t&&i&&!r&&!u||s&&t&&i||!o&&i||!a)return-1}return 0}function Tr(e,n,t,l){for(var r=-1,i=e.length,u=t.length,o=-1,s=n.length,a=wt(i-u,0),c=ue(s+a),h=!l;++o<s;)c[o]=n[o];for(;++r<u;)(h||r<i)&&(c[t[r]]=e[r]);for(;a--;)c[o++]=e[r++];return c}function Or(e,n,t,l){for(var r=-1,i=e.length,u=-1,o=t.length,s=-1,a=n.length,c=wt(i-o,0),h=ue(c+a),f=!l;++r<c;)h[r]=e[r];for(var d=r;++s<a;)h[d+s]=n[s];for(;++u<o;)(f||r<i)&&(h[d+t[u]]=e[r++]);return h}function Mr(e,n){var t=-1,l=e.length;for(n||(n=ue(l));++t<l;)n[t]=e[t];return n}function Rr(e,n,t,r){var i=!t;t||(t={});for(var u=-1,o=n.length;++u<o;){var s=n[u],a=r?r(t[s],e[s],s,t,e):l;a===l&&(a=e[s]),i?ol(t,s,a):ll(t,s,a)}return t}function Nr(e,n){return function(t,l){var r=$u(t)?In:il,i=n?n():{};return r(t,e,ci(l,2),i)}}function Cr(e){return Ql((function(n,t){var r=-1,i=t.length,u=i>1?t[i-1]:l,o=i>2?t[2]:l;for(u=e.length>3&&"function"==typeof u?(i--,u):l,o&&_i(t[0],t[1],o)&&(u=i<3?l:u,i=1),n=Pe(n);++r<i;){var s=t[r];s&&e(n,s,r,u)}return n}))}function Lr(e,n){return function(t,l){if(null==t)return t;if(!Wu(t))return e(t,l);for(var r=t.length,i=n?r:-1,u=Pe(t);(n?i--:++i<r)&&!1!==l(u[i],i,u););return t}}function jr(e){return function(n,t,l){for(var r=-1,i=Pe(n),u=l(n),o=u.length;o--;){var s=u[e?o:++r];if(!1===t(i[s],s,i))break}return n}}function Ur(e){return function(n){var t=ut(n=_o(n))?dt(n):l,r=t?t[0]:n.charAt(0),i=t?Sr(t,1).join(""):n.slice(1);return r[e]()+i}}function Dr(e){return function(n){return Ln(es($o(n).replace(Ye,"")),e,"")}}function Br(e){return function(){var n=arguments;switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3]);case 5:return new e(n[0],n[1],n[2],n[3],n[4]);case 6:return new e(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new e(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var t=Ht(e.prototype),l=e.apply(t,n);return to(l)?l:t}}function Kr(e){return function(n,t,r){var i=Pe(n);if(!Wu(n)){var u=ci(t,3);n=Co(n),t=function(e){return u(i[e],e,i)}}var o=e(n,t,r);return o>-1?i[u?n[o]:o]:l}}function Fr(e){return ri((function(n){var t=n.length,i=t,u=zt.prototype.thru;for(e&&n.reverse();i--;){var o=n[i];if("function"!=typeof o)throw new Oe(r);if(u&&!s&&"wrapper"==si(o))var s=new zt([],!0)}for(i=s?i:t;++i<t;){var a=si(o=n[i]),c="wrapper"==a?oi(o):l;s=c&&Si(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?s[si(c[0])].apply(s,c[3]):1==o.length&&Si(o)?s[a]():s.thru(o)}return function(){var e=arguments,l=e[0];if(s&&1==e.length&&$u(l))return s.plant(l).value();for(var r=0,i=t?n[r].apply(this,e):l;++r<t;)i=n[r].call(this,i);return i}}))}function Vr(e,n,t,r,i,u,o,s,a,h){var f=n&c,d=1&n,p=2&n,y=24&n,g=512&n,m=p?l:Br(e);return function l(){for(var c=arguments.length,v=ue(c),b=c;b--;)v[b]=arguments[b];if(y)var w=ai(l),_=tt(v,w);if(r&&(v=Tr(v,r,i,y)),u&&(v=Or(v,u,o,y)),c-=_,y&&c<h){var E=at(v,w);return Jr(e,n,Vr,l.placeholder,t,v,E,s,a,h-c)}var S=d?t:this,x=p?S[e]:e;return c=v.length,s?v=Oi(v,s):g&&c>1&&v.reverse(),f&&a<c&&(v.length=a),this&&this!==dn&&this instanceof l&&(x=m||Br(x)),x.apply(S,v)}}function Hr(e,n){return function(t,l){return function(e,n,t,l){return El(e,(function(e,r,i){n(l,t(e),r,i)})),l}(t,e,n(l),{})}}function qr(e,n){return function(t,r){var i;if(t===l&&r===l)return n;if(t!==l&&(i=t),r!==l){if(i===l)return r;"string"==typeof t||"string"==typeof r?(t=hr(t),r=hr(r)):(t=cr(t),r=cr(r)),i=e(t,r)}return i}}function zr(e){return ri((function(n){return n=Nn(n,Yn(ci())),Ql((function(t){var l=this;return e(n,(function(e){return kn(e,l,t)}))}))}))}function $r(e,n){var t=(n=n===l?" ":hr(n)).length;if(t<2)return t?Yl(n,e):n;var r=Yl(n,mn(e/ft(n)));return ut(n)?Sr(dt(r),0,e).join(""):r.slice(0,e)}function Gr(e){return function(n,t,r){return r&&"number"!=typeof r&&_i(n,t,r)&&(t=r=l),n=go(n),t===l?(t=n,n=0):t=go(t),function(e,n,t,l){for(var r=-1,i=wt(mn((n-e)/(t||1)),0),u=ue(i);i--;)u[l?i:++r]=e,e+=t;return u}(n,t,r=r===l?n<t?1:-1:go(r),e)}}function Wr(e){return function(n,t){return"string"==typeof n&&"string"==typeof t||(n=bo(n),t=bo(t)),e(n,t)}}function Jr(e,n,t,r,i,u,o,c,h,f){var d=8&n;n|=d?s:a,4&(n&=~(d?a:s))||(n&=-4);var p=[e,n,i,d?u:l,d?o:l,d?l:u,d?l:o,c,h,f],y=t.apply(l,p);return Si(e)&&Ri(y,p),y.placeholder=r,Li(y,e,n)}function Xr(e){var n=Ie[e];return function(e,t){if(e=bo(e),(t=null==t?0:_t(mo(t),292))&&mt(e)){var l=(_o(e)+"e").split("e");return+((l=(_o(n(l[0]+"e"+(+l[1]+t)))+"e").split("e"))[0]+"e"+(+l[1]-t))}return n(e)}}var Yr=Tt&&1/ct(new Tt([,-0]))[1]==f?function(e){return new Tt(e)}:hs;function Qr(e){return function(n){var t=gi(n);return t==x?ot(n):t==T?ht(n):function(e,n){return Nn(n,(function(n){return[n,e[n]]}))}(n,e(n))}}function Zr(e,n,t,i,f,d,p,y){var g=2&n;if(!g&&"function"!=typeof e)throw new Oe(r);var m=i?i.length:0;if(m||(n&=-97,i=f=l),p=p===l?p:wt(mo(p),0),y=y===l?y:mo(y),m-=f?f.length:0,n&a){var v=i,b=f;i=f=l}var w=g?l:oi(e),_=[e,n,t,i,f,v,b,d,p,y];if(w&&function(e,n){var t=e[1],l=n[1],r=t|l,i=r<131,o=l==c&&8==t||l==c&&t==h&&e[7].length<=n[8]||384==l&&n[7].length<=n[8]&&8==t;if(!i&&!o)return e;1&l&&(e[2]=n[2],r|=1&t?0:4);var s=n[3];if(s){var a=e[3];e[3]=a?Tr(a,s,n[4]):s,e[4]=a?at(e[3],u):n[4]}(s=n[5])&&(a=e[5],e[5]=a?Or(a,s,n[6]):s,e[6]=a?at(e[5],u):n[6]);(s=n[7])&&(e[7]=s);l&c&&(e[8]=null==e[8]?n[8]:_t(e[8],n[8]));null==e[9]&&(e[9]=n[9]);e[0]=n[0],e[1]=r}(_,w),e=_[0],n=_[1],t=_[2],i=_[3],f=_[4],!(y=_[9]=_[9]===l?g?0:e.length:wt(_[9]-m,0))&&24&n&&(n&=-25),n&&1!=n)E=8==n||n==o?function(e,n,t){var r=Br(e);return function i(){for(var u=arguments.length,o=ue(u),s=u,a=ai(i);s--;)o[s]=arguments[s];var c=u<3&&o[0]!==a&&o[u-1]!==a?[]:at(o,a);return(u-=c.length)<t?Jr(e,n,Vr,i.placeholder,l,o,c,l,l,t-u):kn(this&&this!==dn&&this instanceof i?r:e,this,o)}}(e,n,y):n!=s&&33!=n||f.length?Vr.apply(l,_):function(e,n,t,l){var r=1&n,i=Br(e);return function n(){for(var u=-1,o=arguments.length,s=-1,a=l.length,c=ue(a+o),h=this&&this!==dn&&this instanceof n?i:e;++s<a;)c[s]=l[s];for(;o--;)c[s++]=arguments[++u];return kn(h,r?t:this,c)}}(e,n,t,i);else var E=function(e,n,t){var l=1&n,r=Br(e);return function n(){return(this&&this!==dn&&this instanceof n?r:e).apply(l?t:this,arguments)}}(e,n,t);return Li((w?tr:Ri)(E,_),e,n)}function ei(e,n,t,r){return e===l||Vu(e,Ne[t])&&!je.call(r,t)?n:e}function ni(e,n,t,r,i,u){return to(e)&&to(n)&&(u.set(n,e),ql(e,n,l,ni,u),u.delete(n)),e}function ti(e){return uo(e)?l:e}function li(e,n,t,r,i,u){var o=1&t,s=e.length,a=n.length;if(s!=a&&!(o&&a>s))return!1;var c=u.get(e),h=u.get(n);if(c&&h)return c==n&&h==e;var f=-1,d=!0,p=2&t?new Xt:l;for(u.set(e,n),u.set(n,e);++f<s;){var y=e[f],g=n[f];if(r)var m=o?r(g,y,f,n,e,u):r(y,g,f,e,n,u);if(m!==l){if(m)continue;d=!1;break}if(p){if(!Un(n,(function(e,n){if(!Zn(p,n)&&(y===e||i(y,e,t,r,u)))return p.push(n)}))){d=!1;break}}else if(y!==g&&!i(y,g,t,r,u)){d=!1;break}}return u.delete(e),u.delete(n),d}function ri(e){return Ci(Ai(e,l,Gi),e+"")}function ii(e){return Il(e,Co,pi)}function ui(e){return Il(e,Lo,yi)}var oi=Rt?function(e){return Rt.get(e)}:hs;function si(e){for(var n=e.name+"",t=Nt[n],l=je.call(Nt,n)?t.length:0;l--;){var r=t[l],i=r.func;if(null==i||i==e)return r.name}return n}function ai(e){return(je.call(Vt,"placeholder")?Vt:e).placeholder}function ci(){var e=Vt.iteratee||os;return e=e===os?Ul:e,arguments.length?e(arguments[0],arguments[1]):e}function hi(e,n){var t=e.__data__;return function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}(n)?t["string"==typeof n?"string":"hash"]:t.map}function fi(e){for(var n=Co(e),t=n.length;t--;){var l=n[t],r=e[l];n[t]=[l,r,Ii(r)]}return n}function di(e,n){var t=function(e,n){return null==e?l:e[n]}(e,n);return jl(t)?t:l}var pi=Dn?function(e){return null==e?[]:(e=Pe(e),On(Dn(e),(function(n){return Je.call(e,n)})))}:vs,yi=Dn?function(e){for(var n=[];e;)Cn(n,pi(e)),e=Ge(e);return n}:vs,gi=Pl;function mi(e,n,t){for(var l=-1,r=(n=_r(n,e)).length,i=!1;++l<r;){var u=Bi(n[l]);if(!(i=null!=e&&t(e,u)))break;e=e[u]}return i||++l!=r?i:!!(r=null==e?0:e.length)&&no(r)&&wi(u,r)&&($u(e)||zu(e))}function vi(e){return"function"!=typeof e.constructor||ki(e)?{}:Ht(Ge(e))}function bi(e){return $u(e)||zu(e)||!!(Ze&&e&&e[Ze])}function wi(e,n){var t=typeof e;return!!(n=null==n?d:n)&&("number"==t||"symbol"!=t&&be.test(e))&&e>-1&&e%1==0&&e<n}function _i(e,n,t){if(!to(t))return!1;var l=typeof n;return!!("number"==l?Wu(t)&&wi(n,t.length):"string"==l&&n in t)&&Vu(t[n],e)}function Ei(e,n){if($u(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!co(e))||(ne.test(e)||!ee.test(e)||null!=n&&e in Pe(n))}function Si(e){var n=si(e),t=Vt[n];if("function"!=typeof t||!(n in $t.prototype))return!1;if(e===t)return!0;var l=oi(t);return!!l&&e===l[0]}(It&&gi(new It(new ArrayBuffer(1)))!=C||Pt&&gi(new Pt)!=x||At&&gi(At.resolve())!=P||Tt&&gi(new Tt)!=T||Ot&&gi(new Ot)!=R)&&(gi=function(e){var n=Pl(e),t=n==I?e.constructor:l,r=t?Ki(t):"";if(r)switch(r){case Ct:return C;case Lt:return x;case jt:return P;case Ut:return T;case Dt:return R}return n});var xi=Ce?Zu:bs;function ki(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||Ne)}function Ii(e){return e==e&&!to(e)}function Pi(e,n){return function(t){return null!=t&&(t[e]===n&&(n!==l||e in Pe(t)))}}function Ai(e,n,t){return n=wt(n===l?e.length-1:n,0),function(){for(var l=arguments,r=-1,i=wt(l.length-n,0),u=ue(i);++r<i;)u[r]=l[n+r];r=-1;for(var o=ue(n+1);++r<n;)o[r]=l[r];return o[n]=t(u),kn(e,this,o)}}function Ti(e,n){return n.length<2?e:kl(e,ir(n,0,-1))}function Oi(e,n){for(var t=e.length,r=_t(n.length,t),i=Mr(e);r--;){var u=n[r];e[r]=wi(u,t)?i[u]:l}return e}function Mi(e,n){if(("constructor"!==n||"function"!=typeof e[n])&&"__proto__"!=n)return e[n]}var Ri=ji(tr),Ni=yn||function(e,n){return dn.setTimeout(e,n)},Ci=ji(lr);function Li(e,n,t){var l=n+"";return Ci(e,function(e,n){var t=n.length;if(!t)return e;var l=t-1;return n[l]=(t>1?"& ":"")+n[l],n=n.join(t>2?", ":" "),e.replace(oe,"{\n/* [wrapped with "+n+"] */\n")}(l,function(e,n){return Pn(g,(function(t){var l="_."+t[0];n&t[1]&&!Mn(e,l)&&e.push(l)})),e.sort()}(function(e){var n=e.match(se);return n?n[1].split(ae):[]}(l),t)))}function ji(e){var n=0,t=0;return function(){var r=Et(),i=16-(r-t);if(t=r,i>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(l,arguments)}}function Ui(e,n){var t=-1,r=e.length,i=r-1;for(n=n===l?r:n;++t<n;){var u=Xl(t,i),o=e[u];e[u]=e[t],e[t]=o}return e.length=n,e}var Di=function(e){var n=ju(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(te,(function(e,t,l,r){n.push(l?r.replace(fe,"$1"):t||e)})),n}));function Bi(e){if("string"==typeof e||co(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}function Ki(e){if(null!=e){try{return Le.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Fi(e){if(e instanceof $t)return e.clone();var n=new zt(e.__wrapped__,e.__chain__);return n.__actions__=Mr(e.__actions__),n.__index__=e.__index__,n.__values__=e.__values__,n}var Vi=Ql((function(e,n){return Ju(e)?dl(e,bl(n,1,Ju,!0)):[]})),Hi=Ql((function(e,n){var t=Qi(n);return Ju(t)&&(t=l),Ju(e)?dl(e,bl(n,1,Ju,!0),ci(t,2)):[]})),qi=Ql((function(e,n){var t=Qi(n);return Ju(t)&&(t=l),Ju(e)?dl(e,bl(n,1,Ju,!0),l,t):[]}));function zi(e,n,t){var l=null==e?0:e.length;if(!l)return-1;var r=null==t?0:mo(t);return r<0&&(r=wt(l+r,0)),Kn(e,ci(n,3),r)}function $i(e,n,t){var r=null==e?0:e.length;if(!r)return-1;var i=r-1;return t!==l&&(i=mo(t),i=t<0?wt(r+i,0):_t(i,r-1)),Kn(e,ci(n,3),i,!0)}function Gi(e){return(null==e?0:e.length)?bl(e,1):[]}function Wi(e){return e&&e.length?e[0]:l}var Ji=Ql((function(e){var n=Nn(e,br);return n.length&&n[0]===e[0]?Ml(n):[]})),Xi=Ql((function(e){var n=Qi(e),t=Nn(e,br);return n===Qi(t)?n=l:t.pop(),t.length&&t[0]===e[0]?Ml(t,ci(n,2)):[]})),Yi=Ql((function(e){var n=Qi(e),t=Nn(e,br);return(n="function"==typeof n?n:l)&&t.pop(),t.length&&t[0]===e[0]?Ml(t,l,n):[]}));function Qi(e){var n=null==e?0:e.length;return n?e[n-1]:l}var Zi=Ql(eu);function eu(e,n){return e&&e.length&&n&&n.length?Wl(e,n):e}var nu=ri((function(e,n){var t=null==e?0:e.length,l=sl(e,n);return Jl(e,Nn(n,(function(e){return wi(e,t)?+e:e})).sort(Ar)),l}));function tu(e){return null==e?e:kt.call(e)}var lu=Ql((function(e){return fr(bl(e,1,Ju,!0))})),ru=Ql((function(e){var n=Qi(e);return Ju(n)&&(n=l),fr(bl(e,1,Ju,!0),ci(n,2))})),iu=Ql((function(e){var n=Qi(e);return n="function"==typeof n?n:l,fr(bl(e,1,Ju,!0),l,n)}));function uu(e){if(!e||!e.length)return[];var n=0;return e=On(e,(function(e){if(Ju(e))return n=wt(e.length,n),!0})),Jn(n,(function(n){return Nn(e,zn(n))}))}function ou(e,n){if(!e||!e.length)return[];var t=uu(e);return null==n?t:Nn(t,(function(e){return kn(n,l,e)}))}var su=Ql((function(e,n){return Ju(e)?dl(e,n):[]})),au=Ql((function(e){return mr(On(e,Ju))})),cu=Ql((function(e){var n=Qi(e);return Ju(n)&&(n=l),mr(On(e,Ju),ci(n,2))})),hu=Ql((function(e){var n=Qi(e);return n="function"==typeof n?n:l,mr(On(e,Ju),l,n)})),fu=Ql(uu);var du=Ql((function(e){var n=e.length,t=n>1?e[n-1]:l;return t="function"==typeof t?(e.pop(),t):l,ou(e,t)}));function pu(e){var n=Vt(e);return n.__chain__=!0,n}function yu(e,n){return n(e)}var gu=ri((function(e){var n=e.length,t=n?e[0]:0,r=this.__wrapped__,i=function(n){return sl(n,e)};return!(n>1||this.__actions__.length)&&r instanceof $t&&wi(t)?((r=r.slice(t,+t+(n?1:0))).__actions__.push({func:yu,args:[i],thisArg:l}),new zt(r,this.__chain__).thru((function(e){return n&&!e.length&&e.push(l),e}))):this.thru(i)}));var mu=Nr((function(e,n,t){je.call(e,t)?++e[t]:ol(e,t,1)}));var vu=Kr(zi),bu=Kr($i);function wu(e,n){return($u(e)?Pn:pl)(e,ci(n,3))}function _u(e,n){return($u(e)?An:yl)(e,ci(n,3))}var Eu=Nr((function(e,n,t){je.call(e,t)?e[t].push(n):ol(e,t,[n])}));var Su=Ql((function(e,n,t){var l=-1,r="function"==typeof n,i=Wu(e)?ue(e.length):[];return pl(e,(function(e){i[++l]=r?kn(n,e,t):Rl(e,n,t)})),i})),xu=Nr((function(e,n,t){ol(e,t,n)}));function ku(e,n){return($u(e)?Nn:Fl)(e,ci(n,3))}var Iu=Nr((function(e,n,t){e[t?0:1].push(n)}),(function(){return[[],[]]}));var Pu=Ql((function(e,n){if(null==e)return[];var t=n.length;return t>1&&_i(e,n[0],n[1])?n=[]:t>2&&_i(n[0],n[1],n[2])&&(n=[n[0]]),$l(e,bl(n,1),[])})),Au=pn||function(){return dn.Date.now()};function Tu(e,n,t){return n=t?l:n,n=e&&null==n?e.length:n,Zr(e,c,l,l,l,l,n)}function Ou(e,n){var t;if("function"!=typeof n)throw new Oe(r);return e=mo(e),function(){return--e>0&&(t=n.apply(this,arguments)),e<=1&&(n=l),t}}var Mu=Ql((function(e,n,t){var l=1;if(t.length){var r=at(t,ai(Mu));l|=s}return Zr(e,l,n,t,r)})),Ru=Ql((function(e,n,t){var l=3;if(t.length){var r=at(t,ai(Ru));l|=s}return Zr(n,l,e,t,r)}));function Nu(e,n,t){var i,u,o,s,a,c,h=0,f=!1,d=!1,p=!0;if("function"!=typeof e)throw new Oe(r);function y(n){var t=i,r=u;return i=u=l,h=n,s=e.apply(r,t)}function g(e){return h=e,a=Ni(v,n),f?y(e):s}function m(e){var t=e-c;return c===l||t>=n||t<0||d&&e-h>=o}function v(){var e=Au();if(m(e))return b(e);a=Ni(v,function(e){var t=n-(e-c);return d?_t(t,o-(e-h)):t}(e))}function b(e){return a=l,p&&i?y(e):(i=u=l,s)}function w(){var e=Au(),t=m(e);if(i=arguments,u=this,c=e,t){if(a===l)return g(c);if(d)return xr(a),a=Ni(v,n),y(c)}return a===l&&(a=Ni(v,n)),s}return n=bo(n)||0,to(t)&&(f=!!t.leading,o=(d="maxWait"in t)?wt(bo(t.maxWait)||0,n):o,p="trailing"in t?!!t.trailing:p),w.cancel=function(){a!==l&&xr(a),h=0,i=c=u=a=l},w.flush=function(){return a===l?s:b(Au())},w}var Cu=Ql((function(e,n){return fl(e,1,n)})),Lu=Ql((function(e,n,t){return fl(e,bo(n)||0,t)}));function ju(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new Oe(r);var t=function(){var l=arguments,r=n?n.apply(this,l):l[0],i=t.cache;if(i.has(r))return i.get(r);var u=e.apply(this,l);return t.cache=i.set(r,u)||i,u};return t.cache=new(ju.Cache||Jt),t}function Uu(e){if("function"!=typeof e)throw new Oe(r);return function(){var n=arguments;switch(n.length){case 0:return!e.call(this);case 1:return!e.call(this,n[0]);case 2:return!e.call(this,n[0],n[1]);case 3:return!e.call(this,n[0],n[1],n[2])}return!e.apply(this,n)}}ju.Cache=Jt;var Du=Er((function(e,n){var t=(n=1==n.length&&$u(n[0])?Nn(n[0],Yn(ci())):Nn(bl(n,1),Yn(ci()))).length;return Ql((function(l){for(var r=-1,i=_t(l.length,t);++r<i;)l[r]=n[r].call(this,l[r]);return kn(e,this,l)}))})),Bu=Ql((function(e,n){var t=at(n,ai(Bu));return Zr(e,s,l,n,t)})),Ku=Ql((function(e,n){var t=at(n,ai(Ku));return Zr(e,a,l,n,t)})),Fu=ri((function(e,n){return Zr(e,h,l,l,l,n)}));function Vu(e,n){return e===n||e!=e&&n!=n}var Hu=Wr(Al),qu=Wr((function(e,n){return e>=n})),zu=Nl(function(){return arguments}())?Nl:function(e){return lo(e)&&je.call(e,"callee")&&!Je.call(e,"callee")},$u=ue.isArray,Gu=bn?Yn(bn):function(e){return lo(e)&&Pl(e)==N};function Wu(e){return null!=e&&no(e.length)&&!Zu(e)}function Ju(e){return lo(e)&&Wu(e)}var Xu=$n||bs,Yu=wn?Yn(wn):function(e){return lo(e)&&Pl(e)==w};function Qu(e){if(!lo(e))return!1;var n=Pl(e);return n==_||"[object DOMException]"==n||"string"==typeof e.message&&"string"==typeof e.name&&!uo(e)}function Zu(e){if(!to(e))return!1;var n=Pl(e);return n==E||n==S||"[object AsyncFunction]"==n||"[object Proxy]"==n}function eo(e){return"number"==typeof e&&e==mo(e)}function no(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=d}function to(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}function lo(e){return null!=e&&"object"==typeof e}var ro=_n?Yn(_n):function(e){return lo(e)&&gi(e)==x};function io(e){return"number"==typeof e||lo(e)&&Pl(e)==k}function uo(e){if(!lo(e)||Pl(e)!=I)return!1;var n=Ge(e);if(null===n)return!0;var t=je.call(n,"constructor")&&n.constructor;return"function"==typeof t&&t instanceof t&&Le.call(t)==Ke}var oo=En?Yn(En):function(e){return lo(e)&&Pl(e)==A};var so=Sn?Yn(Sn):function(e){return lo(e)&&gi(e)==T};function ao(e){return"string"==typeof e||!$u(e)&&lo(e)&&Pl(e)==O}function co(e){return"symbol"==typeof e||lo(e)&&Pl(e)==M}var ho=xn?Yn(xn):function(e){return lo(e)&&no(e.length)&&!!un[Pl(e)]};var fo=Wr(Kl),po=Wr((function(e,n){return e<=n}));function yo(e){if(!e)return[];if(Wu(e))return ao(e)?dt(e):Mr(e);if(nn&&e[nn])return function(e){for(var n,t=[];!(n=e.next()).done;)t.push(n.value);return t}(e[nn]());var n=gi(e);return(n==x?ot:n==T?ct:Ho)(e)}function go(e){return e?(e=bo(e))===f||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function mo(e){var n=go(e),t=n%1;return n==n?t?n-t:n:0}function vo(e){return e?al(mo(e),0,y):0}function bo(e){if("number"==typeof e)return e;if(co(e))return p;if(to(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=to(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=Xn(e);var t=ge.test(e);return t||ve.test(e)?cn(e.slice(2),t?2:8):ye.test(e)?p:+e}function wo(e){return Rr(e,Lo(e))}function _o(e){return null==e?"":hr(e)}var Eo=Cr((function(e,n){if(ki(n)||Wu(n))Rr(n,Co(n),e);else for(var t in n)je.call(n,t)&&ll(e,t,n[t])})),So=Cr((function(e,n){Rr(n,Lo(n),e)})),xo=Cr((function(e,n,t,l){Rr(n,Lo(n),e,l)})),ko=Cr((function(e,n,t,l){Rr(n,Co(n),e,l)})),Io=ri(sl);var Po=Ql((function(e,n){e=Pe(e);var t=-1,r=n.length,i=r>2?n[2]:l;for(i&&_i(n[0],n[1],i)&&(r=1);++t<r;)for(var u=n[t],o=Lo(u),s=-1,a=o.length;++s<a;){var c=o[s],h=e[c];(h===l||Vu(h,Ne[c])&&!je.call(e,c))&&(e[c]=u[c])}return e})),Ao=Ql((function(e){return e.push(l,ni),kn(Uo,l,e)}));function To(e,n,t){var r=null==e?l:kl(e,n);return r===l?t:r}function Oo(e,n){return null!=e&&mi(e,n,Ol)}var Mo=Hr((function(e,n,t){null!=n&&"function"!=typeof n.toString&&(n=Be.call(n)),e[n]=t}),ls(us)),Ro=Hr((function(e,n,t){null!=n&&"function"!=typeof n.toString&&(n=Be.call(n)),je.call(e,n)?e[n].push(t):e[n]=[t]}),ci),No=Ql(Rl);function Co(e){return Wu(e)?Qt(e):Dl(e)}function Lo(e){return Wu(e)?Qt(e,!0):Bl(e)}var jo=Cr((function(e,n,t){ql(e,n,t)})),Uo=Cr((function(e,n,t,l){ql(e,n,t,l)})),Do=ri((function(e,n){var t={};if(null==e)return t;var l=!1;n=Nn(n,(function(n){return n=_r(n,e),l||(l=n.length>1),n})),Rr(e,ui(e),t),l&&(t=cl(t,7,ti));for(var r=n.length;r--;)dr(t,n[r]);return t}));var Bo=ri((function(e,n){return null==e?{}:function(e,n){return Gl(e,n,(function(n,t){return Oo(e,t)}))}(e,n)}));function Ko(e,n){if(null==e)return{};var t=Nn(ui(e),(function(e){return[e]}));return n=ci(n),Gl(e,t,(function(e,t){return n(e,t[0])}))}var Fo=Qr(Co),Vo=Qr(Lo);function Ho(e){return null==e?[]:Qn(e,Co(e))}var qo=Dr((function(e,n,t){return n=n.toLowerCase(),e+(t?zo(n):n)}));function zo(e){return Zo(_o(e).toLowerCase())}function $o(e){return(e=_o(e))&&e.replace(we,lt).replace(Qe,"")}var Go=Dr((function(e,n,t){return e+(t?"-":"")+n.toLowerCase()})),Wo=Dr((function(e,n,t){return e+(t?" ":"")+n.toLowerCase()})),Jo=Ur("toLowerCase");var Xo=Dr((function(e,n,t){return e+(t?"_":"")+n.toLowerCase()}));var Yo=Dr((function(e,n,t){return e+(t?" ":"")+Zo(n)}));var Qo=Dr((function(e,n,t){return e+(t?" ":"")+n.toUpperCase()})),Zo=Ur("toUpperCase");function es(e,n,t){return e=_o(e),(n=t?l:n)===l?function(e){return tn.test(e)}(e)?function(e){return e.match(en)||[]}(e):function(e){return e.match(ce)||[]}(e):e.match(n)||[]}var ns=Ql((function(e,n){try{return kn(e,l,n)}catch(e){return Qu(e)?e:new xe(e)}})),ts=ri((function(e,n){return Pn(n,(function(n){n=Bi(n),ol(e,n,Mu(e[n],e))})),e}));function ls(e){return function(){return e}}var rs=Fr(),is=Fr(!0);function us(e){return e}function os(e){return Ul("function"==typeof e?e:cl(e,1))}var ss=Ql((function(e,n){return function(t){return Rl(t,e,n)}})),as=Ql((function(e,n){return function(t){return Rl(e,t,n)}}));function cs(e,n,t){var l=Co(n),r=xl(n,l);null!=t||to(n)&&(r.length||!l.length)||(t=n,n=e,e=this,r=xl(n,Co(n)));var i=!(to(t)&&"chain"in t&&!t.chain),u=Zu(e);return Pn(r,(function(t){var l=n[t];e[t]=l,u&&(e.prototype[t]=function(){var n=this.__chain__;if(i||n){var t=e(this.__wrapped__),r=t.__actions__=Mr(this.__actions__);return r.push({func:l,args:arguments,thisArg:e}),t.__chain__=n,t}return l.apply(e,Cn([this.value()],arguments))})})),e}function hs(){}var fs=zr(Nn),ds=zr(Tn),ps=zr(Un);function ys(e){return Ei(e)?zn(Bi(e)):function(e){return function(n){return kl(n,e)}}(e)}var gs=Gr(),ms=Gr(!0);function vs(){return[]}function bs(){return!1}var ws=qr((function(e,n){return e+n}),0),_s=Xr("ceil"),Es=qr((function(e,n){return e/n}),1),Ss=Xr("floor");var xs,ks=qr((function(e,n){return e*n}),1),Is=Xr("round"),Ps=qr((function(e,n){return e-n}),0);return Vt.after=function(e,n){if("function"!=typeof n)throw new Oe(r);return e=mo(e),function(){if(--e<1)return n.apply(this,arguments)}},Vt.ary=Tu,Vt.assign=Eo,Vt.assignIn=So,Vt.assignInWith=xo,Vt.assignWith=ko,Vt.at=Io,Vt.before=Ou,Vt.bind=Mu,Vt.bindAll=ts,Vt.bindKey=Ru,Vt.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return $u(e)?e:[e]},Vt.chain=pu,Vt.chunk=function(e,n,t){n=(t?_i(e,n,t):n===l)?1:wt(mo(n),0);var r=null==e?0:e.length;if(!r||n<1)return[];for(var i=0,u=0,o=ue(mn(r/n));i<r;)o[u++]=ir(e,i,i+=n);return o},Vt.compact=function(e){for(var n=-1,t=null==e?0:e.length,l=0,r=[];++n<t;){var i=e[n];i&&(r[l++]=i)}return r},Vt.concat=function(){var e=arguments.length;if(!e)return[];for(var n=ue(e-1),t=arguments[0],l=e;l--;)n[l-1]=arguments[l];return Cn($u(t)?Mr(t):[t],bl(n,1))},Vt.cond=function(e){var n=null==e?0:e.length,t=ci();return e=n?Nn(e,(function(e){if("function"!=typeof e[1])throw new Oe(r);return[t(e[0]),e[1]]})):[],Ql((function(t){for(var l=-1;++l<n;){var r=e[l];if(kn(r[0],this,t))return kn(r[1],this,t)}}))},Vt.conforms=function(e){return function(e){var n=Co(e);return function(t){return hl(t,e,n)}}(cl(e,1))},Vt.constant=ls,Vt.countBy=mu,Vt.create=function(e,n){var t=Ht(e);return null==n?t:ul(t,n)},Vt.curry=function e(n,t,r){var i=Zr(n,8,l,l,l,l,l,t=r?l:t);return i.placeholder=e.placeholder,i},Vt.curryRight=function e(n,t,r){var i=Zr(n,o,l,l,l,l,l,t=r?l:t);return i.placeholder=e.placeholder,i},Vt.debounce=Nu,Vt.defaults=Po,Vt.defaultsDeep=Ao,Vt.defer=Cu,Vt.delay=Lu,Vt.difference=Vi,Vt.differenceBy=Hi,Vt.differenceWith=qi,Vt.drop=function(e,n,t){var r=null==e?0:e.length;return r?ir(e,(n=t||n===l?1:mo(n))<0?0:n,r):[]},Vt.dropRight=function(e,n,t){var r=null==e?0:e.length;return r?ir(e,0,(n=r-(n=t||n===l?1:mo(n)))<0?0:n):[]},Vt.dropRightWhile=function(e,n){return e&&e.length?yr(e,ci(n,3),!0,!0):[]},Vt.dropWhile=function(e,n){return e&&e.length?yr(e,ci(n,3),!0):[]},Vt.fill=function(e,n,t,r){var i=null==e?0:e.length;return i?(t&&"number"!=typeof t&&_i(e,n,t)&&(t=0,r=i),function(e,n,t,r){var i=e.length;for((t=mo(t))<0&&(t=-t>i?0:i+t),(r=r===l||r>i?i:mo(r))<0&&(r+=i),r=t>r?0:vo(r);t<r;)e[t++]=n;return e}(e,n,t,r)):[]},Vt.filter=function(e,n){return($u(e)?On:vl)(e,ci(n,3))},Vt.flatMap=function(e,n){return bl(ku(e,n),1)},Vt.flatMapDeep=function(e,n){return bl(ku(e,n),f)},Vt.flatMapDepth=function(e,n,t){return t=t===l?1:mo(t),bl(ku(e,n),t)},Vt.flatten=Gi,Vt.flattenDeep=function(e){return(null==e?0:e.length)?bl(e,f):[]},Vt.flattenDepth=function(e,n){return(null==e?0:e.length)?bl(e,n=n===l?1:mo(n)):[]},Vt.flip=function(e){return Zr(e,512)},Vt.flow=rs,Vt.flowRight=is,Vt.fromPairs=function(e){for(var n=-1,t=null==e?0:e.length,l={};++n<t;){var r=e[n];l[r[0]]=r[1]}return l},Vt.functions=function(e){return null==e?[]:xl(e,Co(e))},Vt.functionsIn=function(e){return null==e?[]:xl(e,Lo(e))},Vt.groupBy=Eu,Vt.initial=function(e){return(null==e?0:e.length)?ir(e,0,-1):[]},Vt.intersection=Ji,Vt.intersectionBy=Xi,Vt.intersectionWith=Yi,Vt.invert=Mo,Vt.invertBy=Ro,Vt.invokeMap=Su,Vt.iteratee=os,Vt.keyBy=xu,Vt.keys=Co,Vt.keysIn=Lo,Vt.map=ku,Vt.mapKeys=function(e,n){var t={};return n=ci(n,3),El(e,(function(e,l,r){ol(t,n(e,l,r),e)})),t},Vt.mapValues=function(e,n){var t={};return n=ci(n,3),El(e,(function(e,l,r){ol(t,l,n(e,l,r))})),t},Vt.matches=function(e){return Vl(cl(e,1))},Vt.matchesProperty=function(e,n){return Hl(e,cl(n,1))},Vt.memoize=ju,Vt.merge=jo,Vt.mergeWith=Uo,Vt.method=ss,Vt.methodOf=as,Vt.mixin=cs,Vt.negate=Uu,Vt.nthArg=function(e){return e=mo(e),Ql((function(n){return zl(n,e)}))},Vt.omit=Do,Vt.omitBy=function(e,n){return Ko(e,Uu(ci(n)))},Vt.once=function(e){return Ou(2,e)},Vt.orderBy=function(e,n,t,r){return null==e?[]:($u(n)||(n=null==n?[]:[n]),$u(t=r?l:t)||(t=null==t?[]:[t]),$l(e,n,t))},Vt.over=fs,Vt.overArgs=Du,Vt.overEvery=ds,Vt.overSome=ps,Vt.partial=Bu,Vt.partialRight=Ku,Vt.partition=Iu,Vt.pick=Bo,Vt.pickBy=Ko,Vt.property=ys,Vt.propertyOf=function(e){return function(n){return null==e?l:kl(e,n)}},Vt.pull=Zi,Vt.pullAll=eu,Vt.pullAllBy=function(e,n,t){return e&&e.length&&n&&n.length?Wl(e,n,ci(t,2)):e},Vt.pullAllWith=function(e,n,t){return e&&e.length&&n&&n.length?Wl(e,n,l,t):e},Vt.pullAt=nu,Vt.range=gs,Vt.rangeRight=ms,Vt.rearg=Fu,Vt.reject=function(e,n){return($u(e)?On:vl)(e,Uu(ci(n,3)))},Vt.remove=function(e,n){var t=[];if(!e||!e.length)return t;var l=-1,r=[],i=e.length;for(n=ci(n,3);++l<i;){var u=e[l];n(u,l,e)&&(t.push(u),r.push(l))}return Jl(e,r),t},Vt.rest=function(e,n){if("function"!=typeof e)throw new Oe(r);return Ql(e,n=n===l?n:mo(n))},Vt.reverse=tu,Vt.sampleSize=function(e,n,t){return n=(t?_i(e,n,t):n===l)?1:mo(n),($u(e)?el:er)(e,n)},Vt.set=function(e,n,t){return null==e?e:nr(e,n,t)},Vt.setWith=function(e,n,t,r){return r="function"==typeof r?r:l,null==e?e:nr(e,n,t,r)},Vt.shuffle=function(e){return($u(e)?nl:rr)(e)},Vt.slice=function(e,n,t){var r=null==e?0:e.length;return r?(t&&"number"!=typeof t&&_i(e,n,t)?(n=0,t=r):(n=null==n?0:mo(n),t=t===l?r:mo(t)),ir(e,n,t)):[]},Vt.sortBy=Pu,Vt.sortedUniq=function(e){return e&&e.length?ar(e):[]},Vt.sortedUniqBy=function(e,n){return e&&e.length?ar(e,ci(n,2)):[]},Vt.split=function(e,n,t){return t&&"number"!=typeof t&&_i(e,n,t)&&(n=t=l),(t=t===l?y:t>>>0)?(e=_o(e))&&("string"==typeof n||null!=n&&!oo(n))&&!(n=hr(n))&&ut(e)?Sr(dt(e),0,t):e.split(n,t):[]},Vt.spread=function(e,n){if("function"!=typeof e)throw new Oe(r);return n=null==n?0:wt(mo(n),0),Ql((function(t){var l=t[n],r=Sr(t,0,n);return l&&Cn(r,l),kn(e,this,r)}))},Vt.tail=function(e){var n=null==e?0:e.length;return n?ir(e,1,n):[]},Vt.take=function(e,n,t){return e&&e.length?ir(e,0,(n=t||n===l?1:mo(n))<0?0:n):[]},Vt.takeRight=function(e,n,t){var r=null==e?0:e.length;return r?ir(e,(n=r-(n=t||n===l?1:mo(n)))<0?0:n,r):[]},Vt.takeRightWhile=function(e,n){return e&&e.length?yr(e,ci(n,3),!1,!0):[]},Vt.takeWhile=function(e,n){return e&&e.length?yr(e,ci(n,3)):[]},Vt.tap=function(e,n){return n(e),e},Vt.throttle=function(e,n,t){var l=!0,i=!0;if("function"!=typeof e)throw new Oe(r);return to(t)&&(l="leading"in t?!!t.leading:l,i="trailing"in t?!!t.trailing:i),Nu(e,n,{leading:l,maxWait:n,trailing:i})},Vt.thru=yu,Vt.toArray=yo,Vt.toPairs=Fo,Vt.toPairsIn=Vo,Vt.toPath=function(e){return $u(e)?Nn(e,Bi):co(e)?[e]:Mr(Di(_o(e)))},Vt.toPlainObject=wo,Vt.transform=function(e,n,t){var l=$u(e),r=l||Xu(e)||ho(e);if(n=ci(n,4),null==t){var i=e&&e.constructor;t=r?l?new i:[]:to(e)&&Zu(i)?Ht(Ge(e)):{}}return(r?Pn:El)(e,(function(e,l,r){return n(t,e,l,r)})),t},Vt.unary=function(e){return Tu(e,1)},Vt.union=lu,Vt.unionBy=ru,Vt.unionWith=iu,Vt.uniq=function(e){return e&&e.length?fr(e):[]},Vt.uniqBy=function(e,n){return e&&e.length?fr(e,ci(n,2)):[]},Vt.uniqWith=function(e,n){return n="function"==typeof n?n:l,e&&e.length?fr(e,l,n):[]},Vt.unset=function(e,n){return null==e||dr(e,n)},Vt.unzip=uu,Vt.unzipWith=ou,Vt.update=function(e,n,t){return null==e?e:pr(e,n,wr(t))},Vt.updateWith=function(e,n,t,r){return r="function"==typeof r?r:l,null==e?e:pr(e,n,wr(t),r)},Vt.values=Ho,Vt.valuesIn=function(e){return null==e?[]:Qn(e,Lo(e))},Vt.without=su,Vt.words=es,Vt.wrap=function(e,n){return Bu(wr(n),e)},Vt.xor=au,Vt.xorBy=cu,Vt.xorWith=hu,Vt.zip=fu,Vt.zipObject=function(e,n){return vr(e||[],n||[],ll)},Vt.zipObjectDeep=function(e,n){return vr(e||[],n||[],nr)},Vt.zipWith=du,Vt.entries=Fo,Vt.entriesIn=Vo,Vt.extend=So,Vt.extendWith=xo,cs(Vt,Vt),Vt.add=ws,Vt.attempt=ns,Vt.camelCase=qo,Vt.capitalize=zo,Vt.ceil=_s,Vt.clamp=function(e,n,t){return t===l&&(t=n,n=l),t!==l&&(t=(t=bo(t))==t?t:0),n!==l&&(n=(n=bo(n))==n?n:0),al(bo(e),n,t)},Vt.clone=function(e){return cl(e,4)},Vt.cloneDeep=function(e){return cl(e,5)},Vt.cloneDeepWith=function(e,n){return cl(e,5,n="function"==typeof n?n:l)},Vt.cloneWith=function(e,n){return cl(e,4,n="function"==typeof n?n:l)},Vt.conformsTo=function(e,n){return null==n||hl(e,n,Co(n))},Vt.deburr=$o,Vt.defaultTo=function(e,n){return null==e||e!=e?n:e},Vt.divide=Es,Vt.endsWith=function(e,n,t){e=_o(e),n=hr(n);var r=e.length,i=t=t===l?r:al(mo(t),0,r);return(t-=n.length)>=0&&e.slice(t,i)==n},Vt.eq=Vu,Vt.escape=function(e){return(e=_o(e))&&X.test(e)?e.replace(W,rt):e},Vt.escapeRegExp=function(e){return(e=_o(e))&&re.test(e)?e.replace(le,"\\$&"):e},Vt.every=function(e,n,t){var r=$u(e)?Tn:gl;return t&&_i(e,n,t)&&(n=l),r(e,ci(n,3))},Vt.find=vu,Vt.findIndex=zi,Vt.findKey=function(e,n){return Bn(e,ci(n,3),El)},Vt.findLast=bu,Vt.findLastIndex=$i,Vt.findLastKey=function(e,n){return Bn(e,ci(n,3),Sl)},Vt.floor=Ss,Vt.forEach=wu,Vt.forEachRight=_u,Vt.forIn=function(e,n){return null==e?e:wl(e,ci(n,3),Lo)},Vt.forInRight=function(e,n){return null==e?e:_l(e,ci(n,3),Lo)},Vt.forOwn=function(e,n){return e&&El(e,ci(n,3))},Vt.forOwnRight=function(e,n){return e&&Sl(e,ci(n,3))},Vt.get=To,Vt.gt=Hu,Vt.gte=qu,Vt.has=function(e,n){return null!=e&&mi(e,n,Tl)},Vt.hasIn=Oo,Vt.head=Wi,Vt.identity=us,Vt.includes=function(e,n,t,l){e=Wu(e)?e:Ho(e),t=t&&!l?mo(t):0;var r=e.length;return t<0&&(t=wt(r+t,0)),ao(e)?t<=r&&e.indexOf(n,t)>-1:!!r&&Fn(e,n,t)>-1},Vt.indexOf=function(e,n,t){var l=null==e?0:e.length;if(!l)return-1;var r=null==t?0:mo(t);return r<0&&(r=wt(l+r,0)),Fn(e,n,r)},Vt.inRange=function(e,n,t){return n=go(n),t===l?(t=n,n=0):t=go(t),function(e,n,t){return e>=_t(n,t)&&e<wt(n,t)}(e=bo(e),n,t)},Vt.invoke=No,Vt.isArguments=zu,Vt.isArray=$u,Vt.isArrayBuffer=Gu,Vt.isArrayLike=Wu,Vt.isArrayLikeObject=Ju,Vt.isBoolean=function(e){return!0===e||!1===e||lo(e)&&Pl(e)==b},Vt.isBuffer=Xu,Vt.isDate=Yu,Vt.isElement=function(e){return lo(e)&&1===e.nodeType&&!uo(e)},Vt.isEmpty=function(e){if(null==e)return!0;if(Wu(e)&&($u(e)||"string"==typeof e||"function"==typeof e.splice||Xu(e)||ho(e)||zu(e)))return!e.length;var n=gi(e);if(n==x||n==T)return!e.size;if(ki(e))return!Dl(e).length;for(var t in e)if(je.call(e,t))return!1;return!0},Vt.isEqual=function(e,n){return Cl(e,n)},Vt.isEqualWith=function(e,n,t){var r=(t="function"==typeof t?t:l)?t(e,n):l;return r===l?Cl(e,n,l,t):!!r},Vt.isError=Qu,Vt.isFinite=function(e){return"number"==typeof e&&mt(e)},Vt.isFunction=Zu,Vt.isInteger=eo,Vt.isLength=no,Vt.isMap=ro,Vt.isMatch=function(e,n){return e===n||Ll(e,n,fi(n))},Vt.isMatchWith=function(e,n,t){return t="function"==typeof t?t:l,Ll(e,n,fi(n),t)},Vt.isNaN=function(e){return io(e)&&e!=+e},Vt.isNative=function(e){if(xi(e))throw new xe("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return jl(e)},Vt.isNil=function(e){return null==e},Vt.isNull=function(e){return null===e},Vt.isNumber=io,Vt.isObject=to,Vt.isObjectLike=lo,Vt.isPlainObject=uo,Vt.isRegExp=oo,Vt.isSafeInteger=function(e){return eo(e)&&e>=-9007199254740991&&e<=d},Vt.isSet=so,Vt.isString=ao,Vt.isSymbol=co,Vt.isTypedArray=ho,Vt.isUndefined=function(e){return e===l},Vt.isWeakMap=function(e){return lo(e)&&gi(e)==R},Vt.isWeakSet=function(e){return lo(e)&&"[object WeakSet]"==Pl(e)},Vt.join=function(e,n){return null==e?"":vt.call(e,n)},Vt.kebabCase=Go,Vt.last=Qi,Vt.lastIndexOf=function(e,n,t){var r=null==e?0:e.length;if(!r)return-1;var i=r;return t!==l&&(i=(i=mo(t))<0?wt(r+i,0):_t(i,r-1)),n==n?function(e,n,t){for(var l=t+1;l--;)if(e[l]===n)return l;return l}(e,n,i):Kn(e,Hn,i,!0)},Vt.lowerCase=Wo,Vt.lowerFirst=Jo,Vt.lt=fo,Vt.lte=po,Vt.max=function(e){return e&&e.length?ml(e,us,Al):l},Vt.maxBy=function(e,n){return e&&e.length?ml(e,ci(n,2),Al):l},Vt.mean=function(e){return qn(e,us)},Vt.meanBy=function(e,n){return qn(e,ci(n,2))},Vt.min=function(e){return e&&e.length?ml(e,us,Kl):l},Vt.minBy=function(e,n){return e&&e.length?ml(e,ci(n,2),Kl):l},Vt.stubArray=vs,Vt.stubFalse=bs,Vt.stubObject=function(){return{}},Vt.stubString=function(){return""},Vt.stubTrue=function(){return!0},Vt.multiply=ks,Vt.nth=function(e,n){return e&&e.length?zl(e,mo(n)):l},Vt.noConflict=function(){return dn._===this&&(dn._=Fe),this},Vt.noop=hs,Vt.now=Au,Vt.pad=function(e,n,t){e=_o(e);var l=(n=mo(n))?ft(e):0;if(!n||l>=n)return e;var r=(n-l)/2;return $r(vn(r),t)+e+$r(mn(r),t)},Vt.padEnd=function(e,n,t){e=_o(e);var l=(n=mo(n))?ft(e):0;return n&&l<n?e+$r(n-l,t):e},Vt.padStart=function(e,n,t){e=_o(e);var l=(n=mo(n))?ft(e):0;return n&&l<n?$r(n-l,t)+e:e},Vt.parseInt=function(e,n,t){return t||null==n?n=0:n&&(n=+n),St(_o(e).replace(ie,""),n||0)},Vt.random=function(e,n,t){if(t&&"boolean"!=typeof t&&_i(e,n,t)&&(n=t=l),t===l&&("boolean"==typeof n?(t=n,n=l):"boolean"==typeof e&&(t=e,e=l)),e===l&&n===l?(e=0,n=1):(e=go(e),n===l?(n=e,e=0):n=go(n)),e>n){var r=e;e=n,n=r}if(t||e%1||n%1){var i=xt();return _t(e+i*(n-e+an("1e-"+((i+"").length-1))),n)}return Xl(e,n)},Vt.reduce=function(e,n,t){var l=$u(e)?Ln:Gn,r=arguments.length<3;return l(e,ci(n,4),t,r,pl)},Vt.reduceRight=function(e,n,t){var l=$u(e)?jn:Gn,r=arguments.length<3;return l(e,ci(n,4),t,r,yl)},Vt.repeat=function(e,n,t){return n=(t?_i(e,n,t):n===l)?1:mo(n),Yl(_o(e),n)},Vt.replace=function(){var e=arguments,n=_o(e[0]);return e.length<3?n:n.replace(e[1],e[2])},Vt.result=function(e,n,t){var r=-1,i=(n=_r(n,e)).length;for(i||(i=1,e=l);++r<i;){var u=null==e?l:e[Bi(n[r])];u===l&&(r=i,u=t),e=Zu(u)?u.call(e):u}return e},Vt.round=Is,Vt.runInContext=e,Vt.sample=function(e){return($u(e)?Zt:Zl)(e)},Vt.size=function(e){if(null==e)return 0;if(Wu(e))return ao(e)?ft(e):e.length;var n=gi(e);return n==x||n==T?e.size:Dl(e).length},Vt.snakeCase=Xo,Vt.some=function(e,n,t){var r=$u(e)?Un:ur;return t&&_i(e,n,t)&&(n=l),r(e,ci(n,3))},Vt.sortedIndex=function(e,n){return or(e,n)},Vt.sortedIndexBy=function(e,n,t){return sr(e,n,ci(t,2))},Vt.sortedIndexOf=function(e,n){var t=null==e?0:e.length;if(t){var l=or(e,n);if(l<t&&Vu(e[l],n))return l}return-1},Vt.sortedLastIndex=function(e,n){return or(e,n,!0)},Vt.sortedLastIndexBy=function(e,n,t){return sr(e,n,ci(t,2),!0)},Vt.sortedLastIndexOf=function(e,n){if(null==e?0:e.length){var t=or(e,n,!0)-1;if(Vu(e[t],n))return t}return-1},Vt.startCase=Yo,Vt.startsWith=function(e,n,t){return e=_o(e),t=null==t?0:al(mo(t),0,e.length),n=hr(n),e.slice(t,t+n.length)==n},Vt.subtract=Ps,Vt.sum=function(e){return e&&e.length?Wn(e,us):0},Vt.sumBy=function(e,n){return e&&e.length?Wn(e,ci(n,2)):0},Vt.template=function(e,n,t){var r=Vt.templateSettings;t&&_i(e,n,t)&&(n=l),e=_o(e),n=xo({},n,r,ei);var i,u,o=xo({},n.imports,r.imports,ei),s=Co(o),a=Qn(o,s),c=0,h=n.interpolate||_e,f="__p += '",d=Ae((n.escape||_e).source+"|"+h.source+"|"+(h===Z?de:_e).source+"|"+(n.evaluate||_e).source+"|$","g"),p="//# sourceURL="+(je.call(n,"sourceURL")?(n.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++rn+"]")+"\n";e.replace(d,(function(n,t,l,r,o,s){return l||(l=r),f+=e.slice(c,s).replace(Ee,it),t&&(i=!0,f+="' +\n__e("+t+") +\n'"),o&&(u=!0,f+="';\n"+o+";\n__p += '"),l&&(f+="' +\n((__t = ("+l+")) == null ? '' : __t) +\n'"),c=s+n.length,n})),f+="';\n";var y=je.call(n,"variable")&&n.variable;if(y){if(he.test(y))throw new xe("Invalid `variable` option passed into `_.template`")}else f="with (obj) {\n"+f+"\n}\n";f=(u?f.replace(q,""):f).replace(z,"$1").replace($,"$1;"),f="function("+(y||"obj")+") {\n"+(y?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(i?", __e = _.escape":"")+(u?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+f+"return __p\n}";var g=ns((function(){return ke(s,p+"return "+f).apply(l,a)}));if(g.source=f,Qu(g))throw g;return g},Vt.times=function(e,n){if((e=mo(e))<1||e>d)return[];var t=y,l=_t(e,y);n=ci(n),e-=y;for(var r=Jn(l,n);++t<e;)n(t);return r},Vt.toFinite=go,Vt.toInteger=mo,Vt.toLength=vo,Vt.toLower=function(e){return _o(e).toLowerCase()},Vt.toNumber=bo,Vt.toSafeInteger=function(e){return e?al(mo(e),-9007199254740991,d):0===e?e:0},Vt.toString=_o,Vt.toUpper=function(e){return _o(e).toUpperCase()},Vt.trim=function(e,n,t){if((e=_o(e))&&(t||n===l))return Xn(e);if(!e||!(n=hr(n)))return e;var r=dt(e),i=dt(n);return Sr(r,et(r,i),nt(r,i)+1).join("")},Vt.trimEnd=function(e,n,t){if((e=_o(e))&&(t||n===l))return e.slice(0,pt(e)+1);if(!e||!(n=hr(n)))return e;var r=dt(e);return Sr(r,0,nt(r,dt(n))+1).join("")},Vt.trimStart=function(e,n,t){if((e=_o(e))&&(t||n===l))return e.replace(ie,"");if(!e||!(n=hr(n)))return e;var r=dt(e);return Sr(r,et(r,dt(n))).join("")},Vt.truncate=function(e,n){var t=30,r="...";if(to(n)){var i="separator"in n?n.separator:i;t="length"in n?mo(n.length):t,r="omission"in n?hr(n.omission):r}var u=(e=_o(e)).length;if(ut(e)){var o=dt(e);u=o.length}if(t>=u)return e;var s=t-ft(r);if(s<1)return r;var a=o?Sr(o,0,s).join(""):e.slice(0,s);if(i===l)return a+r;if(o&&(s+=a.length-s),oo(i)){if(e.slice(s).search(i)){var c,h=a;for(i.global||(i=Ae(i.source,_o(pe.exec(i))+"g")),i.lastIndex=0;c=i.exec(h);)var f=c.index;a=a.slice(0,f===l?s:f)}}else if(e.indexOf(hr(i),s)!=s){var d=a.lastIndexOf(i);d>-1&&(a=a.slice(0,d))}return a+r},Vt.unescape=function(e){return(e=_o(e))&&J.test(e)?e.replace(G,yt):e},Vt.uniqueId=function(e){var n=++Ue;return _o(e)+n},Vt.upperCase=Qo,Vt.upperFirst=Zo,Vt.each=wu,Vt.eachRight=_u,Vt.first=Wi,cs(Vt,(xs={},El(Vt,(function(e,n){je.call(Vt.prototype,n)||(xs[n]=e)})),xs),{chain:!1}),Vt.VERSION="4.17.21",Pn(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Vt[e].placeholder=Vt})),Pn(["drop","take"],(function(e,n){$t.prototype[e]=function(t){t=t===l?1:wt(mo(t),0);var r=this.__filtered__&&!n?new $t(this):this.clone();return r.__filtered__?r.__takeCount__=_t(t,r.__takeCount__):r.__views__.push({size:_t(t,y),type:e+(r.__dir__<0?"Right":"")}),r},$t.prototype[e+"Right"]=function(n){return this.reverse()[e](n).reverse()}})),Pn(["filter","map","takeWhile"],(function(e,n){var t=n+1,l=1==t||3==t;$t.prototype[e]=function(e){var n=this.clone();return n.__iteratees__.push({iteratee:ci(e,3),type:t}),n.__filtered__=n.__filtered__||l,n}})),Pn(["head","last"],(function(e,n){var t="take"+(n?"Right":"");$t.prototype[e]=function(){return this[t](1).value()[0]}})),Pn(["initial","tail"],(function(e,n){var t="drop"+(n?"":"Right");$t.prototype[e]=function(){return this.__filtered__?new $t(this):this[t](1)}})),$t.prototype.compact=function(){return this.filter(us)},$t.prototype.find=function(e){return this.filter(e).head()},$t.prototype.findLast=function(e){return this.reverse().find(e)},$t.prototype.invokeMap=Ql((function(e,n){return"function"==typeof e?new $t(this):this.map((function(t){return Rl(t,e,n)}))})),$t.prototype.reject=function(e){return this.filter(Uu(ci(e)))},$t.prototype.slice=function(e,n){e=mo(e);var t=this;return t.__filtered__&&(e>0||n<0)?new $t(t):(e<0?t=t.takeRight(-e):e&&(t=t.drop(e)),n!==l&&(t=(n=mo(n))<0?t.dropRight(-n):t.take(n-e)),t)},$t.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},$t.prototype.toArray=function(){return this.take(y)},El($t.prototype,(function(e,n){var t=/^(?:filter|find|map|reject)|While$/.test(n),r=/^(?:head|last)$/.test(n),i=Vt[r?"take"+("last"==n?"Right":""):n],u=r||/^find/.test(n);i&&(Vt.prototype[n]=function(){var n=this.__wrapped__,o=r?[1]:arguments,s=n instanceof $t,a=o[0],c=s||$u(n),h=function(e){var n=i.apply(Vt,Cn([e],o));return r&&f?n[0]:n};c&&t&&"function"==typeof a&&1!=a.length&&(s=c=!1);var f=this.__chain__,d=!!this.__actions__.length,p=u&&!f,y=s&&!d;if(!u&&c){n=y?n:new $t(this);var g=e.apply(n,o);return g.__actions__.push({func:yu,args:[h],thisArg:l}),new zt(g,f)}return p&&y?e.apply(this,o):(g=this.thru(h),p?r?g.value()[0]:g.value():g)})})),Pn(["pop","push","shift","sort","splice","unshift"],(function(e){var n=Me[e],t=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",l=/^(?:pop|shift)$/.test(e);Vt.prototype[e]=function(){var e=arguments;if(l&&!this.__chain__){var r=this.value();return n.apply($u(r)?r:[],e)}return this[t]((function(t){return n.apply($u(t)?t:[],e)}))}})),El($t.prototype,(function(e,n){var t=Vt[n];if(t){var l=t.name+"";je.call(Nt,l)||(Nt[l]=[]),Nt[l].push({name:n,func:t})}})),Nt[Vr(l,2).name]=[{name:"wrapper",func:l}],$t.prototype.clone=function(){var e=new $t(this.__wrapped__);return e.__actions__=Mr(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Mr(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Mr(this.__views__),e},$t.prototype.reverse=function(){if(this.__filtered__){var e=new $t(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},$t.prototype.value=function(){var e=this.__wrapped__.value(),n=this.__dir__,t=$u(e),l=n<0,r=t?e.length:0,i=function(e,n,t){var l=-1,r=t.length;for(;++l<r;){var i=t[l],u=i.size;switch(i.type){case"drop":e+=u;break;case"dropRight":n-=u;break;case"take":n=_t(n,e+u);break;case"takeRight":e=wt(e,n-u)}}return{start:e,end:n}}(0,r,this.__views__),u=i.start,o=i.end,s=o-u,a=l?o:u-1,c=this.__iteratees__,h=c.length,f=0,d=_t(s,this.__takeCount__);if(!t||!l&&r==s&&d==s)return gr(e,this.__actions__);var p=[];e:for(;s--&&f<d;){for(var y=-1,g=e[a+=n];++y<h;){var m=c[y],v=m.iteratee,b=m.type,w=v(g);if(2==b)g=w;else if(!w){if(1==b)continue e;break e}}p[f++]=g}return p},Vt.prototype.at=gu,Vt.prototype.chain=function(){return pu(this)},Vt.prototype.commit=function(){return new zt(this.value(),this.__chain__)},Vt.prototype.next=function(){this.__values__===l&&(this.__values__=yo(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?l:this.__values__[this.__index__++]}},Vt.prototype.plant=function(e){for(var n,t=this;t instanceof qt;){var r=Fi(t);r.__index__=0,r.__values__=l,n?i.__wrapped__=r:n=r;var i=r;t=t.__wrapped__}return i.__wrapped__=e,n},Vt.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof $t){var n=e;return this.__actions__.length&&(n=new $t(this)),(n=n.reverse()).__actions__.push({func:yu,args:[tu],thisArg:l}),new zt(n,this.__chain__)}return this.thru(tu)},Vt.prototype.toJSON=Vt.prototype.valueOf=Vt.prototype.value=function(){return gr(this.__wrapped__,this.__actions__)},Vt.prototype.first=Vt.prototype.head,nn&&(Vt.prototype[nn]=function(){return this}),Vt}();yn?((yn.exports=gt)._=gt,pn._=gt):dn._=gt}).call(n)}(OV,OV.exports);const{validate:MV}=bK,RV=wK,NV=_K,CV=mV.exports,LV=OV.exports;var jV=class{constructor(e){if(!MV(e))throw new Error("JSON is invalid. Cannot construct Encoder.");this.json=e}constructRootMap(){return Object.keys(this.json).map((e=>{let n=this.json[e];return"string"==typeof n&&(n=NV.encode(S.from(n,"hex"))),n instanceof Array&&("anchors"===e&&(n=this.constructAnchorsMap(n)),"path"===e&&(n=this.constructPathMap(n))),[RV.root[e],n]}))}constructAnchorsMap(e){return e.map((e=>{let n=e.split(":");return n.shift(),n.map(((e,t)=>0===t?[t,RV.chain[e].id]:1===t?[t,RV.chain[n[t-1]].networks[e]]:[t,NV.encode(S.from(e,"hex"))]))}))}constructPathMap(e){return LV.flatten(e.map((e=>Object.keys(e).map((n=>[RV.path[n],NV.encode(S.from(e[n],"hex"))])))))}encode(){const e=this.constructRootMap(),n=NV.encode(e);return CV.encode("base58btc",n)}};const UV=wK,DV=_K,BV=mV.exports,KV=OV.exports;var FV=class{constructor(e){if(!BV.isEncoded(e))throw new Error("Base58 string is invalid. Cannot construct Decoder.");this.base58=e}constructRootJSON(e){const n=KV.invert(UV.root);return e.reduce(((e,t)=>{const l=n[t[0]];let r=t[1];return r instanceof Array&&("anchors"===l&&(r=this.constructAnchorsJSON(r)),"path"===l&&(r=this.constructPathJSON(r))),r instanceof S&&(r=DV.decode(r).toString("hex")),e[l]=r,e}),{})}constructAnchorsJSON(e){const n=KV.invertBy(UV.chain,(e=>e.id));return e.map((e=>e.reduce(((e,t)=>{if(0===t[0])return`${e}:${n[t[1]]}`;if(1===t[0]){const n=e.split(":").pop();return`${e}:${KV.invert(UV.chain[n].networks)[t[1]]}`}return`${e}:${DV.decode(t[1]).toString("hex")}`}),"blink")))}constructPathJSON(e){const n=KV.invert(UV.path);return e.map((e=>({[n[e[0]]]:DV.decode(e[1]).toString("hex")})))}decode(){const e=BV.decode(this.base58),n=DV.decode(e);return this.constructRootJSON(n)}};var VV,HV,qV={Encoder:jV,Decoder:FV,Keymap:wK};class zV{constructor(e){}}function $V(e){if(Array.isArray(e)){return e.find((e=>"ChainedProof2021"!==e.type)).verificationMethod}return e.verificationMethod}!function(e){e.getTransactionId="getTransactionId",e.computeLocalHash="computeLocalHash",e.fetchRemoteHash="fetchRemoteHash",e.parseIssuerKeys="parseIssuerKeys",e.compareHashes="compareHashes",e.checkImagesIntegrity="checkImagesIntegrity",e.checkMerkleRoot="checkMerkleRoot",e.checkReceipt="checkReceipt",e.retrieveVerificationMethodPublicKey="retrieveVerificationMethodPublicKey",e.deriveIssuingAddressFromPublicKey="deriveIssuingAddressFromPublicKey",e.compareIssuingAddress="compareIssuingAddress",e.checkAuthenticity="checkAuthenticity"}(VV||(VV={}));class GV extends zV{proofVerificationProcess=[VV.getTransactionId,VV.computeLocalHash,VV.fetchRemoteHash,VV.compareHashes,VV.checkMerkleRoot,VV.checkReceipt,VV.parseIssuerKeys,VV.checkAuthenticity];identityVerificationProcess=[VV.retrieveVerificationMethodPublicKey,VV.deriveIssuingAddressFromPublicKey,VV.compareIssuingAddress];transactionId;localHash;documentToVerify;txData;chain;explorerAPIs;receipt;issuerPublicKeyList;issuer;verificationMethodPublicKey;derivedIssuingAddress;hasDid;proof;type="MerkleProof2019";constructor(e){var n;super(e),this._doAction=e.actionMethod,this.documentToVerify=e.document,this.explorerAPIs=e.explorerAPIs,this.proof=e.proof,this.issuer=e.issuer,this.validateProofType(),this.receipt=(n=this.proof,new qV.Decoder(n.proofValue).decode()),this.chain=Zc.certificates.getChain("",this.receipt),this.transactionId=Zc.certificates.getTransactionId(this.receipt),this.setHasDid()}async verifyProof(){await this.setIssuerFromProofVerificationMethod(),await this.verifyProcess(this.proofVerificationProcess)}async verifyIdentity(){this.hasDid&&await this.verifyProcess(this.identityVerificationProcess)}getProofVerificationSteps(e){return this.proofVerificationProcess.map((n=>Zc.verifier.convertToVerificationSubsteps(e,n)))}getIdentityVerificationSteps(e){return this.hasDid?this.identityVerificationProcess.map((n=>Zc.verifier.convertToVerificationSubsteps(e,n))):[]}getIssuerPublicKey(){return this.txData?this.txData.issuingAddress:(console.error("Trying to access issuing address when txData not available yet. Did you run the `verify` method yet?"),"")}getIssuerName(){return this.issuer.name}getIssuerProfileDomain(){return new URL(this.getIssuerProfileUrl())?.hostname}getIssuerProfileUrl(){return this.issuer.id}getSigningDate(){return this.proof.created}getChain(){return this.chain}getReceipt(){return this.receipt}getTransactionIdString(){return Zc.certificates.getTransactionId(this.getReceipt())}getTransactionLink(){return Zc.certificates.getTransactionLink(this.getTransactionIdString(),this.getChain()).transactionLink}getRawTransactionLink(){return Zc.certificates.getTransactionLink(this.getTransactionIdString(),this.getChain()).rawTransactionLink}isProofChain(){return"ChainedProof2021"===this.proof.type}async setIssuerFromProofVerificationMethod(){if(this.isProofChain()){const e=this.proof.verificationMethod.split("#")[0];this.issuer=await Zc.verifier.getIssuerProfile(e)}}setHasDid(){if(this.isProofChain()){const e=this.proof.verificationMethod.split("#")[0];this.hasDid=Vs(e)}else this.hasDid=!!this.issuer.didDocument}validateProofType(){const e=this.isProofChain()?this.proof.chainedProofType:this.proof.type;if(e!==this.type)throw new Error(`Incompatible proof type passed. Expected: ${this.type}, Got: ${e}`)}async verifyProcess(e){for(const n of e){if(!this[n])return void console.error("verification logic for",n,"not implemented");await this[n]()}}async _doAction(e,n,t){throw new Error("doAction method needs to be overwritten by injecting from CVJS")}async getTransactionId(){await this._doAction(VV.getTransactionId,(()=>YU(this.transactionId)),this.type)}async computeLocalHash(){this.localHash=await this._doAction(VV.computeLocalHash,(async()=>await ig(this.documentToVerify)),this.type)}async fetchRemoteHash(){this.txData=await this._doAction(VV.fetchRemoteHash,(async()=>await Zc.verifier.lookForTx({transactionId:this.transactionId,chain:this.chain.code,explorerAPIs:this.explorerAPIs})),this.type)}async compareHashes(){await this._doAction(VV.compareHashes,(()=>GU(this.localHash,this.receipt.targetHash)),this.type)}async checkMerkleRoot(){await this._doAction(VV.checkMerkleRoot,(()=>WU(this.receipt.merkleRoot,this.txData.remoteHash)),this.type)}async checkReceipt(){await this._doAction(VV.checkReceipt,(()=>XU(this.receipt)),this.type)}async parseIssuerKeys(){this.issuerPublicKeyList=await this._doAction(VV.parseIssuerKeys,(()=>Zc.verifier.parseIssuerKeys(this.issuer)),this.type)}async checkAuthenticity(){await this._doAction(VV.checkAuthenticity,(()=>JU(this.issuerPublicKeyList,this.txData.issuingAddress,this.txData.time)),this.type)}async retrieveVerificationMethodPublicKey(){this.verificationMethodPublicKey=await this._doAction(VV.retrieveVerificationMethodPublicKey,(()=>function(e,n){const t=n.split("#")[1],l=e.verificationMethod.filter((e=>e.id===`#${t}`))[0];if(!l)throw new mr("retrieveVerificationMethodPublicKey",`${ug} - ${Zc.i18n.getText("errors","retrieveVerificationMethodPublicKey")}`);return l}(this.issuer.didDocument,$V(this.proof))),this.type)}async deriveIssuingAddressFromPublicKey(){this.derivedIssuingAddress=await this._doAction(VV.deriveIssuingAddressFromPublicKey,(()=>$U(this.verificationMethodPublicKey,this.chain)),this.type)}async compareIssuingAddress(){await this._doAction(VV.compareIssuingAddress,(()=>function(e,n){if(e!==n)throw new mr("compareIssuingAddress",`${ug} - ${Zc.i18n.getText("errors","compareIssuingAddress")}`)}(this.txData.issuingAddress,this.derivedIssuingAddress)),this.type)}}!function(e){e.getTransactionId="getTransactionId",e.computeLocalHash="computeLocalHash",e.fetchRemoteHash="fetchRemoteHash",e.parseIssuerKeys="parseIssuerKeys",e.compareHashes="compareHashes",e.checkMerkleRoot="checkMerkleRoot",e.checkReceipt="checkReceipt",e.checkAuthenticity="checkAuthenticity"}(HV||(HV={}));class WV extends zV{verificationProcess=[HV.getTransactionId,HV.computeLocalHash,HV.fetchRemoteHash,HV.compareHashes,HV.checkMerkleRoot,HV.checkReceipt,HV.parseIssuerKeys,HV.checkAuthenticity];transactionId;localHash;documentToVerify;txData;chain;explorerAPIs;receipt;issuerPublicKeyList;issuer;proof;type="MerkleProof2017";constructor(e){super(e),e.actionMethod&&(this._doAction=e.actionMethod),this.documentToVerify=e.document,this.explorerAPIs=e.explorerAPIs,this.issuer=e.issuer,this.proof=e.proof,this.validateProofType(),this.receipt=this.documentToVerify.signature,this.chain=Zc.certificates.getChain("",this.receipt),this.transactionId=Zc.certificates.getTransactionId(this.receipt),this.adaptVerificationProcessToChain()}async verifyProof(){for(const e of this.verificationProcess){if(!this[e])return void console.error("verification logic for",e,"not implemented");await this[e]()}}async verifyIdentity(){}getProofVerificationSteps(e){return this.verificationProcess.map((n=>Zc.verifier.convertToVerificationSubsteps(e,n)))}getIdentityVerificationSteps(){return[]}getIssuerPublicKey(){return Zc.chains.isMockChain(this.chain)?"This mock chain does not support issuing addresses":this.txData?this.txData.issuingAddress:void console.error("Trying to access issuing address when txData not available yet. Did you run the `verify` method yet?")}getIssuerName(){return this.issuer.name}getIssuerProfileDomain(){return new URL(this.getIssuerProfileUrl())?.hostname}getIssuerProfileUrl(){return this.issuer.id}getSigningDate(){return this.documentToVerify.issuedOn}getChain(){return this.chain}getReceipt(){return this.receipt}getTransactionIdString(){return Zc.certificates.getTransactionId(this.getReceipt())}getTransactionLink(){return Zc.certificates.getTransactionLink(this.getTransactionIdString(),this.getChain()).transactionLink}getRawTransactionLink(){return Zc.certificates.getTransactionLink(this.getTransactionIdString(),this.getChain()).rawTransactionLink}validateProofType(){if(this.proof.type[0]!==this.type)throw new Error(`Incompatible proof type passed. Expected: ${this.type}, Got: ${this.proof.type[0]}`)}adaptVerificationProcessToChain(){Zc.chains.isMockChain(this.chain)&&(Sr(this.verificationProcess,HV.getTransactionId),Sr(this.verificationProcess,HV.fetchRemoteHash),Sr(this.verificationProcess,HV.parseIssuerKeys),Sr(this.verificationProcess,HV.checkMerkleRoot),Sr(this.verificationProcess,HV.checkAuthenticity))}async _doAction(e,n,t){throw new Error("doAction method needs to be overwritten by injecting from CVJS")}async getTransactionId(){await this._doAction(HV.getTransactionId,(()=>YU(this.transactionId)),this.type)}async computeLocalHash(){this.localHash=await this._doAction(HV.computeLocalHash,(async()=>await ig(this.documentToVerify)),this.type)}async fetchRemoteHash(){this.txData=await this._doAction(HV.fetchRemoteHash,(async()=>await Zc.verifier.lookForTx({transactionId:this.transactionId,chain:this.chain.code,explorerAPIs:this.explorerAPIs})),this.type)}async compareHashes(){await this._doAction(HV.compareHashes,(()=>GU(this.localHash,this.receipt.targetHash)),this.type)}async checkMerkleRoot(){await this._doAction(HV.checkMerkleRoot,(()=>WU(this.receipt.merkleRoot,this.txData.remoteHash)),this.type)}async checkReceipt(){await this._doAction(HV.checkReceipt,(()=>XU(this.receipt)),this.type)}async parseIssuerKeys(){this.issuerPublicKeyList=await this._doAction(HV.parseIssuerKeys,(()=>Zc.verifier.parseIssuerKeys(this.issuer)),this.type)}async checkAuthenticity(){await this._doAction(HV.checkAuthenticity,(()=>JU(this.issuerPublicKeyList,this.txData.issuingAddress,this.txData.time)),this.type)}}var JV=function(e,n){return e(n={exports:{}},n.exports),n.exports}((function(e,n){!function(e,n){for(var t in n)e[t]=n[t]}(n,function(e){var n={};function t(l){if(n[l])return n[l].exports;var r=n[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,l){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:l})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(l,r,function(n){return e[n]}.bind(null,r));return l},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){const l=n.contexts=new Map,r=n.constants=t(1);l.set(r.SECURITY_CONTEXT_V1_URL,t(2)),l.set(r.SECURITY_CONTEXT_V2_URL,t(3))},function(e,n,t){n.SECURITY_CONTEXT_V1_URL="https://w3id.org/security/v1",n.SECURITY_CONTEXT_V2_URL="https://w3id.org/security/v2"},function(e,n){e.exports={"@context":{id:"@id",type:"@type",dc:"http://purl.org/dc/terms/",sec:"https://w3id.org/security#",xsd:"http://www.w3.org/2001/XMLSchema#",EcdsaKoblitzSignature2016:"sec:EcdsaKoblitzSignature2016",Ed25519Signature2018:"sec:Ed25519Signature2018",EncryptedMessage:"sec:EncryptedMessage",GraphSignature2012:"sec:GraphSignature2012",LinkedDataSignature2015:"sec:LinkedDataSignature2015",LinkedDataSignature2016:"sec:LinkedDataSignature2016",CryptographicKey:"sec:Key",authenticationTag:"sec:authenticationTag",canonicalizationAlgorithm:"sec:canonicalizationAlgorithm",cipherAlgorithm:"sec:cipherAlgorithm",cipherData:"sec:cipherData",cipherKey:"sec:cipherKey",created:{"@id":"dc:created","@type":"xsd:dateTime"},creator:{"@id":"dc:creator","@type":"@id"},digestAlgorithm:"sec:digestAlgorithm",digestValue:"sec:digestValue",domain:"sec:domain",encryptionKey:"sec:encryptionKey",expiration:{"@id":"sec:expiration","@type":"xsd:dateTime"},expires:{"@id":"sec:expiration","@type":"xsd:dateTime"},initializationVector:"sec:initializationVector",iterationCount:"sec:iterationCount",nonce:"sec:nonce",normalizationAlgorithm:"sec:normalizationAlgorithm",owner:{"@id":"sec:owner","@type":"@id"},password:"sec:password",privateKey:{"@id":"sec:privateKey","@type":"@id"},privateKeyPem:"sec:privateKeyPem",publicKey:{"@id":"sec:publicKey","@type":"@id"},publicKeyBase58:"sec:publicKeyBase58",publicKeyPem:"sec:publicKeyPem",publicKeyWif:"sec:publicKeyWif",publicKeyService:{"@id":"sec:publicKeyService","@type":"@id"},revoked:{"@id":"sec:revoked","@type":"xsd:dateTime"},salt:"sec:salt",signature:"sec:signature",signatureAlgorithm:"sec:signingAlgorithm",signatureValue:"sec:signatureValue"}}},function(e,n){e.exports={"@context":[{"@version":1.1},"https://w3id.org/security/v1",{AesKeyWrappingKey2019:"sec:AesKeyWrappingKey2019",DeleteKeyOperation:"sec:DeleteKeyOperation",DeriveSecretOperation:"sec:DeriveSecretOperation",EcdsaSecp256k1Signature2019:"sec:EcdsaSecp256k1Signature2019",EcdsaSecp256r1Signature2019:"sec:EcdsaSecp256r1Signature2019",EcdsaSecp256k1VerificationKey2019:"sec:EcdsaSecp256k1VerificationKey2019",EcdsaSecp256r1VerificationKey2019:"sec:EcdsaSecp256r1VerificationKey2019",Ed25519Signature2018:"sec:Ed25519Signature2018",Ed25519VerificationKey2018:"sec:Ed25519VerificationKey2018",EquihashProof2018:"sec:EquihashProof2018",ExportKeyOperation:"sec:ExportKeyOperation",GenerateKeyOperation:"sec:GenerateKeyOperation",KmsOperation:"sec:KmsOperation",RevokeKeyOperation:"sec:RevokeKeyOperation",RsaSignature2018:"sec:RsaSignature2018",RsaVerificationKey2018:"sec:RsaVerificationKey2018",Sha256HmacKey2019:"sec:Sha256HmacKey2019",SignOperation:"sec:SignOperation",UnwrapKeyOperation:"sec:UnwrapKeyOperation",VerifyOperation:"sec:VerifyOperation",WrapKeyOperation:"sec:WrapKeyOperation",X25519KeyAgreementKey2019:"sec:X25519KeyAgreementKey2019",allowedAction:"sec:allowedAction",assertionMethod:{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"},capability:{"@id":"sec:capability","@type":"@id"},capabilityAction:"sec:capabilityAction",capabilityChain:{"@id":"sec:capabilityChain","@type":"@id","@container":"@list"},capabilityDelegation:{"@id":"sec:capabilityDelegationMethod","@type":"@id","@container":"@set"},capabilityInvocation:{"@id":"sec:capabilityInvocationMethod","@type":"@id","@container":"@set"},caveat:{"@id":"sec:caveat","@type":"@id","@container":"@set"},challenge:"sec:challenge",ciphertext:"sec:ciphertext",controller:{"@id":"sec:controller","@type":"@id"},delegator:{"@id":"sec:delegator","@type":"@id"},equihashParameterK:{"@id":"sec:equihashParameterK","@type":"xsd:integer"},equihashParameterN:{"@id":"sec:equihashParameterN","@type":"xsd:integer"},invocationTarget:{"@id":"sec:invocationTarget","@type":"@id"},invoker:{"@id":"sec:invoker","@type":"@id"},jws:"sec:jws",keyAgreement:{"@id":"sec:keyAgreementMethod","@type":"@id","@container":"@set"},kmsModule:{"@id":"sec:kmsModule"},parentCapability:{"@id":"sec:parentCapability","@type":"@id"},plaintext:"sec:plaintext",proof:{"@id":"sec:proof","@type":"@id","@container":"@graph"},proofPurpose:{"@id":"sec:proofPurpose","@type":"@vocab"},proofValue:"sec:proofValue",referenceId:"sec:referenceId",unwrappedKey:"sec:unwrappedKey",verificationMethod:{"@id":"sec:verificationMethod","@type":"@id"},verifyData:"sec:verifyData",wrappedKey:"sec:wrappedKey"}]}}]))})),XV=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(JV),YV=JV.contexts,QV=JV.constants,ZV=t(Object.freeze({__proto__:null,default:XV,constants:QV,contexts:YV}));
/*!
	 * Copyright (c) 2017-2018 Digital Bazaar, Inc. All rights reserved.
	 */
const{constants:eH}=ZV;var nH={SECURITY_CONTEXT_URL:eH.SECURITY_CONTEXT_V2_URL,SECURITY_CONTEXT_V1_URL:eH.SECURITY_CONTEXT_V1_URL,SECURITY_CONTEXT_V2_URL:eH.SECURITY_CONTEXT_V2_URL,SECURITY_PROOF_URL:"https://w3id.org/security#proof",SECURITY_SIGNATURE_URL:"https://w3id.org/security#signature"};const tH=nH,{contexts:lH}=ZV;
/*!
	 * Copyright (c) 2018-2021 Digital Bazaar, Inc. All rights reserved.
	 */
const rH=new Map([[tH.SECURITY_CONTEXT_V1_URL,lH.get(tH.SECURITY_CONTEXT_V1_URL)],[tH.SECURITY_CONTEXT_V2_URL,lH.get(tH.SECURITY_CONTEXT_V2_URL)]]),iH={};var uH=iH;iH.extendContextLoader=e=>async n=>{const t=rH.get(n);return void 0!==t?{contextUrl:null,documentUrl:n,document:t,tag:"static"}:e(n)},iH.strictDocumentLoader=iH.extendContextLoader((e=>{throw new Error(`${e} not found.`)}));class oH extends Error{constructor(e){super(oH._prepareSuperMessage(e)),Object.defineProperty(this,"name",{value:"NonError",configurable:!0,writable:!0}),Error.captureStackTrace&&Error.captureStackTrace(this,oH)}static _prepareSuperMessage(e){try{return JSON.stringify(e)}catch(n){return String(e)}}}const sH=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],aH=Symbol(".toJSON called"),cH=({from:e,seen:n,to_:t,forceEnumerable:l,maxDepth:r,depth:i})=>{const u=t||(Array.isArray(e)?[]:{});if(n.push(e),i>=r)return u;if("function"==typeof e.toJSON&&!0!==e[aH])return(e=>{e[aH]=!0;const n=e.toJSON();return delete e[aH],n})(e);for(const[t,o]of Object.entries(e))ue(o)?u[t]="[object Buffer]":"function"!=typeof o&&(o&&"object"==typeof o?n.includes(e[t])?u[t]="[Circular]":(i++,u[t]=cH({from:e[t],seen:n.slice(),forceEnumerable:l,maxDepth:r,depth:i})):u[t]=o);for(const{property:n,enumerable:t}of sH)"string"==typeof e[n]&&Object.defineProperty(u,n,{value:e[n],enumerable:!!l||t,configurable:!0,writable:!0});return u};var hH={serializeError:(e,n={})=>{const{maxDepth:t=Number.POSITIVE_INFINITY}=n;return"object"==typeof e&&null!==e?cH({from:e,seen:[],forceEnumerable:!0,maxDepth:t,depth:0}):"function"==typeof e?`[Function: ${e.name||"anonymous"}]`:e},deserializeError:(e,n={})=>{const{maxDepth:t=Number.POSITIVE_INFINITY}=n;if(e instanceof Error)return e;if("object"==typeof e&&null!==e&&!Array.isArray(e)){const n=new Error;return cH({from:e,seen:[],to_:n,maxDepth:t,depth:0}),n}return new oH(e)}};
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */
const fH=nH,dH=Jy,{extendContextLoader:pH,strictDocumentLoader:yH}=uH,{serializeError:gH}=hH,mH=e=>{if(e.unmappedProperty)throw new Error('The property "'+e.unmappedProperty+'" in the input was not defined in the context.')};function vH(e){Object.defineProperty(e,"toJSON",{value:function(){return gH(this)},configurable:!0,writable:!0})}
/*!
	 * Copyright (c) 2020 Digital Bazaar, Inc. All rights reserved.
	 */
class bH extends Error{constructor(e){super("Verification error(s)."),this.name="VerificationError",this.errors=[].concat(e)}}var wH=bH,_H=class{constructor({type:e}={}){if("string"!=typeof e)throw new TypeError('A LinkedDataProof must have a "type".');this.type=e}async createProof({}){throw new Error('"createProof" must be implemented in a derived class.')}async verifyProof({}){throw new Error('"verifyProof" must be implemented in a derived class.')}async matchProof({proof:e}){return e.type===this.type}};
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */const EH={};var SH=EH;EH.w3cDate=e=>{null==e?e=new Date:"number"!=typeof e&&"string"!=typeof e||(e=new Date(e));const n=e.toISOString();return n.substr(0,n.length-5)+"Z"},EH.concat=(e,n)=>{const t=new Uint8Array(e.length+n.length);return t.set(e,0),t.set(n,e.length),t};const xH=self&&(self.crypto||self.msCrypto);var kH={async sha256digest({string:e}){const n=(new TextEncoder).encode(e);return new Uint8Array(await xH.subtle.digest("SHA-256",n))}};
/*!
	 * Copyright (c) 2017-2021 Digital Bazaar, Inc. All rights reserved.
	 */const IH=nH,PH=Jy,AH=SH,{sha256digest:TH}=kH,OH=_H;
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */
const MH={};var RH=MH;MH.suites={LinkedDataProof:_H,LinkedDataSignature:class extends OH{constructor({type:e,proof:n,LDKeyClass:t,date:l,key:r,signer:i,verifier:u,useNativeCanonize:o,contextUrl:s}={}){super({type:e}),this.LDKeyClass=t,this.contextUrl=s,this.proof=n;const a=function({key:e,signer:n,verifier:t}){const l={};if(e){if(l.key=e,l.verificationMethod=e.id,"function"==typeof e.signer&&(l.signer=e.signer()),"function"==typeof e.verifier&&(l.verifier=e.verifier()),!l.signer&&!l.verifier)throw new TypeError('The "key" parameter must contain a "signer" or "verifier" method.')}else l.verificationMethod=n&&n.id||t&&t.id,l.signer=n,l.verifier=t;if(l.signer&&"function"!=typeof l.signer.sign)throw new TypeError("A signer API has not been specified.");if(l.verifier&&"function"!=typeof l.verifier.verify)throw new TypeError("A verifier API has not been specified.");return l}({key:r,signer:i,verifier:u});if(this.verificationMethod=a.verificationMethod,this.key=a.key,this.signer=a.signer,this.verifier=a.verifier,l&&(this.date=new Date(l),isNaN(this.date)))throw TypeError(`"date" "${l}" is not a valid date.`);this.useNativeCanonize=o,this._hashCache=null}async createProof({document:e,purpose:n,documentLoader:t,expansionMap:l}){let r;r=this.proof?{...this.proof}:{},r.type=this.type;let i=this.date;void 0===r.created&&void 0===i&&(i=new Date),i&&"string"!=typeof i&&(i=AH.w3cDate(i)),i&&(r.created=i),r.verificationMethod=this.verificationMethod,r=await this.updateProof({document:e,proof:r,purpose:n,documentLoader:t,expansionMap:l}),r=await n.update(r,{document:e,suite:this,documentLoader:t,expansionMap:l});const u=await this.createVerifyData({document:e,proof:r,documentLoader:t,expansionMap:l});return r=await this.sign({verifyData:u,document:e,proof:r,documentLoader:t,expansionMap:l}),r}async updateProof({proof:e}){return e}async verifyProof({proof:e,document:n,documentLoader:t,expansionMap:l}){try{const r=await this.createVerifyData({document:n,proof:e,documentLoader:t,expansionMap:l}),i=await this.getVerificationMethod({proof:e,document:n,documentLoader:t,expansionMap:l});if(!await this.verifySignature({verifyData:r,verificationMethod:i,document:n,proof:e,documentLoader:t,expansionMap:l}))throw new Error("Invalid signature.");return{verified:!0,verificationMethod:i}}catch(e){return{verified:!1,error:e}}}async canonize(e,{documentLoader:n,expansionMap:t,skipExpansion:l}){return PH.canonize(e,{algorithm:"URDNA2015",format:"application/n-quads",documentLoader:n,expansionMap:t,skipExpansion:l,useNative:this.useNativeCanonize})}async canonizeProof(e,{document:n,documentLoader:t,expansionMap:l}){return delete(e={"@context":n["@context"]||IH.SECURITY_CONTEXT_URL,...e}).jws,delete e.signatureValue,delete e.proofValue,this.canonize(e,{documentLoader:t,expansionMap:l,skipExpansion:!1})}async createVerifyData({document:e,proof:n,documentLoader:t,expansionMap:l}){let r;const{_hashCache:i}=this;i&&i.document===e?r=i.hash:this._hashCache={document:e,hash:r=this.canonize(e,{documentLoader:t,expansionMap:l}).then((e=>TH({string:e})))};const[u,o]=await Promise.all([this.canonizeProof(n,{document:e,documentLoader:t,expansionMap:l}).then((e=>TH({string:e}))),r]);return AH.concat(u,o)}async getVerificationMethod({proof:e,documentLoader:n}){let{verificationMethod:t}=e;if("object"==typeof t&&(t=t.id),!t)throw new Error('No "verificationMethod" found in proof.');const l=await PH.frame(t,{"@context":IH.SECURITY_CONTEXT_URL,"@embed":"@always",id:t},{documentLoader:n,compactToRelative:!1});if(!l)throw new Error(`Verification method ${t} not found.`);if(void 0!==l.revoked)throw new Error("The verification method has been revoked.");return l}async sign(){throw new Error("Must be implemented by a derived class.")}async verifySignature(){throw new Error("Must be implemented by a derived class.")}ensureSuiteContext({document:e,addSuiteContext:n}){const{contextUrl:t}=this;if(function({document:e,contextUrl:n}){const t=e["@context"];return t===n||Array.isArray(t)&&t.includes(n)}({document:e,contextUrl:t}))return;if(!n)throw new TypeError(`The document to be signed must contain this suite's @context, "${t}".`);const l=e["@context"]||[];e["@context"]=Array.isArray(l)?[...l,t]:[l,t]}}};
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */
var NH=class{constructor({term:e,date:n,maxTimestampDelta:t=1/0}={}){if(void 0===e)throw new Error('"term" is required.');if(void 0!==t&&"number"!=typeof t)throw new TypeError('"maxTimestampDelta" must be a number.');if(this.term=e,void 0!==n&&(this.date=new Date(n),isNaN(this.date)))throw TypeError(`"date" "${n}" is not a valid date.`);this.maxTimestampDelta=t}async validate(e,{}){try{if(this.maxTimestampDelta!==1/0){const n=(this.date||new Date).getTime(),t=1e3*this.maxTimestampDelta,l=new Date(e.created).getTime();if(!(l>=n-t&&l<=n+t))throw new Error("The proof's created timestamp is out of range.")}return{valid:!0}}catch(e){return{valid:!1,error:e}}}async update(e,{}){return e.proofPurpose=this.term,e}async match(e,{}){return e.proofPurpose===this.term}};
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */const CH=nH,LH=Jy,jH=NH,UH="https://www.w3.org/ns/did/v1",DH=["assertionMethod","authentication","capabilityInvocation","capabilityDelegation","keyAgreement","verificationMethod"];var BH=class extends jH{constructor({term:e,controller:n,date:t,maxTimestampDelta:l=1/0}={}){if(super({term:e,date:t,maxTimestampDelta:l}),void 0!==n){if("object"!=typeof n)throw new TypeError('"controller" must be an object.');this.controller=n}this._termDefinedByDIDContext=DH.includes(e)}async validate(e,{verificationMethod:n,documentLoader:t,expansionMap:l}){try{const r=await super.validate(e,{verificationMethod:n,documentLoader:t,expansionMap:l});if(!r.valid)throw r.error;const{id:i}=n,{term:u,_termDefinedByDIDContext:o}=this;if(this.controller)r.controller=this.controller;else{const{controller:e}=n;let l;if(e)if("object"==typeof e)l=e.id;else{if("string"!=typeof e)throw new TypeError('"controller" must be a string representing a URL.');l=e}let{document:s}=await t(l);!(o&&s["@context"]===UH||Array.isArray(s["@context"])&&s["@context"][0]===UH)&&(s=await LH.frame(s,{"@context":CH.SECURITY_CONTEXT_URL,id:l,[u]:{"@embed":"@never",id:i}},{documentLoader:t,compactToRelative:!1})),r.controller=s}const s=LH.getValues(r.controller,u);if(r.valid=s.some((e=>e===i||"object"==typeof e&&e.id===i)),!r.valid)throw new Error(`Verification method "${n.id}" not authorized by controller for proof purpose "${this.term}".`);return r}catch(e){return{valid:!1,error:e}}}};
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */const KH=BH;
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */
const FH=BH;
/*!
	 * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.
	 */
const VH={};var HH=VH;VH.purposes={AssertionProofPurpose:class extends KH{constructor({term:e="assertionMethod",controller:n,date:t,maxTimestampDelta:l=1/0}={}){super({term:e,controller:n,date:t,maxTimestampDelta:l})}},AuthenticationProofPurpose:class extends FH{constructor({term:e="authentication",controller:n,challenge:t,date:l,domain:r,maxTimestampDelta:i=1/0}={}){if(super({term:e,controller:n,date:l,maxTimestampDelta:i}),"string"!=typeof t)throw new TypeError('"challenge" must be a string.');if(void 0!==r&&"string"!=typeof r)throw new TypeError('"domain" must be a string.');this.challenge=t,this.domain=r}async validate(e,{verificationMethod:n,documentLoader:t,expansionMap:l}){try{if(e.challenge!==this.challenge)throw new Error(`The challenge is not as expected; challenge="${e.challenge}", expected="${this.challenge}"`);if(void 0!==this.domain&&e.domain!==this.domain)throw new Error(`The domain is not as expected; domain="${e.domain}", expected="${this.domain}"`);return super.validate(e,{verificationMethod:n,documentLoader:t,expansionMap:l})}catch(e){return{valid:!1,error:e}}}async update(e,{document:n,suite:t,documentLoader:l,expansionMap:r}){return(e=await super.update(e,{document:n,suite:t,documentLoader:l,expansionMap:r})).challenge=this.challenge,void 0!==this.domain&&(e.domain=this.domain),e}},ControllerProofPurpose:BH,ProofPurpose:NH};
/*!
	 * Copyright (c) 2010-2018 Digital Bazaar, Inc. All rights reserved.
	 */
const qH={};var zH=qH;const $H=nH;Object.assign(qH,$H);const GH=class{async add(e,{suite:n,purpose:t,documentLoader:l,expansionMap:r}={}){if(!n)throw new TypeError('"options.suite" is required.');if(!t)throw new TypeError('"options.purpose" is required.');l=l?pH(l):yH,void 0===r?r=mH:!1===r&&(r=void 0);const i={...e};delete i.proof;const u=await n.createProof({document:i,purpose:t,documentLoader:l,expansionMap:r});return dH.addValue(e,"proof",u),e}async verify(e,{suite:n,purpose:t,documentLoader:l,expansionMap:r}={}){if(!n)throw new TypeError('"options.suite" is required.');if(!t)throw new TypeError('"options.purpose" is required.');const i=Array.isArray(n)?n:[n];if(0===i.length)throw new TypeError("At least one suite is required.");l=l?pH(l):yH,void 0===r?r=mH:!1===r&&(r=void 0);try{e={...e};const{proofSet:n,document:u}=await async function({document:e}){let n;if(n=dH.getValues(e,"proof"),delete e.proof,0===n.length)throw new Error("No matching proofs found in the given document.");const t=e["@context"]||fH.SECURITY_CONTEXT_URL;return n=n.map((e=>({"@context":t,...e}))),{proofSet:n,document:e}}({document:e,documentLoader:l,expansionMap:r});e=u;const o=await async function({document:e,suites:n,proofSet:t,purpose:l,documentLoader:r,expansionMap:i}){const u=Array.isArray(l)?l:[l],o=new Map,s=new Map,a=new Map;if(await Promise.all(u.map((l=>async function({purposeToProofs:e,proofToSuite:n,purpose:t,proofSet:l,suites:r,suiteMatchQueue:i,document:u,documentLoader:o,expansionMap:s}){for(const a of l){if(!await t.match(a,{document:u,documentLoader:o,expansionMap:s}))continue;let l=!1;for(const e of r){let t=i.get(e);t||i.set(e,t=new Map);let r=t.get(a);if(r||(r=e.matchProof({proof:a,document:u,documentLoader:o,expansionMap:s}),t.set(a,r)),await r){l=!0,n.set(a,e);break}}if(l){const n=e.get(t);n?n.push(a):e.set(t,[a])}}}({purposeToProofs:o,proofToSuite:s,purpose:l,proofSet:t,suites:n,suiteMatchQueue:a,document:e,documentLoader:r,expansionMap:i})))),o.size<u.length)return[];const c=new Map;return await Promise.all([...s.entries()].map((async([n,t])=>{let l;try{let u;const o={validate:async(e,{verificationMethod:n})=>(u=n,{valid:!0})},{verified:s,verificationMethod:a,error:c}=await t.verifyProof({proof:n,document:e,purpose:o,documentLoader:r,expansionMap:i});u||(u=a),l={proof:n,verified:s,verificationMethod:u,error:c}}catch(e){l={proof:n,verified:!1,error:e}}l.error&&vH(l.error),c.set(n,l)}))),await Promise.all([...o.entries()].map((async([n,t])=>{for(const l of t){const t=c.get(l);if(!t.verified)continue;const{verificationMethod:u}=t,o=s.get(l);let a;try{a=await n.validate(l,{document:e,suite:o,verificationMethod:u,documentLoader:r,expansionMap:i})}catch(e){a={valid:!1,error:e}}t.purposeResult?Array.isArray(t.purposeResult)?t.purposeResult.push(a):t.purposeResult=[t.purposeResult,a]:t.purposeResult=a,a.valid||(vH(a.error),t.error||(t.verified=!1,t.error=a.error))}}))),[...c.values()]}({document:e,suites:i,proofSet:n,purpose:t,documentLoader:l,expansionMap:r});if(0===o.length){const e=new Error("Did not verify any proofs; insufficient proofs matched the acceptable suite(s) and required purpose(s).");throw e.name="NotFoundError",e}const s=o.some((e=>e.verified));if(!s){const e=[].concat(...o.filter((e=>e.error)).map((e=>e.error))),n={verified:s,results:o};return e.length>0&&(n.error=e),n}return{verified:s,results:o}}catch(e){return vH(e),{verified:!1,error:e}}}},WH=wH;qH.sign=async function(e,{suite:n,purpose:t,documentLoader:l,expansionMap:r,addSuiteContext:i=!0}={}){if("object"!=typeof e)throw new TypeError('The "document" parameter must be an object.');n.ensureSuiteContext({document:e,addSuiteContext:i});try{return await(new GH).add(e,{suite:n,purpose:t,documentLoader:l,expansionMap:r})}catch(e){if(!l&&"jsonld.InvalidUrl"===e.name){const{details:{url:n}}=e,t=new Error(`A URL "${n}" could not be fetched; you need to pass "documentLoader" or resolve the URL before calling "sign".`);throw t.cause=e,t}throw e}},qH.verify=async function(e,{suite:n,purpose:t,documentLoader:l,expansionMap:r}={}){if("object"!=typeof e)throw new TypeError('The "document" parameter must be an object.');const i=await(new GH).verify(e,{suite:n,purpose:t,documentLoader:l,expansionMap:r}),{error:u}=i;if(u)if(l||"jsonld.InvalidUrl"!==u.name)i.error=new WH(u);else{const{details:{url:e}}=u,n=new Error(`A URL "${e}" could not be fetched; you need to pass "documentLoader" or resolve the URL before calling "verify".`);i.error=new WH(n)}return i},qH.suites=RH.suites,qH.purposes=HH.purposes,Object.assign(qH,uH);var JH=function(e,n){return e(n={exports:{}},n.exports),n.exports}((function(e,n){!function(e,n){for(var t in n)e[t]=n[t]}(n,function(e){var n={};function t(l){if(n[l])return n[l].exports;var r=n[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,l){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:l})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(l,r,function(n){return e[n]}.bind(null,r));return l},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=2)}([function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
e.exports={"@context":{id:"@id",type:"@type","@protected":!0,proof:{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"},Ed25519VerificationKey2020:{"@id":"https://w3id.org/security#Ed25519VerificationKey2020","@context":{"@protected":!0,id:"@id",type:"@type",controller:{"@id":"https://w3id.org/security#controller","@type":"@id"},revoked:{"@id":"https://w3id.org/security#revoked","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},publicKeyMultibase:{"@id":"https://w3id.org/security#publicKeyMultibase","@type":"https://w3id.org/security#multibase"}}},Ed25519Signature2020:{"@id":"https://w3id.org/security#Ed25519Signature2020","@context":{"@protected":!0,id:"@id",type:"@type",challenge:"https://w3id.org/security#challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},domain:"https://w3id.org/security#domain",expires:{"@id":"https://w3id.org/security#expiration","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},nonce:"https://w3id.org/security#nonce",proofPurpose:{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@protected":!0,id:"@id",type:"@type",assertionMethod:{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"},capabilityInvocation:{"@id":"https://w3id.org/security#capabilityInvocationMethod","@type":"@id","@container":"@set"},capabilityDelegation:{"@id":"https://w3id.org/security#capabilityDelegationMethod","@type":"@id","@container":"@set"},keyAgreement:{"@id":"https://w3id.org/security#keyAgreementMethod","@type":"@id","@container":"@set"}}},proofValue:{"@id":"https://w3id.org/security#proofValue","@type":"https://w3id.org/security#multibase"},verificationMethod:{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}}}},function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
e.exports={CONTEXT_FILENAME:"ed25519-signature-2020-v1.jsonld",CONTEXT_URL:"https://w3id.org/security/suites/ed25519-2020/v1",CBORLD_CODEC_VALUE:20}},function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
const l=t(0),r=t(1),{documentLoader:i}=t(3),{CONTEXT_URL:u,CBORLD_CODEC_VALUE:o}=r,s=new Map;s.set(r.CONTEXT_URL,l);const a=new Map;a.set(u,o),e.exports={constants:r,contexts:s,appContextMap:a,documentLoader:i,CONTEXT_URL:u,CONTEXT:l}},function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
const{CONTEXT_URL:l}=t(1),r=t(0);e.exports={documentLoader(e){if(e!==l)throw new Error(`Loading document "${e}" is not allowed.`);return{contextUrl:null,document:r,documentUrl:e}}}}]))})),XH=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(JH);JH.contexts,JH.constants,JH.CONTEXT,JH.CONTEXT_URL,JH.appContextMap,JH.documentLoader;var YH=function(e,n){return e(n={exports:{}},n.exports),n.exports}((function(e,n){!function(e,n){for(var t in n)e[t]=n[t]}(n,function(e){var n={};function t(l){if(n[l])return n[l].exports;var r=n[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,l){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:l})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(l,r,function(n){return e[n]}.bind(null,r));return l},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=2)}([function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
e.exports={"@context":{id:"@id",type:"@type","@protected":!0,proof:{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"},Ed25519VerificationKey2018:{"@id":"https://w3id.org/security#Ed25519VerificationKey2018","@context":{"@protected":!0,id:"@id",type:"@type",controller:{"@id":"https://w3id.org/security#controller","@type":"@id"},revoked:{"@id":"https://w3id.org/security#revoked","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},publicKeyBase58:{"@id":"https://w3id.org/security#publicKeyBase58"}}},Ed25519Signature2018:{"@id":"https://w3id.org/security#Ed25519Signature2018","@context":{"@protected":!0,id:"@id",type:"@type",challenge:"https://w3id.org/security#challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},domain:"https://w3id.org/security#domain",expires:{"@id":"https://w3id.org/security#expiration","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},nonce:"https://w3id.org/security#nonce",proofPurpose:{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@protected":!0,id:"@id",type:"@type",assertionMethod:{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"},capabilityInvocation:{"@id":"https://w3id.org/security#capabilityInvocationMethod","@type":"@id","@container":"@set"},capabilityDelegation:{"@id":"https://w3id.org/security#capabilityDelegationMethod","@type":"@id","@container":"@set"},keyAgreement:{"@id":"https://w3id.org/security#keyAgreementMethod","@type":"@id","@container":"@set"}}},jws:{"@id":"https://w3id.org/security#jws"},verificationMethod:{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}}}},function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
e.exports={CONTEXT_FILENAME:"ed25519-signature-2018-v1.jsonld",CONTEXT_URL:"https://w3id.org/security/suites/ed25519-2018/v1",CBORLD_CODEC_VALUE:19}},function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
const l=t(0),r=t(1),{documentLoader:i}=t(3),{CONTEXT_URL:u,CBORLD_CODEC_VALUE:o}=r,s=new Map;s.set(u,l);const a=new Map;a.set(u,o),e.exports={constants:r,contexts:s,appContextMap:a,documentLoader:i,CONTEXT_URL:u,CONTEXT:l}},function(e,n,t){
/*!
	 * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.
	 */
const{CONTEXT_URL:l}=t(1),r=t(0);e.exports={documentLoader(e){if(e!==l)throw new Error(`Loading document "${e}" is not allowed.`);return{contextUrl:null,document:r,documentUrl:e}}}}]))})),QH=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(YH);YH.contexts,YH.constants,YH.CONTEXT,YH.CONTEXT_URL,YH.appContextMap,YH.documentLoader;
/*!
	 * Copyright (c) 2020-2021 Digital Bazaar, Inc. All rights reserved.
	 */
const{suites:{LinkedDataSignature:ZH}}=zH,eq=XH.constants.CONTEXT_URL,nq=QH.constants.CONTEXT_URL;class tq extends ZH{constructor({key:e,signer:n,verifier:t,proof:l,date:r,useNativeCanonize:i}={}){super({type:"Ed25519Signature2020",LDKeyClass:za,contextUrl:eq,key:e,signer:n,verifier:t,proof:l,date:r,useNativeCanonize:i}),this.requiredKeyType="Ed25519VerificationKey2020"}async sign({verifyData:e,proof:n}){if(!this.signer||"function"!=typeof this.signer.sign)throw new Error("A signer API has not been specified.");const t=await this.signer.sign({data:e});return n.proofValue="z"+$s(t),n}async verifySignature({verifyData:e,verificationMethod:n,proof:t}){const{proofValue:l}=t;if(!l||"string"!=typeof l)throw new TypeError('The proof does not include a valid "proofValue" property.');if("z"!==l[0])throw new Error("Only base58btc multibase encoding is supported.");const r=Gs(l.substr(1));let{verifier:i}=this;if(!i){i=(await this.LDKeyClass.from(n)).verifier()}return i.verify({data:e,signature:r})}async assertVerificationMethod({verificationMethod:e}){let n;if("Ed25519VerificationKey2020"===e.type)n=eq;else{if("Ed25519VerificationKey2018"!==e.type)throw new Error(`Unsupported key type "${e.type}".`);n=nq}if(!lq({document:e,contextUrl:n}))throw new TypeError(`The verification method (key) must contain "${n}" context.`);if(void 0!==e.revoked)throw new Error("The verification method has been revoked.")}async getVerificationMethod({proof:e,documentLoader:n}){if(this.key)return this.key.export({publicKey:!0});let{verificationMethod:t}=e;if("object"==typeof t&&(t=t.id),!t)throw new Error('No "verificationMethod" found in proof.');const{document:l}=await n(t);return t="string"==typeof l?JSON.parse(l):l,await this.assertVerificationMethod({verificationMethod:t}),"Ed25519VerificationKey2018"===t.type&&(t=(await za.fromEd25519VerificationKey2018({keyPair:t})).export({publicKey:!0,includeContext:!0})),t}async matchProof({proof:e,document:n,purpose:t,documentLoader:l,expansionMap:r}){if(!lq({document:n,contextUrl:eq}))return!1;if(!await super.matchProof({proof:e,document:n,purpose:t,documentLoader:l,expansionMap:r}))return!1;if(!this.key)return!0;const{verificationMethod:i}=e;return"object"==typeof i?i.id===this.key.id:i===this.key.id}}function lq({document:e,contextUrl:n}){const t=e["@context"];return t===n||Array.isArray(t)&&t.includes(n)}tq.CONTEXT_URL=eq,tq.CONTEXT=XH.contexts.get(eq);const{purposes:{AssertionProofPurpose:rq}}=zH;var iq;!function(e){e.retrieveVerificationMethodPublicKey="retrieveVerificationMethodPublicKey",e.checkDocumentSignature="checkDocumentSignature"}(iq||(iq={}));class uq extends zV{verificationProcess=[iq.retrieveVerificationMethodPublicKey,iq.checkDocumentSignature];documentToVerify;issuer;proof;type="Ed25519Signature2020";verificationKey;constructor(e){super(e),e.actionMethod&&(this._doAction=e.actionMethod),this.documentToVerify=e.document,this.issuer=e.issuer,this.proof=e.proof,this.validateProofType()}async verifyProof(){for(const e of this.verificationProcess){if(!this[e])return void console.error("verification logic for",e,"not implemented");await this[e]()}}async verifyIdentity(){}getProofVerificationSteps(e){return this.verificationProcess.map((n=>Zc.verifier.convertToVerificationSubsteps(e,n)))}getIdentityVerificationSteps(){return[]}getIssuerPublicKey(){const{verificationMethod:e}=this.proof;return this.issuer.didDocument.verificationMethod.find((n=>n.id===e)).publicKeyMultibase}getIssuerName(){return this.issuer.name??""}getIssuerProfileDomain(){try{return new URL(this.getIssuerProfileUrl()).hostname??""}catch(e){return""}}getIssuerProfileUrl(){return this.issuer.id??""}getSigningDate(){return this.proof.created}async _doAction(e,n,t){throw new Error("doAction method needs to be overwritten by injecting from CVJS")}validateProofType(){const e=this.isProofChain()?this.proof.chainedProofType:this.proof.type;if(e!==this.type)throw new Error(`Incompatible proof type passed. Expected: ${this.type}, Got: ${e}`)}isProofChain(){return"ChainedProof2021"===this.proof.type}generateDocumentLoader(){nr[this.documentToVerify.issuer]=this.issuer.didDocument;return function(e){return e in nr?{contextUrl:null,document:nr[e],documentUrl:e}:Jy.documentLoader(e)}}retrieveInitialDocument(){const e=lg(this.documentToVerify);if(Array.isArray(e.proof)){const n=e.proof.find((e=>e.type===this.type));delete e.proof,e.proof=n}return e}async retrieveVerificationMethodPublicKey(){this.verificationKey=await this._doAction(iq.retrieveVerificationMethodPublicKey,(async()=>{const e=this.issuer.didDocument.verificationMethod.find((e=>e.id===this.proof.verificationMethod));if(!e)throw new mr(iq.retrieveVerificationMethodPublicKey,"The verification method of the document does not match the provided issuer.");const n=await za.from({...e});if(!n)throw new mr(iq.retrieveVerificationMethodPublicKey,"Could not derive the verification key");if(n.revoked)throw new mr(iq.retrieveVerificationMethodPublicKey,"The verification key has been revoked");return n}),this.type)}async checkDocumentSignature(){await this._doAction(iq.checkDocumentSignature,(async()=>{const e=new tq({key:this.verificationKey});e.date=new Date(Date.now()).toISOString();const n=await zH.verify(this.retrieveInitialDocument(),{suite:e,purpose:new rq,documentLoader:this.generateDocumentLoader()});if(!n.verified)throw console.error(JSON.stringify(n,null,2)),new mr(iq.checkDocumentSignature,`The document's ${this.type} signature could not be confirmed`);console.log("Credential Ed25519 signature successfully verified")}),this.type)}}const oq=dh("Verifier");class sq{expires;id;issuer;revocationKey;documentToVerify;explorerAPIs;txData;_stepsStatuses=[];hashlinkVerifier;verificationSteps;supportedVerificationSuites;proofVerifiers=[];verificationProcess;proofMap;constructor({certificateJson:e,expires:n,hashlinkVerifier:t,id:l,issuer:r,revocationKey:i,explorerAPIs:u}){this.expires=n,this.id=l,this.issuer=r,this.hashlinkVerifier=t,this.revocationKey=i,this.explorerAPIs=u,this.documentToVerify=Object.assign({},e),this.instantiateProofVerifiers(),this.prepareVerificationProcess()}getVerificationSteps(){return this.verificationSteps}getSignersData(){return this.proofVerifiers.map((e=>({signingDate:e.getSigningDate(),signatureSuiteType:e.type,issuerPublicKey:e.getIssuerPublicKey(),issuerName:e.getIssuerName(),issuerProfileDomain:e.getIssuerProfileDomain(),issuerProfileUrl:e.getIssuerProfileUrl(),chain:e.getChain?.(),transactionId:e.getTransactionIdString?.(),transactionLink:e.getTransactionLink?.(),rawTransactionLink:e.getRawTransactionLink?.()})))}async verify(n=(()=>{})){this._stepCallback=n,this._stepsStatuses=[];for(let e=0;e<this.proofVerifiers.length;e++)await this.proofVerifiers[e].verifyProof();for(const e of this.verificationProcess){if(!this[e])return void console.error("verification logic for",e,"not implemented");await this[e]()}for(let e=0;e<this.proofVerifiers.length;e++)await this.proofVerifiers[e].verifyIdentity();const t=this._stepsStatuses.find((n=>n.status===e.VERIFICATION_STATUSES.FAILURE));return t?this._failed(t):this._succeed()}getRevocationListUrl(){return this.issuer.revocationList}getProofTypes(){const e=[];return this.proofMap.forEach((n=>{let{type:t}=n;"ChainedProof2021"===t&&(t=n.chainedProofType),Array.isArray(t)&&(t=t[0]),e.push(t)})),e}getProofMap(e){const n=new Map;return"proof"in e?Array.isArray(e.proof)?e.proof.forEach(((e,t)=>n.set(t,e))):n.set(0,e.proof):"signature"in e&&n.set(0,e.signature),n}instantiateProofVerifiers(){this.supportedVerificationSuites={MerkleProof2017:WV,MerkleProof2019:GV,Ed25519Signature2020:uq},this.proofMap=this.getProofMap(this.documentToVerify);const e=this.getProofTypes(),n=function(e=[],n=[]){return n.filter((n=>!e.includes(n)))}(Object.keys(this.supportedVerificationSuites),e);if(n.length)throw new Error(`No support for proof verification of type: ${n.join(", ")}`);this.proofMap.forEach(((n,t)=>{this.proofVerifiers.push(new this.supportedVerificationSuites[e[t]]({actionMethod:this._doAction.bind(this),document:this.documentToVerify,proof:n,explorerAPIs:this.explorerAPIs,issuer:this.issuer}))}))}prepareVerificationProcess(){const e=Zc.certificates.getVerificationMap(!!this.issuer.didDocument,this.hashlinkVerifier.hasHashlinksToVerify());this.verificationSteps=e.verificationMap,this.verificationProcess=e.verificationProcess,this.registerSignatureVerificationSteps(),this.registerIdentityVerificationSteps(),this.verificationSteps=this.verificationSteps.filter((e=>e.subSteps?.length>0||e.suites?.some((e=>e.subSteps.length>0))))}registerSignatureVerificationSteps(){const e=br.proofVerification;this.verificationSteps.find((n=>n.code===e)).suites=this.getSuiteSubsteps(e)}getSuiteSubsteps(e){const n={[br.proofVerification]:"getProofVerificationSteps",[br.identityVerification]:"getIdentityVerificationSteps"};return this.proofVerifiers.map((t=>({proofType:t.type,subSteps:t[n[e]](e)})))}registerIdentityVerificationSteps(){const e=br.identityVerification;this.verificationSteps.find((n=>n.code===e)).suites=this.getSuiteSubsteps(e)}async _doAction(n,t,l){if(this._isFailing())return;let r;n&&(r=Zc.i18n.getText("subSteps",`${n}LabelPending`),oq(r),this._updateStatusCallback(n,e.VERIFICATION_STATUSES.STARTING,l));try{const r=await t();return n&&(this._updateStatusCallback(n,e.VERIFICATION_STATUSES.SUCCESS,l),this._stepsStatuses.push({code:n,status:e.VERIFICATION_STATUSES.SUCCESS})),r}catch(t){n&&(this._updateStatusCallback(n,e.VERIFICATION_STATUSES.FAILURE,l,t.message),this._stepsStatuses.push({code:n,message:t.message,status:e.VERIFICATION_STATUSES.FAILURE}))}}_stepCallback(e){}async checkImagesIntegrity(){await this._doAction(wr.checkImagesIntegrity,(async()=>{await this.hashlinkVerifier.verifyHashlinkTable().catch((e=>{throw console.error("hashlink verification error",e),new mr(wr.checkImagesIntegrity,cr("errors","checkImagesIntegrity"))}))}))}async checkRevokedStatus(){const e=this.getRevocationListUrl();if(!e)return console.warn("No revocation list url was set on the issuer."),void await this._doAction(wr.checkRevokedStatus,(()=>!0));const n=await this._doAction(null,(async()=>await Zc.verifier.getRevokedAssertions(e,this.id)));await this._doAction(wr.checkRevokedStatus,(()=>function(e,n){if(!e||!n)return;Array.isArray(n)||(n=[n]),n=n.filter((e=>null!=e));const t=function(e=[],n=[]){return e.filter((e=>n.includes(e))).filter(((e,n,t)=>t.indexOf(e)===n))}(n,e.map((e=>e.id)));if(t.length>0){const n=e.findIndex((e=>e.id===t[0]));if(n>-1)throw new mr(wr.checkRevokedStatus,Zc.certificates.generateRevocationReason(e[n].revocationReason))}}(n,this.id)))}async checkExpiresDate(){await this._doAction(wr.checkExpiresDate,(()=>function(e=null){if(!e)return;const n=Xc(e);if((new Date).getTime()>=n)throw new mr(wr.checkExpiresDate,cr("errors","ensureNotExpired"))}(this.expires)))}async controlVerificationMethod(){await this._doAction(wr.controlVerificationMethod,(()=>{!function(e,n=""){const t=function(e){return e.id}(e);if(t!==n.split("#")[0])throw new mr(wr.controlVerificationMethod,`${ug} - ${Zc.i18n.getText("errors","controlVerificationMethod")}`)}(this.issuer.didDocument,$V(this.documentToVerify.proof))}))}findStepFromVerificationProcess(e,n){return Zc.verifier.findVerificationSubstep(e,this.verificationSteps,n)}_failed(n){const{message:t}=n;return oq(`failure:${t}`),this._setFinalStep({status:e.VERIFICATION_STATUSES.FAILURE,message:t})}_isFailing(){return this._stepsStatuses.some((n=>n.status===e.VERIFICATION_STATUSES.FAILURE))}_succeed(){let n;return 1===this.proofVerifiers.length&&(n=Zc.chains.isMockChain(this.proofVerifiers[0].getChain())?Zc.i18n.getText("success","mocknet"):Zc.i18n.getText("success","blockchain"),oq(n)),this.proofVerifiers.length>1&&(n=Zc.i18n.getText("success","multisign")),this._setFinalStep({status:e.VERIFICATION_STATUSES.SUCCESS,message:n})}_setFinalStep({status:e,message:n}){return{code:br.final,status:e,message:n}}_updateStatusCallback(e,n,t="",l=""){if(null!=e){const r=this.findStepFromVerificationProcess(e,t),i={code:e,status:n,parentStep:r.parentStep,label:r.labelPending};l&&(i.errorMessage=l),this._stepCallback(i)}}}async function aq(e,n){const t=[...e.matchAll(/hl:{1}[a-zA-Z0-9]+:{1}[a-zA-Z0-9]+/gm)].map((e=>e[0])).filter((e=>!!e));if(t.length){const l=await async function(e,n){return(await Promise.all(e.map((async e=>await n.decode(e))))).reduce((function(e,n){return e.push(n.meta.url[0]),e}),[])}(t,n);e=function(e,n,t){return n.forEach(((n,l)=>{e=e.replace(t[l],n)})),e}(e,l,t)}return e}return e.BLOCKCHAINS=Ul,e.CERTIFICATE_VERSIONS=jl,e.Certificate=class{certificateImage;certificateJson;description;display;expires;explorerAPIs=[];id;isFormatValid;issuedOn;issuer;locale;metadataJson;name;options;recipientFullName;recordLink;revocationKey;sealImage;signature;signatureImage;signers=[];subtitle;hashlinkVerifier;verificationSteps;verifier;constructor(e,n={}){if(this._setOptions(n),"object"!=typeof e)try{e=JSON.parse(e)}catch(e){throw new Error(Zc.i18n.getText("errors","certificateNotValid"))}this.certificateJson=lg(e),this.hashlinkVerifier=new Pl}async init(){await this.parseJson(this.certificateJson),this.verifier=new sq({certificateJson:this.certificateJson,expires:this.expires,id:this.id,issuer:this.issuer,hashlinkVerifier:this.hashlinkVerifier,revocationKey:this.revocationKey,explorerAPIs:lg(this.explorerAPIs)}),this.verificationSteps=this.verifier.getVerificationSteps()}async verify(e){const n=await this.verifier.verify(e);return this.setSigners(),n}async parseJson(e){const n=await async function(e){try{const n=nh(e["@context"]),t=await th[n.versionNumber](e);return t.isFormatValid=!0,t}catch(e){return{isFormatValid:!1,error:e.message}}}(e);if(!n.isFormatValid)throw new Error(n.error);await this._setProperties(n)}setSigners(){this.signers=this.verifier.getSignersData()}_setOptions(e){this.options=Object.assign({},ur,e),this.locale=Zc.i18n.ensureIsSupported("auto"===this.options.locale?Zc.i18n.detectLocale():this.options.locale),this.explorerAPIs=this.options.explorerAPIs||[],e.didResolverUrl&&(Zc.did.didResolver.url=e.didResolverUrl),sr.locale=this.locale}async _setProperties({certificateImage:e,description:n,display:t,expires:l,id:r,isFormatValid:i,issuedOn:u,issuer:o,metadataJson:s,name:a,recipientFullName:c,recordLink:h,revocationKey:f,sealImage:d,signature:p,signatureImage:y,subtitle:g}){this.isFormatValid=i,this.certificateImage=e,this.description=n,this.expires=l,this.id=r,this.issuedOn=u,this.issuer=o,this.metadataJson=s,this.name=a,this.recipientFullName=c,this.recordLink=h,this.revocationKey=f,this.sealImage=d,this.signature=p,this.signatureImage=y,this.subtitle=g,this.display=await this.parseHashlinksInDisplay(t)}async parseHashlinksInDisplay(e){const n=lg(e);if(n)return"text/html"!==n.contentMediaType||(n.content=await aq(n.content,this.hashlinkVerifier)),n}},e.STEPS=Er,e.SignatureImage=gr,e.VerificationSubstep=Wc,e.getSupportedLanguages=hr,e.retrieveBlockcertsVersion=nh,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
